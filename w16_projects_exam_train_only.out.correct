training data:
  label = exam, content = weve posted the final exam questions and solutions to the google drive please look over them before submitting a regrade request pin
  label = exam, content = hello all we have finished grading your final exam and will be publishing your grades and opening regrade requests on gradescope shortly if you have any questions about gradescope please look at the previous announcement about the midterm grades and the follow up questions your grades will not be posted to ctools until all regrades are complete so please access gradescope to see your grade here is the score breakdown for the final exam median 67 mean 6544 std dev 1289 in order to submit a regrade find the subquestion you would like to have regraded and select request regrade in the bottom right hand corner you will then be prompted to enter an explanation for the regrade in this text field you should include which part of your question was incorrectly graded 1 sentence why you believe your answer is correct 13 sentences depending on question type as you can see the second part is quite subjective however the more detail you give the better we can investigate your regrade please give enough information in your regrade request or we will not acknowledge it if you leave this field empty your regrade request will be discarded note that while regrading your exam the course staff will check through the rest of your exam as well because of this we may catch other errors we made while grading and your exam score may decrease regrade requests will only be open to 8 pm on monday 425 we will not take any more requests after then if you have any questions please email us eecs280examsumichedu thanks eecs 280 staff pin
  label = exam, content = i got this question wrong but im not sure why i declared two iterators front and end and initialized them to listbegin and listend respectively then i used distance and passed in the two iterators as parameters to distance after this i returned the result of distance im not sure why this is wrong i used distance and two iterators to get output
  label = exam, content = hi i know that destiny is another name reference for str in main the reference was declared in the heroicfunc function once that function is done running wont the reference be deleted doesnt that prove that destiny is local to heroicfunc
  label = exam, content = i was wonder why not this this missed opportunity makes me sad this makes wat duck sad
  label = euchre, content = i got 02 for project 4 main is reasonably short part but basically i only did argv and initializations in my main function i included the entire playing game stuffs in my helper function so i wonder how long is too long and how short is reasonably short
  label = exam, content = im not sure if my regrade request went through is there any way to check on gradescope thanks
  label = exam, content = sorry ive discarded the reference sheet after the final but now i want to refer to them when reviewing question 2 the reference sheet is not on google drive is there any way to download it
  label = exam, content = for question 4b i wrote virtual void warshipattack instead of just void warshipattack and lost points for syntax i thought in lecture we were told that writing virtual in the derived class functions is not necessary but is a good practice to keep things organized is that not the case
  label = euchre, content = i didnt realize thered be no more office hours can a staff please take a look at my project 4 player simple test and let me know what i got wrong i know i forgot to delete one of the players so thered be memory leak but i didnt think id lose that much points just for that thanks
  label = exam, content = when i do the first question i asked whether we assume the destructor for the list work or not the ta says we assume it works so that is why i didnt choose d can i ask regrade for this one
  label = exam, content = i was told that the answer is none because the line of code is not in a cout however the instructions say write the output i thought output implied a cout stream since that is how it is written in our project specs why is that not valid here
  label = exam, content = hello on problem 2a one of the gradescope grading criteria says that our solutions must use acorrect loop including using a valid iteratorinteger for vec the answer key shows the solution that uses a valid integer for looping through vec but what would a valid iterator solution for this problem be thank you
  label = exam, content = hey in looking over the exam solutions im curious to what popback was meant to do i asdumed it would pop the lastand only element on mylist and then the integer would not be leaked according to the solutions im guessing that is wrong just curious
  label = exam, content = will final grades be posted within 72 hours
  label = euchre, content = i thought i implemented correctly according to the specification but seeing that i got a lot of points off on playercpp and player tests i assume that i misunderstood the specification is it possible to know what i did wrong
  label = calculator, content = my partner and i had a lot of cases in which the autograder listtests failed but we have no idea why it says compilation failure but some of the other autograder tests for list compiled fine before submitting we also tested it on caen with the given public tests and makefile in addition to our own tests to make sure everything works fine how can we know what we did wrong
  label = euchre, content = can i talk with the prof about the project testing on friday im leaving on this sunday thank you very much
  label = exam, content = please do not post any questions on piazza about the final exam until everyone has taken it doing so is an honor code violation pin
  label = exam, content = is there any reason that you cant call the overloaded assignment operator in the copy constructor definition and if we can should we do this
  label = exam, content = if an error derived class is thrown and theres no catch for it is it caught by the base class error assuming there is one also what happens if there isnt any catch corresponding to a throw
  label = exam, content = so after 58 is thrown it is caught by the other catch for derivedint in the bar function right this dereferences the int and then throws a string i dont get what happens after that i know it starts looking for catch functions on a larger scope also in general is it possible for a throw to refer to catches in another function if its being called by this other function
  label = exam, content = as the title
  label = exam, content = why is the second statement true on the exams there are so many forms of linked lists whose final next pointer isnt set to null such as the circular linked list on winter problem 2 where the last next pointer points to the first element
  label = exam, content = in the final review lecture someone asked a question about deleting virtual from a virtual function in the derived class but not the base class i was a little confused by the instructors answer if a function is declared virtual or pure virtual in the base class it will always be virtual in all of the derived classes regardless of if the derived class has the function declared as virtual void speak or void speak for example if a was the base class with a pure virtual function called hello and b was a derived class hello would also be virtual their regardless of if the world virtual was written out or not what if a class c was a derived class of class b if hello was also written their but the virtual keyword was missing from the b class definition of hello would class cs hello also be virtual sorry if this is confusing
  label = exam, content = why does this cause a compiler error it is creating a new object of a type theres b b in main but the compiler doesnt give any errors for that
  label = exam, content = why does line three call the copy constructor only it pretty clearly uses the assignment operator
  label = exam, content = the receiver of basevirt3 is actually a derived object how can it work thanks
  label = exam, content = in the solutions you say that we must check if prev and next 2 are nonnull or not however in the main if loop youve assigned next2 to be equal to next of next before checking if it exists or not cant this potentially lead to a seg fault or something if say the node input is the first node or the second last node in the list
  label = exam, content = in past exam spring 2015 the iterator calls the function by itupdatedistance but can i just do itupdatedistance i wanted to make sure since if the answer said it instead of simply writing it there must be a reason for that
  label = exam, content = hi i was wondering if we could use a for loop for 2a on the fall final exam instead of the while loop
  label = exam, content = on 5a i dont understand why 123 is being printed where does a cout for a deriveddouble get called in the sequence of main or is a cout somehow implicitly called
  label = exam, content = confused as to why certain elements of bobby are deleted off of the heap
  label = exam, content = when is best to use a while loop vs iterator loop vs node ptr loop do you have to declare a template if before hand if you use an iterator loop or are you allowed to call a adt object if you know the list is going to consist of it i understand there are certain cases where you they are interchangable but is there general rule
  label = exam, content = imagine we have 3 classes base derived1 derived such that derived2 is a derived1 and derived1 is a base now lets say all 3 of them have a function f1 which is nonvirtual in base but virtual in both derived1 and derived2 its clear that if a derived1 object calls f1 it would run the base version of f1 because the function isnt virtual in base however if a derived2 object called f1 would it be virtual since derived2s direct parent class implements a virtual version of this function
  label = exam, content = in the solution to the defend castle black function it appears the first argument may be missing in the for loop is this argument missing or is the initialization argument supposed to be blank because initialization occurred outside of the for loop thanks
  label = exam, content = in overloaded assignment operator and copy constructor we are able to access the private parts array of the corpse passed in why is this allowed thanks
  label = exam, content = crab challenge
  label = exam, content = the destructor frees up the space but not deletes the object but if the space is already freed up you dont have any space to store the object then its the same effect of deleting object
  label = exam, content = can i not just change the datum i just changed datum of the node with the datum of the next node is there any problem if i do so
  label = exam, content = how much time should we devote to going over the advanced generic programming lecture material there was only one lecture on it and the practice exams did not have anything remotely related to it the professors stated in the beginning of the course this is class is not about learning c syntax but rather how to be a better at solving problems so im not sure how important knowing the material on the the advanced programming lecture will be for the final exam
  label = exam, content = why do you print leaving main after f is thrown at the bottom of catch baseint in foo why doset that get caught
  label = exam, content = will we be marked done if the order which we call the destructor is wrong
  label = exam, content = isnt scheduleend equal to an empty iterator when putting it into scheduleinsertinsertit m doesnt it result in an error because youre passing in an empty iterator
  label = exam, content = after watching the video for review 4 im still a little confused for 1 the code was fixed by changing delete ptr to delete ptr wouldnt this delete the entire array rather than just the last element of the array is it possible to delete only the last element
  label = exam, content = i noticed in the first problem it asks questions about static variables and i dont really understand the answers i dont remember talking much about static types in lecture just not to use them should i be concerned or will it not be on the exam
  label = exam, content = so it says that it is different then project 5 was project 5 different for the fall class or do they mean because they are not using iterators or am i missing something
  label = exam, content = do we have to assert to check for the requires clause in the exam
  label = exam, content = i am confused on where the variables current and pedal come from
  label = exam, content = the title says it
  label = exam, content = although this has been explained a couple of times i still do not understand when we need to have typename and when we dont
  label = exam, content = could someone explain why when using iterators in project 4 and in other situations we needed to use typename listtiterator it instead of just iterator it does it just tell the compiler what the iterator will be iterating over does it create a specific type of iterator that works with lists of type t
  label = exam, content = in this slide from the lecture on functors the function name is passed in the function pointer
  label = exam, content = im confused is to why im a ninja llama doesnt get executed when a printdescription is called on a supper llama pointer that is actually pointing to a ninja llama im assuming it gets over written with the version in superllama why does it exist in the subclass then if it enters the version in the subclass then it should also cout that in the answers i guess im missing a property of polymorphism where the super class functions always override the subclass ones with the same signature
  label = exam, content = hi in the superllama class method printdescription has no virtual keyword yet in the derived ninjallama class printdescription is a virtual function i couldnt find anything in lecture that gave explicit help to this particular situation so i was wondering a few things what does it mean to have a derived class virtual function with the same nameparameters as a base class nonvirtual function why would anyone do such a thing and how does this behave when called
  label = exam, content = for the answer could we do void doublylinkedlistremoveiflessint threshold for node n first n 0 n n next if n datum threshold removenoden
  label = exam, content = so variables in static storage are created at the start of the program locals are created when their scope starts does the compiler preallocate space for all these unlike dynamically allocated data
  label = calculator, content = a cout a dtor n b cout b dtor n a ab new b delete ab yesterday vidal said this would print out a dtor because ab is a base class pointer im wondering what would print if we had done something like this a cout a dtor n virtual b cout b dtor n b ab new b delete ab im guessing b dtor would print but would a dtor print as well
  label = exam, content = does iterator end always point to one after the end unless specified otherwise
  label = exam, content = due to construction several of the bus routes are on detours until friday april 22nd currently the bursley baits route does not stop at pierpont commons northwood is on detour but it will still stop at pierpont commons the commuter north is currently taking its normal route if you must take a bus to north campus tomorrow before the exam make sure to take either the commuter north or northwood full information about the bus detours can be found here pin
  label = exam, content = fornode nodeptr first nodeptr nodeptr nodeptr next delete nodeptr would this not work as well
  label = exam, content = if operator returns by value will there be any potential problems other than copying and taking up space thanks
  label = exam, content = will we be able to use the null keyword on the exam sorry if thats been asked but i cant seem to find it anywhere
  label = exam, content = in a class if some are the functions are pure virtual and others have actual implementations does that mean we can still instantiate objects of the type of the base class
  label = exam, content = in question 3s definition of class whitewalker it doesnt say private anywhere it just lists the member variables then is says public so if the word private isnt included does that make the variables above the public section private public or neither thanks in advance
  label = exam, content = i understand whoopingllama destructor does not have to be virtual but will it cause any problem if we make it virtual
  label = exam, content = shouldnt it be typename listwhitewalkeriterator it armybegin
  label = exam, content = from problem 4 of the spring exam i noticed in printdescription for ninjallama it calls superllamaprintdescription if printdescription in superllama was written as a virtual function would superllamaprintdescription call the printdescription from superllama is calling basefunction in a derived class a way of running the version of the function from the base class even if a virtual function was used
  label = exam, content = in question 4a f15 the value into the function call operator is passed by reference do we have to write these overrides with reference to avoid making copies all the time i think the function also works without passing by reference is there a way to know for sure which one to use
  label = exam, content = after looking through a lot of lecture and example material im still kind of confused as to when we use semicolons after declarationdefinition of classes could anyone clear this up thanks
  label = exam, content = even though s1 and s2 contains pointers to the same array would the output for cout s1 still not be 2 3 insert in s2 does not affect the size and capacity of s1 so assuming that overload only prints unto the first letssize elements would that not make any difference ps this is the last slide from lecture 17
  label = calculator, content = hi so i lost a lot of points on project 5 for some reason my code passed all of the compilation tests when i submitted it to the autograder and it compiles for some tests but for many of the list tests that are returning in the grade breakdown it says the code simply didnt compile any ideas how the code passed the compilation test and some of the list tests but not others
  label = exam, content = why is this compile i thought this will occur some problems in value semantics
  label = exam, content = all elements in the array are on the heap since the elements are dynamically allocated regardless of their type the ints those pointers point to are indeed not deleted but thats not asked by the question the question is you cant delete an array of dynamically allocated pointers at once is the following syntax right if so by deleting arr we can delete all pointers on the heap int arr new int3 delete arr
  label = exam, content = if the subtype indeed has weaker or equal requires stronger or equal effects can it make fewer modifications than base class what if the user is expecting the modification thats missing in subtype class thanks
  label = calculator, content = the score i have on my ctools gradebook doesnt match what my score on the autograder is for project 5 can someone please update my score accordingly thanks
  label = euchre, content = i was wondering why my teammate and i are getting 0s on both the card and player test cases since we turned in the test cases what are the graders looking for when grading these test cases
  label = exam, content = i have a following class arrayintset when i initialize arr with another arrayset visual studio would just print out arrayset parameter ctor while arrayset copy ctor wasnt why wasnt the copy ctor used class arrayset int size public arraysetint sizein sizesizein cout arrayset parameter ctor endl arraysetconst arrayset other sizeothersize cout arrayset copy ctor endl int main arrayset arrarrayset4 only prints arrayset parameter ctor
  label = exam, content = im confused as to how the answer to 5c was achieved in spring 2015 wouldnt choice a work better
  label = exam, content = 
  label = exam, content = does a regular pointer such as int have dynamic type also if a pointer to a base class never points to an object of its derived class does it still have a dynamic type bird bptr bird thanks
  label = exam, content = for example we have a class base and a class derived which is derived from base were taught that when creating a derived object the base ctor will run first and then the derived ctor my question is is this behavior absolute or does it depend on the implementation class derived public base derivedstring namein basenamein string name like seen above is the top down behavior due to how the derived class delegates a base constructor if we did not delegate the base constructor would the rule still apply
  label = euchre, content = what percent of the project 4 grade are the student card and player tests
  label = exam, content = the answer key keeps doing for int i 0 i numparts i delete partsi does just doing delete parts not work
  label = exam, content = they both involve failure to delete unused dynamically allocated data whats the key difference thanks
  label = calculator, content = on ctools the grade given for my project 5 autograder is 16 points lower than my actual autograder scoreout of 95 what is the reason for this
  label = exam, content = can anyone explain why the destructor needs to be virtual the output shows that the dynamic type whooping llama dtor was called first and then the static type super llama is it that you need to put virtual so that it runs both
  label = exam, content = above main do you have to specify static it works fine as a global variable in visual studio even if i dont declare it static is that just random success
  label = exam, content = after the code executes catch basedouble e throw derivedstring s why wouldnt catch be executed and print out caughsomething i thought catch could catch any type and that is the first thing code encounters after scoping out thanks
  label = exam, content = the solution for 3a in winter 15 has fortypename listtiterator it itemsbegin why is typename required in front of list here and how can we tell if it is required or not in problems like this using iterators
  label = exam, content = can someone please walk through and explain this one thanks
  label = exam, content = bob is a crustacean but the solution says that bobchallenge prints out crab challenge is that a mistake on the solutions
  label = exam, content = will material from lecture 24 be on the final exam auto type alias etc the final exam review slides state that the exam will cover material from slides 1223 would like to confirm thats accurate
  label = exam, content = problem2 why we wouldnt need to set last pointer to 0 problem4 in class meetingtimecomparator the operator only deals with the situation when one meeting is earlier than the other but in findnotless we are asked to find a meeting that is earlier or equal to another meeting why wouldnt we need to take the euqal situation into consideration as suggested in the code above
  label = exam, content = this is kind of a trivialpedantic question but on 4c the question says you may use the string library but no others but at the bottom of the solutions assert false is used isnt that using the cassert library also in such a question is it ok to just return a null pointer if it isnt specifically stated that cassert can be used
  label = exam, content = are the review coding questions up on labster i dont see them
  label = exam, content = i copy and pasted some code from spring 2015 question 1d to see how it would actually run but i keep getting errors i think this would be really useful for studying and was wondering if anyone could tell me how to get rid of these errors so that i could run simulations of code from the exam any help would be appreciated
  label = exam, content = 
  label = exam, content = hi on the solution for 3b of the spring 2015 final exam it updates the white walker object pointed to by the iterator using this statement itupdatedistance isnt this poor style as since we are dereferencing a pointer we would want to use itupdatedistance or is it not poor style because we havent overloaded the operator for the white walker iterator class thanks
  label = exam, content = whats the difference between precondition and postcondition fall 2015
  label = exam, content = in fall 2015 practice exam number 3a why are there endl for greet and challenge the problem says print crab hi and crab challenge without the quotes but never said print a new line do we have to assume we have to print a new line when a question like this comes up in the final
  label = exam, content = having a lot of trouble understanding this one can someone give a few pointers on how to solve it thanks
  label = exam, content = in the spring 2015 exam growpetal function wouldnt this code fail to update first if the list is empty im guessing that we are supposed to assume the list will never be empty and the inserted element will never be the first element since there will always be an element with angle 0 but that isnt stated in the requires clause of the function if we are given something like this are we supposed to assume that the functions you gave us are all that can modify our list
  label = exam, content = why does this question end with process ended instead of negative exception caught
  label = exam, content = why does calling addsecond on t and t2 add time to the same i why doesnt each class inherit their own i being connected to the counter class
  label = exam, content = whats the difference between a double linked list and single linked list and how do you know when to use what
  label = exam, content = if we have a class called myclass with an overloaded assignment operator with the following lines of code myclass a myclass b a line 1 would run the myclass ctor for a my confusion is in line 2 would it run just the assignment operator or both the assignment operator and the myclass ctor for b or would this not even work at all
  label = exam, content = if something is thrown within a catch block here a derived int is thrown does it first check to see if it can be caught by anything in the current catch block or does it immediately move outward to the first catch block that is not the same as the place it was thrown
  label = exam, content = the first line in main is c1 what does this mean
  label = exam, content = why can the base exception catches the derived error
  label = exam, content = for example have the following functor work class greaterthann private int threshold public greaterint thresholdin thresholdthresholdin bool operator int num return num threshold int operator return threshold
  label = exam, content = for example can the following getter be overloaded if yes const is not part of the name nor parameter how can const be part of the signature thanks class thing private int thingmember public int getter return thingmember int getter const return thingmember
  label = exam, content = so do iterators need big three iterators are dealing with dynamic memories but it seems like they dont need a deep copy though so is the answer no
  label = exam, content = why can we just not do delete x4
  label = exam, content = hey are static variables located on the stack or are they located in the globals
  label = exam, content = for fall 2015 2a are we not expected to set first last 0
  label = exam, content = since ptr would be pointing to junk initiallyhow do we know that the output is tweet for sure is the junk of the type bird necessarily
  label = exam, content = im confused on what we should throw in general for example in the lecture slides there was throw goodbyeerror and throw goodbyeerror e would catchgoodbyeerror e catch both of those throws what is the difference between the two how do we decide what to throw in general do we throw the variable we want to access later in catch
  label = exam, content = this says that lobster can be used in any place that crustacean can with no undesired consequences however if we use an object of size 1 the lobsters pinch would make it a negative number how is this not considered an undesired consequence
  label = exam, content = can someone explain this it seems as if even though t and t2 are distinct objects of the timer class they are sharing the public variable i rather than each having their own instance of i is this because i as a member of the counter class is created above main rather than being individually declared by constructors what would the code look like if t and t2 each had their own instances of i
  label = exam, content = are we allowed to use the c do while condition loops on the final exam thanks
  label = exam, content = this question specifically refers to the line collector c collector is a templated class so why do we not need to specify c is a collector of which type as in collectort c will this code compile just as fine is it because we are already in list class with template typename t but what if i want to make a collector of doubles instead i should definitely put the type
  label = exam, content = can someone explain to me how this loop checks the very last element from my understanding it will exit the for loop when it is at the last element and then not dereference in an equality check
  label = exam, content = a data member declared using the static keyword is “shared” among all instances of the class can someone explain this to me i thought that any member variable of a class can be used by any instance of that class
  label = exam, content = where the answer uses current isnt it mostrecentangle instead
  label = exam, content = so say i have a listduck ducks that i wanted to print to cout would the proper way to do this be forduck item ducks cout item endl im thinking that making item a reference in this situation helps by not making copies of every duck in the list also if my understanding is correct the word auto could be used here instead of duck
  label = exam, content = what is this in this code
  label = exam, content = why does this explode i see that in main int z gets set to 3 then we call func but func doesnt return anything and has a local variable y that gets deleted when out of that scope so doesnt z still point to 3 so it wont go into the if statement
  label = exam, content = for this question is it necessary to use a loop or could we type delete parts
  label = exam, content = forgive me if i am a wrong for this question shouldnt we have private int clawsize at the end of this answer in my understanding even a derived class cannot access to private member of a base class thanks
  label = calculator, content = hi i just looked back on the score i received for my last submission at 1114pm and i realized i attached rationalh instead of rationalcpp i got the score status invalid with no results hopefully this means you take my previous valid submission as the one to be graded i had just added more code to calccpp and was trying to update better my submission its my bad for not checking to make sure i had the right files but im hoping you take my previous submission at 9pm
  label = exam, content = are we required to have assert statements in order to satisfy the rme on exam questions im looking at answers right now and none of them have any assert statements in them
  label = exam, content = the problem asks about leaked memory why is the string caught basedouble leaked if its on the stack
  label = exam, content = for this answer 1 theres no pushback function of class list if we refer to the given definition at the end of the exam pages 2 why would we have to check if its been seen in 3c we are asked to write a removeduplicates function does that mean the items in the list can be duplicated
  label = exam, content = should we expect our project 45 grades to be back before the exam
  label = exam, content = hey i was just curious as to if it was possible to have a dynamic array of dynamically allocated pointers if so how should we go about deleting them
  label = exam, content = could someone please explain the solutions to problems 3b and 3c on the practice exam from fall 15
  label = exam, content = in the past exam winter 2015 problem 2 the node struct and first and last are supposed to be private
  label = exam, content = if we provide an empty default constructor will member variables still be default initialized for example class thing string a thing is the member a guaranteed to be an empty string or just memory junk
  label = exam, content = for 5c when we are inside bart t1 t t2 because 6 is not less than 6 we first cout g and then throw deriveddouble987 there is catch for it underneath but im confused when it says cout egetptr endl wouldnt that print out an address but how do we know what address it is at im really confused
  label = exam, content = why does null pointer has a null in its name does a null pointer necessarily point to a null character thanks
  label = exam, content = in this question how can we find the first element that is greater than or equal to the value stored in meeting comp when meetingtimecomparators overloaded operator uses strictly less than comparison im very confused
  label = calculator, content = for the output of main im really confused why after steve printdescription is called why i am a ninjallama is not printed
  label = exam, content = i dont get why we have to do delete zoofront and then do zoopopfront afterwards doesnt popfront already have a delete inside it
  label = calculator, content = i tried to submit project again but cannot get feedback any more it shows on queue
  label = exam, content = hi all here is the exam review info httpsdocsgooglecomaumichedudocumentd1sgc3lfvo9dqqldo3btv9gq7chrbc7nmvqyg8d6b1cedituspsharing note the review is split across 2 days cheers vidal
  label = exam, content = yep it is saturday now when and where
  label = calculator, content = for this question they say crab and lobster are derived classes of crustacean they make us write the class definition for crab but there is no class definition for lobster do we just assume then lobster has the exact same properties as crustacean because it was derived from it
  label = exam, content = when can we see the practice exam solutions
  label = calculator, content = 
  label = exam, content = do we get a cheat sheet like on the midterm
  label = exam, content = hi i was wondering if there will be a final exam review session like for the midterm sorry i couldnt find a post on piazza with my question so if such a post exists could you please direct me to it thanks
  label = calculator, content = for my own list test file the autograder gives me this warning just wondering what it actually means warning this test incorrectly flagged the correct solution as buggy
  label = calculator, content = since its before due i think i can ask a last minute question here do we need tois it possible to test list contains rationals i have a test case like that but its full of undefined referencei include header files properly do we just need to test regular type not including rationalthanks for the help
  label = calculator, content = does received status mean being queued
  label = calculator, content = please see the newly posted announcement turn in the project right when the ag is back up because we arent sure how long itll stay up a technician has to come and manually restart it we are not able to answer any project questions after 415 at 8pm pin
  label = calculator, content = if we sign out from the autograder once we make a submission and the submission is still queued is that submission still valid
  label = calculator, content = the autograder is down again
  label = exam, content = does throwing an exception in a while loop search out of the scope of the while loop or does it drop the stack frame all together aka if you were to put a catch at the end of loaddata would it catch the inputex throw
  label = calculator, content = if the autograder remains down for a good amount of time will there be an extension of the due date
  label = calculator, content = youre probably aware the autograders down again if it remains down is our most recent submission the one that counts towards our grade i made some improvements since then
  label = calculator, content = my code got the correct output in xcode but every time i tried to run it on caen there are some mysterious assertion error ive debugged step by step and i saw my list is not emtpy and theree no assertion popping up in xcode is there any suggestion for this
  label = calculator, content = im getting a 502 error
  label = calculator, content = in one of my list test files i test iteratoroperator using a struct containing a single int val on caen the test compiles and passes but on the autograder it failed to compile is there a difference between caen and the autograder environment that explains this the full error is this
  label = calculator, content = im trying to make sure the destructor is working i create a list push some elements inside check to make sure they are there then use list to destroy it right then without redeclaring the list i added some elements check to see if they were there then destroyed it then without redeclaring the list again front pushed elements in but now when i check to see if it is there i get this error listteststartercpp2342 error void value not ignored as it ought to be assertlistpopallfront 5
  label = calculator, content = can i get an iterator that points to the last node i know the end function gives one past the end and im loading up my stack from the back so i want to start from the back and move to the front in my print function but i cant do that if my iterator points to null instead of the back node any suggestions thanks
  label = calculator, content = are we allowed to use cin string and then use atoistringcstr to help in checking whether or not the string is a number or operator i was trying int x stoistring but it fails if the number is not an int and if the number is more than one digit i cant figure out how to determine if its an int other than size
  label = calculator, content = on the spec it says to turn in the list test files with the name listtest however on the autograder it says to submit the file with the name listtest which one should we do
  label = calculator, content = ive submitted by project and waited to see results but its been over a half hour and i am still in queue im afraid that if i remove myself from queue ill just have to start it overis there anything i should do
  label = calculator, content = when i type the commands make publicstacktest publicstacktest i get this message back stacktestpublic permission denied any idea why this is happening i tried make clean but it said no rule to make target clean stop
  label = calculator, content = i submitted before the autograder crashed and right now it says queued do i need to resubmit or is the autograder going to continue grading the ones in queue now
  label = calculator, content = on the one hand 10 seems like reasonable output but the formulas will give 00 what is correct
  label = calculator, content = i am just wondering if someone can explain something to me that my code is doing that i do not really understand basically what is happening is if i have a stack of rationals call stack and i have an int called elt and i do stackpushelt it pushes the integer to the stack in the form of a rational furthermore if i use operators on a combination of integers and rationals it still works this is sorta blowing my mind so if someone could drop some knowledge my way that would be awesome
  label = calculator, content = after reading all the posts about how we should read in our inputs im still confused were supposed to read from standard inputcin i think but how does that relate to the file if we dont use fin
  label = calculator, content = just so you all know
  label = calculator, content = the remove from queue button is not working for me i have newer version of files to upload just letting everyone know thank you
  label = calculator, content = should we be using a typename template for our match class or would hard coding a single type be ok
  label = calculator, content = our code runs properly if we change the use of for multiply to just x when we input 2 2 a it prints 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 when we change the program so it reads x or multiply and use 2 2 x a it will print 4 its acting as if it cant read and somehow pushes 24 zeros onto the stack
  label = calculator, content = on the autograder site the format for the list test files shows listtestcpp while the project spec shows listtestcpp i received a compilation error when i submitted my list test files other than the listtestcpp could the second underscore be a possible reason for the compilation error or would that not make a difference for the autograder
  label = calculator, content = is it better to create an additional node pointer to point to the node that an iterator is pointing to and access the nodes datum next and prev from the additional pointer or is it ok to access the nodes info from the iterators nodeptr
  label = calculator, content = im wondering do we need to test operation in list if so how
  label = exam, content = though static member variable was covered in lecture but static member function is still quite unfamiliar to us thanks
  label = calculator, content = i was about to submit my project when i noticed that i never made a body for stacks internal function print my code works perfectly well using only the operator function do i need to go back and change both of those functions to make use of print it really seems unnecessary but im willing to do it if it means not losing points
  label = calculator, content = hi so i just wanted to clarify that this piece of code is acceptable to use even though it does create an invalid iterator i have searched piazza and read the faq i guess i am still just a bit confused code delete inodeptr because now the iterator does not actually point to anything useful so as long as my program does not try to use this iterator it is okay should i set inodeptr to 0 or is that unnecessary thanks
  label = calculator, content = when running listcompilecheck on windows it appears that there was a segmentation fault when running on caen this error appears error in listcompilecheck double free or corruption fasttop 0x00000000010c8030 backtrace lib64libcso60x7d0230x7f799c7bb023 listcompilecheck0x400eba listcompilecheck0x400b8f lib64libcso6libcstartmain0xf50x7f799c75fb15 listcompilecheck0x400969 memory map 0040000000402000 rxp 00000000 002b 249449630 homewbarajaseecs280project5listcompilecheck 0060100000602000 rp 00001000 002b 249449630 homewbarajaseecs280project5listcompilecheck 0060200000603000 rwp 00002000 002b 249449630 homewbarajaseecs280project5listcompilecheck 010c8000010e9000 rwp 00000000 0000 0 heap 7f79980000007f7998021000 rwp 00000000 0000 0 7f79980210007f799c000000 p 00000000 0000 0 7f799c73e0007f799c8f4000 rxp 00000000 fd01 12059310 usrlib64libc217so 7f799c8f40007f799caf4000 p 001b6000 fd01 12059310 usrlib64libc217so 7f799caf40007f799caf8000 rp 001b6000 fd01 12059310 usrlib64libc217so 7f799caf80007f799cafa000 rwp 001ba000 fd01 12059310 usrlib64libc217so 7f799cafa0007f799caff000 rwp 00000000 0000 0 7f799caff0007f799cb14000 rxp 00000000 fd01 12074364 usrlib64libgccs48520150702so1 7f799cb140007f799cd13000 p 00015000 fd01 12074364 usrlib64libgccs48520150702so1 7f799cd130007f799cd14000 rp 00014000 fd01 12074364 usrlib64libgccs48520150702so1 7f799cd140007f799cd15000 rwp 00015000 fd01 12074364 usrlib64libgccs48520150702so1 7f799cd150007f799ce16000 rxp 00000000 fd01 12075905 usrlib64libm217so 7f799ce160007f799d015000 p 00101000 fd01 12075905 usrlib64libm217so 7f799d0150007f799d016000 rp 00100000 fd01 12075905 usrlib64libm217so 7f799d0160007f799d017000 rwp 00101000 fd01 12075905 usrlib64libm217so 7f799d0170007f799d100000 rxp 00000000 fd01 12059359 usrlib64libstdcso6019 7f799d1000007f799d300000 p 000e9000 fd01 12059359 usrlib64libstdcso6019 7f799d3000007f799d309000 rp 000e9000 fd01 12059359 usrlib64libstdcso6019 7f799d3090007f799d30b000 rwp 000f2000 fd01 12059359 usrlib64libstdcso6019 7f799d30b0007f799d320000 rwp 00000000 0000 0 7f799d3200007f799d341000 rxp 00000000 fd01 12059632 usrlib64ld217so 7f799d5150007f799d51a000 rwp 00000000 0000 0 7f799d53f0007f799d541000 rwp 00000000 0000 0 7f799d5410007f799d542000 rp 00021000 fd01 12059632 usrlib64ld217so 7f799d5420007f799d543000 rwp 00022000 fd01 12059632 usrlib64ld217so 7f799d5430007f799d544000 rwp 00000000 0000 0 7ffd246ba0007ffd246db000 rwp 00000000 0000 0 stack 7ffd247790007ffd2477b000 rxp 00000000 0000 0 vdso ffffffffff600000ffffffffff601000 rxp 00000000 0000 0 vsyscall aborted what does this mean
  label = calculator, content = if the list is empty should the iterator begin function return a sentinel value
  label = calculator, content = can anyone explain how to test files like calctest00in in caen also i didnt think there was any output in calccpp
  label = calculator, content = thanks
  label = calculator, content = just trying to clarify the spec says we dont have to implement the calculator for integers and doubles only rationals does that mean that i can write my functor assuming that the only type passed into it will be a rational or do i have to use a template to make any type passed into it work thank you
  label = calculator, content = when i run calcpp i get this error what might be the reason i used stoi to convert input such as 1 thanks for help libcabidylib terminating with uncaught exception of type stdinvalidargument stoi no conversion
  label = calculator, content = im a little confused with the specifications it says stack after seeing operator 23 but wouldnt that take up two spaces on the stack if it was a stack of ints or should our stack be a stack of rationals where every single number is just a number with a denominator of 1
  label = calculator, content = im a little confused the specs say do not use other libraries but do include a library to use its functions
  label = calculator, content = it doesnt say in the spec that it requires at least one operand but it also doesnt say that it requires none like c i have an assert to make sure there is at least one item on the stack is that fine
  label = calculator, content = hi all when we run either of the calc tests the output is perfect except for the fact that the program infinitely prints the last sequence of numbers ie 12 0 2 32 6 12 2 32 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 3 1 32 1 34 2 1 83 1 38 54 14 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4
  label = calculator, content = and if so for a functor do we just give the class description
  label = calculator, content = i finished almost everything so i deleted all the files i previously had on my h drive rm rf project folder and copied over my project 5 folder on my local machine using scp rp to my hdrive but when i run listtests it starts running valgrind and i get the error oserror exec format error and it ends any guesses to whats going on i had no problem previously when i only had listh list public test run my testpy makefile stackh
  label = calculator, content = do we need to make test cases for iterators or just the public list functions
  label = calculator, content = is this a problem possibly lost 200 bytes in 3 blocks error summary 3 errors from 3 contexts suppressed 1 from 1 it definitely does not seem great but i cant tell where it is saying the problem is or anything of that sort are there any tricks with valgrind
  label = calculator, content = hi just to clarify an empty int list is not equal to an empty double list right
  label = calculator, content = even after i includestring when i try to compile using g in cygwin it says stoi not declared in this scope but everything works fine on linux is there an explanation for this andor something i can do to get stoi to compile in cygwin thanks
  label = calculator, content = for my calccpp i used case and switch statements as opposed to writing ifstringinput d ifstringinput r etc i simply converted input via cstr so that it can be used in switch statements i was able to get full points on the autograder but i was wondering if i would encounter problems with rational values containing numberatorsdenominators getter than one decimal place should i be considered about this
  label = calculator, content = it says that inputs can be separated by whitespace including a newline does this include the escape code n or just new line in the sense of a user hitting enter or an input file having a line break ie if i were to input 0 1 5 2 n n 5 6 2 into the terminal should i account for that or would only accounting for 0 1 5 2 n enter 5 6 2 suffice
  label = calculator, content = i am failing the two public calc tests do to running out of time but my code works very fast to my knowledge im not really sure what would be causing this also on the list test cases that we wrote i can get them to compile on my own computer and on caen but it fails for some reason with this error
  label = calculator, content = i cannot find my mistake in my listh file i keep getting a segmentation fault when i run the listcompilecheck and then the following when i run the stacktestpublic
  label = calculator, content = the following things occur stacktop passes the tests we wrote in xcode on caen stacktop runs through all of the outputs and finishes the program when run through make stacktests and valgrind gives us 2 valgrind errors and says all heap blocks were freed no leaks possible however when we run the tester stacktest1exe simply without valgrind we run into a segmentation fault whats going on here
  label = calculator, content = i am getting some really weird errors with stack the first one says theres an error in the declaration of the private member variable list within stack yes ive included listh the second error is when i try to use an iterator to loop through the list but it gives me an error for using the end function from list and assigning it to the iterator theres a similar error for the begin function too the last error is that it wont let us a variable of type t if anyone has any insights into these errors please let me know
  label = calculator, content = this is the error im getting which i do not get on the caen computers in file included from usrincludec48cassert430 from listh16 from listtestbasicintcpp1 listtestbasicintcpp in function void copyctortest listtestbasicintcpp4714 error no match for operator operand types are listint and listint assertcopy list listtestbasicintcpp4714 note candidates are and then just a huge list of candidates does anyone know what the problem is
  label = calculator, content = when we run calc we are getting an error saying that negate is ambiguous what does that mean negate is the function we made for the negate operation
  label = calculator, content = when we want to do some operation like or how do you set a relational stackpop for example is relational r2 stackpop ok
  label = calculator, content = hi ive run all tests and everything is passing but one when i test listcompilecheck i get an error message regarding the last line of the file from what i understood of the specs and class we were not supposed to implement operator do we have to implement it did i misunderstand the specs or is the error lying elsewhere thanks
  label = calculator, content = what type of exception does stoi throw thanks
  label = calculator, content = if iterator points to the last element in the list not the end position would we insert the element to the position right before the last element for example if the list is 1 2 4 and the iterator passed into insert is pointing to 4 after the call insertiter 3 would the list now be 12 3 4 or 12 4 3
  label = calculator, content = 
  label = calculator, content = i tried declaring a string called word which reads user input then calling ifstoiword to check whether a command is a number or an operator but if this statement returns false i get the error terminating with uncaught exception of type stdinvalidargument stoi no conversion how can i get around this to check whether someone is a char or int
  label = calculator, content = when running my program everything compiles and the normal tests run however when it comes to reading user input from an input file i get this error binsh calctest00in no such file or directory the calctest input and output files are in my project director how can i fix this
  label = calculator, content = im still confused on how to deal with input for calc in calctest00in is 2 3 4 3 3 4 5 2 m entered as a single string that we have to go through to extract each char and perform whatever necessary action on each one after the entire string has been entered or will the program take in the 2 using cin then ask for another char where the user enters 3 and so on and so on so is each line in calctest00in a single account of user input so there would be 10 total commands
  label = exam, content = in lecture we learned that if s is a subtype of t we can weaken the preconditions of s by the liskov substitution principle im having trouble understanding this because i was under the impression we can only strengthen the preconditions or we will otherwise run into problems for example if class a has a requirement of only dealing with odd numbers and derived class b has a requirement of any number then this seems to be okay based on lsp because to weakens the preconditions
  label = calculator, content = usrbinvalgrind valgrind startup or configuration error valgrind cant establish current working directory at startup valgrind unable to start up properly giving up valgrind error in test rationaltest1exe valgrind startup or configuration error valgrind cant establish current working directory at startup valgrind unable to start up properly giving up valgrind error in test rationaltestpublicexe out of 2 tests run 2 tests passed 0 tests failed 2 valgrind errors getting this error when compiling make rationaltests but it occurs after all of my tests pass
  label = calculator, content = i tried to free the node pointed to by last when the list only have a single object but get this error when the list has more than one item the program seems to work fine i also tried to compile on caen i cant really see where the problem is can someone give me a hint
  label = exam, content = is big three a required thing to do if there is a dynamic object in a class if there is a true and false question asking custom big three is required for class creating dynamic memory would it be true or false
  label = calculator, content = what kind of valgrind error is this im assuming its a memory leak but i cant tell where its happening thanks 9854 2064 bytes in 1 blocks are possibly lost in loss record 55 of 61 9854 at 0x10000a0fc malloczonemalloc vgreplacemallocc305 9854 by 0x1005e7efd objccopyclassnamesforimage in usrliblibobjcadylib 9854 by 0x1005db182 protocols in usrliblibobjcadylib 9854 by 0x1005db093 readclassobjcclass bool bool in usrliblibobjcadylib 9854 by 0x1005d8c13 gcinit in usrliblibobjcadylib 9854 by 0x1005e024e objcinitializeclasspairinternalobjcclass char const objcclass objcclass in usrliblibobjcadylib 9854 by 0x1005ed132 layoutstringcreate in usrliblibobjcadylib 9854 by 0x1005db83c realizeclassobjcclass in usrliblibobjcadylib 9854 by 0x1005db300 copyswiftv1manglednamechar const bool in usrliblibobjcadylib 9854 by 0x1005db2e9 copyswiftv1manglednamechar const bool in usrliblibobjcadylib 9854 by 0x1005db2e9 copyswiftv1manglednamechar const bool in usrliblibobjcadylib 9854 by 0x1005db2e9 copyswiftv1manglednamechar const bool in usrliblibobjcadylib
  label = calculator, content = 4 5 6 15 or 4 11
  label = calculator, content = my partner and i implemented the entire project passed all of our own tests and the autograder tests using iterator as our return type however when we saw the high level post about iterator vs typename listtiterator for the iterator class we began to second guess ourselves i tried adding the typename listtiterator to several of our public operators even passing listtiterator as a parameter of some of the operators we are continuing to get many errors and i am just wondering if our initial version was correct and im just overthinking everything ive read the high level post a dozen times and its still not clicking if someone could give me a better understanding of whats going on i would greatly appreciate it thank you in advance
  label = exam, content = in the question 1bi in winter 2015 past exam the choice c is temporary was this ever covered in lecture if it was not covered in lecture what exactly is it
  label = calculator, content = the title says most of it and this may be a silly question but do we a deconstructor for rational or would it automatically clean up if the new keyword is never used
  label = calculator, content = when i try to run listcompilecheck i get these errors i dont know what to make of them
  label = calculator, content = we can include rationalh in stackh right
  label = calculator, content = in the context of this error 24618 conditional jump or move depends on uninitialised values
  label = calculator, content = this is similar to 2970 but i am still a little confused is it possible to assert that an iterator pointing to a null pointer is valid i am running into the following problem with an empty mylist listintiterator iter mylistbegin mylistinsertiter 42 i try and assertinodeptr in my insert function but this returns false because nodeptr is null since mylist is empty first is a null pointer considering first is associated with the list and these lines are straight out of listcompilecheckcpp i think the function should be able to take in a null pointer am i correct in saying this if so i cant think of a way to assert this situation so is it just kind of assumed that a valid iterator will be passed into the function or am i missing something thank you
  label = calculator, content = in list when i create a copy constructor it should create a pointer to a list with the exact same elements as the list being created but be an entirely different list correct when i first made my copy constructor it just made a new pointer to the list being copied so there was one list with 2 pointers to it am i correct in thinking that there should be two separate lists thanks
  label = calculator, content = hi there so im testing my stackh file and whenever the deconstructor for the lists in the stacks run i run into some hiccups ive written my deconstructor to handle the dynamic memory in the lists but i run into a problem when i try to prevent my deconstructor from deleting a null pointer from an empty list i use an if statement with empty but even when both first and last are null the boolean returns true and my program tries to delete a null pointer and before someone asks yes my empty function in listh does exactly what you think it does not posting the code for obvious reasons is there something im missing thanks
  label = calculator, content = for insert in iterator can we change the iterator passed in to be passed by reference and if not how would we approach testing it thanks
  label = calculator, content = for some reason our size is 0 when we run the public test for stack and it calls the destructor at the end were pretty sure it should be 1 we used gdb and found that for some reason first was null what is happening why is it happening and what should we do
  label = calculator, content = im having trouble deciphering these errors when i compile does anyone have any idea what they mean
  label = calculator, content = im trying to use countif within calccpp but for some reason a countif function that takes in three arguments is showing up while the countif we wrote only has one argument is this a different countif function thats built inin one of the libraries we included or is something strange happening with the function i wrote
  label = calculator, content = running listintiterator iter mylistbegin gives a compiler error error no matching function for call to ‘listintiteratoriteratorlistintiterator’ the message seems to say that first is being evaluated as a iterator when calling the iteratorfirst constructor while inside the begin function this gives an error since first not being recognized as a node pointer makes it impossible to find the right constructor
  label = calculator, content = i am getting this complication error when trying to declare my functor and i cant figure out what to change g wall werror pedantic stdc11 o1 calccpp rationalcpp o calc calccpp in function ‘void runcalculator’ calccpp13433 error missing template arguments before ‘’ token count stackcountifequalsfirst make calc error 1 im guessing it has something to do with declaring the template type but i cant figure out where to do it or what to declare
  label = calculator, content = the stackh past the public test on xcode but fail on autograder get 01 i wonder if the public test code for stackh on autograder is the same as the stacktestpubliccpp given
  label = calculator, content = what h files should be included in calccpp both stackh and rationalh or just one of them
  label = calculator, content = my output looks fine and stoi works up till this point i dont see why it fails here for reference as input a copied the calc test 01 in file contents and put them in xcode
  label = calculator, content = this may be a silly question but i couldnt find it in the spec when you are implementing the iterator operators do you have to make sure the pointer is point to a node in the list i tried using it on an iterator just past the end of my list and it failed should it fail or do we have to take the end pointer into account as well thank you
  label = calculator, content = is the rational public test on the autograder the same as the one in the distribution files because i am passing that one on caen but failing the autograder one
  label = calculator, content = in the spec it states to receive full credit your test cases must return 0 from main when linked with a correct solution and at least one of your test files must return nonzero per incorrect solution what does it mean to return nonzero per incorrect solution does this mean we should not use assert thanks
  label = calculator, content = my stack print member function works but it wont print anything to the screen until cout is called again is there a fix or is this normal
  label = calculator, content = after clearing the stack what should remain an empty stack or nothing
  label = calculator, content = how are we supposed to iterate though stack if node is a private member of list and list cant be a friend of stack
  label = calculator, content = should we assert that a stack is empty such that the program aborts if you try to print an empty stack or should we just let it print a newline
  label = calculator, content = i noticed that the h files included the cstddef library but the spec does not list that one as a library we are allowed to use should we keep it or delete it
  label = calculator, content = i am running the make test command in the command prompt and i am getting the following errors make testg wall werror pedantic stdc11 o1 calccpp rationalcpp o calc tmpccpoga5uo in function main calccpptext0x305 undefined reference to rationalrationalint calccpptext0x31b undefined reference to rationalrational calccpptext0x71b undefined reference to rationalrational calccpptext0x862 undefined reference to rationalrational calccpptext0x9b2 undefined reference to rationalrational calccpptext0xb0b undefined reference to rationalrational tmpccpoga5uocalccpptext0xc33 more undefined references to rationalrational follow tmpccpoga5uo in function main calccpptext0xedc undefined reference to rationalgetdenominator const calccpptext0xeeb undefined reference to rationalgetnumerator const calccpptext0xefe undefined reference to rationalrationalint int calccpptext0xf14 undefined reference to rationalrational calccpptext0x1080 undefined reference to rationalrationalint calccpptext0x1096 undefined reference to rationalrational collect2 error ld returned 1 exit status make calc error 1 i have defined and implemented each function in rational both rationalh and rationalcpp are in the same directory as the other files and i have include d rationalh in calccpp but the compiler doesnt like something here but i dont know what any help would be appreciated i have read other piazza posts about linker errors
  label = calculator, content = we decided to throw the numerator and denominator into the rational as is and since they are private members we decided to implement our invariant checking in getnumerator and getdenominator every single time a rational number is read accessed or used in an operator we use those two functions which check the invariants note this works perfectly for all our tests and the autograder we just saw your implementation of the constructor must manipulate numeratordenominator to satisfy the invariants since we had chosen to implement the invariants outside the constructor but the num and den cannot see the light of day without going through the invariants function is this satisfactory you would not know the difference from the outside of the class
  label = calculator, content = i ran test00 through xcode and the output was correct i ran it through caen and the output file printed the last line twice so i ran the code through gdb to try to debug but the output was correct so im confused on what to do
  label = calculator, content = one of my test cases tests a list of strings the file compiles in the caen environment but it does not compile in the autograder listteststringcpp in function int main listteststringcpp188 error string was not declared in this scope liststring list however the file does have the following inclusions include listh include iostream include string why is this the case
  label = calculator, content = i couldnt find anything on the specifications regarding when infinity is being divided by so what would be the correct outputs for 3 10 p 0 10 p 10 10 p right now the outputs im getting are 0 rational0 1 10 00 rational0 0 would these be correct
  label = calculator, content = when we implement the overload assignment operator for list we need to first check the selfassignment therefore do we need to implement a operator for list as well
  label = calculator, content = what should output be from this entry 2 3 4 5 6 p 54 5 6 or 45 5 6
  label = calculator, content = heap summary 15837 in use at exit 24 bytes in 1 blocks 15837 total heap usage 103 allocs 102 frees 2929 bytes allocated 15837 15837 leak summary 15837 definitely lost 0 bytes in 0 blocks 15837 indirectly lost 0 bytes in 0 blocks 15837 possibly lost 0 bytes in 0 blocks 15837 still reachable 24 bytes in 1 blocks 15837 suppressed 0 bytes in 0 blocks 15837 reachable blocks those to which a pointer was found are not shown 15837 to see them rerun with leakcheckfull showleakkindsall 15837 15837 for counts of detected and suppressed errors rerun with v 15837 error summary 0 errors from 0 contexts suppressed 1 from 1 valgrind error in test listteststarterexe out of 1 tests run 0 tests passed 1 tests failed 1 valgrind errors what does still reachable mean thanks for the help
  label = calculator, content = the spec says put any extra helper functions for rational in the cppfiles and declare them static what if we have helper functions in calccpp should we declare them static as well also should functors be declared as static
  label = calculator, content = i get this error when trying to access the autograder
  label = calculator, content = for some reason no matter the browser or computer the autograder will not allow me to sign in does anyone have an idea why this may be
  label = calculator, content = does the calculator automatically quit when the end of user inputs line has been reached or does the calculator only quit when q is inputted thus giving the user the option to input another line
  label = calculator, content = in one of my functions i attempt to make a copy of a list using the assignment operator when running the public test i am greeted by the following error unhandled exception at 0x7766dad8 in project5exe microsoft c exception stdbadalloc at memory location 0x0018f098 im not familiar with this error and any help would be appreciated thanks
  label = calculator, content = what should 10 and 00 print do i just print them out since they are not integersor should i print out infinity or undefined
  label = calculator, content = for this function i get an error that iteratorfirst is calling a private constructor when this code was already given why is this
  label = calculator, content = does anyone know what entry point must be defined mean im trying to run calccpp and im having this weird error and i dont know why im getting it i have my main function and return 0 in it
  label = calculator, content = can we have helper functions inside of rationalcpp more specifically can i write a helper function to reduce fractions
  label = calculator, content = i got this error with regards to countif what does it mean template argument list following class template name must list parameters in the order used in template parameter list
  label = calculator, content = when i run the calctest00 and calctest01 on caen my output is identical to that of the correct output however i failed those tests on the autograder
  label = calculator, content = i get this error on caen when running make test any idea why make execvp listcompilecheck permission denied make test error 127
  label = calculator, content = can we use the friend class list in stackh
  label = calculator, content = on xcode running calctest00in with the calculator results in the correct output but on caen it repeats the line that is outputted by pressing a forever how do i fix this
  label = calculator, content = in the spec d requires a stack with at least one operand does it mean the stack size should be at least 1
  label = calculator, content = im getting a segmentation fault when i try to run through rationalpublictestexe the seg fault happens when im trying to create the rational2 4 im using the gcd function from lab03 to figure out the greatest factors for numerator and denominator in my rational constructor and when i call this function i use the abs function so that the arguments to this function must be positive however for some reason the function doesnt return 2 when the arguments become 2 and 2 and after the function gets recursively called a few times the numerator gets changed to 1 because of this the function never stops running my rationalcpp was working yesterday and i cannot figure out what the problem is now any help
  label = calculator, content = whenever we try to run the rationaltestpublic we get starting test rationaltestpublicexe but then nothing happens i think maybe its an infinite loop but i cant see how that would be happening and i dont know how to get any closer to diagnosing the problem any suggestions
  label = calculator, content = for example if one tried doing rational r110 0 is this a valid input that we should handle and if so would the correct rational number be 10
  label = calculator, content = hi i am working on the invariant 3 there we check for infinity and undefined in c there is a keyword named infinity do we use that besides how do you represent undefined in c when it is 00 thus if invariant 3 encounter 00undefined it returns true do we write a class to represent infinity and undefined values thanks
  label = calculator, content = so i have a test function that has an iterator pointing to the beginning of a list i then call the erase function to erase this first element in the list next i increment the iterator and again erase the element that the iterator is pointing to which should always be the first element in the list until the list is empty this ran fine in xcode but it is causing an error in valgrind not sure whats going on here and thought someone might be able to enlighten me the error is below g wall werror pedantic stdc11 o1 listteststartercpp o listteststarterexe g wall werror pedantic stdc11 o1 listtesteraseinsertcpp o listtesteraseinsertexe python runmytestspy list running list tests starting test listteststarterexe all tests passed test listteststarterexe passed starting test listtesteraseinsertexe all tests passed test listtesteraseinsertexe passed usrbinvalgrind 1459 memcheck a memory error detector 1459 copyright c 20022013 and gnu gpld by julian seward et al 1459 using valgrind3100 and libvex rerun with h for copyright info 1459 command listteststarterexe 1459 all tests passed 1459 1459 heap summary 1459 in use at exit 0 bytes in 0 blocks 1459 total heap usage 17 allocs 17 frees 408 bytes allocated 1459 1459 all heap blocks were freed no leaks are possible 1459 1459 for counts of detected and suppressed errors rerun with v 1459 error summary 0 errors from 0 contexts suppressed 1 from 1 1461 memcheck a memory error detector 1461 copyright c 20022013 and gnu gpld by julian seward et al 1461 using valgrind3100 and libvex rerun with h for copyright info 1461 command listtesteraseinsertexe 1461 1461 invalid read of size 8 1461 at 0x40102b listintiteratoroperator in homejesserbeecs280project5listtesteraseinsertexe 1461 by 0x400e72 main in homejesserbeecs280project5listtesteraseinsertexe 1461 address 0x5a17640 is 0 bytes inside a block of size 24 freed 1461 at 0x4c2b131 operator deletevoid in usrlib64valgrindvgpreloadmemcheckamd64linuxso 1461 by 0x40108f listintpopfront in homejesserbeecs280project5listtesteraseinsertexe 1461 by 0x400e68 main in homejesserbeecs280project5listtesteraseinsertexe 1461 all tests passed 1461 1461 heap summary 1461 in use at exit 0 bytes in 0 blocks 1461 total heap usage 20 allocs 20 frees 480 bytes allocated 1461 1461 all heap blocks were freed no leaks are possible 1461 1461 for counts of detected and suppressed errors rerun with v 1461 error summary 1 errors from 1 contexts suppressed 1 from 1 valgrind error in test listtesteraseinsertexe out of 2 tests run 2 tests passed 0 tests failed 1 valgrind errors
  label = calculator, content = so for calccpp when a m is inputed im confused on what to do i know i pop off the top object and put it into a function and call countif function however im confused on to make a bool function that takes in one parameter and check if the object passed in is equal to the top object of stack
  label = calculator, content = i currently have this template typename t bool listtiteratoroperatortypename listtiterator rhs const but caen says it doesnt know which to use to compare iterators whats wrong
  label = exam, content = what would be a case or an advantage of declaring a template with default parameters such as templatetypename t1 int typename t2 int
  label = calculator, content = how can we use member functions like pop and top in the operator if the stack argument is declared constant im trying to get the first element of stacks list but i am confused at how to access it
  label = calculator, content = for part of my calc file i use try catch statements the exception that i am using is found by default on my compiler but apparently it is not found on caen because including that library fixes the autograder issue am i allowed to do this if it is the std library for exceptions or will this lose me points
  label = calculator, content = i realized i needed to make a functor similar to the one in the lecture slides i just pop off the top value in my match function and then stick it in as a parameter in my funtor that i pass into countif like greatern on the slides then i just make that value from countif a rational and put it on the stack however it doesnt work and i am not sure whats going on am i way off on my thinking
  label = calculator, content = i keep getting the following error when i try to compile calccpp calccpp10330 error request for member ‘stackrationalpush’ in ‘stack’ which is of nonclass type ‘stackrational’ stackstackrationalpushnumber i dont understand this
  label = calculator, content = does the assingnment opperator have to work for self assignment aka mylistmylist
  label = calculator, content = i am trying to base my code off of lecture 2122 notes however there is no way i can create an iterator in order to traverse my stack when using for iterator it listbegin it tells me iterator was not declared in this scope ive also tried stacktiterator listtiterator can anyone give me a hint as to how to implement this ive tried just about everything i can think of at this point and any feedback will be appreciated
  label = calculator, content = we are confused by end of file must also cause to exit with status 0 in the spec what file is ending because arent we using standard input and output throughout calccpp thanks
  label = calculator, content = so i realize that there is only one case of input that i would like to call stoi for and i accounted for that in my code and i am still throwing this error however this only happens when i try to direct input from file when i hand type the commands in the given tests in i end up with no error and correct output
  label = calculator, content = when we run our executable calc with calctest01 we are getting all of the correct output except we have an extra 4 at the end this is the only place an extra number appears and we have no clue whats causing it any ideas
  label = calculator, content = do i need any rme clause for the funcitons in cpp file except helper function everything is already written down in h file i just want to make sure about it
  label = calculator, content = my code will receive the value that user will type in by string what will my code do if user put wrong value such as zxc or
  label = calculator, content = is the countif statement supposed to be in the match class perhaps in one of the member functions or are we to use it in the main
  label = calculator, content = i was wondering if the calctest00in and calctest01in files should have a newline at the end of them or not it is hard to tell if they do or not in the text editor i am using to look at them if they dont my code doesnt print the last line of output causing it to give the incorrect output do you have any suggestions for fixing this
  label = calculator, content = when comparing if two rational numbers are equal is it safe to assume that the rational numbers are being reduced a rational number can be created 3 ways with the first 2 automatically following the invariant the 3rd method rationalint int can follow the invarients by using a helper function given that all methods of creating a rational number produce the lowest correct form the rational numbers being compared should not have to be reduced in our operator
  label = calculator, content = i made one test file for rational and i ran make rationaltests im getting hundreds of errors that look like this rationalh3622587 error stray ‘’ in program rationalh3622588 error stray ‘’ in program rationalh3622600 error null characters ignored werror rationalh3622631 error null characters ignored werror rationalh3622636 error null characters ignored werror rationalh3622642 error null characters ignored werror any idea what the problem could be
  label = calculator, content = since the non default constructor for iterator is in the private section how do we use it outside of the class was trying to use it for the iterator functions outside of the class
  label = calculator, content = im aware that the iterator used in erase should be a valid dereferenceable iterator associated with the list and for insert the iterator should be a valid iterator associated with the list how exactly do we assert these conditions in erase and insert is this only something we can control when we test the functions and is it impossible to assert these conditions inside insert and erase
  label = calculator, content = when i compile rationaltestpubliccpp i didnt use make rationaltests instead i type in g wall werror pedantic g rationaltestpubliccpp o rationaltestpublic then i get a bunch of errors when i compile using make rationaltests i didnt get such an error whats wrong with the first method
  label = calculator, content = i went back and was adding to my list tests and when testing pop back i found that when the list was supposed to be empty after calling popback it actually just started over after each call to popback i checked that size returned correctly and it does decrement with each call to pop up until the last call to popback instead of size 0 the elements of the list seem to reappear i was passing lists created in main by reference into my test functions when i start changing around how im passing the lists in different functions i get some confusing results how are we supposed to be passing lists created outside the scope of a function can anyone explain might be happening when the nodes of a list seem to reappear just in general im curious how that might be possible even if its not what im doing specifically thanks
  label = calculator, content = for match do we have to declare a template above the class i figure that one of the private member variables must be a stack so i was thinking that the member variable would be stackt matcher does that make sense if so do we have to declare another template later in the code when we call the class
  label = exam, content = in 4b and actually in other parts of 4 we use a listiterator and other lists that hold meetings shouldnt it be listmeetingiterator as in listmeeting in the addmeeting declaration
  label = calculator, content = my code compiles as well as my private and public tests however every time i run my code there’s a block in memory that still exists regardless of the number of lists created items in that list size of list etc valgrind says theres always an unfreed block even when no lists are created essentially a blank main there is still an unfreed block is this normal
  label = calculator, content = im testing my erase function and im failing my assertlistempty statement for the case where the only element in the list is erased however when i step through it it says that my first and last are both null and it passes the same assert statement any ideas on why this would be happening are welcomed thanks in advance
  label = calculator, content = i have noticed that my iterators position in the list changes when i add elements to my list with insert this is because it is still pointing at the same thing in my list if this is confusing here is what i mean here is my list 3 2 1 i make an iterator and set it using the begin function it will correctly point to the 3 i call insert the following way insertiter 4 now my list correctly contains 4 3 2 1 now lets say i call insert again the following way insertiter 5 now my list will contain 4 5 3 2 1 this is because my iterator is still pointing to the 3 which is no longer the first thing in my list is this okay it feels wrong because my iterator was never incremented or decremented yet its position in the list changes i feel like the final list should have been 5 4 3 2 1 thanks
  label = calculator, content = i dont quite understand how to deal with my end function when iterating through a list will end affect how i wrtie my operators in iterator
  label = calculator, content = hi i keep getting a seg fault for pushback and i implemented it just like in lecture does this mean that next is undefined for last in the constructor or something
  label = calculator, content = so im testing my list function and it passed the compile check but when my list is larger than size 1 and i try to do listsize the terminal just says starting list tests and then doesnt do anything any ideas why this is happening
  label = calculator, content = our code is correctly printing out calctest00 in xcode but when we run it through through terminal it is printing a 7 instead of a 1 for the first number of calctest00out so it is counting all the numbers in the stack not just the occurrences of the one that was popped off we have gone through all of our code and cant figure out where the bug is any idea what is causing this
  label = calculator, content = the corrections sheet on google drive says the slides for lecture 21 ­ iterators slide 14 and lecture 22 ­ functors slide 7 contained a mistake which is relevant to project 5 because name lookup for the return type of a member function is not performed in the scope of the class just using the unqualified name iterator is insufficient instead the return type must use the qualified name listtiterator additionally because listtiterator is a dependent name the typename keyword must be used see the appendix in the p5 specification does this mean we have to change all of the functions in listh that have a return type of iterator for example would we change these iterator operator iterator iterator iterator begin const to these typename listtiterator operator typename listtiterator iterator typename listtiterator begin const also the lecture 21 slide 14 has the line typename listtiterator listtiteratoroperator why is this repeated twice
  label = calculator, content = in line 96 of rationalh shouldnt the effects clause have a sign rather that a sign it is not the same representation to have a subtraction of a positive numerator than the addition of a negative numerator 23 13 and 23 13 both result in the same rational number but rhs has a different numerator in each
  label = calculator, content = i am getting a seg fault when i run listh with the public test cases i tried debugging through valgrind as suggested in office hours however i dont know how to interpret these errors and use them to locate the seg fault is there a way to locate specifically where memory leasmisallocations etc are happening within the code
  label = calculator, content = the reason is i cannot access to private members the num and denom outside of the classsince we cannot modify the rationalh second if i call getnum and getdenom they are already initialized to follow the 4 invariants before i can call them so how can i call these functions and let them follow the invariants how can i implement it
  label = calculator, content = it seems like there is a lot of code duplication in calccpp the only thing that changes for every function is the operator is there a better way to do this without all the duplication
  label = calculator, content = im having a really weird behavior where when i call the copy constructor specifically copyall whatever i do to this is also happening to other this is particularly strange since other is declared as const in the parameter for example when i add an element to the this list the element is also added to other if i were to call popall within copyall all the elements are deleted in the this list as well as the other list this happens even when i use the thispushback notation any ideas
  label = calculator, content = the spec says that putting a q in the input should cause the calculator to quit with a 0 exit value wouldnt this cause the program to have no output seeing as print would happen once all calculations are finished i also do not understand if the end of file scenario is something that i have to deal with myself or not the whole section of the spec talking about the quit character seems somewhat unclear to me
  label = calculator, content = hello there are two interpretations that my partner and i are thinking that negate could mean could you tell us which is the correct interpretation for this project 1 multiply the top value of the stack by negative one example 4 can change to be 4 2 if the top value is positive then change it to be negativeexample 4 becomes 4 if the top value is negative then it will always be negative 4 stays 4 after a negation thank you
  label = calculator, content = whenever i try to access nodeptr in my implementations of iterator functions within the body of the list definition i get this error why would this be
  label = calculator, content = how do we unit test iterator functions without accessing nodeptr in the testcpp file
  label = calculator, content = when i run my own tests using make listtests i get no errors but when i run the compile check this is the error that i get the compile check works on xcode which i know doesnt mean much but why would i be getting this error in the compile check but none of my list tests i tested similar behavior to the compile check as well
  label = exam, content = is there a scenario where post and pre conditions do not get weaker or stronger for example lets say an object does not modify the required clause of a function that it inherited would you say that this functions preconditions were not strengthened or weakened does not strengthening the precondition mean that the precondition was weakened even if no change was made the slides in lecture says that weakened preconditions means that the function needs less to operate so adding different preconditions will violate this how about not changing anything
  label = exam, content = will the answers to the practice final exams be released like how they were for the midterm exam
  label = calculator, content = when i try to assign front or frontprev to a different value i get an access violation whats the reason for this
  label = calculator, content = is there a way to access the first elements nexts previous pointer when i do popfront since this is a doubly linked list i have to set that to a null value since im deleting what it originally pointed to
  label = calculator, content = i get a long list of these errors that dont really make sense i think it compiled fine yesterday when i tried and i didnt change anything my command line is on the bottom
  label = calculator, content = i was using the function atoi along with the string function cstr to convert the users input to integers for rationals to push onto the stack however i noticed that the specs said that we arent allowed to use cstrings except when dealing with command line arguments is it allowed to use atoi and stringcstr to convert a c string to an int if this is not allowed is there another way to do it i have looked around and cant find any other way to do it
  label = calculator, content = when i try to compile my rationalcpp file i get an error for every one of my overloaded operator functions saying that they can only take either zero or one argument but the way they were provided in the rationalh file take in two arguments
  label = calculator, content = i want to make a temp stack in my ifcount function what would i use to get the current stack to copy over into a temp stack would this work or is there another approach thanks
  label = exam, content = will the final be cumulative or just the last third of the material
  label = calculator, content = can you have an early return statement in a constructor
  label = calculator, content = hey didnt see it in the spec but is 0 considered a negative when in denominator for example should 10 print 10 all examples i saw in spec had the negative in the numerator when it involved zero
  label = calculator, content = if we were to used erase function to remove an element from the back of a list using an iterator that we make point to one past the end of the list we would have to first use the operator so that it is actually pointing to a valid element in the list before calling erase right thanks
  label = calculator, content = hi i tried looking for an answer for this already but i could not seem to find one if you call delete on a pointer will it delete the element the pointer is pointing to or the pointer itself in other words in order to delete an object that a pointer is pointing to is it necessary to dereference the pointer i have done this in my code and it seems to have compiled but i am not sure if it was right and i want to avoid a nasty bug thanks aliya
  label = calculator, content = listh20020 error type listintiterator does not provide a call operator this is the error message i am getting i am unsure of what is messed up in my code any ideas
  label = calculator, content = i tried to implement all member functions below in the form of template typename t bool listtempty const etc but there are some functions which i can only implement them in the class such as t front and t back so can i implement some functions below and some in the class would i lose points for that thanks in advance
  label = calculator, content = if there is only one object in a list should first and last point to the same object
  label = calculator, content = im failing autograder listtest00 and im not sure why is this a public test case
  label = calculator, content = do we have to check the following things 1 stack has at least 2 operands for operators like and 2 user input for numbers are valid what do we do if user inputs 5
  label = calculator, content = just to clarify the in list is checking to make sure the the contents of the two lists are the same right not that theyre pointing to the same list i also wrote my operator to make the contents the same not the addresses
  label = calculator, content = atoi returns 0 if the string is not an integer however it also returns 0 when the string is 0 how do you account for this
  label = exam, content = on the final exam will we be expected to assert to ensure representation invariants are being met or can we expect that the user will follow the requires clause also can a function only be overriden if it is virtual or can a non virtual function be overriden just some clarification on the overloadoverride distinction would be helpful thanks
  label = calculator, content = i copied the code from rationalh and pasted it into my rationalcpp file did include rationalh and scoped all of the functions accordingly yet i get an error saying use of undeclared identifier rational for every single public function does anyone have any idea what this error might be it
  label = calculator, content = usrbinvalgrind 5482 memcheck a memory error detector 5482 copyright c 20022013 and gnu gpld by julian seward et al 5482 using valgrind3100 and libvex rerun with h for copyright info 5482 command listteststarterexe 5482 passed testempty passed testsize passed testfront passed testpushback passed testpushfront passed testback passed testpopfront passed testpopback passed testcopyconstructor passed testassignmentoperator passed testoperatorequalequal passed testminusminusandplusplus passed testoperatornotequal passed testoperatorassignment passed testerase 5482 conditional jump or move depends on uninitialised values 5482 at 0x404176 listintinsertlistintiterator int const in homejuniusmueecs280project 5listteststarterexe 5482 by 0x402d2f testinsert in homejuniusmueecs280project 5listteststarterexe 5482 by 0x403e04 main in homejuniusmueecs280project 5listteststarterexe 5482 passed testinsert 5482 5482 heap summary 5482 in use at exit 0 bytes in 0 blocks 5482 total heap usage 105 allocs 105 frees 2520 bytes allocated 5482 5482 all heap blocks were freed no leaks are possible 5482 5482 for counts of detected and suppressed errors rerun with v 5482 use trackoriginsyes to see where uninitialised values come from 5482 error summary 1 errors from 1 contexts suppressed 1 from 1 valgrind error in test listteststarterexe out of 1 tests run 1 tests passed 0 tests failed 1 valgrind errors i dont know how to read this error can someone help me understand what it means thanks for the help
  label = calculator, content = in calctest00 our output matches exactly the correct given one and we are 99 sure that we followed the specs to determine where newlines are printed not in the print function but in the p and a commands any ideas why this is the case thanks
  label = calculator, content = i keep getting segmentation faults from listcompilecheck and ive deduced it down to pushfront but i dont know why its happening any idea why this might be happening other than the obvious possibility of accessing something out of bounds thanks in advance
  label = calculator, content = when taking in inputs through cin youre supposed to declare the data type of the members that youre inputting however we dont have a way to determine if the user will input a char or an int so how would you distinguish between say the command q and an integer 2
  label = calculator, content = how to add a list to a stack
  label = calculator, content = when i try to compile listcompilecheck i seem to get this error however i still passed the compilecheck test on the autograder what is the reason for the error
  label = calculator, content = for erase function the requirement clause is requires i is a valid dereferenceable iterator associated with this list i was trying to use assertion like asserti but realized that if my i is pointing to an element 0 it would make the assertion false which is not what i want to do is assertion necessary for this function if so how do i write differently from the one i wrote above
  label = calculator, content = when i run valgrind for a leak check what does suppressed mean for example when i run listcompilecheck i get this output it says suppressed 1 from 1 does this mean it suppressed a memory leak or
  label = calculator, content = the only variable that would need to be constructed is the list yet since list has its own constructor wouldnt we not need to create a default constructor for stack i see the necessity for copy and equals functions part of the big three in use but i do not see the relevancy of a constructor am i correct here
  label = calculator, content = when i run the lists compiler check i get an error that i have a double free i know the source of the problem and ive narrowed it down within listcompilecheck it seems that when it runs iter mylistbegin just before it calls erase for the first time it is somehow adding an addition node to my list that contains the datum 0 i have not changed begin whatsoever so i dont know how this is even possible ive been working on this for hours
  label = calculator, content = what is the difference between the functionality of copyall and operator in listh based on what i am currently thinking it would seem that these two do the exact same thing other than one being private and one public
  label = calculator, content = q1 does autograder test calc by fstream if so does it mean we need to enable both ifstream and cin in our calc q2 but when i declare an istream the compiler gives an error no default constructor exists for class std basicistreamchar stdcharchartraitschar what does it mean
  label = calculator, content = undefined symbols for architecture x8664 listintiteratoriteratorlistintnode referenced from listintbegin const in listtestconstructorso listintend const in listtestconstructorso listintiteratoroperator in listtestconstructorso ld symbols not found for architecture x8664 clang error linker command failed with exit code 1 use v to see invocation struggling to find the source of this error cant debug into it either i looked at the other piazza post but there wasnt a solution
  label = calculator, content = when i run make listtests valgrind tells me that i have 1 error in one of my test files however when i follow valgrinds instructions on how to see where this error is it tells me that there are no errors what is going on here
  label = calculator, content = i am trying to write my iterator class and i keep getting this error listh9725 error iso c forbids declaration of ‘operator’ with no type fpermissive t iterator operator along with the same error for each of the other operators i define is there something wrong in the declaration or is it something else
  label = calculator, content = i am confused why we still have memory leak after using destructor anyone has some ideas thanks
  label = calculator, content = to get my insertion operator to compile in stackh i made it a friend of the stack class im sure there must be another method but is this allowed
  label = calculator, content = can we write a helper function that returns nodeptr to access private members of the iterator class in the functions erase and insert
  label = calculator, content = when i run the public test it just halts and i get this error message when i ctrlc out of running what could this be
  label = calculator, content = am i supposed to test calccpp by typing calccpp calctest00in calctest00out
  label = calculator, content = how do you call the correct empty function in stackh i am getting infinite recursion when trying to use the list empty because it is calling the stack empty instead
  label = calculator, content = to implement match i declared a predicate that takes a rational parameter so i can check both its numerator and denominator but autograder gives me following compilation error how is it possible to compare two integers when predicate only takes an integer i cant use comparator here because stackh clearly declares countif to take a predicate any help would be appreciated in file included from stacktestpubliccpp10 stackh in instantiation of int stacktcountifpredicate const with predicate bool int t int stacktestpubliccpp563 required from here stackh18712 error statement has no effect werrorunusedvalue for iter1 iter1 iter2 iter1 cc1plus all warnings being treated as errors
  label = calculator, content = project05130990x100082000 malloc error for object 0x1002000a0 pointer being freed was not allocated set a breakpoint in mallocerrorbreak to debug i tried setting the mallocerrorbreak in my breakpoints on xcode but it doesnt do anything how can i fix this it happens in my stack public tests at the very end when its supposed to return 0 aka all the asserts pass
  label = calculator, content = when i step through the main it throws an access violation exception at the final return 0 in the main it drags me to the operator part of my iterator implementation what does this mean i can step through the whole code until this return in the main
  label = calculator, content = in this scenario help has been set equal to otherfirst or the first element of a list id like to copy why may this end up uninitialized i understand that help may 0 and not have a next element but this statement itself is in a while loop that requires that help is not 0 so if temp is declared it must be initialized
  label = calculator, content = this function should be returning a iterator to one past the end aka node pointer is a null pointer how do we assert that what this function returns a iterator that has a null pointer we cant access nodeptr because it is private and we cant deference anything because the pointer is null
  label = calculator, content = in the list tests if listh is not implemented correctly like what our test cases are supposed to catch there are many scenarios where the list tests may try to run a function from listh that ends up trying to dereference a null ptr which can crash the program if the program crashes in this way does that count as our test catching athe bug if not will the buggy code fed to our tests check the requires clauses of functions with an assert statement
  label = calculator, content = so 2infinity infinity 10 but does 2 infinity infinity 10 or does 2 infinity infinity 10
  label = calculator, content = is the stack size just the size of the list that the stack contains
  label = calculator, content = do we consider the case where we have say iterator it listend listinsertit 5 where this is valid and we consider this it iterator to point to past the end
  label = calculator, content = since the user can input either an int or a char how do we know what type to read in
  label = calculator, content = when running make listcompilecheck all of listh compiles but i get a ton of errors in the main of listcompilecheckcpp all of them are related to declarations of any lists wherever one is declared the compiler states list was not declared in this scope however i included listh at the top any idea what the problem could be thanks
  label = calculator, content = error c3867 listintfront nonstandard syntax use to create a pointer to member error c2446 no conversion from int thiscall listint void to listintnode error c2040 listintnode differs in levels of indirection from int thiscall listint void does anybody have any insight into what these errors mean
  label = calculator, content = sorry maybe this has been brought up in class but i cant remember where exactly why do we want to return the iterator by reference in this case
  label = calculator, content = hi may be a silly question but for push front function the rmes say modifies this effects inserts datum into the front of the list does this mean we are changing that specific template or does it mean we are putting the datum in the position of front of the list and moving everything accordingly thank you
  label = calculator, content = once i insert a node into the list should the iterator point at the new node that was inserted in the list or the node that it was originally pointing to before the function was called thanks or the help
  label = calculator, content = i lost two points on the autograder for this error when testing for calccpp what could this possibly mean
  label = exam, content = were going to go over practice exam solutions this week ill attempt to explain the solutions for wn15 4 5 1 in order hoping to make it through all of them in time please come having attempted the questions beforehand to maximize your opportunity to learn those who dont regularly attend my discussion are of course welcome to come but should give priority seating to regulars pin
  label = calculator, content = i do not understand the meaning of this statement
  label = calculator, content = i am not really sure how to go about exiting the calculator program when a user types in q my first thought was exit0 but the spec said specifically not to do that i dont recall any lecture discussing this so i am not sure how to go about this
  label = calculator, content = whenever we run stackpublictests the program runs for about 30 seconds then says that the program was killed this happens in the public tests after calling the copy constructor we thought that this could be due to an infinite loop but there are no loops present in this portion of the code any ideas thank you
  label = calculator, content = what should happen when a rational number is initialized with 0 in the denominator like rational r5 0 or rational r0 0
  label = euchre, content = the autograder has marked me down on all the euchre tests and i believe its due to whitespace because it tested my euchrecpp with the correct solutions of the player pack and card classes and the code does everything properly and gives no errors via a diffcheck other than one endl i did this diff check with a friends class files as well same result not sure whether i have an extra one or whether im missing one how much weight does the autograder have in the grading for this project its extremely disparaging to see that 99 of your code works but you get 40 for not including an endl
  label = calculator, content = for example 1 2 should output 3 on the next line i am reading each input separated by whitespace using whilecin input however i would like to print output once i press the enter key how do i manage this or what other ways are there
  label = calculator, content = i wanted to create a helper function that took in two node ptr objects and compared them to see if theyre equal but i get errors saying object type bool is not a function or function pointer i thought maybe i could use the operator to do the same thing but i cant figure out how so whats the best way to do this
  label = calculator, content = when we call pred can we have two parameters i am trying to make a functor but need two parameters for the process i want to do in countif the spec says ifeven would work and it has only one parameter so i see this could be a problem
  label = calculator, content = when i run my code on maxos and create an output file called calctest00out using calctest00in diff function find no difference between calctest00out and calctest00correctout however if i rerun my code with linux diff function shows that all lines are different are there any ideas why this is happening its seems complete same including white spaces for me
  label = calculator, content = 2741 prof gave us you can only delete objects that have dynamic storage duration an object created on the stack has automatic storage duration not dynamic storage duration how should we delete the nodes created on heap do we have to worry about this issue am i worried about the right thing
  label = calculator, content = if you try to use erase to delete the first node you do not have access to the first pointer in list therefore the first pointer will be pointing to something that doesnt exist anymore are we just assuming that is okay obviously that is bad but are we just assuming you dont try to delete the first node so that the list doesnt break
  label = calculator, content = effects constructor for a rational number that is equivalent to numeratorindenominatorin remember to ensure the invariants rationalint numeratorin int denominatorin for this constructor to ensure the invariants do we assert that the invariants are true
  label = calculator, content = does infinity infinity infinity
  label = calculator, content = just wondering for pushfront function what do we need to set the value of prew of the first since first is the first element of the list do we set prew null pointer or we just ignore it
  label = calculator, content = is it safe to assume that there will always be a space between numbers and arithmetic commands should calccpp deal with 12 and 12 the same way thanks
  label = calculator, content = im trying to set first and last to values and it throws an exception saying exception thrown at 0x000328eb in project5exe 0xc0000005 access violation writing location 0x00000000 to be frank i have no clue what to do about this
  label = calculator, content = are we supposed to check the invariants in the rectangle constructor or in the getnumeratordenominator functions if we check them in the constructors then that would mean we wouldnt be using member initialization with the symbol like rectangle numeratorx denominatory and instead we would have to do all the initialization in the brackets so rectangle numerator x denominator y after we check the invariants is this fine i thought we only learned to use the member initialization form for constructors
  label = calculator, content = are we allowed to create our own functions in rationalcpp for example a greatest common factor function and a check invariants function
  label = calculator, content = do you know when the autograder will be ready i dont want to get caught up in the drama of submitting last minute
  label = calculator, content = is our calculator supposed to work for both input files and the standard input stream because we are given in files and the spec references exiting with a 0 value when we reach the end of a file but the spec also says that the calculator will be invoked with no arguments if there are no arguments how would we know the name of the file to read in from
  label = calculator, content = when declaring the prefix operator in listh i use the same syntax as in the lecture slides after they have been updated but i get a few compiler errors that werent present before when i was just using declaring it as iterator listh22615 error declaration of ‘ class t ’ template typename t listh1611 error shadows template parm ‘ class t ’ template typename t listh22764 error invalid use of dependent type ‘ typename listtiterator ’ typename listtiterator listtiteratoroperator ive tried a few different combinations of using template typename t and not using it only having one listtiterator and having both etc if someone could shed some light on what im doing wrong itd be a huge help thanks in advance
  label = calculator, content = for the two tests when i run in linux the last line is repeated twice even though it is fine in xcode or when i manually key in the value what has gone wrong
  label = calculator, content = i keep getting this error listh in instantiation of ‘listt listtoperatorconst listt with t int’ stackh187 required from here listh18916 error ‘copyall’ was not declared in this scope copyallother i believe its because im calling the overloaded assignment operator which is public in stack but the operator calls copyall which is private in so when i try to call the assignment operator in stack it cant access copyall im a little confused at how to fix this as it seems like copyall is supposed to be in the operator function
  label = calculator, content = i think we need to use popall for destructor of list and copyall for the copy constructor of list right and in their rme says that it modifies this i get confused where does this come from when we use them in the ctors and dtors
  label = calculator, content = i look over the lab this time there are big three as public interface of list but there are none in the iterator class i am confused when to use big three how do i know the big three needed to be added i wish to see a detailed and explicit explanation because it is an important concept thanks
  label = calculator, content = shouldnt it be friend class listt
  label = calculator, content = return an iterator pointing to past the end iterator end const what does past the end mean so if the list is 1 2 3 we should return 3
  label = calculator, content = when a stack object goes out of scope its list member goes out of scope as well so list cleans itself
  label = calculator, content = does 422 result in 10 or 10
  label = calculator, content = i dont understand the part that says invalid read of size 8 also it says i have 2 euros from 1 contexts so i ran it with v and this is what i got so it seems like its telling me the problem is in popall but what does it mean invalid read of size 8 thank you
  label = calculator, content = is there a better way to convert char to int as of now i am using the staticcast to convert the char read in into an int but it is producing odd numbers and i am pretty sure there is no problem with my rationalcpp
  label = calculator, content = working on visual studios getting a strange error opening animalstxt any idea what might be the problem all the files are saved in the same place
  label = calculator, content = should we be testing these will the buggy code that our test cases are run against have these
  label = calculator, content = in the test cases do we need to test the functions for the null pointer if so what do we do for dereferencing a null pointer
  label = calculator, content = i guess we should add them in private
  label = calculator, content = i just want to be clear if a invalid rational number like rational r3 2 is created our constructor should still run but inside the constructor we should modify r so that its numerator is 3 and denominator is 0
  label = calculator, content = whenever i try to compile my listh file i keep getting multiple errors that read like this listh4886 error ‘ bool listtiteratoroperatorlisttiterator const with t int ’ is private bool listtiteratoroperatoriterator rhs const for each my iterator functions are we not supposed to declare our iterator member functions in the private section of the iterator class because the given code to start with says to add any additional member variables here under the private section of the iterator class
  label = calculator, content = when implementing iterator operatoriterator rhsconst i receive this error nonconst lvalue reference to type listintiterator is not contexually convertible to bool this error pops up on my line of code that has return nodeptr rhsnodeptr i dont see whats wrong with it im basically mimicking the code that was given to us on lecture 21 slide 15
  label = calculator, content = invariant 1 says that a denominator must be greater than or equal to zero what should happen when a denominator is negative what is the result of rational r55 thanks
  label = calculator, content = i understand that we can write a destructor for list but this is only called when a list goes out of scope for example in my code i am trying to delete a pointer to a node in particular the private variable first however i am getting the following error im still kind of confused though im running listcompilecheckcpp and it was able to popfront resulting in one node left in the list so im getting this error during popback when there is one node in the list is this because there is no custom destructor for a single node
  label = calculator, content = i was wondering if we have two lists list1 and list2 that both have nodes in them ie size 0 then if i call the assignment operator like list1 list2 is list1 supposed to become a copy of list2 then i only saw examples in lecture slides where list1 was empty before the assignment operator was used but i wasnt sure if list1 had stuff in it if you were supposed to overwrite it or not
  label = calculator, content = i use visual studio 2015 if a class applies a template then whether i put its member function in the header file or a separate cpp file only as an experiment the compiler doesnt give me any error warning for example when a parenthesis is missing i know were provided with a compilation check cpp but i just want to make sure whether the situation i have is normal and is there any solution to get compilation error again thanks so much if anyone can help
  label = calculator, content = is listcompilecheckcpp meant to not work right out of the box there are 3 errors right after downloading and it wont compile bool b iter iter2 b iter iter2 cout iter endl
  label = calculator, content = after the function executes should the iterator still be valid for both of those functions i see in the rme that it says that it may invalidate other list iterators but im not sure if that means it will invalidate the one that is passed in if the iterator is still valid after the function executes what elements is it supposed to be pointing to ie after running erase it would point to the node after the deleted one
  label = calculator, content = in the spec for project 5 it mentions using brute force or the euclid method for finding the gcd of 2 integers are those the only methods allowed for finding the gcd or can we use other methods such as the binary method for finding the gcd of 2 integers
  label = calculator, content = can someone please help me make sense of this error message make stackmake stacktests python runmytestspy stack running stack tests starting test stacktestsupermegacocochocolateexe test not implemented test stacktestsupermegacocochocolateexe passed starting test stacktestpublicexe error in stacktestpublicexe double free or corruption fasttop 0x0000000002594030 backtrace lib64libcso60x7d0230x7f077c17e023 stacktestpublicexe0x400c20 lib64libcso6libcstartmain0xf50x7f077c122b15 stacktestpublicexe0x4009a9 memory map 0040000000402000 rxp 00000000 002b 1060569786 homerdkiblereecs280project5starterfilesstacktestpublicexe 0060100000602000 rp 00001000 002b 1060569786 homerdkiblereecs280project5starterfilesstacktestpublicexe 0060200000603000 rwp 00002000 002b 1060569786 homerdkiblereecs280project5starterfilesstacktestpublicexe 02594000025b5000 rwp 00000000 0000 0 heap 7f07780000007f0778021000 rwp 00000000 0000 0 7f07780210007f077c000000 p 00000000 0000 0 7f077c1010007f077c2b7000 rxp 00000000 fd01 524872 usrlib64libc217so 7f077c2b70007f077c4b7000 p 001b6000 fd01 524872 usrlib64libc217so 7f077c4b70007f077c4bb000 rp 001b6000 fd01 524872 usrlib64libc217so 7f077c4bb0007f077c4bd000 rwp 001ba000 fd01 524872 usrlib64libc217so 7f077c4bd0007f077c4c2000 rwp 00000000 0000 0 7f077c4c20007f077c4d7000 rxp 00000000 fd01 540413 usrlib64libgccs48520150702so1 7f077c4d70007f077c6d6000 p 00015000 fd01 540413 usrlib64libgccs48520150702so1 7f077c6d60007f077c6d7000 rp 00014000 fd01 540413 usrlib64libgccs48520150702so1 7f077c6d70007f077c6d8000 rwp 00015000 fd01 540413 usrlib64libgccs48520150702so1 7f077c6d80007f077c7d9000 rxp 00000000 fd01 539307 usrlib64libm217so 7f077c7d90007f077c9d8000 p 00101000 fd01 539307 usrlib64libm217so 7f077c9d80007f077c9d9000 rp 00100000 fd01 539307 usrlib64libm217so 7f077c9d90007f077c9da000 rwp 00101000 fd01 539307 usrlib64libm217so 7f077c9da0007f077cac3000 rxp 00000000 fd01 524921 usrlib64libstdcso6019 7f077cac30007f077ccc3000 p 000e9000 fd01 524921 usrlib64libstdcso6019 7f077ccc30007f077cccc000 rp 000e9000 fd01 524921 usrlib64libstdcso6019 7f077cccc0007f077ccce000 rwp 000f2000 fd01 524921 usrlib64libstdcso6019 7f077ccce0007f077cce3000 rwp 00000000 0000 0 7f077cce30007f077cd04000 rxp 00000000 fd01 527413 usrlib64ld217so 7f077ced80007f077cedd000 rwp 00000000 0000 0 7f077cf010007f077cf04000 rwp 00000000 0000 0 7f077cf040007f077cf05000 rp 00021000 fd01 527413 usrlib64ld217so 7f077cf050007f077cf06000 rwp 00022000 fd01 527413 usrlib64ld217so 7f077cf060007f077cf07000 rwp 00000000 0000 0 7ffc1ce6e0007ffc1ce8f000 rwp 00000000 0000 0 stack 7ffc1cee50007ffc1cee7000 rxp 00000000 0000 0 vdso ffffffffff600000ffffffffff601000 rxp 00000000 0000 0 vsyscall test stacktestpublicexe failed usrbinvalgrind 8463 memcheck a memory error detector 8463 copyright c 20022013 and gnu gpld by julian seward et al 8463 using valgrind3100 and libvex rerun with h for copyright info 8463 command stacktestsupermegacocochocolateexe 8463 test not implemented 8463 8463 heap summary 8463 in use at exit 0 bytes in 0 blocks 8463 total heap usage 16 allocs 16 frees 384 bytes allocated 8463 8463 all heap blocks were freed no leaks are possible 8463 8463 for counts of detected and suppressed errors rerun with v 8463 error summary 0 errors from 0 contexts suppressed 1 from 1 8464 memcheck a memory error detector 8464 copyright c 20022013 and gnu gpld by julian seward et al 8464 using valgrind3100 and libvex rerun with h for copyright info 8464 command stacktestpublicexe 8464 8464 invalid read of size 8 8464 at 0x400be8 main in homerdkiblereecs280project5starterfilesstacktestpublicexe 8464 address 0x5a170a8 is 8 bytes inside a block of size 24 freed 8464 at 0x4c2b131 operator deletevoid in usrlib64valgrindvgpreloadmemcheckamd64linuxso 8464 by 0x400bd4 main in homerdkiblereecs280project5starterfilesstacktestpublicexe 8464 8464 invalid read of size 8 8464 at 0x400bf1 main in homerdkiblereecs280project5starterfilesstacktestpublicexe 8464 address 0x5a170a0 is 0 bytes inside a block of size 24 freed 8464 at 0x4c2b131 operator deletevoid in usrlib64valgrindvgpreloadmemcheckamd64linuxso 8464 by 0x400bd4 main in homerdkiblereecs280project5starterfilesstacktestpublicexe 8464 8464 invalid read of size 8 8464 at 0x400c00 main in homerdkiblereecs280project5starterfilesstacktestpublicexe 8464 address 0x5a170a0 is 0 bytes inside a block of size 24 freed 8464 at 0x4c2b131 operator deletevoid in usrlib64valgrindvgpreloadmemcheckamd64linuxso 8464 by 0x400bd4 main in homerdkiblereecs280project5starterfilesstacktestpublicexe 8464 8464 invalid read of size 8 8464 at 0x400c08 main in homerdkiblereecs280project5starterfilesstacktestpublicexe 8464 address 0x5a170a8 is 8 bytes inside a block of size 24 freed 8464 at 0x4c2b131 operator deletevoid in usrlib64valgrindvgpreloadmemcheckamd64linuxso 8464 by 0x400bd4 main in homerdkiblereecs280project5starterfilesstacktestpublicexe 8464 8464 invalid free delete delete realloc 8464 at 0x4c2b131 operator deletevoid in usrlib64valgrindvgpreloadmemcheckamd64linuxso 8464 by 0x400c1f main in homerdkiblereecs280project5starterfilesstacktestpublicexe 8464 address 0x5a170a0 is 0 bytes inside a block of size 24 freed 8464 at 0x4c2b131 operator deletevoid in usrlib64valgrindvgpreloadmemcheckamd64linuxso 8464 by 0x400bd4 main in homerdkiblereecs280project5starterfilesstacktestpublicexe 8464 8464 8464 heap summary 8464 in use at exit 24 bytes in 1 blocks 8464 total heap usage 2 allocs 2 frees 48 bytes allocated 8464 8464 24 bytes in 1 blocks are definitely lost in loss record 1 of 1 8464 at 0x4c2a105 operator newunsigned long in usrlib64valgrindvgpreloadmemcheckamd64linuxso 8464 by 0x400aca main in homerdkiblereecs280project5starterfilesstacktestpublicexe 8464 8464 leak summary 8464 definitely lost 24 bytes in 1 blocks 8464 indirectly lost 0 bytes in 0 blocks 8464 possibly lost 0 bytes in 0 blocks 8464 still reachable 0 bytes in 0 blocks 8464 suppressed 0 bytes in 0 blocks 8464 8464 for counts of detected and suppressed errors rerun with v 8464 error summary 6 errors from 6 contexts suppressed 1 from 1 valgrind error in test stacktestpublicexe out of 2 tests run 1 tests passed 1 tests failed 1 valgrind errors sorry about this huge block of text but im completely lost thanks for the help
  label = calculator, content = does the list constructor need to initialize the node thats inside list thanks
  label = calculator, content = hi in the last line of listcompilecheck the iterator iter is decremented i know that my previous code results in iter pointing to the second element of mylist by changing what was pushedback in mylist and then outputting iter but for some reason when iter is decremented a seg fault occurs any ideas on why this is happening thanks
  label = calculator, content = when i return by reference i want my variable to not go out of scope is there anyway to do this in stack without making a dynamic type
  label = calculator, content = in this countif function i used while iter but when iterator points to the end it gets into operator function and makes an error so i tried to use just while iter and compiler said listtiterator is illegal can anyone tell me why and how to solve this
  label = calculator, content = in the calculator if we print the stack from top to bottom am i right in saying that the rationals will be printed in the reverse order that they were created and if so isnt that confusing to the user ex if i type in 4 3 i get 43 but if i type in 4 3 a then i get 3 4 so i may suspect from calling a that when i use i will get 34
  label = calculator, content = when running listcompilecheck i get a double free error in listcompilecheck double free or corruption fasttop 0x000000000253e030 backtrace lib64libcso60x7d0230x7f8a89d84023 listcompilecheck0x4010f5 listcompilecheck0x400de7 lib64libcso6libcstartmain0xf50x7f8a89d28b15 listcompilecheck0x400af9 followed by a lengthy memory map i used a the idea proposed in the slides making a node victim changing the first or last then delete victim this works for popfront but the same idea gives this error in popback ideas thanks
  label = calculator, content = hi quick question the autograder doesnt test each individual overloaded functionoperator with its own implementation of a rational object right it uses ours that is defined in our cpp file correct i just want to make sure because im doing the majority of the simplification work in my rational constructor thanks
  label = calculator, content = when i try to compile my code i get the following error error prototype for ‘int stacktcountifpredicate const’ does not match any in class ‘stackt’ int stacktcountifpredicate pred const my code is below i am not sure if i am misunderstanding how to write the implementation for this function is there something i am missing template typename ttypename predicate int stacktcountifpredicate pred const
  label = calculator, content = if t is an int then this function will return an int value correct or does it return an address
  label = calculator, content = can we add member functions below endif or have to add them between the comment and endif
  label = calculator, content = i have finished implementing most of the list functions and i wrote some test functions for them everytime i try to complie i get this error in function main listtest1cpptext0x5 undefined reference to testempty listtest1cpptext0xa undefined reference to testsize listtest1cpptext0xf undefined reference to testfront listtest1cpptext0x14 undefined reference to testback collect2 error ld returned 1 exit status make listtest1exe error 1
  label = calculator, content = lastnext ptr how could this line of code be bad access ptr is pointing to a node on the heap and im giving the address of the node to the node pointer called next i dont see what im doing wrong
  label = calculator, content = i have finished implementing empty front back pushback pushfront and i wrote some test function for them everytime i try to complie i get this error undefined symbols for architecture x8664 listintpopback referenced from testempty in listteststartero testsize in listteststartero testpopback in listteststartero listintpopfront referenced from testempty in listteststartero testsize in listteststartero testpopfront in listteststartero listintsize const referenced from testsize in listteststartero ld symbols not found for architecture x8664 clang error linker command failed with exit code 1 use v to see invocation does anyone know how to resolve this issue thanks for the help
  label = calculator, content = in calccpp how do you know what input file to read in in my calccpp i have a ifstream that reads in the file that is inputted however how does the program know what file to take in is the input file typed into the terminal and then the program must read in the input file
  label = calculator, content = the rme for copyall says to copy the data from the input list to this list should we just add this other lists data to the end of our list or overwrite our current list
  label = calculator, content = i added in a private member variable to the list class to keep track of the size is this allowed i know in the specs it said not to modify the public interface but it didnt say anything about the private interface were allowed to add private member functions so i assume we can add private member variables
  label = calculator, content = intuitively operator should be able to move back from past the end of the list with an iterator given by end but the code we were provided with will fail if nodeptr is null and i cant find anything about it in the spec am i missing something or are we just not supposed to ever bring an iterator back from beyond the edge of the list
  label = calculator, content = in the leak summary for stacktests 168 bytes in 7 blocks are coming up as still reachable nothing is lost would this be okay
  label = calculator, content = i just spotted a leak in my code but valgrind did not give any error is this possible or am ibdoing a double free
  label = calculator, content = im getting an error in the listh file thats saying this and im not quite sure what to do since its what im given
  label = calculator, content = in the listcompilecheck there is a line that says cout iter endl this line seems to want me to write an extraction overload for the node struct however i cannot figure out where to do this or how to properly access the private node member of the class
  label = calculator, content = for the countif function there is only one parameter for template can i just put one more parameter like templatetypename t typename predicate or how can i implement that function outside of the class and how can i declare iterator
  label = calculator, content = hello everyone my partner and i are getting a fairly strange error trying to compile list we have looked through our code and cannot locate the source of the problem g prints out the following error tmpcchyjusxolistcompilecheckcpptext0x91 undefined reference to listintcopyalllistint const tmpcchyjusxolistcompilecheckcpptext0x91 relocation truncated to fit rx8664pc32 against undefined symbol listintcopyalllistint const tmpcchyjusxolistcompilecheckcpptext0xab undefined reference to listintcopyalllistint const tmpcchyjusxolistcompilecheckcpptext0xab relocation truncated to fit rx8664pc32 against undefined symbol listintcopyalllistint const does anyone have any ideas what this means there doesnt even seem to be a line number associated with it
  label = calculator, content = if for example in stackh you want to iterate through the list created by the stack would we be allowed to just openly create iterators given that we have include listh stated at the top
  label = calculator, content = why is this already implemented in the starter code are we allowed to modify it to our needs
  label = calculator, content = can i make list a friend of stack
  label = calculator, content = do we need to test the private functions in listh for instance would we need to test the private constructor for iterator
  label = calculator, content = should we write the implementations of public member functions of iterator inside the class or below like the public member functions of list
  label = calculator, content = hey yall for iterator begin i was trying to do something like return iteratorthisfirst thus calling the private iterator constructor but then this happens g wall werror pedantic stdc11 o1 listcompilecheckcpp o listcompilecheck in file included from listcompilecheckcpp10 listh in function ‘int main’ listh16632 error ‘mylistlistintfirst’ is used uninitialized in this function werroruninitialized return iteratorthisfirst listcompilecheckcpp1315 note ‘mylist’ was declared here listint mylist cc1plus all warnings being treated as errors make listcompilecheck error 1 any ideas thanks
  label = calculator, content = can we use a helper function in rationalcpp
  label = calculator, content = im trying to use bool operatorconst iterator lhs const iterator rhs but it says the operator has too many parameters i have it defined inside the iterator class
  label = exam, content = review 4 is up tues 412 730p 1571 ggbl pin
  label = calculator, content = what should the greatest common denominator function when the denominator is 0 for example simplify24 would return 2 what would simplify40 or 20 return
  label = calculator, content = in the list class what is the prev node of the first node in the list 0
  label = calculator, content = what is the difference between the two keywords
  label = calculator, content = are there any way to distinguish char and int in the standard input of calccpp i can just use atoi fuction but in this way i feel like i have to define dynamic char with nonfixed size as we have no idea how long input integer will besuch as 1000000
  label = calculator, content = is it possible to delete through an iterator i think you would get a compiler error as the overloaded operator isnt actually a pointer but i just want to make sure
  label = calculator, content = where exactly would we place the g flag in our compile command i am trying to get valgrind to show the line number for locations with memory leaks for my tests for list
  label = calculator, content = i understand that the user of the list class should be able to delete a list i have implemented a destructor for list as well as the other two of the big three however after ive created a list in main and done some list manipulation using the public interface when i try to delete the list using delete list1 i get a cannot delete expression of type listint
  label = calculator, content = are we allowed to use pushback and pushfront in our insert function for the iterators
  label = calculator, content = the title says it
  label = calculator, content = how would we insert an element at the end of a list using the insert function wouldnt the iterator set to be at end be pointing to one past the end or outside the list
  label = calculator, content = if we point an iterator to the first element in a list then insert an additional element at the beginning of said list for the iterator to be pointing to the new first element we would have to reassign it with begin right
  label = calculator, content = should we consider a list is empty if both first and last are 0 it seems like the outcome of the code depends on this if i look at codes in lectures and labs checking only one of them as 0 and both of them as 0 will change the outcome this would happen because sometimes only first is assigned to 0 and then empty is called
  label = calculator, content = can we use insert in an empty list if we can we cannot do anything to the iteratorie after the insertion right
  label = calculator, content = should the rational 01 be printed out as 0 or as 01
  label = calculator, content = i was just wondering if there was a reason that using namespace std was not included in the starter file for the test cases already
  label = calculator, content = we shouldnt be using the insert function to insert elements at the beginning and end of a list right because pushfront and pushback should be taking care of that right
  label = calculator, content = if were trying to implement member functions of a class outside of a function that uses a template do we have to initialize a template before every implementation of each member function
  label = calculator, content = in my code i am doing declarations in the class and implementing my code at the bottom of listh i have declared the prefix operator but when i try to implement it i get this error im not sure why i get this since my implementation is almost exactly the same as in the slide decks is there something im missing
  label = calculator, content = effects clause for insert effects inserts datum before the element at the specified position does this mean that the datum at the specified node is overwritten with a new value or a new node containing datum is inserted in the specified list index sorry if this is a dumb question thanks
  label = calculator, content = ive read over the specs and understand what must be implemented in stack but am still confused on the overall idea of stack is stack supposed to just hold a list and add items to that list how is stack different from list
  label = calculator, content = should our calculator be able to handle 3 3 3 as 3 3 3 or would it always be typed in as a 3 3 3 if three numbers or more can be typed in a row then would this also be the case for 2 3 4 would it be 23 4
  label = calculator, content = i am confused on how to handle iterators in listh i understand that deleting a node could cause an iterator to become invalidated especially when there is only 1 node that being said the popback and popfront functions dont have any way of knowing about an iterator right so how can we protect against a list growing or shrinking by those function and invalidating the iterator say you have a list datlisttho list node 1 node 2 node 3 node 4 and an iterator i pointing at node 4 datlistthopopback list node 1 node 2 node 3 now the iterator is hanging in lala land how can we protect against that
  label = calculator, content = after we insert the object should we point the iterator is node pointer to the new node or leave the iterator as it is
  label = calculator, content = i know list comes with a decrement operator which we are told not to modify and we are told it will be used for testing can we also use it for our own tests
  label = calculator, content = for the overloaded operator functions we write what do we do if we are taking the invariant cases in the operations for example what should the output of the following be 10 23 10 23 00 23 10 23 10 23 00 23 10 23 10 23 00 23 10 23 10 23 00 23
  label = calculator, content = how can we get accessed to the iterator in stackh i wrote the implementation inside the function and used expression like forlistt iterator it it returns the error message something related to type specification
  label = calculator, content = in rationalrationalint numeratorin int denominatorin constructor are we supposed to create a rational number so it follows the invariants within the constructor or just initialize it with given values and fix it when another function is called on the number like getnumerator
  label = calculator, content = does the top of the stack correspond to the front or back of its list
  label = calculator, content = i think i understand what the appropriate jobs of the copy constructor and overloaded are but im having trouble thinking about the context where each would be called in project five if i did this listint newlist listintoldlist which of the two or both would need to be called i dont think both would be necessary because each would ensure that resources are not being shared thansk
  label = calculator, content = in my test case after i made two lists and copied data from original to copy one using assignments operator it seems like im experiencing doublefree it is due to the list destructor works for each lists separately how i can avoid this
  label = calculator, content = when we test insert im confused what exactly do we pass in for the iterator i parameter i understand we have to insert something before whever i is pointing to but how can we create a value for i
  label = calculator, content = for this function should we be considering the case where the list has only has one element to do something different from the case where the list has more than one element im wondering why it wasnt covered in lecture then for the single linked list
  label = calculator, content = just to clarify i dont see it specified in the specs multiplying anything by an undefined number 00 yields an undefined number
  label = calculator, content = i am trying to overload the operator and for some reason i am getting the following error message i used the example in the lecture slide but am still unable to get it any advice on how to fix this thanks
  label = calculator, content = my asserts are using nullptr instead of 0 would checking if firstlast isnt nullptr be sufficient to check that the list isnt empty
  label = calculator, content = are we allowed to use this operator in our implementations for list functions
  label = calculator, content = do you mean copies all nodes from other to this
  label = calculator, content = whats up with this default iterator constructor what is it default set to and why is there a call to a constructor in the private section of iterator thanks
  label = calculator, content = if our test cases cause buggy code to timeout how is that graded
  label = calculator, content = can operator in list be written as a member or must it be nonmember
  label = calculator, content = i am having some issues in my insert and erase functions and would like to see what my code is doing is there a way i can cout stuff in listh because it tells me cout was not declared
  label = calculator, content = i know we are not allowed change the public interface of list but are we allowed to add default constructor for list to set first and last 0 otherwise when we make test cases for empty for example memory junk breaks the assert
  label = calculator, content = for copyall should we just be adding the elements from other to the end of this
  label = calculator, content = if we add our implementations of the member functions in the class do we still need function declarations
  label = calculator, content = if we either use pushback or pushfront on an empty list will the new element be both the first and last element of the list thus both pointers pointing to the same element thanks
  label = calculator, content = do we need to separately test rational or is the public test sufficient i only ask because it seems pretty in depth
  label = calculator, content = im super confused on erase and insert how can we fix the prev and next as long as we have no wayjust using operator overloading etc get accessed to prev of nodeptr and next from the iterator im struggling with fixing prev or next of previous and next term in erase and insert function thanks
  label = calculator, content = i think i understand the implimentation of the destructor however i am confused on the parameter being passed into the decructor on the bottom of the lecture 19 slides i dont know why it is in their and if i run it with a parameter the complier doesnt like it and when we run it without the parameter it still doesnt work and all we do is call popall is my implimentation wrong or should i have a parameter in the deconstructor if i do need that can someone explain why
  label = calculator, content = is an iterator considered invalidated if it points to the first element of a linked list and then we add a new node to the front of the linked list thanks
  label = calculator, content = in the erase function in list is it also expected to adjust the next and previous pointers of the next and previous elements or just delete the element ie in popfront do i want to implement the pointer switching there or using if statements in erase
  label = calculator, content = do we need to test iterator functions does this consider breaking list interface thanks
  label = calculator, content = template typename t typename listtiterator listtiteratoroperator i have to do like above to not get any compile errors is this the right method
  label = calculator, content = there are a couple edge cases i am not sure what will be expected in the autograder for list 1 for pushfront what should it do if there is zero elements in the list 2for pushback what should it do if there is zero elements should one assign the datum to first and one to last or should they both put the new node as the first element in the list
  label = exam, content = this message contains details for the eecs 280 final 0 coverage the midterm will cover the following lectures 12 and on labs 07 and on projects 3 4 5 1 time and location same as earlier announcement time thursday april 21st from 1030 am not michigan time to 1230pm 120 min please note that this exam will start at 1030am sharp location by uniqname below all the exam rooms are filled so please go to your assigned room if we discover that you took your midterm in a room that you are not assigned to we reserve the right to automatically give you a zero on your final room first uniqname last uniqname dow1005 aaart altsmith dow1006 amaarahj astoits dow1010 asudarsh camron dow1013 catieo ellerysw dow1014 ellish haodizc dow1017 haoliang jbpruitt dow1018 jbsteinb jnowl eecs1500 jnpete krkunkel eecs1200 ksanjay lucacace eecs1303 lvalkevi miravs eecs1003 mitay nfidel eecs1005 nfinelli otchiu stamps palisha zyuanzhe we understand that some of these rooms are very obscure on north campus so please find your room before the day of the exam if you have any trouble finding a building here is a link to an interactive map of campus link httpcampusinfoumicheducampusmap 2 exam policies the exam will be closed book and closed notes except for one sheet of 85 x 11 paper handwritten with anything you’d like written on it both sides do not bring a blue book no calculators will be necessary thus no electronics of any kind are permitted the exam will be given under the engineering honor code 3 study materials there are 3 previous finals you may use as practice exams we will provide solutions to these finals but encourage students with any questions or would like to verify your answers to stop by at office hours or attend vidal’s review on saturday look on calendar for more information we also encourage you to discuss material with friends or on piazza forums 4 alternate and extended time exams emails for students taking alternate and extended time exams have already been sent if you feel you should have received said email but have not please email us eecs280examsumichedu asap happy studying north campus map httpscampusinfoumichedufilescampusinfonorthcampusmappdf eecs 280 staff pin
  label = calculator, content = i am getting this error but i dont even call the operator in any of my code yet can i not assert that the ptr is valid in my definition of the operator
  label = calculator, content = what should happen if the insert function were called on a dereferenceable iterator for example if insert were called on an iterator one place in memory past the end of a list or one place in memory before the start of a list should we put a new node at the end of the list and put a new node at the beginning of the list respectively i am confused about what to do when the iterator i does not have a node pointer pointing at a valid node thanks in advance
  label = exam, content = if weve filled out the final exam conflicts form when do we expect to find out if our exam time is moved and what the new time is
  label = calculator, content = so i am confused how we are supposed to implement our iterator functions i have iterator listtiteratorend const my code here and the compiler is telling me that iterator does not name a type not sure what i am doing wrong the declaration for these functions is left in the class and the implementation is done outside of the class
  label = calculator, content = i just wanted to make sure im getting this right so if i make a rational number r1 with 010 it goes to 01 rational number r2 59 goes to 59 then r2r1 would go to 10 correct or would it go to 10 if you were thinking of it like 105 90
  label = calculator, content = when i type in the command valgrind toolmemcheck leakcheckyes listtestbasicexe i get this message valgrind listtestbasicexe command not found what am i doing wrong i do have listtestbasiccpp and listtestbasicexe files this happens for all my files too not just this specific example how do i run valgrind correctly
  label = calculator, content = so in the spec and the rmes it talks about doing operator overloads for the list class and for the iterator class however per the lecture slides and in the project it seems like i frequently find myself using operators for nodes which i have no overloads written for them such as assignment and comparison should wecan we write operator overloads for these node operators
  label = calculator, content = im sure i am doing something wrong but i cannot figure out what i have become frustrated with various bugs in my listh file so i decided temporarily to reduce the code complexity to just implementing the default constructor because i couldnt figure out how to get the code to call the default constructor or at least print out the text message that i placed inside the curly braces of that default constructor however after taking out 98 of the implementation and recompiling my test program the compiler still finds implementations somehow of all of the old functions despite them not existing any more beyond declarations of functions for example valgrind states i have a have an invalid read of size four from a function that isnt implemented in listh what am i doing wrong what is g actually compiling and working with if it isnt listh
  label = exam, content = is there going to be one of those 12 hour review sessions for the final exam vedal and co were really helpful in the one for the midterm so wondering if theyre gonna do it again
  label = calculator, content = hello this one is more geared towards a prof or gsi in this list rmes for erase and insert it is stated that i is a valid dereferenceable iterator associated with this list in listcompilecheckcpp on line 28 list2 to set equal to mylist which is an empty list since two elements were pushed in and two were popped out on line 30 and iterator named iter is created to be pointing at the beginning of mylist however since mylist is empty the pointer is null please correct me if i am wrong but it seems as if listcompilecheck is violating the rmes which are given this is causing me to fail listcompilecheckcpp becuase my asserts in insert and erase are being thrown due to this null iterator ps i pass my own thorough list tests
  label = calculator, content = are we not allowed to write implementations directly underneath the public member functions of the class we were told to write implementations in h files but i am not sure where else i would write them if not what does it mean by not changing the public interface what is okay and what is not
  label = calculator, content = can we use try and catch statements in the driver
  label = calculator, content = when listinserts rme states that requires i is a valid iterator associated with this list does this mean i can point to one past the end of the list so that we can insert an object to be at the end of the list
  label = calculator, content = has anyone had any luck installing and using valgrind locally or does anyone have any advice i run cygwin on windows and cant figure out how to begin the installation
  label = calculator, content = hello im confused as to why im getting a undefined reference to operator error whenever one of the overloaded operators are called in my rational tests i have the overloaded operators defined in rationalcpp exactly how they appear in rationalh for example rational operatorrational lhs const rational rhs any help is appreciated thanks
  label = calculator, content = quick question regarding the implementation of list size should we use iterators to determine the size of our list and if so do i have to position my implementation of list size below the declaration of the iterator in the list class so no compile errors thanks
  label = exam, content = will lecturesguest presentations be recorded tomorrow
  label = calculator, content = currently my program seems to be segfaulting as soon as a pushback is called as it wont print a string of text which is the first line found in the function the declaration line of code is copied below template void listpushbackconst t datum why would a function such as this segfault before any internal code can execute
  label = calculator, content = for stack why do print and the overloaded operator have the same rme i would think that the overloaded operator should only print out one element modifies os effects prints all the elements of the stack to os starting from the top element each element printed is followed by a space including the last element do not print a newline if the stack is empty print nothing returns os
  label = calculator, content = just to confirm is this supposed to perform a deep copy
  label = calculator, content = i use several static helper functions in the driver and im getting this error error a blockscope function may only have extern storage class any ideas on whywhat this means i googled it but the results were unsatisfying
  label = calculator, content = im a bit confused by how the arguments are passed into the calculator for the tests they are not given as argv arguments so how do we read them
  label = calculator, content = for functions in stackh how can we access the data in the list since nodeptr is a private member variable of the iterator class
  label = calculator, content = the input files for testing calccpp do not have q at the last line so if i do calc calctest01out calctest01in it goes into infinite loop should we test it by putting q at the end of in file
  label = calculator, content = since this is a template should our tests work for arbitrary types t or should we just make a version using say ints and test with that
  label = calculator, content = do we necessarily have to assert that the invariants are met when implementing rationalcpp for example invariant 1 is that the denominator must always be 0 and the numerator must be positive now if i merely asserted that statement in the constructor input such as rational 10 3 would fail even though that input should be modified to be appear as rational 10 3 so instead of asserting these statements i created functions that look for situations described in the invariants and modify the values if they are found to violate a condition is this method allowed
  label = calculator, content = are we allowed to overload postfix decrement and increment operators as well as the operator if so how does postfix operator overloading differ from prefix
  label = calculator, content = when we are writing the cpp component below the interface for listh do we include template typename t before each member function definition in the lecture slide the example included it before both the interface and the implementation of a max function but only one function was used
  label = euchre, content = approximately when can we get our final grade for project4
  label = euchre, content = do we have to do code review for project 4 where can we find the sheet if we do have one
  label = calculator, content = hello i see that we are allowed to add the big three being the destructor copy constructor and overloaded assignment operator to the public interface of stackh i am in the belief that this is needed but also that we need to implement a custom default constructor my reason being is that i implemented the big three default constructor and have good results with make stacktests with all tests passed and no valgrind errors when i comment out the default constructor my stack does not even compile so is adding the big three default constructor allowed thank you
  label = calculator, content = for listh since the destructor is a public function do we need to test it if so how
  label = calculator, content = hello i am getting the following error message when i run my list tests 29599 conditional jump or move depends on uninitialised valuess 29599 at 0x401a02 listintcopyalllistint const in despite these errors valgrind informs me that there are no memory leaks which is good ive gathered that in my copyall fxn i must be doing something based on uninitialized values however i am not finding any instance of me doing so as all i do is preform operations on this and other to make this the same as other any help appreciated thanks
  label = calculator, content = i am unsure why my compiler is giving me an issue as a part of a function i am trying to return a datum held at a pointer by writing ptrdatum where the ptr is a ptr to a node allocated in dynamic memory however after doing this i receive the following error error invalid initialization of reference of type int from expression of type listnode i do not understand this as ptrdatum should be of the type of datum rather than the node itself unless i am mistaken can someone please explain what i am misunderstanding
  label = calculator, content = can we add functions to listh which support the iterator eg iterator listtbegin it is not specified in the h file for list but we are modifying that file also this is the strategy presented in lecture so can we use it here
  label = euchre, content = i ran all of my test cases through with the new makefile i worked out all of the error messages that were missed before however even though i passed tests on caen they still failed on the autograder
  label = calculator, content = refer to this post with faqs related to project 5
  label = calculator, content = i ran the makefile is this is the error i get my rationalcpp compiles fine on its own and i didnt alter the structure of the public file in any way what is causing this error
  label = euchre, content = i tried to submit my files today to the autograder and i got an error saying i needed to contact my administrator i submitted the files again and when it was being graded a second time i got the same error again i have tried submitting my files for a third time and its currently queued what should i do
  label = calculator, content = can we include anything in rationalcpp besides rationalh
  label = calculator, content = is there any reason why input iterator i is not const for void insertiterator i const t datum function
  label = calculator, content = in the specs it says to not change the public interface of the list class for the begin and end functions in the iterator class can we still add a friend declaration to the iterator class so that list can access private members of iterator or is that changing the public interface
  label = calculator, content = in listh we have the following two pointers node first last with the description points to firstlast node in list or 0 if list is empty so we have that empty list implies first last 0 but do we know that first last 0 implies empty list without this knowledge we cannot determine if a list is empty or not
  label = calculator, content = i defined a function checkinvariants inside the rational class and use it in all the rational member functions when i called the getnumerator function outside of the class scope im getting this error here this error message is different from when i attempt to use a member variablefunction outside of its scope so any idea what this may be
  label = calculator, content = i see we can do it for the iterator class but what about the list class
  label = euchre, content = so as you can see in the picture when we run playerpublictest using the command line g wall werror pedantic stdc11 playerpublictestcpp o playerpublictest we receive some errors about referencing operations in the card class any advice on how we may go about solving this issue without including the card class in player
  label = euchre, content = hello i am getting an error message when using the card initializer in packcpp when i did include cardh is there something im missing tmpcciompbeo in function checkpackpack packpublictestcpptext0x10f undefined reference to cardcardstdstring const stdstring const packpublictestcpptext0x11c undefined reference to operatorcard const card const packpublictestcpptext0x20b undefined reference to cardcardstdstring const stdstring const packpublictestcpptext0x218 undefined reference to operatorcard const card const packpublictestcpptext0x303 undefined reference to cardcardstdstring const stdstring const packpublictestcpptext0x313 undefined reference to operatorcard const card const tmpccmpxuh3o in function packpack packcpptext0xe7 undefined reference to cardcard packcpptext0x166 undefined reference to cardcardstdstring const stdstring const tmpccmpxuh3o in function packreadpackstdistream packcpptext0x2dd undefined reference to cardcardstdstring const stdstring const tmpccmpxuh3o in function packpackstdstring const packcpptext0x523 undefined reference to cardcard tmpccmpxuh3o in function packpackstdistream packcpptext0x800 undefined reference to cardcard tmpccmpxuh3o in function packshuffle packcpptext0x949 undefined reference to cardcard collect2 error ld returned 1 exit status
  label = calculator, content = when will the autograder be up
  label = calculator, content = when it says to return the last element in the list does it mean to return the last pastend object or the last dereferenceable object in list thanks
  label = euchre, content = im not sure if i am missing something obvious but i am not seeing the new makefile in the project4 folder in google drive
  label = euchre, content = is there any way were able to run our euchre program through a windows command prompt
  label = euchre, content = what does euchretest01withsolutioncardpackplayer test i didnt compile but i passed euchretest01 whats the difference between them
  label = euchre, content = is there supposed to be feedback for the withsolution tests thanks
  label = euchre, content = when i downloaded the new makefile and ran it in caen with the make command this is the error i got traceback most recent call last file runmytestspy line 53 in module main file runmytestspy line 23 in main returncode subprocesscall test file usrlib64python27subprocesspy line 524 in call return popenpopenargs kwargswait file usrlib64python27subprocesspy line 711 in init errread errwrite file usrlib64python27subprocesspy line 1327 in executechild raise childexception oserror errno 8 exec format error make test error 1 in the autograder our project got 710 with the euchre tests with solutions failing any advice
  label = euchre, content = check dependencies warning no rule to process file userssylviadesktopproject4project4makefile of type sourcecodemake for architecture x8664
  label = euchre, content = we are not answering p4 questions on piazza except for issues related to the compilation problems for which the extension was given but if you are having other difficulties you might want to check the project 4 faqs post its pinned at the top of piazza
  label = euchre, content = my partner and i just resubmitted to the autograder after seeing we accidentally had include packh in our playercpp file causing us to fail the two player tests we removed the include statement and resubmitted however during the resubmit after passing all of the tests and now getting a 1010 and compiling our card tests a message error contact your administrator appeared on the screen it looks like all that it had left to do was compile our player tests what does this meanwhat is wrong any help would be greatly appreciated thank you in advance
  label = euchre, content = howdy all i downloaded the new makefile that was posted today and now im getting undefined reference errors with all my tests heres what it looks like note that cardcpp is not included in the compile line if i compile using g wall werror pedantic stdc11 o1 cardcpp cardtest1cpp o cardtest1 i dont get any compiler issues this is because cardcpp is included in the compile line compare it to the compile line below make test in the screenshot there isnt a cardcpp hence the issues also i noticed that this doesnt happen when you use make test on caen it does happen when you use make tes t on cygwin it also happens when you use make cardtest1cpp for example on both caen and cygwin
  label = euchre, content = do we need to download a new copy of runmytestspy aswell
  label = euchre, content = can we get extra credit for having the project done correctly and on time
  label = euchre, content = using the link on the links document on the google drive the autograder website fails to open anyone else experiencing this
  label = euchre, content = if i did get a 1010 in the autograder before i dont have to resubmit right just wondering if i should since the email said the makefile we received had differences with the one in the autograder
  label = euchre, content = im sorry this is absurd my partner and i ran all the public tests for euchre and got no different output using sdiff then we submit to the autograder and it doesnt give us a grade for hours and hours until way past the deadline i check today and we got 01 on the euchre public tests this is absolutely unfair considering we passed the test on our computers and caen and then the autograder gave us a 01 and there was no way of us knowing this or fixing this this is very poor planning and extremely ridiculous that there is no project extension and was no better explanation as to how it could occur that we pass tests on our computer and get 01 on autograder
  label = calculator, content = any news on when project 5 will be out just trying to get a head start this weekend
  label = euchre, content = this might not be possible but one idea i have is maybe there could be the output line in the local tests for the sdiff the outputcorrect files the local test correct outputs are technically not correct they do not have the top line we need to cout people were literally sdiffing against outputs that would not pass in the autograder which is one of the reasons this project was a little devestating for some pople it almost feels like a trick not that this is an accusation it seems like this course is always building on itself nothing is perfect ever either if this is possible to do this despite the different way you use the terminal for these tests i would recommend adding in the first line to these tests so that the outputcorrects would pass in an autograder overall i felt the wording for how we cout the line was vague particularly in how many new lines we needed for it it just says then print them which is vague about whether you want one newline so that it tops hand 0 or two newlines so that its a space above hand 0 the latter which looks better in my opinion but i get a vibe that it was the former it would be cool to see the outputcorrect for what this looks like exactly when testing
  label = euchre, content = what do i do now
  label = euchre, content = so i just checked my autorgrader score and i received a 410 it says we had the incorrect output for the testcases including the public ones however when we ran them on caen and diffed the output with the correct there was no difference how is this possible
  label = euchre, content = the autograder just finished grading my submission but the score showed a 00 why did this happen why didnt i get an actual score
  label = euchre, content = hi my submission in the autograder was just graded and it gave us a 01 for player public test but i just ran my code on terminal and it passes and im almost 100 positive that my playercpp is correct because in an earlier submission i passed the test and my code for that file is the same could this be an autograder error
  label = euchre, content = my submission has been in the autograder queue for over 5 hours should i be worried
  label = euchre, content = i just got my autograder feedback and im a bit concerned i ran the public test cases through caen using the makefile and it compiled with no problem i figured since these are the same public test cases as the autograder and i tested it on caen that they would at least compile when i got my feedback from the autograder my playercpp file didnt compile and it gave me back an error that i never got with caen as a result nothing compiled after that so obviously i failed a lot of tests does this mean that im going to get an extremely low grade on the project since pretty much the last 23 of it doesnt compile my project isnt perfect but what i turned in is 90 done and while it definitely still has a few bugs its almost all the way there im concerned im going to get a 15 or something on this heres the error message i got from the autograder this didnt show up when i ran it on caen i understand the problem although it doesnt affect how the code runs in this case and its like a 2 second fix the problem is that i didnt get this error until i used the autograder is there anything i can or should do about this thanks playercpp in member function virtual card simpleleadcardconst string playercpp14746 error bestcard may be used uninitialized in this function werrormaybeuninitialized playcard handindexbestcardinhand playercpp in member function virtual card simpleplaycardconst card const string playercpp15769 error bestcard may be used uninitialized in this function werrormaybeuninitialized playcard handhighestcardofsuitledcardgetsuit trump cc1plus all warnings being treated as errors
  label = euchre, content = luckily i was able to check it before the deadline so i was able to submit the files again however if i had not checked back i would have been graded zero for having nothing submitted i hope this does not happen again
  label = euchre, content = whos ready to cry
  label = euchre, content = my project was just graded and i received this error i submitted this morning and got a 610 then implemented human functions to pass euchretest50 which brought me to 810 but i do not see an official score help please
  label = euchre, content = hey i submitted to the autograder a little bit ago and it hasnt graded me yet is this problem happening to anyone else
  label = euchre, content = is it safe for me to leave to queue to resubmit i dont want to run into any unintended issues i know there were problems earlier with people trying to rebubmit thank you
  label = euchre, content = this is a joke right it feels like a joke
  label = euchre, content = what does it mean that the following files were discarded due to being unnecessary
  label = euchre, content = i submitted couple hours ago but in euchrecpp i realized for error checking i did packfilemane shufflenoshuffle indstead of packfilename am i going to lose major points for this should i resubmit
  label = euchre, content = what dis mean
  label = euchre, content = whenever i try to use vectorsort i am getting so many errors why
  label = euchre, content = is there any reason why we cannot get a project extension its ridiculous that we are expected to not work on our projects the day it is due the instructors are essentially saying that its our faults that the autograder is down and we should have known to submit before today i have many other obligations that prevent me from working nonstop on my projects but i expected to be able to check my autograder score to help me see what i needed to fix i lost a day to work on my project because i could not check my code against the autograder that isnt fair and it isnt fair to tell students to take whatever grade they get on the autograder without seeing whether or not it compiledreceived a score
  label = euchre, content = autograder is not working saying this is why you shouldnt wait until the last day is ridiculous you made it due until then and implied wed have all resources to work on it now we have to blindly submit code that by your design will completely fail with small errors very dissapointed
  label = euchre, content = why am i getting this error my class starts off with class human public player public
  label = euchre, content = is there a reason that my code has the exact same output for test00 but my test01 output is different enough that the players have different cards i checked over our shuffling and dealing functions and havent found an issue
  label = euchre, content = an entire day of the project is gone no testing no submitting you cant do anything it is quite unfair to students who were told in the syllabus that they were going to be given a certain amount of days to do the project i made a slight change in my project today but have not gotten the autograde in hours this would be alright if we could test on environments exactly like the autograder but even caen is different i suggest that project turn ins on sundays or tuesdays days when less eecs classes have projects due there is precedent of an extension being granted in a situation just like the one today the eecs dept prides itself on being fair to students but this is an example of every student being given one less day to do the project
  label = euchre, content = waiting on a submit from awhile back is there an issue with the autograder again
  label = euchre, content = whats up with these wait times this is ridiculous
  label = euchre, content = when i run my code through caen and check the diff between euchretest00outeuchretest00outcorrect euchretest01 and euchretest50 all compile and run fine and according to diff the output matches the correct outputs however the autograder just finished grading my files and all three of these tests got 01 due to the output being incorrect what would cause this
  label = euchre, content = i am passing all my test cases in caen including the file comparisons with euchretest00outcorrect euchretest01outcorrect and euchretest50outcorrect after running my code on the autograder i received output differences for all euchre tests i changed my code so that all print statements occur the euchrecpp file except for cases when user input is need for a human player however now i cant see if this indeed solved the issue because i have been on the autograder que for over an hour will the issue of the que be solved sometime before 8pm
  label = euchre, content = my partner and i submitted to the autograder over 3 hours ago and it is still queued does anyone know why it is taking so long we want to know what we got so we can make adjustments if we have to
  label = euchre, content = 
  label = euchre, content = hi my autograder has been cued for over three hours now and i cannot get any feedback from it will i be able to resubmit if it stays cued until 8pm thank you
  label = euchre, content = i got the error message test error 1 what does this mean specifically
  label = euchre, content = if i have a vector of cards called hand is there an easy way to track the size of the vector without using size right now i get the warning that it loses integer precision which caen treats as an error and im not sure how to get around it
  label = euchre, content = if our projects are cued by 8pm does this mean they will still get graded or are we only graded on the submissions that make it through the cue before the due time
  label = euchre, content = i just started getting this error out of nowhere after this function has worked fine for the past day and im not sure why i just finished editing a different helper function that i call after this one in euchre other than that i havent changed anything that i know of inside euchre or this function all the declarations are the same as well
  label = euchre, content = my auto grader has said that it is being graded since 1100am this morning is there any way that i can submit a more recent version of my code i cant remove the submission that is currently being graded and i also cannot submit anything more until it done i just want to submit my new code what can i do
  label = euchre, content = i am getting an error in player factory when i attempt to call each compiler the error reads error simplesimpleconst std string namein declared at line 77 is inaccessible i have written definitions for every function of the player class for both human and simple subclasses albeit maybe not correctly any ideas
  label = euchre, content = does anyone know what the que on the autograder is right nowcurrent time is 445 we have been waiting in que and were hoping to get a positive return from it so we could plan the rest of our daynights i know its not a technical question just a little frustrated
  label = euchre, content = hi our submission was queued for about an hour and twenty minutes but now it says it was removed from the queue what is the reasoning for this should i try to resubmit right away or does this mean that something is wrong with my code thanks
  label = euchre, content = for this function do we need to reprint the hand at the beginning for human player
  label = euchre, content = are we required to write rmes for the helper functions that we write
  label = euchre, content = i got this weird problem when i try to compile euchrecpp
  label = euchre, content = my autograder submission has been in the beinggraded stage for more than 5 hours now when i try to submit a new version of my code i am unable to do so as it says you currently have a submission being processed please wait until it is finished before submitting again thanks for your help
  label = euchre, content = when creating tests for pack can we use the packin file for our test cases thank you
  label = euchre, content = my autograder is saying status queued i know i posted about this before but i am finished with my project and about to go out of town but i cannot leave with this thing pending can you please help
  label = euchre, content = i am trying to set one vector equal to another like literally just assignment but it wont let me why is this top error
  label = euchre, content = my main function arguments look like this int main int argc char argv
  label = euchre, content = i know that we are not supposed to include cpp files but we keep getting the undefined reference errors and these errors go away when we include cardcpp in card tests now this was brought up before 2450 and it was because of a wrong compile command in our case we are using the makefile to compile but the compile command we are getting for cardtest is g wall werror pedantic stdc11 cardtestcpp o cardtest while the line in the makefile is cardtests cardtestexes cardtestexe cardcpp cardtestcpp cxx cxxflags o so it should be linking cardcpp in the compile command but it is not is anyone else having this issue i dont want to submit with or without including cardcpp and having the whole project fail because of one line thanks
  label = euchre, content = i only have compilation success and nothing on compiler standard output or error does this mean that the test case passed or failed
  label = euchre, content = when testing playercpp are we only allowed to used euchre cards
  label = euchre, content = undefined symbols for architecture x8664 main referenced from implicit entrystart for main executable ld symbols not found for architecture x8664 clang error linker command failed with exit code 1 use v to see invocation make cardtest1exe error 1 i cannot test my euchrecpp i cannot find this error help please
  label = euchre, content = my partner and i had a panicked and removed ourselves from the queue when we read a piazza post that said they were receiving an error and that only 3 tests were showing up on autograder we submitted before today and were happy with that submission since we removed our submission from the queue will our latest submission be one that we previously submitted a few days ago or will it still be the one we removed
  label = euchre, content = during each trick there is a leader player who leads the trick they lay down first the card and then the other players play cards the leader doesnt play a card right other than the lead cardfirst card laid down thanks
  label = euchre, content = hi under test that fail it says i failed one test but it includes cardtest1exe as well as cardpublictest i ran both tests on vs they were both correct would any one point it out to me which one is the problematic file thanks
  label = euchre, content = when i try to compile my files in terminal it shows error messages as the following does this mean the errors are all in playercpp or is it possible that the errors are in euchrecpp
  label = euchre, content = i get an error in autograder it only complies less than half of the files
  label = euchre, content = are you guys going by valgrind info or is a grader just going to see if we deleted elements from the heap
  label = euchre, content = just as an update i just went from the received status to queued on the autograder so if this is any indication hopefully it is getting closer to being fully functional again
  label = euchre, content = when testing maketrump the project specs say that a simple player will order up the suit with the same color as the upcard if they have one or more face cards of that suit in their hand so say that you have the jack of hearts in your hand and the upcards suit is diamonds would makeplayer equate to false since jack of hearts is technically a diamond and is therefore the same color and suit as the upcard
  label = euchre, content = does the inserted pack get shuffled before each hand is dealt or do the shuffles stack where the second hand is dealt from a shuffled version of the first shuffle of the pack
  label = euchre, content = we are receiving this error when we run make euchre we have no clue where the error is coming from we checked playercpp and we have implemented every function from the header and declared the ones that are const to be const in simple and human
  label = euchre, content = when i use the sort function in any of my player member functions that arent of type void i get an incredibly long error that seems to basically say that there doesnt exist an operand of type for types const card and card but i dont understand why that is and how im supposed to fix it if the error is within the sort function
  label = euchre, content = when a human player is prompted to order up or pass should we check that their entry is valid the upcard suit or pass if so do we use assert or just print an error message
  label = euchre, content = in my deal function in the maincpp file when i deal using dealone about half of the time i receive this error project4838970x7fff7a9f9300 malloc error for object 0x100200a00 incorrect checksum for freed object object was probably modified after being freed set a breakpoint in mallocerrorbreak to debug lldb the other half of the time the function runs smoothly and im able to continue down my file why is this happening
  label = euchre, content = the spec for taking the first trick is that the eldest hand leads which player is that the one to the right of the dealer
  label = euchre, content = im not quite sure what the error iswhat the and symbols indicate is there ever an instance where were supposed to print two new lines after something besides when we print the second teams score is there supposed to be a newline after the winners of the whole game are printed thanks
  label = euchre, content = if we submit to the autograder and then remove ourselves from the autograder queue does it count that as our most recent submission
  label = euchre, content = what does it mean if the autograder says status received why can i not see my score for this submission
  label = euchre, content = how do we determine the order of the scores we print after trick taking team of players 0 and 2 first team that won the trick first team that is in the lead first
  label = euchre, content = hi i dont know if this was asked before people i asked gave me conflicting answers but if the leftbower has the same suit as the lead card or do we play something else for simple player for example hearts is the lead card suit and i have a jack of hearts where diamonds is trump do i play this jack if its the highest heart card i have or is it considered part of the trump suit
  label = euchre, content = i just submitted to the autograder but it is not saying the typical queued or grading and instead it just says received but is not doing anything i noticed this was a problem before on piazza and i was wondering if it was fixed now
  label = euchre, content = my autograder just freeze at this step for 50 mins
  label = euchre, content = when i run the driver in terminal it deals 32232 and then nothing happens for about a minute until finally it prints out killed 9 and exits how can i fix this
  label = euchre, content = hi i am a bit confused about what the auto grader is testing in the withsolutioncardpack tests i do not understand the difference between those tests and the plain euchretest00 type tests can anyone help me to understand it would be greatly appreciated
  label = euchre, content = i got a similar error with a post problem which said resolved but it didnt show any solution on that one i cannot find out why am i getting this error massage when going through the public test for player undefined symbols for architecture x8664 playerfactorystd1basicstringchar std1chartraitschar std1allocatorchar const std1basicstringchar std1chartraitschar std1allocatorchar const referenced from main in playerpublictesto ld symbols not found for architecture x8664 clang error linker command failed with exit code 1 use v to see invocation
  label = euchre, content = i knew the test for pack will be handgraded but were not turning extra files we read in if we dont how can the test be handgraded if the grader does not know my input
  label = euchre, content = i know it says that helper functions need to be static but in euchrecpp the functions i made were to make the main function smaller in lines do those functions count as helpers and therefore static
  label = euchre, content = in the first hand of the correct output on the third trick player drew plays the jack hearts after diamonds was led in the very next trick diamonds is led again except not drew plays a diamond wouldnt drew have to have played the diamond in the previous trick ie drew can follow suit and doesnt
  label = euchre, content = hi we have run our code against the euchre tests give test00 test01 and test50 and when we run them on terminal there is no difference we have put them in a diff checker to double check but we arent passing the tests on the autograder any ideas why thanks
  label = euchre, content = any idea where the difference could be im not seeing any indicators of a difference
  label = euchre, content = hi my euchre test 50 looks the exact same as the correct test output line for line yet for some reason the sdiffautograder say that every single line is different than the correct output even the newlines this is in spite of the output looking the exact same to the naked eye and the online diffcheckercom i was wondering what the source of the problem might be
  label = euchre, content = can i declare helper functions in the private section of a class if i use them only in the public section of that same class
  label = euchre, content = i am trying to access mfile to submit my files to the autograder but when i type mfileumichedu in my browser i am getting a 400 bad request can anyone confirm that caen is down
  label = euchre, content = the spec says not to include our human player tests in our autograder submission does this mean that we should not include tests forany human functionalities at all including playerfactory getname and with a human player
  label = euchre, content = when i use diff to check my output for euchretest00out and euchretest00outcorrect the only output i get is bash42 diff euchretest00out euchretestoutcorrect 47d46 bash42 does this mean that theres a difference between my output and the correct output and if so can anybody point me towards what that difference might be
  label = euchre, content = should these compiler standard output sections be blank they are for all of my student test suites also should there be a suite for student pack tests i dont have one just wondering
  label = euchre, content = im getting a error on caen when i run the make test command i get the following which i dont really understand euchre packin noshuffle 1 alice simple bob simple cathy simple drew simple euchretest00out make test error 1 bash42 make test error 1 any help would be great thanks
  label = euchre, content = ive been on the queue for one hour now and it is almost 5 in the morning i was wondering if there is something wrong with the autograder or if the volume is still that high this early in the morning
  label = euchre, content = when i run a diff check i get this on euchretest00out and euchretest00outcorrect i keep getting the same problem bash42 diff euchretest00out euchretest00outcorrect 1c1 euchre packin noshuffle 1 alice simple bob simple cathy simple drew simple euchre packin noshuffle 1 alice simple bob simple cathy simple drew simple ive tried about everything i can to make the output match but cant think of anything else to do any ideas thanks
  label = euchre, content = in the clarification document it says that several functions take a string parameter to indicate a trump suit the requires clauses for these functions should include that the string must represent a valid suit ie one of cardsuitspades cardsuithearts cardsuitclubs cardsuitdiamonds because the function does not allow me to leave there without an else branch if i use several if branch to get the output ie suitnext i wonder am i able to print out an error message if the case that invalid string as parameter happens
  label = euchre, content = ive been in the queue for over an hour now is that normal for 2am should i plan for an even longer queue tomorrow thanks
  label = euchre, content = is it safe to assume that argv1 will always equal some sort of pack name i cant find any examples of the command line input without packin
  label = euchre, content = for some reason when my partner and i put the arguments to run the euchre program into the arguments passed on launch xcode tells us that the number of arguments is 13 when it is clearly 12 we also tried running it on terminal but had the same issue any ideas on why this is happening would be greatly appreciated thanks
  label = euchre, content = i am failing cardpublictest packpublictest playerpublictest and euchretest00 all of these pass when i test them in caen and i am passing the autograders playerpublictestwithsolutioncard and euchretest00withsolutioncardpackplayer any ideas on why
  label = euchre, content = i was wondering if there is any way to input all the outputs im supposed to cin when i run the compiler to test human so for like euchre packin noshuffle 1 alice human bob human cathy human drew human this is there any way to put in euchretest50in right away so that i can get the exact same output as euchretest50outcorrect thank you in advance
  label = euchre, content = hey i put make in the command line i passed all the tests i wrote and then this came up any ideas euchre packin noshuffle 1 alice simple bob simple cathy simple drew simple euchretest00out terminate called after throwing an instance of stdlogicerror what basicstringsconstruct null not valid binsh line 1 46951 aborted euchre packin noshuffle 1 alice simple bob simple cathy simple drew simple euchretest00out make test error 134
  label = euchre, content = what could be causing this error the libraries we have included in euchrecpp include cardh include packh include playerh include array include vector include string include iostream include fstream include cassert include algorithm
  label = euchre, content = when i call player alice playerfactoryalice simple i get undefined reference to playerfactorystdstring const stdstring const i have included playerh iostream cassert and algorithm
  label = euchre, content = when i run this command bash42 diff euchretest00outcorrect euchretest00out i get this 46c46 alice and cathy win alice and cathy win no newline at end of file except i have checked both files and they are identical we have included the new line at the end of the file is there something im missing i read 603 but am not sure if that applies to this problem any ideas
  label = euchre, content = does the autograder student test case evaluation tell you anything other than it compiles does it tell you that you have false positive
  label = euchre, content = whats the python file for
  label = euchre, content = when i run my code all of euchretest00 and euchretest01 match perfectly but it is telling me my euchretest50 files differ i copied and pasted the outputs into an online checker and it came back matching it appears that there are bits of addresses at the end of some lines on my euchretest50outcorrect file that are causing this i will attach a photo of my command line output so you can see is there anything im not getting here that should be obvious
  label = euchre, content = my partner and i have been passing a temp through our player factory in order to switch who is leading each hand and who is dealing at the start of a new round however i think this may be more harmful than it is beneficial can anyone comment if this will lead to a multitude of problems or will this strategy work wed greatly appreciate it thank you in advance
  label = euchre, content = is euchretest50 on the autograder exactly the same as the euchretest50 from the starter files just trying to figure out why its failing
  label = euchre, content = valgrind shows that the program possibly lost 2218 bytes in 70 blocks but everything else shows no loss is this okay or do we have an error
  label = euchre, content = i wrote many many many test cases so it took my computer about 3 and a half minutes to run all the test cases will there be a run time limitation on autograder i mean if my code lasts a long time say 10 minutes will the autograder judge it false
  label = euchre, content = in cardpublictestcpp im failing the following assert on line 22 assertthreespadesgetsuitcardsuitclubs cardsuitspades i thought getsuit doesnt have any parameters what is this function call doing thank you
  label = euchre, content = if the dealer orders up trump in the first round they still have the option to addanddiscard the upcard correct
  label = euchre, content = while testing my addcard function i test the same hand twice it passes for the first trick but for the second trick it ends up playing the nine of spades which coincidentally or not is the card i dealt in the first trick in my function i swap the card at the end of hand with the card thats going to be dealt and then make sure to decrement the size of the hand why might it be returning the card that was dealt in the last trick
  label = euchre, content = we are running euchrecpp and it is compiling all output is correct except instead of printing players names our code is printing the address of these names we use vectorplayer to hold the players and when we print we call cout gameplayers0
  label = euchre, content = just for the purposes of clarification should we print the command line arguments euchre packin before any error checking or should we not print that until all potential command line errors are checked
  label = euchre, content = is there a newline after all user prompts and is there a space after human player bob please enter a suit or pass for example
  label = euchre, content = if i write tests for helper functions in any of the test cpp files will these files be rejected by autograder since the solution doesnt contain my helper functions thanks
  label = euchre, content = for our player test cases where we created simple players to test the functions in player would you guys count the test cases invalid if we dont delete the players at the end
  label = euchre, content = when i run euchretest01 in xcode with the arguments passed in via command line tools it seems that all the cards are dealt as they should be according to this tests correct output until nine of clubs is dealt in place of a card with a suit of diamonds the latter of which is correct according to this tests correct output after shuffling the cards via my shuffle function and via shuffling by hand it seems that nine of clubs must come after ace of hearts however the correct output says that no player seems to have nine of clubs my dealing code seems to distribute cards according to the proper pattern as i fully passed euchretest00
  label = euchre, content = for the functions we write in euchre outside of main do we need to make those static
  label = euchre, content = i am writing a test function for the function virtual void addcardconst card c how can i initialize a players hand of cards
  label = euchre, content = what does it mean by files were discarded due to being unnecessary on the autograder does it mean that my tests gave a false positive bug
  label = euchre, content = none of the three tests add an option for trump was made in round 1 and the human dealer was asked to discard i saw that all the making process should be together so the output should like this right for that case without a blank line bob passes cathy orders up diamonds human player alices hand 0 jack of hearts human player alices hand 4 ten of diamonds discard upcard ­1 human player alice please select a card to discard
  label = euchre, content = im having trouble figuring out why this is the correct strategy trump suit diamonds led card ace of spades simple players hand ace of hearts nine of clubs jack of diamonds queen of diamonds king of diamonds euchretest01outcorrect says that the ace of hearts should be played in this senario however shouldnt the nine of clubs be played since this player cannot follow suit no spades and thus would play the lowest card in her hand nine of clubs
  label = euchre, content = when testing the function player playerfactoryconst stdstring name const stdstring strategy how to test the strategy
  label = euchre, content = when i try to compile playercpp my playerfactory function gets an error like so error cannot allocate an object of abstract type human return new humanname im not sure why this is happening any ideas when i compiled it i used make playerpublictest
  label = euchre, content = so i am going back and looking over my test cases for card i noticed that i have already tested everything i could thing of in teststarter when i was making sure it ran while i was making it do i need to submit more then one file if it all works right will i be marked down
  label = euchre, content = do we need to write unit test for human player if so how can we implement human input
  label = euchre, content = this happens when the game is up to 10 points 100 points etc but alice and cathy always win every point they dont necessarily win every trick though but they do always win three or more tricks looking at specific hands it seems like the strategy is correct but ive also noticed that either cathy or alice order up every time as well what could be a cause for this
  label = euchre, content = for human player the correct version has please enter a suit or pass but if i try to do this it stops it from being a string in the cout so i have please enter a suit or pass how do i fix this
  label = euchre, content = in playerh says virtual player is needed to avoid some compiler errors how it works also how do we test it
  label = euchre, content = i get this error when using the sort function is this because i am using the sortxbeginyend on stdarray cardmaxhandsize humanhand
  label = euchre, content = would error in output like this cause substantial deduction because of how i set up euchrecpp getting the name ordering within teams is not easy
  label = euchre, content = if we make a private helper function in our implemented classes for player should it also be declared static
  label = euchre, content = what does the sign mean in virtual const stdstring getname const 0 if the function returns a string why there is
  label = euchre, content = im currently writing assertions to check the requires clauses for the functions that have them do we need to do this for constructors as well if so do you put the assert in the body of the constructor
  label = euchre, content = when i write a line like the following cout packdealone packdealone it always prints backwards why might this be happening my implementation for the operator is pretty straightforward and im confident it is correct
  label = euchre, content = getting the following errors for both humanplayer and simpleplayer i initialize name in my constructor but my player classes are having issues with my member variable initialization
  label = euchre, content = hi im getting this error message from terminal undefined symbols for architecture x8664 playerfactorystd1basicstringchar std1chartraitschar std1allocatorchar const std1basicstringchar std1chartraitschar std1allocatorchar const referenced from main in euchre48b5deo ld symbols not found for architecture x8664 clang error linker command failed with exit code 1 use v to see invocation could anyone help thanks in advance
  label = euchre, content = if i have a helper function in playercpp that euchrecpp is dependent on will this cause issues in other words will euchrecpp at any point be run without our own code in the final grading
  label = euchre, content = if i have a vector of size 5 and i erase the value stored at index 3 does the vector shrink to size of 4 or will there just be a hole where index 3 was i am getting a segmentation fault error that leads me to believe that the program is trying to access a part of the memory that isnt there anymore
  label = euchre, content = should we write euchrecpp case by case i mean since the outputs are different should we write a case for all simple players a case for all human players and a case for a mix of simple and human players
  label = euchre, content = so when i complile card and player with the terminal it works fine however when i submit to autograder i am getting a fail for both on the return code but not the compilation what exactly does this mean and how would i go about finding the problem and is their a file that has what the return code should be
  label = euchre, content = is it possible to print out a cstring directly or it is easier to convert it to a string first
  label = euchre, content = all of my functions are defined i know this because playerfactory works i have include playerh yet i cannot make an object of simple or human which i implemented in playercpp the thing is i can make an object of simple or human if i include playercpp i know this is bad style so what is the issue playercpp has include playerh thank you
  label = euchre, content = what would the output for a mix of simple players and human players be like i do not see it in the spec
  label = euchre, content = i have include vector at the top of my file and i tried declaring a vector of type card like this class simple public human public private vectorcard v i know this might be a silly question but why isnt this declaration working did i do something wrong in declaring
  label = euchre, content = if you look at euchretest01 drews hand should be nine of diamonds ten of diamonds jack of hearts queen of hearts king of hearts so why in the 0th hand on trick 3 does he play the jack of hearts when he hasnt played either diamond and diamonds are led excerpt from euchretest01 alice orders up diamonds ace of spades led by bob nine of hearts played by cathy queen of hearts played by drew ace of hearts played by alice bob takes the trick king of spades led by bob ten of hearts played by cathy king of hearts played by drew queen of diamonds played by alice alice takes the trick jack of diamonds led by alice ten of clubs played by bob queen of clubs played by cathy jack of hearts played by drew alice takes the trick
  label = euchre, content = when we print out the error message do we need to replace things like packfilename and name1 name2 with the information from the command line arguments
  label = euchre, content = how to convert a command line argument to a string does the following method work string word word arg1
  label = euchre, content = the spec reads the player will play the highest trump card in their hand if they have all trump cards does this mean highest rank or highest value aka if they have a bower in their hand will they play that over an ace of trump suit
  label = euchre, content = im getting an error that stops the program saying terminate called after throwing an instance of stdoutofrange what vectormrangecheck does this mean im trying to delete an element of a vector thats out of range
  label = euchre, content = after we print the winner at the end of euchrecpp do we add an endl thanks saul
  label = euchre, content = for my pack tests i included some functions that tested pack initialization from files that i created myself similar to packin is this allowed and if it is then do i need to turn in these files to the autograder along with my other pack tests thanks
  label = euchre, content = for the playing deck what happens after the first hand is complete when round 2 starts do we reshuffle the already shuffled deck or do we shuffle the initial deck of cards again thank you
  label = euchre, content = if a human player is the dealer and someone orders up during the first round of making print the player’s hand and an option to discard the upcard then prompt the user to select a card to discard the user will then enter the number corresponding to the card they want to discard or 1 if they want to discard the upcard when this says print the players hand is that referring to the human player dealer getting the option to discard the upcard or does whoever orders up during the first round get the option to discard
  label = euchre, content = is there something wrong with my code if the autograder takes 20 minutes to grade it without ever being in the queue we got 1010 it just took a long time thank you
  label = euchre, content = do we have to convert filename to cstring for the ifstreamopen function i declared an ifstream object called file and then used fileopenpackfilenamecstr and it keeps saying it isnt open and printing my error message
  label = euchre, content = if shuffle is turned on should we shuffle before dealing the first hand thanks saul
  label = euchre, content = when a pointer gets destructed by a destructor whatever it is pointing to gets deleted then the pointer points to a null ptr 0 right if that is true and the pointer is destructed properly should assert ptr 0 return true since all destructed pointers will point to 0 thanks for the help
  label = euchre, content = ace of spades led by bob nine of hearts played by cathy queen of hearts played by drew ace of hearts played by alice bob takes the trick in this case why does bob take the trick i thought alice would take the trick because hearts is higher than spades
  label = euchre, content = when i run valgrind it prints a lot of stuff and then this summary 19659 leak summary 19659 definitely lost 0 bytes in 0 blocks 19659 indirectly lost 0 bytes in 0 blocks 19659 possibly lost 2041 bytes in 69 blocks 19659 still reachable 0 bytes in 0 blocks 19659 suppressed 0 bytes in 0 blocks 19659 19659 for counts of detected and suppressed errors rerun with v 19659 error summary 70 errors from 70 contexts suppressed 1 from 1 segmentation fault i ran some tests and im sure that im deleting players correctly yet when i comment out the code that deletes the players the result from valgrind is the same i also dont know why valgrind shows a seg fault at the end of the output ive also passed all of the autograder tests if that matters it probably doesnt i dont think the autograder is checking for leaks
  label = euchre, content = when making trump reaches round 2 to a simple dealer does the card the simple dealer orders up have to be a face card and the same same color as the upcards suit or does it only have to be the same color as the upcards suit
  label = euchre, content = can we assume that the filename passed to the pack constructor is valid basically where should we check that it can be opened and where should we print the error message
  label = euchre, content = hi i ran my output against the correct one using sdiff but im having trouble figuring out why the lines are being marked different thoughts help appreciated
  label = euchre, content = i dont get why bother to change order up suit in make trump in playercpp i know it is the suit that will become trump suit and it will be useful to us in euchrecpp when we want to print who passes who orders up what what will be this order up suit but this function doesnt return the order up suitstring how are we going to get the trump suit we want when we print the decision of each player in making trump procedure i mean you let us replace the orderupsuit to be trump suit in maketrump from playercpp it must be an easy why to figure the trump suit out with this function and we can print this suit in euchrecpp any hints how
  label = euchre, content = im getting difference in my euchretest01 output compared to the correct output and i have a question about it the top few lines of the correct output read euchre packin shuffle 10 alice simple bob simple cathy simple drew simple hand 0 alice deals ace of diamonds turned up bob passes cathy passes drew passes alice orders up diamonds alice orders up diamonds but its the first round of making trump so shouldnt the output be alice orders up ace of diamonds thats how the correct output shows for all of the other players who arent the dealer when they order up in the first round and thats what my output shows alice is picking up the card so shouldnt it show the card
  label = euchre, content = my partner and i are getting this error when trying to test our euchrecpp what does it mean
  label = euchre, content = while compiling one of my tests for playercpp i get the message make warning clock skew detected your build may be incomplete i tried to look it up on google but i couldnt find anything that quite explained my situation since the program successfully complies runs and passes all the given tests any advice would be much appreciated thank you
  label = euchre, content = in the actual driver program how do i differentiate the human player and simple player is that like using if statement to see whether the player i am dealing with is human or simple but i dont know how to have access to the actual subclass of the player
  label = euchre, content = do we have to implement the readpack function or can we just read from the file directly in the constructor
  label = euchre, content = hand 0 alice deals ace of diamonds turned up bob passes cathy passes drew passes alice orders up diamonds ace of spades led by bob nine of hearts played by cathy queen of hearts played by drew ace of hearts played by alice bob takes the trick in this first case given in the euchretest01 why does alice play the ace of hearts alices hand is ace of hearts nine of clubs jack of diamonds queen of diamonds king of diamonds
  label = euchre, content = i pass every test on the autograder except for the three euchre tests with solution cardpackplayer i was thinking it must be my player file and some of my cout statements however i pass playerpublictest with solution card so maybe i should assume that the error must be in my card file over my player file any help would be appreciate
  label = euchre, content = in my test for pack i create two different packs with two different constructors that should have the same cards in them however since cards are private the only way to check whether two packs are equal is to dealone repeatedly and check whether individual cards are equal but i cant use dealone because testing it requires that the constructors work my question is whether we are allowed to overload the operator for pack to make for easier testing
  label = euchre, content = is the euchre game allowed to have a mix of simple and human players
  label = euchre, content = for euchre50 test i use sdiff to check whether output is the same heres the result and does mean its the same or different if its different i really cant see whats the difference here
  label = euchre, content = when noshuffle mode is on the pack should be reset next set to 0 after the start of a new hand correct am i correct in saying next is designed not to wrap around to 0 when it reaches the end of the pack so a segfault would occur if the game lasted more than 1 hand and the pack was not reset if noshuffle mode was on sorry if this question is trivial i checked the spec and couldnt find it
  label = euchre, content = i am currently trying to debug a segmentation fault using gdb and when i run my code through caen it gives me the following error for many of the functions in playercpp comparison between signed and unsigned integer expressions i did not get this error when i ran my code on my mac any suggestions
  label = euchre, content = is there any major difference between cardsuitspades cardsuithearts etc and normal strings such as spades hearts for example in functions in playercpp that take in a stdstring trump or stdstring orderupsuit passed by reference would it be fine if the function modifies it like such trump spades instead of trump cardsuitspades also would it be fine for these functions to be called using spades as its argument instead of cardsuitspades
  label = euchre, content = im getting this error with whitespace when i run diff euchretest50out euchretest50outcorrect can anyone please explain what the issue might be i dont see an apparent difference between my output and the correct output when i run sdiff thanks
  label = euchre, content = for the project we are required to overload the insertion operator so that the following statements work assume that playerone and cardone have been initialized properly cout playerone is player one endl cout cardone is card one endl however it seems to me that the only way to test this is to run the code and see if the right thing gets printed to the console this is all well and good for the actual program but it makes testing difficult as i dont know of any way to extract some usable string to test against from cout in past projects we got around this using istringstreams but i dont think were allowed to use those here as sstream is not in the list of acceptable libraries is there any other way to test whether the insertion operator overloads work
  label = euchre, content = do we need to declare helper functions that we declare in our cpp or test files as static thanks saul
  label = euchre, content = since we are unable to really access the hand of the player since its private can we not test add and addanddiscard
  label = euchre, content = this is probably a really dumb problem but when i enter make cardtests i get the following error cardtest1cpp410 fatal error cardh file not found include cardh 1 error generated im not really sure how this happens since the cardh file is in the same folder and everything
  label = euchre, content = how do i use this as in how do i make this the input for a test file
  label = euchre, content = what does this error mean i keep getting it after i start modifying cardtestcpp
  label = euchre, content = im unsure why we we cant assign a member of a vector containing pointers to the player class from the playerfactory function ex this causes a segfault vectorplayer players players0 playerfactorydoesnt simple players1 playerfactorycompile simple
  label = euchre, content = hi in the class player there are no member variables only functions but the subclasses have names and hands where should these be declared thanks
  label = euchre, content = i know were allowed to make extra txt files for reading the pack constructor that takes in a filename but since all of the pack functions are being hand graded can we use extra txt files for functions other than that specific pack constructor for example since ive already tested my packconst string packfilename could i use that to initialize a shuffled pack for comparison in my shuffle test
  label = euchre, content = so when i run my euchre file in terminal i get to a certain point and then there is a segmentation fault i tried to use gdb to debug and see what happens but gdb is exiting out before any of my code is executed i start my code with an assert to check the invariants for main but even though when normally running the code passes the gdb version does not is the number of arguments being affected by gdb or something like that thanks
  label = euchre, content = do we need to take the cards played in order from the last hand and shuffle those for the new pack to deal from
  label = euchre, content = hi i am currently working on playercpp and am encountering an issue when the keyword virtual is included in front of the function for example virtual const stdstring playergetname const in this line the word virtual has an error saying invalid specifier outside a class declaration it is like this for every function i know that technically the word virtual only has to be included in the header file but why could this error be occurring is there a chance of any more errors in the future if we just omit this word completely thanks so much
  label = euchre, content = am i correct in assuming that there can be fewer than 24 elements in the files that we read in from for the secondthird constructors of pack
  label = euchre, content = i am writing test functions for packcpp but i do not know how to initialize a cards array can i use cardranknine or i should use nine instead
  label = euchre, content = ideally how short should euchrecpp be i understand it is meant to be short but i feel that there is a lot of code to write
  label = euchre, content = i have a question regarding 2061 the instructor says you should always follow the spec when it comes to implementing needed functions however in the situation given by the student in 2061 it would seem unnecessary to add a card and discard a card if the human wants to just discard the upcard it would make much more sense to just return and not change the humans hand vector at all also is it possible for addanddiscard to push the size of the hand past the maxhandsize const if so would it make sense to assert at the end of the function to make sure the hand isnt larger than maxhandsize thank you
  label = euchre, content = how do i access private member variables of a base class from a derived class i originally had a base class with a vector of cards and now i want to access this hand from my derived class of each type of player i used a gethand function to initialize another vector of cards for each type of player put this does not update the playerhand when the original hand is changed should gethand return a pointer to the original hand so i would be able to access it i feel like calling gethand in every function that requires usage of it is redundant is there a better way
  label = euchre, content = can i pass the vectorcard hand by reference and change it its not const i think i should be able to but the compiler wont let me
  label = euchre, content = i am receiving the error expression must be a pointer to a complete object type when i utilize the exact code we are given in the specs the error goes away if i place an ampersand in front of the name of my vector of players what is going on here and what is correct i also am receiving an error in the line where i declare the object a nullptr or 0 where is says the types arent matching is this all due to the fact that i chose to use a vector of players instead of an array
  label = euchre, content = at the end of the game how should we delete pointers that point to players i deleted the players but would you just set the pointers to the players equal to 0 so they arent dangling pointers thanks
  label = euchre, content = when i make test in terminal it shows up like this and fails in opening packpublictest im not sure why this is happening since my code for packcpp works on my partners terminal
  label = euchre, content = if a simple player has queen of spades queen of diamonds ace of hearts nine of spades jack of diamonds led card jack of spades trump suit clubs the player will play nine of spades right the led card suit is the same as trump suit in this case so they will play the lowest card which is nine of spades right
  label = euchre, content = 
  label = euchre, content = for a simple player the spec states if a simple player can follow suit they play the highest card that follows suit otherwise they play the lowest card in their hand so for example say the led suit was diamonds and in the hand the simple player has the queen of diamonds and the jack of hearts left bower should the returned card be the queen of diamonds or the jack of hearts
  label = euchre, content = if the trump suit is equal to hearts and the led suit is equal to diamonds and your hand is ace of hearts king of hearts queen of hearts jack of hearts jack of diamonds would you play the left bower in order to follow suit or would the left bower count as a heart forcing you to play the highest trump
  label = euchre, content = in playercpp in order for my helper function to modify the private member variables of simpleplayer without creating new member functions can i pass these member variables by reference does that violate anything thanks
  label = euchre, content = im looking at euchretest01outcorrect in the third trick of the first hand alice leads with a jack of diamonds and drew plays a jack of hearts however at this point it looks like he has a nine of diamonds and a ten of diamonds in his hand why does he play a jack of hearts when he should be following suit i thought that by simple player logic he would play the ten of diamonds
  label = euchre, content = according to spec but whats the situation of neither occurs cant think of any
  label = euchre, content = is there a specific format that we have to follow for printing out the players hand in human playercpp besides it being in order and two of spades like do we need to print card 1 is this or
  label = euchre, content = i keep getting this whenever i try to compile packcpp g wall werror pedantic stdc11 cardcpp packcpp packpublictestcpp o packpublictest tmpcchpepztopackcpptextznst5arrayi4cardlm24eec1evznst5arrayi4cardlm24eec1ev0x2a undefined reference to cardcard tmpcchpepztopackcpptextznst5arrayi4cardlm24eec1evznst5arrayi4cardlm24eec1ev0x2a relocation truncated to fit rx8664pc32 against undefined symbol cardcard collect2 error ld returned 1 exit status makefile42 recipe for target packpublictest failed make packpublictest error 1 i have no idea why help
  label = euchre, content = in testing player all tests are passing when we dont use delete however with delete we get different results every time we run our code there are times when it passes times when it has a segmentation fault times when the assertion fails and times when the pointer being freed was not allocated we only call factory once and delete once in every test function we tried renaming the pointers so they are all different but this did not work this is happening over multiple computers do you know what we can try to fix this issue
  label = euchre, content = for some reason i cannot seem to pass the regular euchretest50 on the autograder yet every other euchre test passes the autograder including all those with the solution to card player and pack even for test50 ive tested my output locally multiple times and it is exactly the same as the correct output and also have made sure that my print statements are correct any other ideas as to what could be the problem
  label = euchre, content = we have a vector as a member variable in our derived player classes but we cant access it while testing we get an error saying class player has no member named hand why would this be the case how can we test our player functions that use the hand
  label = euchre, content = i want to use stringstream to test the operator of the play i want to use the sstream library but i notice the spec does not say i am allowed to use this i wonder can i use sstream because this seems the only way to test the operator
  label = euchre, content = if i want to use a global variable in euchrecpp should i declare it as static or not from what i can tell static makes the variable not available outside of this cpp file which makes sense in this case basically are either or both of these allowed static const int numplayers 4 const int numplayers 4
  label = euchre, content = is there a way to initialize a const variable in a struct or do i have to keep these variables elsewhere right now i have pointstowin as a member variable of my game struct but im not sure thats stylistically the best because that shouldnt ever be modified
  label = euchre, content = my partner and i want to end the game when a teams score reaches a certain number of points we were thinking of doing a while loop set not equal to the traditional score of 10 but when we saw the spec it said the number of points needed to win is specified when the program is run we are unsure how to end the game if we dont know the number of points needed to win thank you in advance
  label = euchre, content = how many points should we give a team that manages to both euchre and march the enemy team is it still 2 points
  label = euchre, content = assertcardlesstwospades twodiamonds cardsuithearts i feel like it should be true because the spades is already less valuable than the diamonds and having hearts being trump shouldnt affect anything in this case right
  label = euchre, content = lets say a team needs one more point to win and the last hand they get a march if were playing to ten points should we output player1 and player2 have 11 points or player1 and player2 have 10 points i know there is a similar question already posted but it doesnt clarify we should print that they have 10 points or 11 points
  label = euchre, content = what is the proper ordering for hand display for example the correct output shows this hand display when hearts are ordered up human player alices hand 0 nine of diamonds human player alices hand 1 ten of diamonds human player alices hand 2 jack of hearts human player alices hand 3 queen of hearts human player alices hand 4 ace of clubs while my hand shows this order because the most important cards are in the front human player alices hand 0 jack of hearts human player alices hand 1 queen of hearts human player alices hand 2 ace of clubs human player alices hand 3 nine of diamonds human player alices hand 4 ten of diamonds does this matter what is the specified order
  label = euchre, content = we understand that any function written outside a class should be declared static but what my partner and i are wondering is should we declare a function static if it is associated with a struct
  label = euchre, content = im getting a compiler error when i try to call maketrump in my euchrecpp line that throws error gameplayersnextplayerindexgame gamedealermaketrumpgameupcard false 1 gameupcardgetsuit compiler error euchrecpp in function ‘ int mainint char ’ euchrecpp146111 error no matching function for call to ‘ playermaketrumpcard bool int stdstring ’ gameplayersnextplayerindexgame gamedealermaketrumpgameupcard false 1 gameupcardgetsuit im using the same parameter types as the ones in playercpp so i dont really understand why it isnt calling the function upcard isnt const but a nonconst can still be passed as a const parameter right thanks for any help you can provide
  label = euchre, content = is playercpp just going to be a giant class class hand or something that we will implement all of the player functions inside of and then well have playerfactory outside of that class of course
  label = euchre, content = in the description of the player factory function it returns a new simpleplayername is this supposed to be a constructor for a simpleplayer class that we need to write the implementation for in playercpp i dont really get what you mean by the term simpleplayername also in getname how are we supposed to identify what player name to assign to a particular class i tried indexing argv to assign the listed name in command line to the player and i also tried introducing an integer variable thatll help me keep track of what name im at however theres no way to automate the nameassigning process using code what i mean is that theres no way to keep track of the names that have already been used is there also in regards to an alternate naming approach i was considering how would i go about using the name parameter used in the playerfactory function to return the name in getname is that the right way to name a player
  label = euchre, content = since we arent writing code for the destructor in player how do we include it in the cpp in a way that the compiler wont complain about missing public funcitons
  label = euchre, content = i realized that it would be impossible to test packfromfilename without a file such as packin is there any way i can test it thanks
  label = euchre, content = should we stop playing tricks immediately if one of the teams wins 3 tricks or do you always play 5 tricks
  label = euchre, content = hi so im getting a really really weird error where my leadcard is returning a card with correct rank and different suit i checked using assert where i said card from leadcard function highest non trump card which it should be in this case when it failed i used getsuit and getrank of the card from leadcard and found out that it returned a card that had the same rank but a different suit not even the next suit leadcard function doesnt even touch the suits of the cards does anyone know whats going on thanks
  label = euchre, content = when i use a input steam from like euchretest50in my code works and the diff checker outputs nothing different than the correct file however when i enter the values manually my terminal output is different because it has a new line after the user enters a card index im confused is my code right or wrong i got 1010 on autograder as well
  label = euchre, content = when im trying to declare an array type as such arraytype number name i get an error from the compiler saying that its a use of a deleted function is this one of the mysterious errors discussed in the begining of the semester in lecture or something else thanks for the help
  label = euchre, content = so we keep getting errors with our helper function countcards which counts the cards in the hand this is the output bash42 make playertests g wall werror pedantic stdc11 cardcpp playercpp playerteststartercpp o playerteststarterexe playercpp18939 error declaration of ‘ hand ’ as array of references string countcardsconst card hand5 const card upcard bool isdealer playercpp18940 error expected ‘ ’ before ‘ ’ token string countcardsconst card hand5 const card upcard bool isdealer playercpp18942 error expected unqualifiedid before ‘ const ’ string countcardsconst card hand5 const card upcard bool isdealer playercpp3452 error expected ‘ ’ at end of input playercpp in member function ‘ virtual bool simpleplayermaketrumpconst card bool int stdstring const ’ playercpp5471 error no matching function for call to ‘ simpleplayercountcardsconst card 5 const card bool const ’ orderupsuit simpleplayercountcardshand upcard isdealer playercpp5471 note candidate is playercpp1899 note stdstring simpleplayercountcards near match string countcardsconst card hand5 const card upcard bool isdealer playercpp1899 note no known conversion for implicit ‘ this ’ parameter from ‘ const simpleplayer const ’ to ‘ simpleplayer ’ playercpp6058 error no matching function for call to ‘ simpleplayercountcardsconst card 5 const card bool const ’ ifsimpleplayercountcardshand upcard isdealer upcardgetsuit playercpp6058 note candidate is playercpp1899 note stdstring simpleplayercountcards near match string countcardsconst card hand5 const card upcard bool isdealer playercpp1899 note no known conversion for implicit ‘ this ’ parameter from ‘ const simpleplayer const ’ to ‘ simpleplayer ’ playercpp6675 error no matching function for call to ‘ simpleplayercountcardsconst card 5 const card bool const ’ orderupsuit simpleplayercountcardshand upcard isdealer playercpp6675 note candidate is playercpp1899 note stdstring simpleplayercountcards near match string countcardsconst card hand5 const card upcard bool isdealer playercpp1899 note no known conversion for implicit ‘ this ’ parameter from ‘ const simpleplayer const ’ to ‘ simpleplayer ’ playercpp at global scope playercpp1763 error expected unqualifiedid at end of input make playerteststarterexe error 1 and this is the declaration for our function did we do something stupid can someone help
  label = euchre, content = could led suit and trump suit be the same
  label = euchre, content = i have no cstdlib library in any of the header files either but it still executes properly is there a reason to this and should i still include cstdlib
  label = euchre, content = slightly absurd question but it would be really nice if i could use player names to uniquely identify players in euchrecpp thanks
  label = euchre, content = so me and my partner are doing a lot of case by case functions for euchrecpp because we need to keep track of the dealer we have spent hours trying to figure out a way around this and couldnt figure out one the code is similar but not duplicated enough to be able to account for everything in one implimention we are at about 700 lines of code without scoring done and it seems excessive i am just concerned as to wither or not we are doing this correctly and it should be excessive or we just arent thinking hard enough or is just testing case by case okay
  label = euchre, content = i am trying to test my playercpp using playerpublictest but i have a lot of multiple definition problems is there anyone who know what the problem is
  label = euchre, content = when trying to test my code on caen using putty i get this weird error message when the makefile tries to run runmytestspy and i dont know whats causing it i tried running it through the terminal on caen vnc but i get the same error message my code compiles and runs fine but its been difficult to use the diff command because i wrote my code using emacs on on a cygwin terminal on my personal computer so i was wondering if there was any way to fix this thanks bash42 make all python runmytestspy traceback most recent call last file runmytestspy line 53 in module main file runmytestspy line 23 in main returncode subprocesscall test file usrlib64python27subprocesspy line 524 in call return popenpopenargs kwargswait file usrlib64python27subprocesspy line 711 in init errread errwrite file usrlib64python27subprocesspy line 1327 in executechild raise childexception oserror errno 13 permission denied make test error 1
  label = euchre, content = does the code handling the specifications for when a player simple or human is the dealer go in the function maketrump i am confused because it takes in isdealer as one of the parameters but i thought this would be handled in the driver file thanks
  label = euchre, content = when i run the autograder under the section at the top called read this section student test case evaluation i get student test suite student card tests with my test cases listedand no errors following it then below that it has student test suite student player tests again with the test cases listed and no errors following it however my pack tests dont show up under that even though i submitted them and they are correctly named the name of my pack test is packtestsimplecpp does that mean the autograder is not reading my pack tests
  label = euchre, content = when i run sdiff for test00 it shows me this is this where the difference is when i manually plug my output and the correct output into a diff checker online it says they are identical
  label = euchre, content = where and how should i define helper functions that i want to use for across the whole project for example a function to check if a string represents a valid suitrank
  label = euchre, content = for the human player once upcard is ordered up in round 1 human decides if it wants to replace one of its cards with the upcard if human says 1 their cards are unchanged but if they say something else then one of their cards in the hand is replaced with the upcard should the upcard also be changed to the card that was being replaced does the humans card thats being replaced just get deleted problem is that the upcard is const so cant be changed
  label = euchre, content = these look exactly the same except for the commands at the top how can i correct this in my code
  label = euchre, content = i am trying to implement the print hand function according to the spec when it prints out a human hand it is sorting it by suit and then by rank see pic however when i test these exact cards i get the results that should be expected as the test below passes therefore i dont think it is a problem with since i have thoroughly tested it i am using an array to hold a players hand and call the sort function by doing the begin function and ending it at begin cardsinplayershand
  label = euchre, content = can we assume that h files given with the project be exactly same in the autograder i am not including some libraries in cpp files because they were indirectly included by calling in h files
  label = euchre, content = because the addanddiscard function is void and does not return the card that gets discarded im having trouble thinking of ways to test the function how can we go about doing this without accessing the private data members in playercpp
  label = euchre, content = its says argc is 11 but when i counted them argc is 12 right
  label = euchre, content = say a player has a hand with king of clubs king of spades ace of spades ace of clubs queen of clubs if i call playcard for a simple player where the trump suit is diamonds and the led card is also a diamond would the lowest card be the king of spades based on the order of cards in packin or would it be the queen of clubs based on the fact that the rank of queen is lower than the rank of king i guess the question comes down to what takes precedence when the trump suit and led card suit are different from all the cards in a players hand rank or suit thank you in advance
  label = euchre, content = how would you empty the hands of each player if there is no empty function specified for a player in playerh because we cannot modify the contents of playerh there is no way to specifically call a function to empty a specific players hand
  label = euchre, content = i would like to make sure one case about the game rule when the simple player plays the cards if now trump and led suit are different suit but the same color would the left bower be regarded as trump card or led card i assume it would be trump card but not led card because in the function getsuittrump the left bower would turn to be trump correct
  label = euchre, content = how come when i try to initiate cards0 to the read in values temprank and tempsuit using cards0cardtempranktempsuit i get an error code like this should i be assigning each card in a different way after this assigning i run a for loop assigning cardsi to each read in value and this also returns the same error
  label = euchre, content = i am think about using ranknamesbyweight and suitnamesbyweight to find the rank and suit of the card first but then i do not know how to print them i think i probably need to use static constexpr const char but i do not know how to convert the string to the pointer
  label = euchre, content = our human class inherits from our simple class after trying to test the human constructor we get the following compile error the simple constructor works bash42 make playertests g wall werror pedantic stdc11 cardcpp playercpp playerteststartercpp o playerteststarterexe tmpccxdmgcco in function humanhumanstdstring playercpptextzn5humanc2esszn5humanc5ess0x4a undefined reference to vtable for human collect2 error ld returned 1 exit status make playerteststarterexe error 1 anyone have any idea how to fix this
  label = euchre, content = i am getting the following error on the autograder status error please contact your administrator what does this mean
  label = euchre, content = on the project there are plenty of places where a switch statement operating on strings would be useful however the c language does not support such switch statements as the compiler is not as good at telling whether two strings are equal my question is whether the following workaround is allowed on the project httpstackoverflowcomquestions650162whyswitchstatementcannotbeappliedonstrings the workaround listed here essentially defines a limited number of string values in a custom type then checks whether the switched string is one of those if this is not acceptable then ill just find another way to do it without using switches
  label = euchre, content = when we print the human players hands and everything else for that matter are we just supposed to use cout or are we supposed to set up a different out stream also when we take in human input should it be from cin or a different in stream
  label = euchre, content = when im using make for playerpublictest i get this error g wall werror pedantic stdc11 cardcpp playercpp playerpublictestcpp o playerpublictest undefined symbols for architecture x8664 operatorstd1basicostreamchar std1chartraitschar player const referenced from main in playerpublicteste28342o ld symbols not found for architecture x8664 clang error linker command failed with exit code 1 use v to see invocation make playerpublictest error 1 im only using the to cout some text to the player what could be causing the error
  label = euchre, content = my partner and i are getting an error when trying to dynamically allocate a player pointer to a simple subtype we are getting no error when creating our human object however when attempting to do the same thing for our simple object we get this error allocating an object of abstract type simplethis seems to be strange because simple is not an abstract class and we have nothing trying to declare a player in our code help would be much appreciated thanks
  label = euchre, content = when the players are playing a card does the player who leads play another card or if we were to compare the cards played their card used in this comparison would be the led card
  label = euchre, content = hi id like to know how my output should be formatted but i cant actually view the output files in any way what should i be using to view these files
  label = euchre, content = im still al little stuck on the simple strategy if im a simple player and my hand is jack of spades jack of clubs ace of clubs king of clubs queen of clubs and i call play card with the upcard being nine of clubs and trump being clubs do i play the jack of clubs since its the highest ranking card or ace of clubs because its the highest card in my hand in the leading suit this only comes up when the lead suit and the trump suit are the same
  label = euchre, content = because player itself is defined as an abstract class how would you make an array to store all the players that are in the game in euchrecpp is there a way to declare an array that will hold both human and simple objects
  label = euchre, content = i am reading all of these suggestions on the specs and on piazza on how to handle the players hand use a vector run the game using a struct etc i just wanted to make sure that we can do it however we want as long as it doesnt change the h files and doesnt use any libraries we arent allowed to because the way that makes the most sense to me may not be the most efficient but it works just fine
  label = euchre, content = ace of hearts is lower value than queen of clubs if trump not considered
  label = euchre, content = in the autograder what exactly does the withsolutioncardpackplayer mean im passing the regular euchretests but failing the ones with that extension and if i fail euchretest50 does that mean my return code is wrong somewhere like for example a cout statement thanks
  label = euchre, content = hi there i read page 7 and page 16 in spec but still confused about the addanddiscard process it says to print an option to discard the upcard and prompt the user to select a card to discard does this mean we need two prompts and on p16 what does the 1 mean right after discard upcard if it means to discard the upcard then why do we still the next line alice plz select a card to discard thanks
  label = euchre, content = i got this error on the autogravder when i submitted my code for cardpublictests and also when i tried to run cardpublictests on caen and i dont know what it means i pass the tests when i run my code in xcode
  label = euchre, content = my partner and i are a little confused on when it is necessary to delete players a few cases 1 are we suppose to have destructors in our simple and human subclasses 2 we have created functions in our euchrecpp that take in player pointers as parameters do we need to delete those before exiting the function we are assuming no thinking that would delete our actual players 3 the specs seem to suggest we need to delete the players from the playerfactory but this seems wrong to us 4 in our echrecpp we have declared a struct array of type player does this need to be deleted as well if so how would we go about doing that thanks
  label = euchre, content = in my test cases i notice i have created pointers to dynamic players by using player factory so when do i delete them in each test cases or do i need to write the delete in the functions
  label = euchre, content = 1can i sort cards in hand and discard lowest one or should i find the index of lowest card and replace that one to upside card 2to choose lowest one should i consider upside card as a led card i am planning to use second cardless function
  label = euchre, content = i have an array to contain all the cards of a player is it better to have vector or to have an array do we need to use the sortable property of vector later in the project
  label = euchre, content = my partner has a mac and his player code compiles with sort but when he sends me the same code and i run it on cygwin it says sort is not declared in scope every time it is called it is the same exact code is there an explanation for this
  label = euchre, content = does the algorithm itself consist of one one handed shuffle so when we want to shuffle do we call the algorithm three times or is the three one handed shuffles encased within the packshuffle function
  label = euchre, content = should our code be able to account for multiple types of players for example two human players and two simple players where each human player is paired with a simple player
  label = euchre, content = is there a specific way to write our dealing function or is it okay for us to hardcode it
  label = euchre, content = for example if we declare the subclasses on the top of the playercpp and implement them below the declaration of classes is it considered a better style thanks
  label = euchre, content = i have run into a problem in euchrecpp i am calling packshuffle and it is definitely being called but it is not shuffling i have tested it and it shuffles fine would there be any reason that when i call shuffle on a pack in one of my function in euchrecpp it would not saveregister the shuffle
  label = euchre, content = can there be a mixture of simple and human types in the same game
  label = euchre, content = i tried to test my code for card and pack but there are a lot of errors about redefinition does anyone know how to solve it
  label = euchre, content = in our attempts to test addcard we are trying to declare cards but were getting the errors ranknine was not declared in the scope suithearts was not declared in the scope suitdiamonds was not declared in the scope but it worked for suitclubs and rankten whats going on
  label = euchre, content = in both the shuffle and noshuffle situations after each hand that is after printing out alice and cathy win the hand alice and cathy have 1 points bob and drew have 0 points do we shuffle the pack do we reset the pack or do we do so only when the pack index reach its maximum
  label = euchre, content = after fixing all the compiler errors i got for cardtest i tried again to compile it and this was the output i got i have included cardh and im not sure what could be causing this any ideas bash42 make cardtest g wall werror pedantic stdc11 cardtestcpp o cardtest tmpccpdp3eho in function testcardinit cardtestcpptext0xa3 undefined reference to cardcardstdstring const stdstring const cardtestcpptext0xe6 undefined reference to cardgetrank const cardtestcpptext0x133 undefined reference to cardgetsuit const cardtestcpptext0x1a5 undefined reference to cardgetsuitstdstring const const cardtestcpptext0x208 undefined reference to operatorstdostream card const tmpccpdp3eho in function testfaces cardtestcpptext0x380 undefined reference to cardcardstdstring const stdstring const cardtestcpptext0x430 undefined reference to cardcardstdstring const stdstring const cardtestcpptext0x4e0 undefined reference to cardcardstdstring const stdstring const cardtestcpptext0x590 undefined reference to cardcardstdstring const stdstring const cardtestcpptext0x5db undefined reference to cardisface const cardtestcpptext0x607 undefined reference to cardisface const cardtestcpptext0x633 undefined reference to cardisface const cardtestcpptext0x65f undefined reference to cardisface const cardtestcpptext0x6e4 undefined reference to cardcardstdstring const stdstring const it goes on and on like this
  label = euchre, content = in human player how do we know if another player has ordered up
  label = euchre, content = i understand that we will be testing our pack constructors using string streams where applicable but will i get marked down in the autograder for also including a test function that uses an ifstream i understand these constructors will be handgraded but i would like to do testing for it on my own thank you in advance tldr can i write test functions for pack constructors that read from a file without getting marked down by the autograder
  label = euchre, content = do we need to include assert statements to check that the inputparameters for each function meets the conditions stated in the rmes
  label = euchre, content = i am not sure if this is correct perhaps i did not correctly initialize something these errors keep coming up every time i try to compile and i have no idea what they mean i have been working on them for quite a while and i was wondering if anyone had any suggestions
  label = euchre, content = i get this error when i try to build my player class error expected initializer before token player playerfactoryconst string name const string strategy this is the only error im getting
  label = euchre, content = i tried to do make cardtests and it gave me this error make no rule to make target cardtests stop did i do something wrong here
  label = euchre, content = im getting a compiler error on the autograder that says there is no such file or directory for packh and im wondering why this is
  label = euchre, content = should our code add something to the command line argument packin should we add txt in order for it to run correctly or should it be running fine anyway
  label = euchre, content = in euchrecpp we created an array to store the player pointers created by the factory however when we try to call member functions from playercpp on it we get a segfault any advice on how to fix this thanks
  label = euchre, content = my partner and i are currently passing the normal public tests but failing the same version with the withsolutioncardpackplayer extension i was just wondering if someone could provide information on what these cases are testing additionally
  label = euchre, content = i am attempting to cout a card in the simple player class cout card however it gives me this error error no match for ‘ operator ’ operand types are ‘ stdostream aka stdbasicostreamchar ’ and ‘ unresolved overloaded function type is there something else i have to do to use in playercpp i have included cardh
  label = euchre, content = when we are using sort we are sorting it based on whats defined in not considering the trump and lead card in the spec it says when reaching human players we should use sort and print the cards in the ascending order im just wondering if its better to improve the spec if we can print the cards in the ascending order considering the trump and lead card too not just
  label = euchre, content = for the comparison operators should our code work for every card or are we only accounting for those included in a euchre deck
  label = euchre, content = i pass packpublictest on caen but get points off on the autograder what could be wrong
  label = euchre, content = in the spec it does not mention what to do when under human player you are dealer and in round two and the human enters pass should we follow the simple player procedure and make them order up
  label = euchre, content = are we supposed to write test functions for the constructors of human player they are not in the header file
  label = euchre, content = how do we read from the format of two of spades to type card where a suit and rank are assigned
  label = euchre, content = so for player i can get my code to run fine when i create the classes simple and human in playerh and then implement them in playercpp but in the specs i noticed that you arent supposed to modify h files and i am unable to make it work under playercpp is there a method to this other than creating the class and just filling in the implementations inside the class where you declare them
  label = euchre, content = so how would i go about using the next index to split the deck at the 17th card and how do i take those last few cards and assign them to the first 7 cards while pushing back the rest so that im not overwriting cards or am i going about this the wrong way
  label = euchre, content = i am a little confused on what would be passed into the maketrump function for the orderupsuit parameter i understand changing it if a player chooses a suit or picks up the card but what do you pass in as that string the trump suit always obviously a suit hasnt been ordered up if we are asking a player if they want to order up a suit
  label = euchre, content = when printing the dealers hand after someone in the first round orders up do we print the dealers hand in ascending order as well because in appendix b alices hand isnt printed in sorted order jack of hearts is greater than ten of diamonds
  label = euchre, content = in euchrecpp i created a array to store pointers to player as below player playersnumofplayer and i try to initialize the array in a loop reading from argv like below playersi playerfactoryargvi 4 argvi 5 i got error euchrecpp in function void initializeplayersint char player int euchrecpp9314 error no match for operator operand types are player and player playersi p even though i think operand type are both player thanks
  label = euchre, content = i have run the public test on vs and it returned three of spades and pass on a new line but when i submitted on the autograder it gave me the feedback that the return code is incorrect does anyone know whats wrong with that
  label = euchre, content = i just wanted to make sure that the following assumption is safe because it was not mentioned in the rme when the maketrump function is called the suit of orderupsuit will always be identical to the suit of upcard for example if upcard is a nine of spades then the orderupsuit will always be spades if upcard is a jack of spades then the orderupsuit will always be spades etc because orderupsuit is providing redundant informationnamely the suit of the upcard its only purpose in the maketrump function is to be modified in the appropriate situations are these safe reasonable assumptions thanks
  label = euchre, content = i did read the faq about this but my problem appears to be different i only have print statements in euchrecpp except for in the human player class when i print their hand and prompt their choices when i run test00 test 01 and test50 both locally and on caen and then diff them against the correct output files the only difference is the first line the command line arguments nonetheless the autograder says i am failing test00 test01 and test50 what else besides print statements in the wrong files could be causing this problem thanks in advance
  label = euchre, content = how can i turn off t true for assert in the output it is ruining all of my output files and im pretty sure it will effect my autograder score thank you
  label = euchre, content = i get this error when i declare a string stream in my tests warning missing terminating character winvalidpptoken but i do have quotations around my string and i have included iostream sstream and string
  label = euchre, content = okay so when i try to compile my test functions i am running into this extremely weird error and then my code explodes with a barrage of messages similar to the one at the bottom of the screenshot it has to do with my implementation of handprint a private member function i added but i am not sure exactly what it is trying to tell me any ideas
  label = euchre, content = hello i was wondering if rmes are required for the helper functions in euchrecpp i have written these for my driver but they add an extra 50 lines to my file i just wanted confirmation as to whether these rmes are required or just recommended thank you
  label = euchre, content = in playercpp for player factory it says dont forget to call delete on each player after the game is over i went to office hours and was told i must delete the players in euchrecpp which i did however it produces a seg fault when i type in delete whatever pointer it is i thought doing delete was the correct way to delete pointers but apparently not what is another way to delete the pointers
  label = euchre, content = when a human player types in a number to refer to a given card is the number they are supposed to enter to the number in brackets next to the printed card or is it 1 that number 1 for the first displayed card or 0 for the first displayed card thanks
  label = euchre, content = can we assume that all packs will be at the pack size when we write our test cases
  label = euchre, content = these are the errors that im getting when i try to compile the player public test cant seem to find the cause and ive checked all the brackets in the entire file although for some reason the first and final brackets of simple player dont register as lined up even when i commented out all the code in between any ideas playercpp in function ‘player playerfactoryconst string const string’ playercpp32926 error cannot allocate an object of abstract type ‘human’ return new humanname playercpp2087 note because the following virtual functions are pure within ‘human’ class human public player in file included from playercpp20 playerh2031 note virtual const string playergetname const virtual const stdstring getname const 0
  label = euchre, content = for testing purposes for simple player can we make a public member function which returns the vector of the hand i am having trouble figuring out another way of testing functions like add card and add and delete thanks aliya
  label = euchre, content = there are times when using an initializing list in constructor seems really hard for example packstdistream packinput do we still have to use an initializing list thanks
  label = euchre, content = how much should we trust the autograder score as to what our predicted score minus the style will be i noticed the autograder for this project ran a bunch more tests than the other projects
  label = euchre, content = my player public test passes on my laptop so why do i still get 01 on the autograder
  label = euchre, content = the corrections and clarifications say that we must check for the requires clause for functions that take a string representing the trump suit as a parameter this function just takes a string called suit for parameter which is not necessarily the trump suit do we still check for it
  label = euchre, content = i just want to make sure that i am correct in assuming that if making trump reaches round 2 the jack of the suit of the same color is still considered a member of its actual suit rather than the suit of the upcard ex if the upcard is nine of hearts the jack of diamonds is considered a diamond and not a heart is this correct sorry i have never played this game before and just wanted to make sure aliya
  label = euchre, content = when i try running the pack public tests this is what keeps happening and it wont even build however my code does build and pass when i run the tests that i wrote what could be the problem undefined symbols for architecture x8664 packpackstd1basicistreamchar std1chartraitschar referenced from main in packpublictesto ld symbols not found for architecture x8664 clang error linker command failed with exit code 1 use v to see invocation
  label = euchre, content = hello i am frustrated because i am passing all the tests my own and public and the diff checks with the xoutcorrect files when i run locally on caen despite this i am failing three euchre tests and packpublic test on the autograder i am failing to see why i would fail these tests if i pass them locally i took the advice of an instructors previous answer and am outputting human specific things in playercpp and am outputting general things like bob led a king of spades as well as all the passing and calling dialogue in euchrecpp i just dont really know what to check or fix or do since there is nothing wrong when i am running locally thank you in advance
  label = euchre, content = does the sort function sort the hand considering the trump or led suit too
  label = euchre, content = in the command line if points to win the game is 10 and now the maximum points of the two team are 9 next time they win 2 points so their points are 11 now the maximum points of the two team are larger than 10 is that ok
  label = euchre, content = so i know according to the spec we are supposed to output the arguments to the user at the beginning of euchrecpp this should look like this euchre packin noshuffle 1 alice simple bob simple cathy simple drew simple however argv0 is not giving back euchre on the autograder probably since i am coding in windows i am assuming argv0 euchreexe is it safe to just hard code in euchre because when i did this the autograder did not have an issue anymore thanks
  label = euchre, content = is there a good method to test if the error message for not opening the file is working correctly in the test suites i cannot think of a way to use asserts for this thank you aliya
  label = euchre, content = i just want to be sure this is correct according to the spec we will always be reading in a pack from a file but if thats the case what was the point of the other pack constructors
  label = euchre, content = im trying to initialize a player array in the game class constructor is there a way to initialize the array using an initializer list or should i just initialize the array in the body of the constructor instead
  label = euchre, content = i only call the sort function once in a private member function in the humanplayer class and get all of these errors plus enough to scroll a fair amount when i comment out the sort function call it compiles are we supposed to call sort in euchrecpp or is it ok if we use it in playercpp
  label = euchre, content = im using string streams for my testing and theyre ending up to be very long and past my own 80 character limit but i cannot simply hit enter to fix it since its improper syntax of a string or something is there anyway i can a string multiple lines codewise without it actually affecting what real breaks there are in the string
  label = euchre, content = ill apologize in advance if this question has already been asked my question pertains to what happens when the dealer gets the opportunity to maketrump at the end of round 1 normally they would be considered able to pick up the card shown so what if the upcard is a face card and the dealer during round 1 only holds 1 card which would become trump if the upcards suit were trump shouldnt this edge case qualify as the simple player deciding to make that suit trump as by the end of the play theyd have at least two trump face cards however the euchretest00outcorrect doesnt allow for this possibility as the upcard is a jack of diamonds the dealer alice holds the jack of hearts yet alice is supposed to pass and not call diamonds as trump is this behavior correct are we not supposed to consider the possibility that the dealer can sometimes call trump and pick up the card adding to the number of trump they hold thanks
  label = euchre, content = when i make either packpublictest or packtests i get an executable file but when i run the output file i receive no output and it appears that the file is stuck as it does not terminate it only keeps going is there a reason for this
  label = euchre, content = when i was doing the packpublictest i got an error for the packfromstream case because the ifstream ifsfilename didnt work at all and i got an empty ifstream after i changed the filename variable to packintxt and removed the txt in my packfilename constructor it worked out is it the case that were missing a txt in the filename variable how does ifstream ifsfilename work without a full document name
  label = euchre, content = during my testing i see that within euchre test 01s correct output drew plays the jack of hearts within this trick the led card is the jack of diamonds the trump suit is diamonds jacks hand is jack of hearts nine of diamonds ten of diamonds why wouldnt drew be following suit by playing the ten of diamonds i understand that the jack of hearts is the left bower but doesnt the simple player try to play cards that follow suit first
  label = euchre, content = i am a little confused while writing the maketrump function for the simple player so here are two scenarios case i suppose round 1 up card is nine of spades my hand contains a queen of spades and a king of spades thus two trump face cards given these conditions the following will happen 1 the orderupsuit will not be modified because the suit being ordered up is the same as the upcard 2 the maketrump function will return true because the player has ordered a trump suit case ii suppose round 2 up card is nine of spades my hand contains a king of clubs thus one card that is the same color as the upcard not dealer given these conditions the following will happen 1 the orderupsuit will be modified to clubs 2 the maketrump function will return true thanks
  label = euchre, content = so i have added my own public member functions in the playercpp first i assume we should write rme for it right and i wonder are we supposed to write test cases for them
  label = euchre, content = weird question but the int variable round is being highlighted the same color as assert in sublime where other int variables are not if i take the d off of the end or add other letters it becomes unhighlighted what could be causing this i didnt think that round was a keyword in c
  label = euchre, content = hello i have made several public member functions in a class genericpublic player class i am allowed access to them in my simpleplayer class although i am not allowed access to them in humanplayer specific error is no matching member function is this necessarily just a syntax error ive been trying to find a difference between how ive created the simple and human classes although none are immediately recognizable or maybe syntax in the public member function declaration any suggestions on wherewhat might be the problem is appreciated
  label = euchre, content = when i try to reset next in shuffle the system shows excbadaccess what might have cause this
  label = euchre, content = when we submit the final file to the autograder would both packin and packintxt work or are we supposed to strictly use packin i understand that this difference is caused by the os and other factors and im just wondering if a code using packintxt would work in the autograder
  label = euchre, content = are human test cases run against the autograder
  label = euchre, content = before printing out player hand should we sort it in ascending order also are new lines necessary after printing each card
  label = euchre, content = for example in the test case if i initialize a card using card card cardking diamonds instead of card card cardcardrankking cardsuitdiamonds do i possibly get style points off thanks
  label = euchre, content = in our readpack function xcode gives us the error excbadaccess inside a while loop why might this be we are testing it for usage in the istream ctor
  label = euchre, content = is it assumed that all inputs for the pack istream constructors will consist 24 unique cards or is it possible to have more than one of the same card in the input
  label = euchre, content = im confused on when i should be implementing the dealer actions that happen after maketrump i saw on the other posts that it should be a separate event so it shouldnt be included inside maketrump should i be implementing it in euchrecpp depending on if the dealer is a simple player or human
  label = euchre, content = i know the print statements are very important for the humanplayer functions and i cant seem to find any difference between leadcard and playcard given that the decisions arent algorithmic the only real difference i can find between them is the final print statement led by vs played by is there something crucial im missing about these two functions also since the print statement isnt contingent on the type of player simple vs human does it matter where i put them playercpp vs euchrecpp any help would be appreciated
  label = euchre, content = hypothetical situation suppose lion is an animal animal leo new lionleo am i not allowed to use a public function that is a part of the lion class that is not declared or defined in the animal class because leo pointer points to an animal sorry for the poor example
  label = euchre, content = the spec says that a simple player should order up in round two if they have one or more face cards of that suit in their hand is this counting the left bower say upcard was a diamond if the simple player hand is j of diamonds 9 of spades 10 of spades 9 of clubs 10 of clubs do they order up hearts in round two
  label = euchre, content = im working on the constructors for the human simple subclasses but keep getting this error and not sure what is wrong tmpccfv6vcyo in function humanhuman playercpptextzn5humanc2evzn5humanc5ev0x1f undefined reference to vtable for human tmpccfv6vcyo in function simplesimple playercpptextzn6simplec2evzn6simplec5ev0x20 undefined reference to vtable for simple collect2 error ld returned 1 exit status make playerteststarterexe error 1
  label = euchre, content = how exactly do i do this after i sort the temporary vector i need to put it back into hand but i cant figure out a way to do that
  label = euchre, content = caen shows that my output for test euchretest00 is different from the correct output but when i look at it seems similar also do we have to print out the command line arguments in our files output is below thank you
  label = euchre, content = since we cant modify the h files how can we add static private member functions in cardcpp or packcpp
  label = euchre, content = in playcard for a simple player the spec says if the player does not have a card of the lead card suit then they play their lowest card is the trump suit considered when trying to find the lowest card for example if trump is hearts and lead is spades and the hand contains only a 9 of hearts and a 10 of diamonds which one would be played if trump is not taken into consideration the 9 of hearts would be played but if it is taken into consideration the 10 of diamonds would be played
  label = euchre, content = i have helpers in cardcpp that i want to use in playercpp can i include cardcpp or will this confuse the compiler bc i already include cardsh in the playerh file
  label = euchre, content = this is something that im not completely clear on but from my understanding if we dont want to make a copy of a struct or class its better to do pass by const or if we we want to modify the parameter passed into a function we should use pass by as well we use pass by value for fundamental data types like strings or ints rights where its ok to make a copy because they dont take up much space then why is it then in for example virtual card playcardconst card ledcard const stdstring trump we pass const string trump couldnt we get the same affect with const string trump without the reference copying a string isnt a big deal right
  label = euchre, content = when i create a stringstream and try to use a constructor to create a pack with it i get a segmentation fault how else can i create my own deck without creating a new file like packin
  label = euchre, content = are we allowed to do multiple tests for a specific function in a single test if its essentially the same behavior for example to test something like getsuitconst string trump would we be allowed test that a jack of hearts wont change into the trump suit when trump is spades or clubs in the same test function
  label = euchre, content = the trump suit cant change in the first round of making trump right
  label = euchre, content = i submitted my code to the autograder and am failing several tests that i otherwise pass on my computer i even output the text into a txt file and ran diff and it found no difference between my output and the correct output for several of the tests not sure if there is something different that the autograder is expecting that i dont have or not
  label = euchre, content = in testing void functions like addcard or addanddiscard i understand that we cannot test these directly because we cannot access the private member variables so i am wondering if it is recommended to make test cases for these functions and call another function like playcard or something to test or if it is best to not make test cases for them and test them through test functions for other functions i hope i am understanding this correctly
  label = euchre, content = i was wondering since cards the array and packsize are not available for use in readpack how we were suppose to return the array of cards created
  label = euchre, content = can you use sort with a function like cardless in place of the or operators
  label = euchre, content = can there be both simple and human players in a game
  label = euchre, content = so from my understanding the functions in player are to be written without specific knowledge of the pack requirements of euchre thus do we have to test the behavior of say addanddiscard for the following hand two of clubs two of clubs three of spades four of diamonds four of diamonds with the upcard being the two of clubs
  label = euchre, content = for the destructor in playerh we dont have to add a definition to it right theres no dynamic memory in player so there isnt anything to delete the complier will kill all static memory for us correct just double checking
  label = euchre, content = i am getting an error that looks like this in function playerfactorystdstring const stdstring const playertestsimplecpptext0x0 multiple definition of playerfactorystdstring const stdstring const tmpccm5eeoboplayercpptext0x0 first defined here collect2 error ld returned 1 exit status make playertestsimpleexe error 1 i am confused on both this error and how to use player factory in terms of assigning the pointer it returns to a name saying player bob playerfactorybob simple doesnt make sense does it either way i cant compile and dont understand the error
  label = euchre, content = if you call addanddiscard after round one then you know that the upcard is also trump so should the dealer take this into account when determining their lowest card but then if called in round two you cant make this same assumption so do we determine the lowest card to discard without taking trump into account
  label = euchre, content = i add a getter function in my simple class in order to access the private vector in testcpp however when i call this getter function in testcpp i keep getting this error message does anyone know whats going on here ‘ class player’ has no member named ‘cardgetter’
  label = euchre, content = i keep getting the following error message playercpp12822 error invalid use of incomplete type ‘class simple’ class human public simple any idea whats going wrong
  label = euchre, content = if the human player enters incorrect input misspellednot a suit etc should we prompt them to try again
  label = euchre, content = for the first round of making trump if the human player does not passes would we have to make sure that the suit that they input in the is upcard suit
  label = euchre, content = when i am trying to move strings from this file to my card creation how should i do it i cant use get or anything is there a way to grab a whole word all letters before a space
  label = euchre, content = in euchrecpp is it possible to store classes such as card b or pack a in a struct or must we have pointers pointing to the certain class like we do with player objects
  label = euchre, content = for the test cases of the player subclasses i notice we cannot just access a subclass for instance if i want to test the subclass constructor i could not do simpleplayer p1some input and test the output so should i just use playerfactory to test then how do i test the playerfactory are they tested interchangeably
  label = euchre, content = im testing my code against the public tests however im getting this error when the dealone function is called even though the result of the deal function is correct can someone explain what this error means
  label = euchre, content = hand here refers to an array of cards and upcard is also a card why wouldnt this expression work
  label = euchre, content = lets say the lead suit was diamonds and the trump was also diamonds and a simple player didnt have diamonds but they had the left bowler is that considered the highest card following suit since it is technically the trump suit which is the same as the lead suit even tho it is not actually the lead suit
  label = euchre, content = 
  label = euchre, content = is the purpose of reset to have the nine of spades as the first card in a pack
  label = euchre, content = im getting a weird error when compiling ive used include packh and cardh but its still an issue this is when using make packpublictest
  label = euchre, content = in our maketrump function we take into account whether our player is the dealer or not when the dealer needs to adddrop cards then we use the addanddiscard function but we get the error member function addanddiscard is not viable this argument has the type const simple but function is not marked const how can we begin to resolve this error
  label = euchre, content = above
  label = euchre, content = is it okay if we add these public members to player class we want to access private members that we made from euchrecpp
  label = euchre, content = when we play a lead card how do we delete a card because my array that holds the card is of size maxhandsize so it will always be size 5
  label = euchre, content = there was some confusion about the name of the test files so this post is to hopefully alleviate this issue were allowing submission of up to 5 files per class 15 total of test cases the naming of the files follows a regex cardtestcpp packtestcpp playertestcpp what the represents is the ability to put anything in its place there has to be something as a result these are all valid cardtest1cpp cardtestsimplecpp by extension these are not allowed cardtestcpp you may choose whatever scheme that you want to decide how tests are broken up into individual files
  label = euchre, content = the project spec shows this prompt for make trump but what about round 1 where you can only choose the upcards suit would you need a different promt and different user input do we print anything out a new prompt if the input is not an actual suit or do we just assume it is print the hand of each player during the making procedure followed by a prompt for their making decision human player bobs hand 0 nine of spades human player bobs hand 1 ten of spades human player bobs hand 2 jack of spades human player bobs hand 3 king of hearts human player bobs hand 4 ace of hearts human player bob please enter a suit or pass
  label = euchre, content = since we are not allowed to use setters in cardcpp is the only way to write this individually setting each card of the array to its appropriate value i was thinking about trying to loop through the arrays in cardsh but dont see how i can change the card at each index without setter functions
  label = euchre, content = should we be keeping track of how many cards are in the players hand i was thinking that would help in discarding a card from the hand but since we arent supposed to have constructors for the players how would we initialize handsize 0 at the beginning
  label = euchre, content = when we print the players cards it says print in ascending order as defined by the operator however if we know the trump when we print cards such as when we print them when its the players turn to play a trick would we print them in ascending order considering the trump suit in the spec it says use the operator definition but in appendix b when they print the cards to see which card player wants to discard they consider the trump confused on which way is right
  label = euchre, content = im trying to do the dealer picks up upcard part of maketrump and im having trouble assigning a space in the simple players hand to the upcard why cant you directly do hand0 upcard do we have to create a new card with the same suit and rank and then assign to hand0
  label = euchre, content = am i correct in understanding that the function getsuittrump still returns the cards original suit but that it returns the suit of the trump if its the left bower ie jack of the same color as the trump suit
  label = euchre, content = i just want to make sure that we are supposed to print out the executable and all arguments before we print hand 0 so hand 0 should not being the first thing printed out right first print the executable and all arguments on the first line print a single space at the end which makes it easier to print an array euchre packin noshuffle 1 alice simple bob simple cathy simple drew simple
  label = euchre, content = i keep getting the following error message does anyone know whats going wrong usrincludec482extnewallocatorh4414 error ‘stdsizet’ has not been declared using stdsizet usrincludec482extnewallocatorh4514 error ‘stdptrdifft’ has not been declared using stdptrdifft
  label = euchre, content = hello i received this long error after creating my first test file for card can anyone tell me what my error is i think its something with including a file or how im using g but im not sure whats wrong i am using include cardh in my test file screenshot20160325at121622ampng
  label = euchre, content = in euchrecpp i am confused on how to exactly go about running the game simulation is this supposed to be done in the game struct that is hinted i understand that in the specs it says the game struct passes game data but what exactly is this game data
  label = euchre, content = when it says to print the players cards in ascending orderwould we do this in each of the functions such as make trump or print them in the drivereuchercpp just a little confused about what exactly should go in each of the human player functions and what should be done in euchercpp
  label = euchre, content = i call sort in my leadcard and playcard functions get get no error but when i call it in make trump i get no matching function for call to swap error
  label = euchre, content = when it says the human player should print out the cards in ascending order this takes into consideration the ranks the suits and the trump correct
  label = euchre, content = in packh class pack has private member static const int packsize 24 stdarraycard packsize cards this works just fine however in playercpp i tried to use similar method for human class private stdarraycard 5 cards this causes an error incomplete type is not allowed why is that
  label = euchre, content = if i dont totally understand the sort given in the specs to use can i make my own
  label = euchre, content = when creating derived classes from player are we allowed to make member variable static so we can use them in subclasses
  label = euchre, content = if i created a helper function so i can use it in simple and human where in the code should i put it i tried putting it in the player class but maxhandsize and other private members are not identified
  label = euchre, content = if you were to use to output a card assuming you implemented operator correctly would tagging an endl on to that outstream card endl add a newline the same way a standard statement like cout hello world endl would
  label = euchre, content = modifies packinput effects initializes pack by reading from packinput packstdistream packinput i think i am a little confused about how the modifies part of an rme works from what i understand this function reads from the input stream is this considered modifying the packinput stream if anyone could explain this to me i would greatly appreciate it thank you
  label = euchre, content = for this function the specs says if a human player is the dealer and someone orders up during the first round of making print the player’s hand and an option to discard the upcard then prompt the user to select a card to discard the user will then enter the number corresponding to the card they want to discard or 1 if they want to discard the upcard and the function rme says player adds one card to hand and removes one card from hand so should i write the function to just add any card and delete any other card or should i write it like the specs says where i order the cards in ascending order as well as discard a card the human player wants specifically
  label = euchre, content = for the simpleplayers leadcard function it says in the specs that a simple player will play the highest non­trump card in their hand or they play the highest trump card in their hand am i correct to assume that this definition of trump cards also includes the left bower suit thanks
  label = euchre, content = how would one use the sort function in conjunction with the cardless operator is this proper syntax sorthandhandsizecardless trump
  label = euchre, content = alright i have a question in the case that you have a led suit diamonds and trump suit clubs all you have in your hand is hearts and spades not including the left bower as that is considered trump what do you play the way i read the spec if the led suit is played and the simple player does not have the led suit diamonds but does have trump clubs the simple player will still throw off and throw the lowest card a low heart for example rather than trumping is that correct or would the simple player trump and play the highest trump card lowest trump card i feel as if this is unspecified in the spec thanks
  label = euchre, content = so im having trouble implementing the second definition of cardless whose declaration is bool cardlessconst card a const card b const card ledcard const string trump if the suit of the led card is the same as the suit of trump would the end result be essentially the same as calling the first cardless whose declaration is bool cardlessconst card a const card b const string trump im just kind of confused on how to implement the second cardless without 1 rewriting code and 2 having it be too long
  label = euchre, content = i noticed that suitnext doesnt have a required clause what should happen if the function is passed an argument that isnt a suit
  label = euchre, content = since we do not have to write test cases for human will the human derived class be hand graded or ran with inputs provided by you
  label = euchre, content = is it a problem that round is a keyword yet it is used as a variable name for maketrump
  label = euchre, content = i am getting all sorts of weird issues when i try to sort my hand they look like this in file included from usrincludec482algorithm620 from playercpp5 usrincludec482bitsstlalgoh in instantiation of ‘void stdsortraiter raiter with raiter card’ playercpp27540 required from here usrincludec482bitsstlalgoh54502 error no type named ‘valuetype’ in ‘struct stditeratortraitscard’ valuetype and keep going on with errors like that what can i do about this
  label = euchre, content = when a human player is prompted to choose a card to discard if they want to discard the 3rd card nine of spades will they respond by typing in 1 2 2 2 or 3 nine of spades the spec does not make this clear
  label = euchre, content = i was just wondering what the purpose is behind submitting multiple test case files is it ok to have all the tests for cardcpp in one file all of the tests for packcpp in separate single file and all of the tests for playercpp in separate single file
  label = euchre, content = if i have jackdiamondsgetsuitcardsuitclubs what should be the output is it diamonds or clubs
  label = euchre, content = do we need to write new rmes for the functions in the player class that we are overriding in the simple and human classes
  label = euchre, content = when trying to run a few games with shuffling disabled and points to win are more than 1 the compiler kind of hangs and then throws some error called bus error what does this error mean and what might have gone wrong
  label = euchre, content = i am doubtful about the correctness of the output in this file according to this output alice should have these cards ace of diamonds jack of diamonds queen of diamonds king of diamonds ace of hearts according to my code the cards should be nine of clubs jack of diamonds queen of diamonds king of diamonds ace of hearts i manually shuffled the cards in a text file and found the same result as my code attached is the image is my understanding of the shuffling wrong or is the output file my codes output matches when testing with euchretest00outcorrect and euchretest50outcorrect
  label = euchre, content = i am getting sort to actually sort the cards but after after one trick after the first card is led the sort function is removing the first card for some reason i have a discard private member function in human that removes the card that was led or played and so when i get to the second trick human player alices hand 0 of human player alices hand 1 ten of clubs human player alices hand 2 queen of clubs human player alices hand 3 ten of diamonds
  label = euchre, content = the title says it
  label = euchre, content = this may be a silly question but do we create a vector of cards for our player classes as private member variables and then implement the virtual functions for each type of player ya
  label = euchre, content = are we allowed to test multiple functions in a single test function for example when testing card if i want to test the equal operator and the unequal operator in the same function testequalunequal or something like that are we allowed to do so or is it considered bad style
  label = euchre, content = right now if we just do playerfactoryplayer simple cout player it prints out the memory location when we playerfactorplayer simple cout player it works since player factor returns a pointer do we need to fix our extraction operator implementation or just remember to always dereference the player in terms of what is expected on the autograder
  label = euchre, content = could we use an operator overload for the operator to compare to cstyle strings its currently giving me a compiler error overload must have at least one parameter of class or enumeration type but there has to be some sort of way right
  label = euchre, content = in card and pack we were given values to use for the default constructors is there any specific way we should implement the default constructors for simple and human thanks
  label = euchre, content = in our make trump for the human player should we make sure that during round one the user can only type in the suit of the upcard or pass or can we assume that they will only type a valid response because you cant choose your own suit until round 2
  label = euchre, content = can we assume that the packinput is formatted correctly if its not how should we handle an incorrectly formatted file
  label = euchre, content = i typed make cardpublictest and received these errors please help
  label = euchre, content = hi in the spec it doesnt say anything about what we should do if a person attempts to deal more cards than a pack has should we print an error message or be procactive and reset the deck when the deck becomes empty in dealone
  label = euchre, content = so i created an array in one of my test functions for card and filled it with different cards that i created using the nondefault constructor the first element in the array is correct calling array0getrank and array0getsuit return the expected results but none of the subsequent elements are correct array1getrank returns two and array1getsuit returns spades it looks like all elements in the array after the first were created using the default constructor i have another instance of this type of card array in a different test file that works i copy and pasted one of the correct constructions into the faulty one and there was no change i have tested both the default and nondefault constructors as well as the getters and all work when i copy the constructor for the card i assign into array1 and use it to replace the constructor used on the card placed into array0 aka the cards placed into the first and second array locations have identical constructors array0 returns the proper nondefault constructed card but array1 returns what looks like a default constructed card i am completely confused any advice would be appreciated thanks
  label = euchre, content = i understand that a player orders up during round 1 if the dealer is a human player is hand is printed and ask what card to discard but how exactly do we check if the dealer is a human or simple player if we cant modify the public interface to create a getstrategy function
  label = euchre, content = are we going to get docked points for style if we have a very substantial amount of if statements in the card less functions i feel like that is most likely the only way to do it at least that seems apparent it is just a lot to look at
  label = euchre, content = in the spec it talks about if a human player is the dealer and someone orders up trump than the game should prompt the dealer with the option to discard this is not something that should be included in making trump correct maketrump should only prompt the user with the option to select a suit and then end and then the discard business can be dealt with within addanddiscard and used in euchrecpp the spec isnt really clear on this
  label = euchre, content = im trying to sort a standard array i looked at 1895 and i made a copy of the original standard array but i get the error invalid operands to binary expression arraycard maxhandsize and int
  label = euchre, content = when i try compiling my cardcpp i get the following error bash42 make cardpublictest g wall werror pedantic stdc11 cardcpp cardpublictestcpp o cardpublictest tmpccelabwoo in function main cardpublictestcpptext0x17 undefined reference to cardcard cardpublictestcpptext0x561 undefined reference to suitnextstdstring const collect2 error ld returned 1 exit status make cardpublictest error 1 this happens when i use the makefile but i tried just manually typing in the compilation command and it was the exact same just with out the last line make in it i have no idea what is causing this and was wondering if i could get some help with it
  label = euchre, content = is there an estimated length of function implementations my partner and i wanna make sure our code both works and is efficient
  label = euchre, content = are we allowed to use a temporary array to hold the last 6 values in the cards array for shuffle
  label = euchre, content = should we output two of spades with or without a newline
  label = euchre, content = if human player is dealer and someone orders up during first round how do we know which card the dealer wants to discard outside of this function since we cant discard within this functionits const thank you
  label = euchre, content = since the specs said it is safe to assume that the human will always type in the correct value so when it comes to screw the dealer we dont need to check for anything because it is safe to assume the human player will type in the correct suit and not pass
  label = euchre, content = in the specs it says we have to print out the cards in ascending order does this mean i just print it out or can i also order the cards in the players hand in ascending order or am i not allowed to change the order of the cards in a players hand
  label = euchre, content = is there a way to test addanddiscard with the given functions we have in player
  label = euchre, content = im not exactly sure how to go about testing player it seems difficult to test functions in player given that theres no way to access the players hand directly for example to test addcard you have to call addcard but to assert that the card you added is now at the end of the players hand you have to call playcard with two arguments and the card returned depends on the values of your arguments is there something im missing or an easier way to work with the players hand
  label = euchre, content = are we allowed to add functions to the simple class in the public realm to do this do we have to add it in the public field for playercpp as well
  label = euchre, content = for the add and discard function are we supposed to discard the worst card
  label = euchre, content = when implementing the pack initializers does the cards have to be in the initializer list or can it be assigned inside the curly braces
  label = euchre, content = is it allowed to use same alias for a multiple object
  label = euchre, content = for the given sort function how does it know how to sort it in the correct order for example say your lowest card is a jack but that is actually the left bower you would not want to discard that card so how does that work out
  label = euchre, content = my partner and i are failing the assert statements in the check pack function in the pack public test file our firstcard is being read in correctly nine of spades spacing is correct and matches the output given by this line cardcardranknine cardsuitspades we printed out both cards to check yet we are still failing the assert statement thanks for the help
  label = euchre, content = for the 2nd and 3rd constructor are we to assume that the in file or istream will always contain 24 cards if not what should we do if there is less than 24 cards should there be a error message
  label = euchre, content = when i am debugging for pack using the pack public test and when i run the code in entirety i get a seg fault but if i comment out one of the tests and run it it passes this happens no matter which test i comment out is there any fix for that
  label = euchre, content = when playing a trick a player must follow suit of the lead card assuming the lead card is not also part of the trump suit does the suit for the lead card not include a left bower eg trump clubs lead hearts i cannot play a jack of diamonds to follow suit correct
  label = image, content = i am pretty confused about the pack constructor that takes in no arguments if this function is building a pack it needs to get that data from somewhere i understand that i have a function that builds individual cards for the pack but that function needs a rank and a suit where would my default pack constructor get that data from the other pack constructors are less confusing because they get information on wherewhat pack to read thanks
  label = euchre, content = so me and my partner are stumped here on this function it feels like a trick question because at this point we dont see how 1 a pack could ever be empty and 2 how you could ever check this given the variables at our disposal ive read a number of other posts where instructors are insisting there is always 24 cards in a pack any hep with this function would be appreciated
  label = euchre, content = just some clarification on isdealer in the maketrump function for simple player in round 1 does isdealer play any role within the maketrump function as far as i could read it does not the dealer adds and discards a card if a card is ordered up but this cant happen here since the function is a bool const function right in round 2 isdealer determines whether the screw the dealer event occurs
  label = euchre, content = is it permissible to use static const variables in my test file for example declaring certain strings at the top of the file that i would like to use throughout the file instead of redeclaring them in each test function
  label = euchre, content = after a hand is completed does the dealer stay the same for the next hand
  label = euchre, content = if all cards are unique what is the use of the overload
  label = euchre, content = what exactly am i supposed to do with playercpp i know im supposed to make subclasses simple and human but i dont really see how the functions differ too much besides simple moves by itself and human takes in inputs
  label = euchre, content = partner and i are getting this error and have no clue what it means
  label = euchre, content = im having trouble understanding this error its an error in the header file which i havent touched
  label = euchre, content = some constructors are defined as constructor int ain int bin aain bbin and constructor int ain int bin thisa ain thisb bin what is the difference and how do they effect the program also if you are using can you have a forloop after and before to assign values to an array inside constructor
  label = euchre, content = when initializing cards and whenever you refer to their suit or rank is it alright if we just use strings such as spades diamonds or jack or do we have to use rankjack suitdiamonds etc i believe either way is fine but i just want to double check
  label = euchre, content = i am confused on how to make the dealer perform an action such as pick up the upcard if bool isdealer is false can someone help me out
  label = euchre, content = i am a little bit confused on the difference if any between human players and simple players when making trump does a human player use the same screw the dealer method as a simple player if a human player dealer has to choose trump in round 2 will they automatically choose the next suit of the upcard thank you
  label = euchre, content = do we need test cases for every function even if theyre essentially tested somewhere else for example in one of my pack test files i use the dealone function to test whether in the case of each constructor the correct cards have been initialized inside of the pack in the correct order doesnt using dealone to test each constructor adequately test dealone as well
  label = euchre, content = i finished implementing all of my test cases for cardteststartercpp and i created my cardcpp file i implemented one function and tried to compile my code and a bunch of errors popped up do anyone have any ideas of what the problem could be
  label = euchre, content = is it acceptable to use an array for your hand in euchre that is set at 5 i have another parameter to keep track of the number of cards in my hand making the array only accessible for the of cards in the hard however those extra cards could be any value
  label = euchre, content = when next 23 ie there is no next card in the cards array what should the behavior of dealone be does it reset next to 0 and deal the first card in the cards array
  label = euchre, content = we are trying to implement euchercpp by first making an array of all players so we can simplify the game process but we are having trouble doing this since we can only make simple or human players any suggestions on this
  label = euchre, content = is it correct to assume that if the player is the dealer and it is the first round that you take into account the upcard when determining how many face cards of the trump suit there are
  label = euchre, content = im slightly confused if we were to lay a pack of cards faced down would the default next index 0 represent the card on the top or the bottom of the pile thanks
  label = euchre, content = the corrections for the project state that test files should be independent specifically do not include packh in any of your implementation or test files for card and player since cardh is included in packh and packh is included in our tests is it safe to assume that we can use functions from the card class in our pack tests
  label = euchre, content = hello when i compile with make playertestexe for my test cases or make playerpublictest i get pages of strange errors which are said to be in cardh on line 16 only this is very strange because this wasnt happening like 30 minutes ago in this time all i did was write implementations for the human player functions there is an error and a note that appear many times in the terminal response usrincludec482bitsstlheaph23729 error no match for ‘operator’ operand types are ‘const card’ and ‘stdremovereferencetype aka const card’ first holeindex glibcxxmovefirst secondchild and cardh167 note card cardoperatorconst card class card cardh167 note no known conversion for implicit ‘this’ parameter from ‘const card’ to ‘card’ cardh167 note card cardoperatorcard cardh167 note no known conversion for argument 1 from ‘stdremovereferencetype aka const card’ to ‘card’ any help would be appreciated
  label = euchre, content = if we are using a vector for the hand of each type of player should we be calling delete hand during the deconstructor for each player class
  label = euchre, content = for the and operator functions is there a reason why comparing rank by doing simple comparisons like rank of lhs rank of rhs works correctly for rank but not for suit suit of lhs suit of lhs is this just an overall ineffective way of comparing the cards or is it specific to suit
  label = euchre, content = i implemented a factory just as described in the spec but i am receiving this error when i compile playercpp620 error expected typespecifier before ‘simpleplayer’ where the line is return new simpleplayer
  label = euchre, content = my understanding is that when i write something like player myplayer new humanplayer or use playerfactory accordingly i should just call delete myplayer at the end of the program but that is redundant to do for 4 players so i initialize an array player players and then set every element of the array to a dynamically allocated player either human or simple when deleting i could use a loop to delete the object stored at each address but that also seems redundant is there a clean way to delete all the objects pointed to by pointers in players i know delete players is not really correct because that is used to delete a dynamically allocated array of players not an array of player ptrs
  label = euchre, content = in our implementation of the pack constructor is it correct for me to think that we would initialize the next index to be 0 ie the first card in the pack thanks
  label = euchre, content = from the spec if a human player is the dealer and someone orders up during the first round of making print the player’s hand and an option to discard the upcard then prompt the user to select a card to discard if the round was 2 then what would happen
  label = euchre, content = do we need to implement the destructor for player in our playercpp file
  label = euchre, content = i still dont understand how you can tell when a card is less value than another is it just comparing the rank does the suit matter
  label = euchre, content = is a game struct the only one that is necessary would it be unecessary to create a team struct
  label = euchre, content = are we allowed to make global variables inside our test files i was thinking to make global variables with all the combinations of cards in order to not have to remake variables constantly for each functions test case
  label = euchre, content = in cardpublictestcpp theres a test for cardless that has two cards which are both three of spades and a card led that is the three of spades what should be the correct output and why should this combination of parameters be possible
  label = euchre, content = is it ok if my derived classes of human and simple have some of the exact same private members
  label = euchre, content = in the spec and judging off of piazza all helper functions must be static are we allowed to create a constructor public member function for the simple and human subclasses of player that initializes name and the players hand to be empty or is that considered a helper function i know you cant have a static constructor sorry if this question was asked but i could not find it
  label = exam, content = i am confused with readpack first of all it is an istream and not an ifstream i am confused as to what may be passed in as an istream for example would the function be called with packin as a parameter second of all if packin is not passed as a parameter how do we access packin in the implementation of the function i noticed that there is no open member function for istreams what is the difference between istream and ifstream
  label = euchre, content = does add and discard take into account trump for the simple player
  label = euchre, content = if i have a pack i have created in a stringstream is there a cleaner way of testing its equivalence to packin without looping through the whole stringstream and comparing every word thanks
  label = euchre, content = im not really sure how to initialize a pack beside the default like how would i test a pack would it be by doing 24 assert statements and checking each card in the pack
  label = euchre, content = in the specs it says to debug in gdb to replace 01 with g in the makefile im confused about how to do this do i call make debug so it adds g to cxxflags thanks
  label = euchre, content = when we implement the derived classes for player im confused whether we should be creating an array to store the cards in the players hand or use a vector
  label = euchre, content = are we supposed to make a simpleplayerh file or can we just essentially use the playerh class file as the outline
  label = euchre, content = do we assume the pack size is always 24 so when we write the shuffle function we can assume were always cutting the pack at 17 or is there a ratio at which you cut a pack of any size to shuffle
  label = euchre, content = for the multiple test files im a bit confused should each test file have tests for each function in cardscpp or can we break it up and you would run all files to catch bugs
  label = euchre, content = for the readpack function in packcpp are we required to implement this function or can we leave it blankhave it do nothing
  label = euchre, content = my partner and i have been struggling on the operator functions and were wondering how we are supposed to access ranknamesbyweight and suitnamesbyweight
  label = euchre, content = how buggy are the intentionally buggy implementations that are going to be run for the grading for example is it possible for the buggy implementation to have only incorrect implementation for cardisface function for ten of clubs so that it is returned as true but it returns correctly for all other cards and if a case like that example is possible does it mean that we have to test for every single possibility
  label = euchre, content = my understanding for the player class is that we have to implement our own subclasses of player that have their own virtual functions and data members is it up to us how we implement these functions and private data members or is there specifics somewhere in the spec that i missed
  label = euchre, content = for the constructor packpackistream packinput do we allow to put cin as the parameter to be one test case
  label = euchre, content = i am implementing the readpack function correct me if i am wrong but i was under the assumption that we dont use the pack scope resolution operator on this function since it is a private member function when i try to assign cards into the cards array it gives me the error cards was not declared in this scope since cards is a private member of the pack class shouldnt i be able to access this inside the function when i did use the scope resolution operator packreadpack the output of packpublictest was free invalid pointer and then a bunch of addresses
  label = euchre, content = its stated in the project doc that several buggy implementations will be run to test the effectiveness of unit tests can the buggy implementation have different static variables defined in headers ex a different string or number for rankace or maxhands etc
  label = euchre, content = is the prompt for selecting a card always the same regardless of whether the card is being lead or played or discarded
  label = euchre, content = the title says it
  label = euchre, content = are we permitted to make a getcardweight function that we could use when we are implementing the operator loading functions if so where could i put the definition so i would not modify a h file
  label = euchre, content = i am trying to test my simple player class but i cant seem to get the playerfactory function to work i implemented it similarly as the spec but i get compiler error c2061 syntax error identifier simple what does this mean i have made a constructor for simple and it inherits from player
  label = euchre, content = are the player types case sensitive is simple and human still acceptable instead of simple and human
  label = euchre, content = hello in the two aforementioned functions i want to use the sort function on my hand the line handsorthandbegin handend gives the following error playercpp in member function virtual card simpleplayerplaycard playercpp2018 error class stdvectorcard has no member named sort handsorthandbegin handend with the same error for the similar command which appears in leadcard my overloaded operators are well defined in cardcpp and functional
  label = euchre, content = if the led card is ten of spades and trump is spades if player has in their hands queen of spades ace of spades jack of spades jack of clubs ten of diamonds they would play the ace of spades right because isnt it highest suit card even though jack of spades is technically the card of the highest value because it is the right bower
  label = euchre, content = if led card for example is jack of diamonds and trump suit is hearts do we have a case here that led card suit is the same as trump suit or does led card suit act independently here
  label = euchre, content = if we are making the human player how do we take into account for the screw the dealer part do we have to output something special stating that the human cannot type pass or is it expected they will not type pass if the trump making comes around to them the second round if so then that basically means there is no need for the input of the round variable into the function maketrump for the human
  label = euchre, content = i am getting this error packcpp1318 error implicit instantiation of undefined template std1basicifstreamchar std1chartraitschar stdifstream finpackin applicationsxcodeappcontentsdevelopertoolchainsxcodedefaultxctoolchainusrbinincludecv1iosfwd13133 note template is declared here class libcpptypevisonly basicifstream what does it mean
  label = euchre, content = i have a question on test cases for or operator in cardcpp to validate the operator comparing suit and rank properly i believe we need to write at least c132 test cases for rank and c42 test case for suit are we expected to write this much test case or are there any way to make this number of test cases smaller are there any chance we can use rand function so that we can create two ranks randomly thanks
  label = euchre, content = i just want to make sure if what i think of this particular situation in round 2 of making trump is right for example if the upcard is ten of hearts if the player has the cards nine of hearts jacks of spades king of spades king of clubs jack of diamonds they wont order up right because the jack of diamonds counts as a hearts suit and so because it is the left bower they are not allowed to order up the same suit as the upcard in round 2 so therefore maketrump would return false in this case right
  label = euchre, content = im getting a segmentation fault when packpublictestcpp calls checkpack for defaultpack ive checked with cout statements that the other 2 packs are running through checkpack fine but the default one is where its failing im confused because all of my constructors for pack use readpack so i know that this function works as well what might be wrong with my default constructor for pack
  label = euchre, content = virtual const stdstring getname const 0 in the function declaration above what is the difference between those two const and why we need
  label = euchre, content = it says that it does not consider trump suit but does it consider led suit
  label = euchre, content = does this function return true only if they have the same rank and same suit or just when they have the same rank why would we need duplicates in euchre
  label = euchre, content = when i run the cardpublictestcpp under linux it compiles with no error then i write a new cpp file called cardtest1cpp in which the content is exactly the same as cardpublictestcpp i just copy and paste every line of the code and then when i try to run cardtest1cpp it cannot compile the error message is cardtest1cpptext0x5e undefined reference to cardcardstdstring const stdstring const everywhere whats the problem its just the same content with a different name however one can compile while the other cannot
  label = euchre, content = can we assume we will always receive a pack file that will have the appropriate amount of cards or do we have to check for this in our code thank you
  label = euchre, content = im confused as to what these are in cardh is this a function that we have to implement and also how can we use it in our code
  label = euchre, content = are we allowed to initialize the cards array in the body of the basic pack constructor or must we initialize it in the initializer list as part of the definition
  label = euchre, content = what is supposed to be printed out with cout threespades endl in cardpublictest im just getting a blank line but is it supposed to print something out
  label = euchre, content = in the public test file for the pack functions our last assert statement for assertfirstcard cardcardrankqueen cardsuitspades is failing when we print what it thinks our actual firstcard is it says king of spades we think the issue is because the public test cases doesnt call packreset again between the two packdealone function calls so the second firstcard declaration is actually the second card could this be the case or have we made another error
  label = euchre, content = for functions like bool packempty const is it safe to assume pack will always have 24 cards or should we consider the possibility that another game may use a pack with 52 or 108 cards
  label = euchre, content = generally i understand the purpose of a const function but why is maketrump const i am fairly certain that it does modify a member of the humanplayer class namely the hand since we must sort the hand before we print it to the user am i understanding this correctly
  label = euchre, content = in the spec it says use these libraries iostream fstream cstdlib cassert cstring string array vector use the algorithmlibrary but only for the sortfunction however in the cardpublictestcpp they use include sstream to test the operator function are we allowed to use this library as well for our own test cases
  label = euchre, content = so i want to make a helper function in packcpp i want to pass in the stdarraycard packsize cards and have it return an array of cards i tried doing the return type at card but that gives me an error saying cannot convert ‘stdarraycard 24ul’ to ‘card’ how can i return an array of cards
  label = euchre, content = the summary says it all it seems like the data is better encapsulated in a class so can we make one
  label = euchre, content = undefined symbols for architecture x8664 cardsuitspades referenced from carddefaultconstructor in cardteststartero ld symbols not found for architecture x8664 clang error linker command failed with exit code 1 use v to see invocation so i am aware there have been multiple posts about the undefined symbols error but this seems to be occurring at a weird point for me in writing a test case for the default constructor of card i have an assert to check that the suit is equal to spades as defined by the public variable suitspades now if i just check that suit is equal to the string spades no issue everything runs fine note i am calling getsuit to do this but if instead i try to assert that suit is equal to suitspades i get the error above this makes no sense to me i have had this error and linker command errors before but not when i use a specific variable like this note that i am including all libraries and all the necessary cpp files are checked in the target membership of xcode the other non cardcpp files are not checked so help please
  label = euchre, content = do i put a card before the bool operator and suit next and cardless
  label = euchre, content = is it allowed the we create variables and objects in the main functions of our test cases that we pass by reference to our test functions
  label = euchre, content = just want to make sure that for the card less considering led card function the led card rank is not really important because we only want a led card to determine the led suit correct
  label = euchre, content = what do we do in the case where in round 2 screw the dealer is invoked and the dealer does not have a card with the same color suit as the upcard
  label = euchre, content = i wanted to create an extra class to hold the member variables for a players name and hand are we allowed to make these protected so that the inherited classes can access them or should i just create a simpleplayer and humanplayer that inherit straight from player
  label = euchre, content = does it matter whether i print through functions implemented in my functions or euchrecpp
  label = euchre, content = when i run the card public tests there are so many error messages in cardh but i didnt change anything about the header file what will be the possible reason
  label = euchre, content = i remember that the code review sheet for p2 and p3 had the requirement stated in the title that the code is not too deeply nested in loops or conditionals i assume a similar requirement will be issued in p4s code review im just trying to get a better understanding of what specifically too deeply means i believe in 183 we were told not to go past two layers of ifelse statements but i dont know if that applies here because i do exceed that in my code right now in p4
  label = euchre, content = how do we test players i understand how the playerfactory function works but then how do we perform member functions from our simpleplayer or humanplayer class on the player created example playerfactoryjim simple and if i want to use getname on jim how would i do this
  label = euchre, content = my implementations uses the sort function in the algorithm library to do a few things and when i build the solution i get the following error error c2678 binary no operator found which takes a lefthand operand of type const card or there is no acceptable conversion i have already implemented all operator overloads in cardcpp so im not sure where the error could be or how to narrow it down since i am only given a line number in the algorithm file any help would be appreciated
  label = euchre, content = just as we were given the order of a standard deck of euchre cards could we also be given the order of a deck after a shuffle just to make sure our implementation for shuffle is correct
  label = euchre, content = i know the registration was due yesterday night but my partner and i have already been working together yet both of us thought the other person had signed us up as partners as a result neither of us signed up is there a chance we can still sign up today
  label = euchre, content = for the pack constructor with a filename i declared an ifstream in order to read in the information from the file when i run the make file for the public test i get the error implicit instantiation of undefined template in reference to the ifstream i created what does this mean
  label = euchre, content = are we allowed to use stringstreams for the pack default constructor i found it much easier than other tedious methods
  label = euchre, content = how do we test constructors specifically pack that takes in filename if no existence of files is guaranteed in the autograder
  label = euchre, content = in the specs it states you will also implement an option to run the game with shuffling disabled ­ when this option is chosen just reset the pack any time shuffling would be called for this may make for easier testing and debugging do we make a new function to do this or do we just add it into our shuffle function i dont fully understood the disable shuffling option
  label = euchre, content = when i tried to run cardtestcpp i typed make cardtests and got nothing printed out as the following whats going wrong bash42 make cardtests g wall werror pedantic stdc11 cardcpp cardtestcpp o cardtestexe bash42
  label = euchre, content = would it be meaningful to assert this way and make sure the other way around is definitely false or one of them is safe enough assertcardlessc15 c14 cardsuitclubs assertcardlessc14 c15 cardsuitclubs
  label = euchre, content = static constexpr const char const ranktwo two stdstring rank why ranktwo is a char type and the private member rank is a string type why we need to declare ranktwo as a pointer how can we convert a pointer to a char to a string variable so that we can finish the implementation of card initialization
  label = euchre, content = static constexpr const char const ranktwo two can anyone explain what constexpr means in the statement above and whats its effect
  label = euchre, content = does my output for euchrecpp when i do euchre packin noshuffle 1 alice human bob human cathy human drew human euchretest50out supposed to contain euchre packin noshuffle 1 alice human bob human cathy human drew human at the first line
  label = euchre, content = does this mean that we cannot access the suits and ranks array in cardh in packcpp because they are static and cannot be accessed anywhere outside of cardcpp
  label = euchre, content = how would you write a function stub for the operator function in cardcpp
  label = euchre, content = in the spec it says within one row further to the left is greater however in the top row of the trump suit cards i assume further to the right is greater right
  label = euchre, content = i would like to use ostreamstring for testing and i think this is the only way i could test the overloading but the spec does not allow me to use sstream library then i dont know how to test because i could not initiate ostringstream without include sstream
  label = euchre, content = when i test getsuit with trump is it ok i do this assertjackofheartsgetsuitdiamonds cardsuitdiamonds or do you guys only want us to do it like this assertjackofheartsgetsuitcardsuitdiamonds cardsuitdiamonds
  label = euchre, content = i have an issue testing the cardless function with the led card considered in my testing file i am testing both cardless functions but when i try to test the cardless function with the led card and trump considered i get an unresolved external i can successfully test the first cardless function but for some reason i cant with the other
  label = euchre, content = for the computer does it count the lowest card including the upcard before discarding a card
  label = euchre, content = what does this mean arraycard packsize cards
  label = euchre, content = when i declare a variable which is not primitive and make a pointer to it i get the error parameter of type pack is not compatible with type pack that is i want to write pack pack pack packptr pack and the compiler will not let me retrieve the address what am i doing wrong
  label = euchre, content = for example i am trying to call the nondefault constructor it takes in 2 pointers to strings the consts are cstrings so i do something like stringranknine and pass that as a parameter to the constructor not working ideas thanks would it be stringcardranknine
  label = euchre, content = in the specs it says that anytime screw the dealer is invoked the dealer declares trump to be the suit of the same color as the upcard does this mean he always makes trump the other suit of the same color or can he pick up the upcard the strategy in round two is that if the player has one face card of that suit he will order up my question is does this include the dealer if it reaches him should he still check to see if he has one face card of the same suit as upcard or should he just automatically make trump the opposite suit of the same color i hope this is clear but if i need to clarify the question i am happy to do so
  label = euchre, content = i want to test the left bower for this function suitnext function say the trump suit is hearts the left bower is then the jack of diamonds should the suitnext function return hearts or diamonds i feel like it should be hearts thanks saul
  label = euchre, content = for the four cardh operator functions when it says does not consider trump does this mean we do not consider the suit at all do we only compare ranks thanks saul
  label = euchre, content = what is the link for p4 partnership registration
  label = euchre, content = hiwe have to write test case for cpps however do we need to test for the private functions of each class if not nvm but if so do you recommend us to take the private members into a new class as public member for testing purpose only
  label = euchre, content = im confused about the pack constructor with no arguments are we supposed to initialize the pack card by card or use something else that im not seeing
  label = euchre, content = how do you know what to write for wget does anyone know what the address specific to this project is googl
  label = euchre, content = with a simple player is the left bower taken into account when determining which card to play for example if the led card was the nine of spades would the simple player play the jack of clubs if they had it or would they only play the highest valued card that matches the suit of the lead card exactly
  label = euchre, content = can we assume that the format of the istream passed into this function will always be the same as the format of packintxt
  label = euchre, content = in playerh why does the playcard function have the trump parameter wouldnt we be able to get that just by calling ledcardgetsuit
  label = euchre, content = when i run make cardpublictestcpp it gives me this error nothing to be done for cardpublictestcpp not sure how to fix this thank you
  label = euchre, content = are we allowed to use the packin file to initialize our pack constructors
  label = euchre, content = is it worth it to keep the players hand sorted throughout the game both simple and human is this an implementation detail that we can choose to have i feel like it would be very beneficial as getting the highest valued card in a hand would be as simple as just grabbing the last element in the array
  label = euchre, content = will we be able to include files that we use in our test cases in our submission i assume well be able to test using packin but im testing shuffle right now and am comparing it against the correct output that i have stored in another file if i dont submit the file with the test case then it would automatically fail on the autograder will i be able to include it with my submission or will i have to just type it out
  label = euchre, content = i know from the effects clause that the reset function is supposed to put the index back on the first card but is it supposed to do anything with the cards array say we call the shuffle function and then reset would this shuffle the cards and then once reset is called put the cards back to how they were before the shuffling or would reset just alter the index
  label = euchre, content = for the functions in the card class which take in a string trump there is no requires clause that says trump has to be one of the four suits could someone pass in a value for trump that is not spades hearts clubs or diamonds
  label = euchre, content = it says in the spec that we can only use these libraries but i used sstream in my testing is that not allowed
  label = euchre, content = ive seen the other posts but im still slightly confused effects returns the suit hint the left bower is the trump suit stdstring getsuitconst stdstring trump const for this function if i pass in spade as the trump but left bower is jack of clubs but i would still return spade right or clubs
  label = euchre, content = im having the following problem when compiling make cardtests no rule to make target cardtestexe needed by cardtests stop i have a single file cardtest1cpp that i am trying to test what is the issue here thanks
  label = image, content = i implemented the readpack function declared in cardsh by using the scope resolution operator in cardcpp since the scope resolution operator specifies that everything beyond it is within the scope of the classif i understand that correctly then is the way i implemented readpack legal xcode gave me no errors
  label = euchre, content = in cardsh how do we call all the operator functions while testing as in how to call bool operatorcard card
  label = euchre, content = can we make a islead function similar to istrump
  label = euchre, content = it does not specify in the requires clause of the cardh functions such as cardless that card a and card b cannot be equal however since a deck of cards never has two identical cards can we assume we will not be given faulty cards or should we be checking for duplicates
  label = exam, content = well be holding the third exam office hours next tuesday 32216 in 1500 eecs the problems have been posted in the review folder on the google drive pin
  label = euchre, content = this may seem obvious but in c can you use functions declared later in the header file in a function declared above it eg could i use one of the bool functions in the cardh file in the implementation of the getsuit function in the cpp file
  label = euchre, content = what is this virtual player i understand it is to avoid compile errors but should we write an overwritten function for it in the derived classes simple and human
  label = euchre, content = i noticed maketrump requires the dealer to add the upcard to their hand and discard another card from their hand however maketrump is constant and the function addanddiscard modifies a hand member variable does maketrump call addanddiscard because thats what it seems to say in the spec
  label = euchre, content = i treid running the public test and came upon this error cardpublictestcpptext0xca undefined reference to cardcard i have no clue where to go from here any suggestions
  label = euchre, content = it appears that visual studio 2013 that comes on the caen computers does not support constexpr which is used in this project is there any workaround to this within visual studio
  label = euchre, content = is line 21 of the public card test supposed to be as it is im confused as to why its assertthreespadesgetsuitcardsuitclubs cardsuitspades instead of just assertthreespadesgetsuit cardsuitspades
  label = euchre, content = write tests for card in up to 5 files with names that follow the pattern cardtestcpp so why would we need 5 files and what is the pattern mentioned is the asterisk supposed to be a number thanks friends
  label = euchre, content = effects returns true if a is lower value than b uses trump to determine order as described in the spec bool cardlessconst card a const card b const stdstring trump where in the specs is this
  label = image, content = if im doing my code review for project 3 with the same person as i did with for project 2 can we submit the old selfie that we took for project 2 instead of taking a new one
  label = image, content = do we need to submit both a review sheet someone else did on our code and a sheet we did on their code or do we only need to submit the sheet someone else did on our code
  label = euchre, content = for writing member functions in a cpp file for example card do we need to use the operator for example would it be string cardgetrank const or string getrank const does this also apply to the constructor i only ask because its creating an issue on xcode
  label = euchre, content = should we be shuffling our deck by pointer as to avoid passing our objects by value
  label = euchre, content = can we assume that card a and b cannot be equal meaning they cannot have the same suit and same rank because each card is unique
  label = euchre, content = im a bit confused on how to implement the pack constructor that takes in a file it looks like we use readpack but what does readpack exactly do is readpack supposed to read in the input file and assign values to the private members im confused on the difference between readpack and the constructor
  label = image, content = this is very last minute but does anybody need a code review partner
  label = euchre, content = i seem to be having some problems when reading from packin initially it would not find the file unless the file name used in the packpublictest was renamed to packintxt and when it read the file it would only read the very first line of the file regardless of whether i used getline or the operator using the original file name of packin renders the file inaccessible and consistently returns the error stating that the file could not be opened i have the working directory set to the correct one and i am completely stumped as to what the problem could be
  label = euchre, content = as i code player derived classes i have found that they need the same member variables a name and a vector of cards this means i am duplicating both their declarations as well as several functions such as getname and addcard is there any way to avoid this and implement functions once for both derived classes to use in cases where the implementations will be the same
  label = euchre, content = for the default constructor for pack should we also initialize next to 0
  label = euchre, content = are we always going to get the deck at 17 cards no matter if the deck has 24 or less than 24 cards ive been stuck on shuffling for a while and im pretty sure the reason im failing the public test for pack is that we deal a card before we shuffle so essentially we have to shuffle only 23 cards can we assume then even if we shuffle 23 cards we are cutting at 17 cards
  label = euchre, content = is it valid to have 28 as ranks in the spec i only see ranks from 9 to ace
  label = euchre, content = are we allowed to implement static helper functions within cardcpp but not in the card class
  label = euchre, content = should we be printing in the driver program euchrecpp or in various functions of simpleplayer humanplayer the end result should be the same but in terms of testing if simpleplayer is tested on its own will printing be expected then thanks
  label = euchre, content = there are some member functions require suits and ranks as parameter instead of using cardsuitxxxx are we allowed to use direct strings such as queen or two to be the parameter in test cases just for have more comprehensive tests
  label = euchre, content = so we should give names for multiple files of the test cases in the spec it says i dont get how these names were created can i just name them cardtest1cpp cardtest2cpp
  label = euchre, content = okay so i was working on packcpp and wanted to test it when i ran the final version through the packpublictest i got a segfault so i went into the test files and added a few couts to see where the error was coming from what really confused me was that if i add a cout endl directly before and after checkpackdefaultpack i pass the public tests but only when i have a cout endl both above and below it any explanation for this
  label = image, content = if i had a partner for project 3 do we each need to find someone to review our code or can we find one person to do it for the both of us
  label = euchre, content = just want to make sure is it only be changed to trump suit when the color is the same and the rank is jack so there would be three conditions color of trump color of current suit and rank is jack
  label = image, content = i know my partner and i need to submit code reviews separately but can we have our code reviewed by the same person
  label = euchre, content = i apologize if i just couldnt find it but how are various rounds of euchre meant to be handled for example lett say ive completed the first round of euchre and team 2 won after calling trump gaining one point for themselves how do i reassemble the deck in a systematic way for the next round of shuffling and dealing thanks
  label = euchre, content = i want to create a function that returns the cross suit of a card or suit but i need access to the 4 constants in cardh i cant use the scope resolution operator because i would need the declaration in my cardh file right
  label = image, content = hey i completely forgot we had to do this and really need someone to do this with i live in landmark and would be willing to meet on central tonight or tomorrow morning and will be on north all day tomorrow so either works
  label = euchre, content = why do we have ranks such as ranktwo two when we will never have 2 in the deck of cards because euchre uses only 9 10 11 jack queen king ace
  label = euchre, content = are we allowed to have a body for our constructor functions or is this completely against the rules in 280 at least
  label = euchre, content = for the operator overloading functions and do they compare the suit and the rank of the card excluding the trump or just the rank thank you
  label = euchre, content = will we be provided with the packin file when project 4 is being tested in the autograder we are unsure if we can use that to initialize a standard deck or if we need to hard code in all 24 cards in the standard order
  label = euchre, content = is the order from packin made for the index for the next card to start with 0 or 23
  label = image, content = if we worked with a partner do we need to do two separate code reviews with two different people
  label = euchre, content = in things like suitnext what should we do in the case that suit does not equal one of the four valid suits can we just have an assert0 in that case and not need to return anything in the case that we must return a string i dont want to return garbage should i just have a else assert0 return garbage knowing the return will never get hit due to the assert in the general sense for all of these functions without requires clauses should we just assert0 if the output will be invalid
  label = euchre, content = i understand by default the sort function takes in only the begin and end iterators and uses as the default comparison predicate but in one of the functions i find it particularly useful to use the cardless function as the comparator however the other version of sort function only takes in a binary predicate which is not the case for the two cardless functions because they take in trump andor ledcard as additional arguments what would be a correct way of using cardless together with sort i know it can be achieved using lambda expressions but that seems beyond the scope of this course can i still use them or should i instead just write my own sorting algorithm using loops etc
  label = euchre, content = since in euchre the only time you would pick up and then discard a card is when being ordered up can we assume that the card being picked up const card upcard is of the trump suit from there we can then better determine which card to discard with having knowledge of trump thanks
  label = euchre, content = the dealer then discards the lowest card in their hand counting the upcard for a final total of five cards from p4 specs page 6 third paragraph is this implying that we have the option to discard the card which is ordered up under extreme circumstances the rest of your hand would have to be trump higher than the card ordered up if so thats dumb thats against the rules of euchre i agree with dumbing down the strategy but this would be against the basic rules of euchre the reason you have to discard a card when ordered up is because you are forced to pick up the card which is ordered up
  label = euchre, content = canshould we be using namespace std in the cpp files card pack and player
  label = euchre, content = when i try to run cardtestcpp using only the copied and pasted code from the public test i get this error cardtestcpptext0x11 undefined reference to cardcard cardtestcpptext0x6a undefined reference to cardcardstdstring const not sure why because i havnt written anything really
  label = euchre, content = hello everyone due to last minute changes of plans i have moved my regularly scheduled office hours on thursday from noon to 3 to today from 1230330 this change is reflected in the course calendar
  label = euchre, content = i dont get what this function is supposed to do and how its different from the suitnext function
  label = euchre, content = hey everyone tuesday march 15 during office hours from 6308pm vidal and i will be teaching how to play euchre of course individual project questions are welcomed as well but we will have a run down of how to play the game and the simple player strategy indeed you may learn some better strategies that actual human player will use and you can use to impress and beat your friends come with your own deck of cards if you want or well have some to demonstrate 1695 bbb be there pin
  label = euchre, content = i am getting a excbad access error when working with my constructor cardcard i usually get this issue with arrays i not accessing the suitnamesrankname arrays and dont know what the issue is
  label = euchre, content = are we allowed to create a leftbower helper function or is it not allowed because its not part of the h file the function would return the suit of the left bower of an inputted suit i dont believe thats what getsuittrump does so would it be beneficial to write your own function
  label = euchre, content = does each test file need contain at least one test for each function some functions require more test cases than others
  label = euchre, content = i have been trying to implement playercpp with static helper functions but i have run into an issue if we cannot declare static helper functions how can we have our helper functions be able to access the private data of our classtype objects if this is also impossible how can one offload the work load from the main functions for example if one were to implement a print function to print someones hand how could this function access someones hand as a helper function thanks
  label = euchre, content = effects returns true if lhs is lower value than rhs does not consider trump bool operatorconst card lhs const card rhs does lower value mean lower suit or lower rank or both meaning lhs would be lower if it had a rank of two or a suit lower than rhs with a rank of 2
  label = image, content = hi i failed the boundary test for compute vertical cost matrix i was pretty shocked to see that at first then i go back to the specification then i guess what the problem happens here please correct me if i am wrong and close the discussion so in the specification i guess some people will be misled by this diagram so look at the boundary case here there are only 2 arrows coming from above the pixels at the last column but the above line says to get any pixel we have to come from one of the three pixels above it right ok here is what i thought in the left picture common case 3 arrows come from left just above and right in the right picture we expect to see the same thing but we cannot find the arrow from northeastern so according to my understanding probably some other students as well we consider 2 arrows coming above in the computation but it seems you want to see is this i mean if this is what we should do at the boundary case to fill the to get any pixel we have to come from one of the three pixels above it requirement you know isnt that wired in terms of a normal logic interpretation of the graph but i am not totally sure if this is what you really want i post it because i cannot think of any other problems that makes my code of this function fails thanks
  label = euchre, content = im sort of confused as to how our algorithm is shuffling the deck of cards the dealer shuffles the deck at the beginning of each hand the algorithm we use for shuffling is a variant of the “one handed shuffle” cut the deck at 17 cards that is split the deck into two parts cards 0­16 and 17­23 and swap the two parts do this 3 times isnt the above implementation equivalent to just cutting the deck once i guess i dont understand where any of the shuffling is taking place besides a single cut equivalence
  label = image, content = hi my partner and i didnt pass the matrix max test even though were absolutely sure our implementation is correct we were just wondering what kind of edge case was tested because its bothering us if anyone knows well greatly appreciate it
  label = euchre, content = i am guessing we can use them interchangeably when define our own variables and they have similar functions ps is there any difference in using arratn or arrn when indexing an array
  label = euchre, content = do we need to make another constructor for the player andor do we need to make an array for the players hand should the players hand be a class under player
  label = euchre, content = i dont really get the point of the trump if the player now cannot follow the current suit he is allowed to play any lowest rank he has right than should he consider trump suit or anything other than playing the lowest ranked card
  label = euchre, content = are we able to use the functions declared at the end of the cardh file in our implementations of the member functions i dont mean are we allowed to in the context of the project but is it actually possible i tried using suitnext and got an error thanks
  label = euchre, content = when i use this function as described in the spec the compiler goes crazy and prints lots and lots of errors eventually stops and says too many errors emitted
  label = euchre, content = for some reason when i run cardpublictestcpp through my terminal it says unknown type constexpr in cardh im confused why it is saying that it is an error when i didnt edit cardh
  label = euchre, content = if the player abstract class has no explicit function declared that can print out the hand of cards a player has how can we implement a feature that prints out a simple player or human players hand
  label = euchre, content = so im developing in caen using eclipse luna whenever i try to declare andor construct an array type the ide yells at me and tells me thatsymbol array could not be resolved i did put include array on the top of the file im guessing that this has something to do with the c11 does cdt support this so i did change the indexer to be more through and and added stdc0x in the processor inclusions and in the code analysis discovery and in the build settings i dont know what more i can do to please eclipse although i could continue to write the program whilst the ide is throwing error warnings here and there it feels unsettling to keep going because if i actually do make an error in my code it would be harder to spot because of all the bells and whistles on my screen i also refreshed my project after all of these changes with no avail how can i get eclipse to realize that array is actually part of the c language i would greatly appreciate all help thank you
  label = euchre, content = im assuming yes in cardcpp would you start to write its implementation with this cardoperatorconst card lhs const card rhs implementation
  label = euchre, content = for this function if the suit of the left hand side is spades and the suit of the right hand side is hearts would lhsgetsuit rhsgetsuit return true or should we go about comparing the indices in the suitnamesbyweight array
  label = euchre, content = i am unclear how other files can access simpleplayer implementations of files as i thought we could only link h files since our class definition and implementation of simpleplayer functions lies in the playercpp file how can outside scopes such as the simpleplayertest program access these functions and still only link h files thanks
  label = image, content = the title says it
  label = euchre, content = during round 2 it says a simple player will order up the suit with the same color as the upcard if they have one or more face cards of that suit in their hand for example if the simple player has jack of spades 10 of hearts 10 of diamonds king of diamonds king of hearts and the upcard is 10 of clubs would the jack of spades be considered as clubs considering the suit of upcard as trump suit since it will be the left bower and simple player passes since there is no card that has same color as clubs which is spades or would the jack of spades not be a left bower yet because trump suit is not really selected yet and simple player orders up since the simple player has a card with same color as clubs which is spades
  label = recursion, content = if i had a 12 for test cases split into functions what does that mean all of my tests were functions and properly named to reflect the function it was testing
  label = euchre, content = in particular this function of player virtual bool maketrumpconst card upcard bool isdealer int round stdstring orderupsuit const 0 i am not sure in what way would isdealer affect his decision whether to make trump or not could you please clarify the rules of the game about making trump
  label = euchre, content = since we cannot modify the h files do we put the class simpleplayer in playercpp also is there a preferred name for the simpleplayer class im assuming simpleplayer is the best name
  label = euchre, content = i have looked for the specific logic we are supposed to program into the simple function that adds and discards a card notably if the simple player was the dealer however i cannot find any mention of how the simple player makes the decision to discard a card logically i would assume we should simply remove the card of lowest objective value but i cannot find this written anywhere is this the case
  label = euchre, content = since only cards 9 through ace are in play do we need to handle andor test other cards
  label = euchre, content = when developing in an ide which toolchain should we use for this class for autocompletion and error checking i have the options of cross gcc cygwin gcc linux gcc macosx gcc microsoft visual studio c mingw gcc and solaris gcc
  label = euchre, content = when testing our overridden operator for card can we use ostringstream to capture the output the spec doesnt say we could include sstream
  label = euchre, content = if you are interested in pairing up as partners for this project contact me at takellumichedu
  label = euchre, content = do we have to test whether the player is created according to the correcting strategy or not
  label = euchre, content = the playerh file does not define the child classes so do we have full freedom in naming its functions and necessary variables if we do are the functions helper functions to be declared static
  label = euchre, content = do we get to choose however we want to use readpack as it has no rme if yes do we have to test it since it is a private function anyway
  label = euchre, content = i obtain the following error message when trying to test my cardcpp file bool cardoperatorconst card const card must take exactly one argument i understand this would be the case if i defined this operator and the other similar operators inside the card class but this was not done nor was it done by me as they were given to us in the cardh file what am i missing in terms of why the compiler thinks only one argument can be passed to be interpreted by the operator thanks
  label = euchre, content = may we freely print to cout for testing
  label = euchre, content = will it be there in the directory when the autograder is evaluating test cases
  label = euchre, content = whenever i cout cards in a loop which is possible because of the operational overload i get an infinite loop
  label = euchre, content = does the pack actually refer to the cards member array also if that is the case do we start adding cards from the index 0 or from the last index
  label = euchre, content = i got an announcement that this is posted on our google drive but i dont see it in the project 4 folder or any other folder do we use the same sheet as last time
  label = euchre, content = requires rank is one of two three four five six seven eight nine ten jack queen king ace suit is one of spades hearts clubs diamonds effects initializes card to specified rank and suit cardconst stdstring rankin const stdstring suitin should the private member rank be one of two three four etc or rankin be one of two three four etc
  label = euchre, content = the title says it
  label = euchre, content = what does operator mean has this been covered in the lecture or will it be covered in future
  label = euchre, content = hi im a little confused about how to set up our tests in project 4 the spec references up to 5 files that we an submit for each class my confusion is what exactly each file should test like would we write one file to test all the functions relating to the bools in cardh isface istrump etc or would we write an entire file for just one function i realize that we could put them all in one file but obviously this would become a hassle for larger projects so im assuming thats why were learning to split them up like this also im assuming that we would only have one main function in a central test case that would then call all the other tests files any clarification would be appreciated thanks
  label = image, content = i need a partner for the code review my email is mlsantizumichedu
  label = euchre, content = what is the difference between getsuit and getsuittrump how can the trump input change the suit of the card
  label = euchre, content = im a little confused about shuffling it seems like you just keep switching which half is on top can someone describe it maybe an example with fewer card
  label = euchre, content = at the start each player has 5 cards and there are four cards remaining which means 24 cards in total also what exactly do you mean by suit there is too much of card game terminology used in the video
  label = euchre, content = if not will there be videos explaining other types of games as well
  label = image, content = when is the code review document for project three going to be released
  label = euchre, content = refer to this post for faqs related to project 4 if youre new to the game check out post 1709 for some tutorials pin
  label = euchre, content = for those of you who may be new to euchre or who just want to check out a video version of the simple player example in the spec heres a video that i made to demonstrate it last term httpswwwyoutubecomwatchvm0jgj0nrcrc the videos a little long since it contains a good amount of pictures and explaining text but feel free to use the speed settings or jump around to get what you need the video has a youtube soundtrack but no other sound if youd rather you should be able to download a copy of the source powerpoint 134 mb here httpsdrivegooglecomopenid0bvmvpmyraxvavfjqnhux09intg going to office hours during the first part of the euchre project should be a good way to get in on a few more practice games of euchre and ask any followup questions you have have fun learning euchre and good luck with the project
  label = euchre, content = 
  label = recursion, content = when can we get our style grade for project2
  label = exam, content = i dont get why the answer of 2b3 is ello i tried this piece of code in xcode but it doesnt compile
  label = image, content = why did this happen this was my error
  label = image, content = i accidentally included cstring in resizecpp and forgot to delete it before i submitted but didnt use it at all i just realized that we werent allowed to include cstring at all will this be extremely detrimental to my grade
  label = image, content = i dont have this button and i need to resubmit a file help
  label = image, content = when we print the seamcarve photo function from the processing we get a correctly carved photo however when we try to print that same image in our driver the image is not carved please help thank you
  label = image, content = im pretty sure i dont go past the end of argv because i check for argc before accessing the members but it seems like my program is operating like argc is always 5 it works fine when a height argument is passed in so argc 5 but not when argc 4 any ideas as to what might be going wrong would be greatly appreciated
  label = image, content = when i try something like this const int size imagewidthsomeimg int arr3size i get the error variable length arrays are a c99 feature werrorwvlaextension how do i make an array and set its size
  label = image, content = i have no idea how to get the arguments from the compiler as inputs please help
  label = image, content = when i click on the button it does nothing need to change code that is submitted really quick cant do it because of this
  label = image, content = why the submission is always queued in autograder now
  label = image, content = error ‘ strcmp ’ was not declared in this scope i have the library included as well why wont this code compile on caen but it compiles on my mac via terminal and also in xcode
  label = image, content = i do not have a button to remove my submission and put in my new one it has been queued for a long while now help
  label = image, content = im getting a valgrind error with a massive amount of invalid read and writes mostly associated with matrixinit and the assignment of height and width to the matrix values example 1125000 errors in context 167 of 174 46365 invalid read of size 8 46365 at 0x4c2e25e memcpyglibc214 in usrlib64valgrindvgpreloadmemcheckamd64linuxso 46365 by 0x404a3c imagegetpixelimage const int int imagecpp166 46365 by 0x40526a computeenergymatriximage const matrix processingcpp108 46365 by 0x401f85 testallstdstring int int processingtestscpp60 46365 by 0x401d2f main processingtestscpp34 46365 address 0xffee17b50 is on thread 1s stack 46365 in frame 3 created by testallstdstring int int processingtestscpp48 46365 46365 46365 1218452 errors in context 168 of 174 46365 invalid read of size 8 46365 at 0x4c2e25e memcpyglibc214 in usrlib64valgrindvgpreloadmemcheckamd64linuxso 46365 by 0x404a17 imagegetpixelimage const int int imagecpp165 46365 by 0x40526a computeenergymatriximage const matrix processingcpp108 46365 by 0x401f85 testallstdstring int int processingtestscpp60 46365 by 0x401d2f main processingtestscpp34 46365 address 0xffed23908 is on thread 1s stack 46365 in frame 3 created by testallstdstring int int processingtestscpp48 46365 46365 46365 1499904 errors in context 169 of 174 46365 invalid write of size 8 46365 at 0x4c2e253 memcpyglibc214 in usrlib64valgrindvgpreloadmemcheckamd64linuxso 46365 by 0x404a61 imagegetpixelimage const int int imagecpp167 46365 by 0x40526a computeenergymatriximage const matrix processingcpp108 46365 by 0x401f85 testallstdstring int int processingtestscpp60 46365 by 0x401d2f main processingtestscpp34 46365 address 0xffea46940 is on thread 1s stack 46365 in frame 1 created by imagegetpixelimage const int int imagecpp160 46365 46365 46365 1500012 errors in context 170 of 174 46365 invalid write of size 8 46365 at 0x4c2e253 memcpyglibc214 in usrlib64valgrindvgpreloadmemcheckamd64linuxso 46365 by 0x404a3c imagegetpixelimage const int int imagecpp166 46365 by 0x40526a computeenergymatriximage const matrix processingcpp108 46365 by 0x401f85 testallstdstring int int processingtestscpp60 46365 by 0x401d2f main processingtestscpp34 46365 address 0xffe9526f0 is on thread 1s stack 46365 in frame 1 created by imagegetpixelimage const int int imagecpp160
  label = image, content = for anyone having issues passing this test check that your dogoutppm is seam carving to be 4x5 i kept failing this test as well and realized i miswrote some code and it was outputting a 5x4 image instead of 4x5 make sure the single input is being inputted to width and not height as small and silly as this may sound it may be the difference between a 67 and 77
  label = image, content = im getting a 01 on imagepublictest and im not sure why are my tests just not good enough error
  label = image, content = so im running the project solely on caen so i dont think its a problem with my stack size but when i try and run processingtestscpp it compiles fine but throws us a segmentation fault so i used gdb to debug and it successfully calls testallprefixdog sizes0x7fffffffe1d0 numsizes1 in main but when it tries to call testrotate inside testall its giving my partner and i a segmentation fault error on the actual line static void testrotateconst image img string prefix the exact error message is testrotateimgerror reading variable cannot access memory at address 0x7fffff57ff78 prefixerror reading variable cannot access memory at address 0x7fffff57ff70 were just confused because it never even calls any of the functions we made and if it does any insight to which one it might be would be awesome thanks
  label = image, content = my code has worked 100 when i have tested it on my machine and on caen the only thing im missing on the autograder is this test heres what its saying resizedog4x5public return code incorrect score for resizedog4x5public total 01 not much to go off of any advice on what might be the problem or where to look in my code that will affect this test and no other
  label = image, content = i finished my resize but i am still running into problems with the autograder my output file is correct when tested with dog 4x5 but im getting 00 on the autograder anyone have any ideas on what could be going wrong or anything i could be missing thank you very much
  label = image, content = im debating with a friend both of our code works but one of us thinks resize should be atoi and the other things stoi atoi if command line arguments are cstrings and stoi if they are strings which is better for resize and why are both working thanks saul
  label = image, content = so i initialized the image with the given input i checked to see if the output input files can open and checked all of the other mentioned errors after that i used the seam algorithm to adjust the image to the new size what else is there left to do i saw others mentioning printing to an outputfile but im not seeing anything in the specs about that
  label = image, content = we are passing all of the processing tests locally but when we run it on the autograder we fail with this output any ideas why its failing thank you
  label = image, content = when i try submitting to the autograder i keep getting this error any ideas on how to fix it it wont even take my files
  label = image, content = were having trouble writing the image to the output file provided in our command line argument we tried using imageprint with cout instead of the output filestream and that worked we got the image to print in terminal cout but it doesnt print anything when we try to send it to the file any tips
  label = image, content = i have run my processing tests image public tests and resize tests in my caen terminal and everything comes out correct however when i run the autograder the imagepublictest processingpublicdog processingpubliccrabster resizedog4x5public all fail i have double checked my stack size to be correct and redownloaded all the test starter files from the project 3 folder furthermore my resized images come out correct because i have checked them using the diff command in my terminal any idea what i might be doing wrong
  label = image, content = we have an issue where we are passing the tests in processingtestscpp but failing in the autograder we have even checked our resizecpp output to the correct file and they have no differences but we still fail the test for the autograder for the dog test for example anyone run into this issue and have a fix or is this something for the staff to look into
  label = image, content = hello most of the times i go to the autograder link i get a blank page with nothing but the option to sign out in the top right corner of the screen how do i handle this
  label = image, content = the autograder is throwing this error which i do not encounter when running on my caen account i do include string at the top of the imagecpp file and imageh contains using namespace std so i have no idea why the autograder thinks im using a variable named string has anyone encountered this
  label = image, content = if so would it be 0 im trying to create a variable to initialize the largest energy in an image to fill the borders of the energy matrix with im just wondering if i can initialize with 0
  label = image, content = can anyone link to the post about suggestions for how to make the run time quicker for processing or the other cpp files or just list a few suggestions in the answer thank you
  label = image, content = in resizecpp im trying to convert the argument that contains the image file into an input stream for use in the imageinit function using a stringstream but when i send that stringstream into the function call the file name is being sent in and not its contents im running resizeexe horsesppm horses400x250ppm 400 250 from the spec it seems like only the file name in this case horsesppm is being sent in any tips on properly converting the argument into a usable input stream
  label = image, content = are we required to comment on cpp files that are required to submit
  label = exam, content = out of curiosity when should we expect roughly to get our regrade requests returned a set number of days after submission after the project is turned in a long while after the project is done also will we be notified by gradescope or should we just keep checking for our exam score to change thanks
  label = image, content = the file has passed the autograder before but now shows this error where could the error be coming from
  label = image, content = the title says it
  label = image, content = for the autograder in another post it was mentioned that the highest score was a 78 on the autograder im getting a score out of 7 instead of out of 8 was one of the tests removed
  label = image, content = what exactly does this mean i have tested each function thoroughly on my laptop and on a caen environment yet i still am not able to pass the image tests
  label = image, content = in terminal on my mac i used make resizeexe to create the executable and when i tried to run it using the line from the corrections and clarifications i keep getting segmentation fault 11 i already increased my stack size in terminal what else could the problem be
  label = image, content = why does imagesetpixelaux width 1 c r temp in rotate left use width1c as the row i keep getting reveresed results
  label = image, content = im rerunning my code for processingtests and it keeps giving me this error g o0 g3 wall c fmessagelength0 mmd mp mfprocessingtestsd mtprocessingtestsd o processingtestso processingtestscpp processingtestscpp in function u2018void testseamcarveconst image stdstring int intu2019 processingtestscpp17138 error u2018tostringu2019 was not declared in this scope prefix tostringnewwidth x make processingtestso error 1 it is saying that in processingtests tostring is undeclared i dont understand why there would be an error with this file
  label = image, content = we are printing our cost matrix to the terminal since it is not passing the test in order to figure why it is failing however as seen below it seems to be adding an extra row and column since it is supposed to be a 4x5 matrix for dog
  label = image, content = so on visual studio the processingtestscpp does not run above 162 mb while on the linux environment the program takes about 78 mb of memory in the stack just to get to top of the first call of the function of testall does anyone know whats going on i have screnshots to show that the program outputs my custom cout statement 10 after allocating 78 mb but then segfaults after that
  label = image, content = is it disrespectful to the interface to directly access and modify data members of matrix within the imagecpp file
  label = image, content = the specification says to find the maximum energy so far and use it to fill in the border pixels does that mean for the first row the top one that all of pixels will have 0 energy since the matrix is initialized to all zeroes
  label = image, content = is it acceptable if we tested the matrixinit and imageinit functions within tests for other functions eg width height print and did not have separate test cases for them but stated in the comments that the init functions were also being tested
  label = image, content = for matrixinit function do we have to fill the matrix with 0 or just initializing matrix with width and height will be enough
  label = image, content = when i check the width and height of the desired widthheight is leq the original width and length i dont know how to obtain the original widthlength can someone tell me how to do that thanks
  label = image, content = im failing all the seam carve tests except the one in the dog case i passed all the other tests including remove i wrote the output to a txt file and diffcheckered them but there are way to many differences starting from the second row and i cant sort out whats wrong the seam array is the same as the correct output anyone knows how i can find the bug any thoughts appreciated
  label = image, content = in order to respect the interface im using the matrixwidth and matrixheight functions in my computeenergymatrix function as follows int energyw matrixwidthenergy int energyh matrixheightenergy my matrixwidth function is an assert statement which is not causing problems and the following return mat width my processingcpp file fails the dog energy test and ive found that this is happening because energyw and energyh have the values 0 when i use energy width and energy height instead of energyw and energyh all of my tests pass does anyone know why my matrixwidth and matrixheight functions are failing
  label = image, content = hello do we have to assert the requirements for arrayslike in findminimalverticalseam where it requires the size of seam is equal or greater than matrix height if so how would we find the size of an array thank you
  label = image, content = hey when i submit my code to the autograder i get the ouput resizecpp620 fatal error matrixh no such file or directory include matrixh compilation terminated on the resize compilation check why would including matrixh cause thisdont you need it in order to call the seam carve function
  label = image, content = i have tested my matrixcpp using the the matrixpublictestcpp provided and the code passes without issue but when i submit to the autograder the code fails matrixpublic test is the autograder using a different set public matrix tests or is it the same as the tests provided in the google drive
  label = image, content = even though horses was removed from the autograder its still possible to pass locally on your system however when i attempt processingtestscpp i obtain the following testing horses remove seampass testing horses seam carve 300x382assertion failed 0 width width maxmatrixwidth function imageinit file imagecpp line 15 so that would mean the public test case doesnt follow the requires i was just wondering what the problem is
  label = image, content = i use matrixnormalize in one of my imageinit functionthe one that takes an image and matrix as parameters however i do not seem to be calling this version of imageinit anywhere in my program and i dont see where it could be useful my program seems to be working fine without it where can this function be useful
  label = image, content = 
  label = image, content = hello i convert a jpg image of proper size to a ppm run it through linux and remove comments change the dimensions redownload it to my desktop it shows up as a blank file convert it back to jpg and the file still no longer contains an image but rather a black screen is anyone else experiencing this problem or know why this is happening thanks
  label = image, content = my horse part of processingtestscpp runs 15 seconds on linux however 1 minute on visual studio does that still indicate i have inefficiency ive followed the instruction on faq about efficiency but its still slow on visual studio
  label = image, content = so is the efficiency graded is the second announcement saying we are only graded on correctness it takes about 2030 seconds for our test to run
  label = image, content = as far as style is concerned do we need to comment our code in addition to the rmes in order to receive full style points i tried searching piazza but all the posts i found were related to rme commenting and not general commenting thanks
  label = image, content = okay so the seam array is 1 2 2 2 1 correct so that means the second pixels of the first and last row and the third pixels of the second to fourth rows are to be removed when i work this out by hand i get top is originally passed in img bottom is theoretically correct image but the correct final image that im printing from processingtestscpp is why did the last three pixels of the last row just become zeroes
  label = image, content = so processingtestscpp segfaults when i run it on the linux environment but it runs completely fine on visual studio not sure whats going on also resizecpp works on the linux environment so i dont think it would be a problem with my code would it
  label = image, content = will the autograder test our processing functions with extreme edge cases such as resizing an image with a width or height of 0 or 1 or resizing an image to a width or height of 0 or 1 what about a combination of those things
  label = image, content = do we necessarily have inefficiency or bugs in our code or could it also because the autograder cant process it besides i submitted at 430pm today and the autograder still has the public horse test when would it be removed thanks very much
  label = image, content = for some reason when i compile processingtestscpp or matrixcpp or imagecpp and aattempt to run them the linux interface returns a seg fault for all of them is there a reason for this
  label = image, content = in processingcpp are we allowed to change newwidth to newwidth i wrote the rest of project in snake case
  label = image, content = based on the various piazza posts i have read and the emails i have received it appears to me that the output from the autograder i should be aiming for is as follows resize compilation check 00 processingpublichorse 01 total score 78 assuming that my imagetests and matrixtests test my project sufficiently the above clarifications should indicate the optimalyou passed output from the autograder ya looking for instructor confirmation please as i would like to submit my final code and move onward without worrying about some secret inefficiency requirement that isnt in the spec which specifically says that our code can safely take a couple of minutes so just to confirm there will be no efficiency constraints other than what is embedded with the 7 public test cases i am currently passing correct
  label = image, content = screenshot20160308at42938pmpng when we input resizeexe dogppm dogoutppm 4 on terminal our dogoutppm exactly matches the dog4x5correctppm however we are getting a 01 on the autograder not sure what we are doing wrong any suggestions
  label = image, content = 
  label = image, content = so i submitted into the auto grader earlier today and it only failed the horses now i am trying to resubmit it and i have been queued for 30 min now i have to leave soon and have a couple questions if i leave and turn off my caen computer with it continue to update and grade my project like is the files downloaded already and leaving my computer wont affect the process and if leaving will stop my submission is it okay to just leave my previous submission that only failed the horses one since it is taken off now anyways
  label = image, content = alright i know horses is not being used in pg3 however i dont interpret the meaning of resizecompilationcheck 00 what does 00 means i dont see whats the error neither besides i have passed all tests except processingpublichorse 01 and resizecompilationcheck00 and received a score of 78 soam i failing the resizecheck or any other thoughts thank
  label = image, content = i dont know if this is a bug with autograder but my partner does not show up on autograder im not sure if its because we have to submit separate files we are registered as partners for project 3 thanks
  label = image, content = its taking a few minutes for my horses tests to pass so im just trying to make all functions more efficient i dont believe my issue lies within matrixat or in the other common functions but i did just notice that i never call matrixrow or matrixcolumn anywhere in my code i previously used it for matrixfillborder but i made that function more efficient another way can anyone hint at where matrixrow or matrixcolumn should be used
  label = image, content = after the update to matrixpublictests i started failing the matrixprint test when i print the actual string and correct string to the console they appear to be the same im assuming the issue lies within extra whitespace or something else not visible when you print it to console however i dont know how to debug it
  label = image, content = do we need to respect the interface for test cases as well
  label = image, content = i got a 01 on my autograder for processinghorses but it works through my terminal and does not take longer than 30 seconds to run so i am wondering what i should look at next any suggestions
  label = image, content = is an rme required for the main function in resizecpp
  label = image, content = so when i run my code the matrix public tests work and pass completely yet in the autograder i get a 01 what does this imply
  label = image, content = i submitted project 3 to the autograder and my resizecpp is failing but it wasnt failing yesterday i read the clarifications and realize that it could be because of the time it takes to compile but i just counted and it takes much less than 30 seconds on the autograder will this be fixed or should i be trying to make resize more efficient if so how should i go about doing this
  label = image, content = when i test my code for processingcpp in caen the horses tests pass the processingtestscpp in under thirty seconds but in the autograder they do not pass at all is there any difference between the two tests that might cause this issue
  label = image, content = on caen and it still fails the autograder this is not 30 seconds ctools email announcement so is like 15 seconds the cut off time
  label = image, content = while the autograder is testing our imagetestscpp will it have access to the image files provided to uscrabsterppm horsesppm etc i am planning to use those files in my tests is that okay thanks
  label = image, content = my processingtestsexe fails on the horses seam carve 300x382 test i am receiving an 88 on the autograder and if i run an online difference checker with my output for horses 300x382 against the correct output it says theyre identical if i run diff or sdiff through the terminal it gives me an output this leads me to believe that its the extra newline character that windows adds to files on top of the n i know theres a dos2unix command that i can use but im not sure how i should be using it and what files i should be converting from dos to unix any help would be greatly appreciated thank you
  label = image, content = i passed processingpublichorse yesterday night but after redownloading the exact code from that submission and resubmitting it the same test fails have there been changes to the autograder overnight
  label = image, content = i put asserts at the beginning of all my functions i pass everything on the autograder except for image public test i passed it before i included the asserts i went back through my code and these asserts are failing in these functions int matrixatmatrix mat int row int column assert0 column column matrixwidthmat const int matrixatconst matrix mat int row int column assert0 row row matrixheightmat assert0 column column matrixwidthmat pixel imagegetpixelconst image img int row int column assert0 column column imagewidthimg if anyone had a similar problems or possibly knows why this might be happening please let me know thanks
  label = image, content = im getting a your connection is not private error when i try to access the autograder i have tried several times closed my browser restarted my computer and gone to both the new link and the old link i was able to access it last night from the same wifi network mwireless but now i cant what should i do
  label = euchre, content = did anyone figure out how to solve this issue on xcode debugrelease were set to wlstacksize0x4000000
  label = image, content = im getting this error when i try to make resizeexe iso c forbids variable length array ‘seam’ i understand that this is because im using a variable to initialize the seam arrays size that i use to pass in to findminimalverticalseam from seamcarvewidth all tests are passing locally and xcodes compiler didnt give me this error im not sure how else to create the array and uphold the rme for minimalverticalseam
  label = image, content = in the seamcarvewidth function i want to initialize a seam array before i calculate the actual seam however int seam imageheightimg is not allowed because the size is not a compiletime constant i thought about declaring it as a value larger that the required image height but the size of seam has to be the height of the image what should i do any thought is appreciated thanks
  label = image, content = my resize compilation check is success i dont have any excess h files and i am properly taking in the command line arguments these were suggestions in previous piazza posts however my resize dog test is still failing for autograder even though the output compared to the correct output has no difference in diffchecker what else could be a possible issue
  label = image, content = i pass processingtestscpp but when i make processingtestsexe and then processingtestsexe i get a segmentation fault 11 this is run from terminal is there any way i can get more information i have no idea where what im looking to fix
  label = image, content = i dont really understand this error for the compilation usrbinld usrlibdebugusrlibx8664linuxgnucrt1odebuginfo relocation 0 has invalid symbol index 11 usrbinld usrlibdebugusrlibx8664linuxgnucrt1odebuginfo relocation 1 has invalid symbol index 12 usrbinld usrlibdebugusrlibx8664linuxgnucrt1odebuginfo relocation 2 has invalid symbol index 2 usrbinld usrlibdebugusrlibx8664linuxgnucrt1odebuginfo relocation 3 has invalid symbol index 2 usrbinld usrlibdebugusrlibx8664linuxgnucrt1odebuginfo relocation 4 has invalid symbol index 11 usrbinld usrlibdebugusrlibx8664linuxgnucrt1odebuginfo relocation 5 has invalid symbol index 13 usrbinld usrlibdebugusrlibx8664linuxgnucrt1odebuginfo relocation 6 has invalid symbol index 13 usrbinld usrlibdebugusrlibx8664linuxgnucrt1odebuginfo relocation 7 has invalid symbol index 13 usrbinld usrlibdebugusrlibx8664linuxgnucrt1odebuginfo relocation 8 has invalid symbol index 12 usrbinld usrlibdebugusrlibx8664linuxgnucrt1odebuginfo relocation 9 has invalid symbol index 13 usrbinld usrlibdebugusrlibx8664linuxgnucrt1odebuginfo relocation 10 has invalid symbol index 13 usrbinld usrlibdebugusrlibx8664linuxgnucrt1odebuginfo relocation 11 has invalid symbol index 13 usrbinld usrlibdebugusrlibx8664linuxgnucrt1odebuginfo relocation 12 has invalid symbol index 13 usrbinld usrlibdebugusrlibx8664linuxgnucrt1odebuginfo relocation 13 has invalid symbol index 13 usrbinld usrlibdebugusrlibx8664linuxgnucrt1odebuginfo relocation 14 has invalid symbol index 13 usrbinld usrlibdebugusrlibx8664linuxgnucrt1odebuginfo relocation 15 has invalid symbol index 13 usrbinld usrlibdebugusrlibx8664linuxgnucrt1odebuginfo relocation 16 has invalid symbol index 13 usrbinld usrlibdebugusrlibx8664linuxgnucrt1odebuginfo relocation 17 has invalid symbol index 13 usrbinld usrlibdebugusrlibx8664linuxgnucrt1odebuginfo relocation 18 has invalid symbol index 13 usrbinld usrlibdebugusrlibx8664linuxgnucrt1odebuginfo relocation 19 has invalid symbol index 21 usrbinld usrlibdebugusrlibx8664linuxgnucrt1odebugline relocation 0 has invalid symbol index 2 usrlibgccx8664linuxgnu48x8664linuxgnucrt1o in function start text0x20 undefined reference to main collect2 error ld returned 1 exit status
  label = image, content = i ran my code with a couple of images that were greater than 500x500 and got some strange behavior for one of the images my program went through the exit sequence saying that the width and height passed in were greater than the original but i know that theyre not for the other image i got a segfault do i need to worry about this or does our code only need to work for images less than 500x500
  label = image, content = would it be acceptable to include an extra function inside matrixcpp i ask because i believe i could get my code to run faster by doing so
  label = image, content = i passed all the crabster and dog functions on visual studio but failed the processingpubliccrabster and resizedog4x5public on autograder is that normal where should i actually check
  label = image, content = i passed the checkpoint matrixpublictest and im still passing it when i run it on my computer but it is failing the autograder right now has anything changed
  label = image, content = would it be valid to remove a vertical seam on an image with a width of 1 if so would the new image be an empty image
  label = image, content = in checking resize through the terminal is anyone else getting a segmentation fault when i try testing too few arguments in terminal i get one even though my program checks that argc is 4 or 5 before accessing argv
  label = image, content = i am getting the public dogppm test correct when i run it on my own computer and through caen but i failed the test on the autograder any thoughts on what is going wrong what should i do
  label = image, content = when i run the public test through the terminal i pass but i submitted to the autograder and im failing the test what could be causing this
  label = image, content = the spec says that matrix objects cannot have dimensions of zero so does that mean its okay that calling resizecpp with an image and then giving new dimensions of 0 and 0 causes an error
  label = image, content = i dont think this is a linker error or a problem with stack size limit but my processingtestscpp will not compile here is what the error message looks likeit refers to a file called algorithm of which i did not create or download
  label = image, content = title
  label = image, content = when i included code in my resizecpp using ofstream that opened a file using the second file name in the terminal command used to run resizecpp resizeexe horsesppm horses400x250ppm 400 250 i was able to create a new ppm file with the name horses400x250ppm that also passed the diff checker command but the strange thing was that it only appeared in both my mfile directory and caen after i logged out of the mfile website and and logged back in and did the same thing with my remote connection to caen via terminal is this supposed to happen
  label = image, content = is the resizecompilationcheck supposed to be 00 in autograder
  label = image, content = i got the email that project 3 autograder was open at 830pm and quickly submitted my files 3 minutes later but its saying im queued is this normal i feel like not many people submitted immediately after the email was released so the autograder shouldnt be queued this soon thanks
  label = image, content = hi so if the height is different in the desired output image than the input image do we just cut off x number of pixels from the top of the image or is there something else we should do thanks
  label = image, content = where do we store our ppm files to run the test properly my test cannot open dogsppm
  label = image, content = im using putty to connect to caen and i cant seem to get the make function to work at first i did get the tostring error but i fixed that then i was getting a error saying no such file or directory found but after figuring it out i only ended up adding wlstack60000000 dglibcxxusec99 to the make file when i attempt to make a file now i get one error message unrecognized option stack i tried using pretty much every method possible that i could find even the ulimit s s 60 but that didnt help anything either i dont know where to go from here i am using sublime text editor if thats the issue also when i just run the programs myself on the terminal without the makefile everything works fine and i pass all tests
  label = image, content = hey so after running processingtestscpp i get this back but of course it should be this its strange that the function is working for the first rows but not the next ones what could potentially be the problem here my set or get pixel functions
  label = image, content = it says find the maximum energy so far in the spec so does that mean we fill the border pixels everytime there is a new max energy or only at the end
  label = image, content = i am having trouble with my minimal seam finder it works correctly nearly all the time 99 but on the crabster and horses image it messes up a few pixels in the middle of rows and columns and i cant determine which function is failing and under what situation has anyone run into a similar issue that can point me in the right direction
  label = image, content = will we have a chance to receive feedback on our checkpoint submission before turning in our final functionstest cases
  label = image, content = when i type this into the command line resizeexe horsesppm horses400x250ppm 400 250 i get the strings in argv only contain the first letter so instead of trying to open the file horsesppm it is creating a new file called h for some reason only the first letter of the strings is being passed into my function i have no idea why
  label = exam, content = hi in 5e of our midterm whats wrong with the following code of library print for int i 0 i nummovies i movieprint libptr moviesi cout endl my thought is libptr is a pointer and in function movieprint it takes in a pointer as well so libptr moviesi gives as an address of the ith movie which means it should work
  label = image, content = in the resize main how do i save the picture in the current directory whats the syntax
  label = image, content = hey so im trying to test my processingcpp and im getting an error in a strange spot of processingtestscpp im not sure why this error is here especially because its just trying to cout three strings and i know prefix is a string because so what is the bad access it just seems like a strange spot to get an error
  label = image, content = there are three rules for the command line arguments 1 there are 4 or 5 arguments including the executable name itself ie argv0 2 the desired width is less than or equal to the original width of the input image 3 the desired height is less than or equal to the original height of the input image i know the spec already specifies this but just to be clear do we always use the following lines when any rules are violated or we print different messages when different rules are violated for example when only the first rule is violated are we supposed to only print the first message or print the second message as well cout usage resizeexe infilename outfilename width height endl cout width and height must be less than or equal to original endl exitexitfailure
  label = image, content = should we check whether the ppm file is opened before check the three rules that are given or should we check the three rules first
  label = image, content = i am using xcode to edit my project when i run the processingtestcpp file i got a error memory read failed for 0x500000000 message in a whole new window at first i thought this error might be produced by trying to copy my temporary image to the original one passed in the function but i stepped into the debugger and found that not until the moment my project runs past the ending bracket of my removevertical seam function does it produce this error i increased the stack size limit already so thats not the issue any ideas why this might be happening
  label = image, content = where is the picture that we saved through running the program
  label = image, content = in the spec it says we need to determine wether the command line obeying the three rules so how do we determine these do we write three if branches and write the same body functions or we could incorporate three conditions in one if statement i did in one if statement but it turned out to be code will never be executed
  label = image, content = when i was running the processingtestscpp it gave me an error thread1 excbadaccess code 2 how could i debug it
  label = exam, content = hello all over the past week you all had the opportunity to look over your midterm exams on gradescope you are now able to submit regrade requests through gradescope for questions you believe were graded incorrectly if you have any questions about gradescope please look at the previous announcement about the midterm grades and the follow up questions in order to submit a regrade find the specified subquestion and select request regrade in the bottom right hand corner you will then be prompted to enter an explanation for the regrade in this text field you should include which part of your question was incorrectly graded 1 sentence why you believe your answer is correct 13 sentences depending on question type as you can see the second part is quite subjective however the more detail you give the better we can investigate your regrade please give enough information in your regrade request or we will not acknowledge it for example if you are requesting a regrade for question 4a the tree question and your defense is this will work we have less information for what the issue is and are less likely to find the issue if you write although im not initially checking the base case i do have treeisemptytree checks prior to any other functionality not causing any possible segmentation faults we will have a better indication on where to start to fix your grade if you leave this field empty your regrade request will be discarded note that while regrading your exam the course staff will check through the rest of your exam as well because of this we may catch other errors we made while grading and your exam score could decrease regrade requests will only be open to noon on friday 311 we will not take any more requests after then if you have any questions please email us eecs280examsumichedu thanks kris pin
  label = euchre, content = when calling the same functions in imagetestscpp with two different test images the last row of the output is set to zero is this a stream issuewhy is this happening
  label = image, content = my processing test is not progressing at horses test the weird thing is that it just stopped at the rotateleft function for a long time which is given to us any possible suggestion of reason i just changed the order to test the horses before the crabster update it took 4 minutes to display the testing horses rotate left is the problem just with my laptop
  label = image, content = with the crabster image i am correctly getting the 70x35 image but it fails on the 50x45 i looked through my code pretty well already and i was looking for a way to test to see where within the image it fails top left middle etc is there any easy way i could do this
  label = exam, content = why do we have to assert that lengthin 0 in 5c isnt that a requirement mentioned in the rmes
  label = image, content = what is a reason for an output file to not open in the spec it says to print an error message if the inputoutput file could not open i assume the output file would always open since the program generates a new file or overwrites an old one thanks
  label = image, content = i realized that i dont use the 3rd imageinit function anywhere in my code is this correct if not where is it supposed to be used ive passed all image tests and processing test so far without it
  label = image, content = hello could we just loop through the original image use imagegetpixel to get the pixel to the right of the pixel that should be deleted and then use imagesetpixel to assign the right pixel to the left one keep doing this for every column except the last one lastly we can just use imageinit to subtract the width of the image by 1 thanks very much
  label = image, content = my seam carve functions are working for all but the first row the first output is mine followed by correct not sure how to fix this problem everything else seems to be alright any ideas
  label = image, content = if an image exceeded the maximum dimensions what should our program do next would it be appropriate to display an error message and end the program
  label = image, content = in processingcpp would be allowed to use something like imgredchanneldata i dont see how else wed be able to get the redchannel data
  label = image, content = in the spec sheet it says to output an error message if there are not 4 or 5 arguments in the command line the error message requires the desired width but what if the desired width is not included in the command line argument thanks
  label = image, content = all my code works correctly when i use visual studio passing in command line arguments however when i connect to caen using putty and run in caen my seam carving does not work correctly and produces wrongly processed images i am not sure how to fix this issue any help would be appreciated i have checked to make sure i have uploaded and saved everything numerous times and recomplied each time thanks
  label = image, content = after spending many hours looking for inefficiencies throughout our code we were unable to find anything specifically for loops or copying matrices and images that could have cause the program to slow down the dog and crabster images work fine while horse is very slow after rotate left and right horses remove seam passes after a while but seam carve does not seem to complete could there be any other possible reasons for inefficiencies in the code
  label = exam, content = hello sorry that i fail to find where the regrade option is on gradescope
  label = image, content = title
  label = image, content = when i run processingtests and compile it i get a segmentation fault i figured out that there is something wrong with loadimages because at this point i get the segmentation fault error is there a specific directory i need to put the files in i used the ulimit command also
  label = image, content = is the loop in the seam carving functions solely in the seamcarvehorizontal function or are we to implement one seamcarve function
  label = image, content = how come my argc is returning a value of six when the command arguments are 1 2 3 4 5 this is in visual s tudio 2015
  label = image, content = as i am coding processingcpp i find it much easier to use columnend as inclusive is there a reason why it is exclusive
  label = image, content = my most current files are on mfile and id like to download them in bulk instead of downloading 40 files separately any way i can do this
  label = image, content = im trying to implement seamcarvewidth and i get this error error no matching function for call to findminimalverticalseam findminimalverticalseamcost seam i get the same error for removeverticalseam does anyone know why this is happening
  label = image, content = my test fails when it gets to remove seam in horses is there an easy way to debug this without trying to look through all 182596 values to pinpoint where exactly my code doesnt match up
  label = image, content = i dont understand why im getting an error here
  label = image, content = i understand this needs to be recursive and im assuming we need to write a helper function but im struggling with what the base case would be and how to work from the bottom up and also like where to use the minvalueinrow in relation to the helper function
  label = exam, content = i was confused about this when taking the exam but can you pass a nonconst type into a function that has a const as its parameter like does the function call automatically convert the nonconst parameter to a const for the functions scope i guess im a bit confused because for the project 3 checkpoint i believe we had to made a const copy of structs in order to pass them into functions that took const structs although maybe i interpreted something wrong there too oops thanks in advance
  label = image, content = what do i do after opening the input file how do i create a image matrix
  label = image, content = how do we know the original images width and height to make sure that the desired widthheight is smaller than it without first opening the file and reading it into imageinit dont we have to check for this before we check if the file opened correctly
  label = image, content = my processing tests run correctly throughout the dog tests and through the crabster tests until the second seam carve crabster seam carve 70 x 35 is failling for me it seems when seamcarveheight comes into play it seems that an assert statement during this process fails because the seam array is filled negative ints and my setpixel function inside my removeseam function will not allow negative column numbers for obvious reasons i have no idea why this is happening everything else appears functional
  label = image, content = ive waited for over an hour but my horseppm file still wont resize the crabster and dog work fine and are complete in less than a second ive made sure that im not copying any extra matriximages what am i doing wrong
  label = image, content = to add values to the seam array do we have to start with seam0 im trying to start with seamheight 1 to work from the bottom up but my function doesnt keep the value in the array until it iterates down to seam0
  label = image, content = im trying to copy the contents of my of one matrix to another using two nested for loops and this is the error i get and the line of code causing it processingcpp21718 error no matching function for call to matrixat matrixatimg2 i j matrixatimg i j this also happens when i dont pass img2 by reference ive included matrixh does anyone know why this is happening and how i can fix it
  label = image, content = i know that we are supposed to assert the requires clauses for our functions but is that necessary for all 3 seamcarve functions wouldnt one assert in seamcarvewidth check them all since it is really the only function that does work
  label = image, content = im having issues with my resizecpp program whenever i try to run an image that i get off of the web through my program it spits out a greenteal image all pixels are greenteal with the dimensions i ask for it works just fine for the horsesppm image so im not sure what i am doing wrong has anyone else had this problem thanks
  label = image, content = i want to debug using gdb but im not sure how to start ive added the g flag in the makefile but i dont know where to go from there
  label = image, content = just to doublecheck when a pointer to a matriximage is passed as a parameter of a function would using int height imgheight still be considered respecting the interface or would the getter matriximage functions be a better choice
  label = image, content = is the final autograder for p3 available yet i cant find it thx
  label = image, content = ive checked my stack size limit a bunch of times and its exactly what it says in the spec using xcode and ive put assert statements in almost all my functions so i know im not going out of bounds on any of my matrices or images i also am trying to run processingtests on xcode first but no matter what i do it says it is unable to open dogppm ive changed my working directory to include the ppm files but it wont open them please help
  label = image, content = im having some issues running imagetestscpp all of a sudden on visual studios here are the errors unhandled exception at 0x0120ec99 in project3exe 0xc0000005 access violation reading location 0x00090000 unhandled exception at 0x0120ec99 in project3exe 0xc00000fd stack overflow parameters 0x00000000 0x00092000 there is no problem when i run matrixtestscpp and i dont have issues when i run it in the terminal on caen what might be the problem with how im running it on visual studios
  label = image, content = i have my resizecpp working with the provided images but when i try to download a picture of amil and resize it i get a segmentation fault the amil picture is 550 x 513 and is in the correct ppm form i converted it using the convert command in terminal
  label = image, content = how can i visually compare the images i write using resizecpp to the correct ones i am working through sftp using sublime so i dont have the files i write on my computer they are only stored on caen is there any way to download them from caen i tried scp command but couldnt get it to work
  label = image, content = is there a time limit to how long it takes for each test to run whats considered reasonable
  label = image, content = for the testing of processingcpp when the cost matrix is created it looks like this testing dog cost5 5 1470 1470 1470 1470 1470 2940 2618 1527 2618 2940 4088 2997 1729 2997 4088 4467 3193 2689 3193 4467 4663 4159 4159 4159 4663 yet when the seam is created it has column 1 as the lowest value for the first row shouldnt it be column 0
  label = image, content = im trying to compile my resizecpp with the makefile and i keep getting errors for the functions and structs in other files for example image is not declare in this scope ive fixed the problem by using include imageh in resizecpp but this was never a problem in the other files we never had to use matrixh in the imagecpp file so what exactly could be causing this problem
  label = image, content = i looked it up online and it said that i havent defined the missing symbols but i dont understand how its the test case given to us
  label = image, content = i take this to mean that the processingtestscpp files tests are exhaustive and that it is not necessary to write any more tests that specifically test functions in processingcpp instructor confirmation will be appreciated thanks
  label = image, content = i ran my code and got a segmentation fault when i debugged it i received this error program terminated with signal sigsegv segmentation fault the program was terminated while running the following test static void testrotateconst image img string prefix the rotate function was provided for us so i am confused as to how there would be an error in here any suggestions on this this is within processingcpp
  label = image, content = im struggling to open file streams in my resizecpp program using argv i write ifstream inputargv1 the complier gives me an error telling me i have incomplete types can anyone help thanks
  label = image, content = in the specs for resizecpp on page 8 it explains that the 5th argument for the images new height is optional how exactly do we make a parameter optional i assume we have to set some default value for when a 5th parameter is not passed into the terminal but i am not sure how to do this i tried using a combination of conditional statements but in the end i am getting a segmentation error if the 5th parameter is not included thanks
  label = image, content = im just a bit confused about the auxiliary image you mentioned in the project specs for this function how do we copy a smaller image into a larger one without changing the dimensions of the original image
  label = image, content = whenever i try to compile my code i always get this error and now its happening with p3 too i constantly see this error even though i have all the necessary things included
  label = image, content = would we get feedback on how much points we get in the check point of project3
  label = image, content = why is dogseamcorrect 1 2 2 2 1 if the first row of cost is all the same then it should always be 0 for the first element of seam how and why is it 1 in this case thanks saul
  label = image, content = when i use imagegetpixel and i want to move to the next pixel do i do it the same way as i would an array like just add one tanks in advance
  label = exam, content = do we need to do anything if we need extended time for the final exam or are we already accounted for because of what was filled out for the midterm thank you
  label = image, content = to my understanding we need to make a seam array within seamcarveheight so that we can pass it to findminimalverticalseam i was just going to initialize an array of zeroes with size imageheightimg but that awards the following error error iso c forbids variable length array any advice
  label = image, content = im little bit confused by the specification if we encounter the case breaking the requirement for resizecpp we only print a error message corresponding to the error right the specification can be interpreted that we print the all lines of error message if we encounter one of the errors so just to make sure thanks
  label = image, content = the horses tests take quite a bit of time roughly 6 minutes for horses seam carve 300 382 and 8 minutes or so for 400 250 our matrixat uses no loop and no other functions use an unnecessary loop crabster and dog seam carves take no time at all but horses takes quite a bit is that a reasonable amount of time for the horses seam carve it passes all of the tests for horse eventually but just it takes a little time
  label = image, content = when i run the processing tests my program quickly runs through the dog and crabster images however once it reaches the horses image the compute vertical cost matrix test takes forever and a half 3 minutes and the seam carve test does not finish within an hour therefore i found it safe to assume that my compute vertical cost matrix function is probably the problem however i tried to follow the guidelines of the specs initializing the cost matrix filling in its first row and then looping through the rest of the matrix using the matrixminvalueinrow function along with matrixat and i cannot think of any different way to attack this any help would be appreciated thanks
  label = image, content = i was getting a segmentation fault so i used the debugger to find that it was coming from the execution of removeverticalseam i was like ok yeah that makes sense im probably accessing things out of memory ok lets look at my bounds and all that i did that and could not find anything wrong and even made an analogs function which operates on 2d arrays in labster to make sure i wasnt accessing past any bounds and it worked perfectly so at this point im frustrated and just start commentingout code from the bottom up in my functionsomehow the line which gives me a segmentation fault is the line where i initialize the smaller aux image with a pointer to the image i just declared the line prior the width of the orig image 1 and the height of the orig image help i have no idea what is causing me problems thank you in advance
  label = image, content = not sure what this is and how should we implement in this file the spec says the driver program for this project provides a commandline interface to contentaware resizing through the seam carving algorithm how do we provide commandline interface and what is it what is contentaware resizing
  label = image, content = if i am able to pass the test in the given processingtestcpp am i secured to get full credits for my processingcpp code
  label = image, content = the requires clause for this function states that the size of seam is matrixheightcost is there a way that we can test this using assert
  label = image, content = my second imageinit function worked for my test cases on stringstreams but now that im testing it on a real ppm file it doesnt read in anything for some reason why could this be the case thank you
  label = image, content = i dont really understand the logic behind the whole process of seam carve first you call seamcarvewidth which reduces the width by 1 then you call seamcarveheight which also calls seamcarvewidth and therefore reduces the width by 1 again which is actually the height because width is always reduced by 1 for dogppm all my other functions pass the tests but in seam carve my width ends up at 4 and height 4 when height should be 5 what am i missing here am i just calling something incorrectly in seam carve width
  label = image, content = so im testing seamcarve right now and im coming around a strange that i honestly have no idea how to fix when running seam carve against the dog tests everything works perfectly however when i use it on crabster tests i get a seg fault i commented my code in both seam carve and seam carve width since this is where most of the work is done so i could see where the seg fault is happening in the screenshot of my terminal below 1 2 3 and 4 corresponds to my calls of computeenergy compute vertical cost find minimalcost and remove seam between steps 3 and 4 i print the height of the img being passed in dog test runs perfectly but when i get to crabster seg fault happens when i try to print the height of the img i put print statements in seam carve too orgi height of the img new height of what the picture is being changed to to see if height was being passed to seam carve width in the first place and it is im not sure why my seam carve width function isnt getting the height of my image for crabster since it does so for dog what do you think
  label = image, content = i first ran make resizeexe then the g command showed up to compile and i clicked enter then i ran resizeexe horsesppm horses400x250ppm 400 250 nothing really happened does that mean my program worked im confused how to check if my program worked
  label = image, content = how doc you suggest testing resizecpp i understand that you can use make resizeexe to run it in terminal but im not sure where to go from here should we make a new output file and test that output against the correct file that is provided is there any way to simulate command line arguments in xcode
  label = image, content = the processingtestscpp seems to be passing on xcode but when i compiled and ran it on caen i get a segmentation fault any idea what i should do
  label = image, content = is it normal for the horses seam tests to take 10 minutes
  label = image, content = const int costheight matrixheightcost int seamcostheight why do i get iso c forbids variable length array ‘ seam ’ werrorvla error how do i fix it
  label = image, content = this become weird i think the way we initialize an image could be many possibilities there would be no differences between initialize with a pointer pointing to a image and initializing a actual image as long as we are consistent with using them correctly in later functions however when i am writing the removeverticalseam i was told to use an auxiliary image my logic of this function is initializing a smaller auximg and fill the image with the desired elements i copy all the original element in the img before the index in the seam and skip the index in the seam and copy the following elements in the original img by using nested for loop and two if branches and then i assign the auximg to the original img even though they have different size first i would like to make sure this logic is correct however my confusion is that when i initialize the auximg with a pointer and using the auximg whenever it requires a actual img and do the assigning like img auximg it stop compiling at the point imageinit function where assigning the wid parameter to the imgwidth when i initialize auximg with an actual img like image auximg and using auximg whenever it requires a pointer and do the assignment like img auximg it does not pass the given test it stop at the assertion line however it is really weird that when i change the assigning to img auximg it pass the test and seems like nothing wrong all the methods have same logic
  label = image, content = i passed the dog tests but am failing one of the crabster tests do you have any suggestions for debugging this i have no idea where to start
  label = image, content = basically for seamcarvewidth we are just calling all the functions we implemented in processingcpp right so the first step is to compute the energy matrix in the implementation of seamcarvewidth should we be initializing the energy matrix we created with the newwidth parameter and the height of the image and then use the dimensions of the energy matrix to initialize cost
  label = exam, content = can regrades hurt our score on the exam
  label = image, content = when testing my code i fail the testcost for crabster i used my output the correct output on diffchecker to see what the difference is and it looks like the differing values are the ones for the very last value in the row that sounds like an easy fix but these values only start to differ halfway into the test and all of the values before were the same im not sure what would be wrong to cause my cost function to not work properly halfway into the matrix but thats what diffchecker is telling me help heres a link to what im talking about if it helps
  label = image, content = i think this is because we had two versions of matrixat one which returned a pointer to an int and one which returned a pointer to a constant int but which both had the same input parameters is there a way around this or am i just doing something wrong
  label = image, content = no idea what to do here debugging has gotten me nowhere my program passes testing crabster seam carve 50x35 but for some reason fails the 70x35 test case this is not a problem with the dog tests this makes no sense to me at all how could all my functions pass up to this point work for all of dog work for the crabster 50x35 and then fall apart for the 70x35 not to mention the file is so big how could i possibly shift through the matrix and try to find the issue any advice or potential solutions would be appreciated as i have spent way to long trying to fix this note that i have already tried redownloading the starter files in case i accidentally changed something and this did not fix the problem thanks
  label = image, content = how come i cannot instantiate an array with variable length even when i make that variable constant for example if i had a function int fnint which is a function that takes in an int and returns an int and i wanted to set the output of this function to the size of my array when i instantiate it i get an error saying that the expression must be constant i set a variable named size equal to the output of this function so const int size constfn5 int arraysize this will not work for some reason
  label = image, content = can we create a function that calculates the minimum of two numbers i know we have to use matrixminvalueinrow but how do you use that if you are trying to find the cost of a pixel at the last column of a matrix because for that case if we did matrixminvalueinrow wouldnt we go out of bounds
  label = image, content = im not quite sure how to convert my command line arguments into ints so that i can see if they fall within the requirements explicitly casting as an int causes an error in the g compiler conversion causes imprecision error or invalid staticcast type from char to int how can i go about this
  label = exam, content = 
  label = image, content = when width such as 0 is put in for resizeexe ie resizeexe dogppm dogtestppm 0 should the program fail at assertion of the functions that resizeexe uses or should resizeexe check it the specification only says resizeexe should check if the width is smaller than or equal original width
  label = image, content = when i tried running my resizeexe against the ppm files that are given the code seem to work fine giving the correct ouput size when viewed in gimp however when i tried making my own ppm file and pass that into the program it always seem to give a segmentation fault this seem to occur when i try to initialize an image based of the ppm info from the file any ideas of what might be causing this
  label = image, content = how can the assert fail for the rotate test for the crabster image but not for dogs if my image code was not correct for image wouldnt it also fail when the test ran for dogs as well
  label = image, content = am i correct to understand that we have to create a blank ppm file to act as the output file before actually running the program thanks
  label = exam, content = the course states that if you fall within the standard deviation you will pass does that mean pass with a c or simple not fail d etc
  label = image, content = is resizecpp supposed to create a new ppm file with the name that is inputted where would this new file be stored
  label = image, content = how are test functions going to be graded for the final due date on 392016 are they going to be mainly graded on style or graded by the amount of test functions that are written
  label = exam, content = thanks very much
  label = image, content = for functions such as imagesetpixel and imagefill why are we actually sending a pixel rather than sending a pointer to a pixel i thought that for structs you are supposed to send an address and the parameter would require a pointer what the difference between the matrix image structs and the pixel structs
  label = image, content = i searched and dont think this question has been asked yet in the example test function testprintbasic that was provided for us in imagetestscpp the code const pixel red 255 0 0 is used isnt this disrespecting the interface since its not using a function inside imagecpp and assuming that this is the right format to initialize the pixel
  label = exam, content = hello for question 4a i dont believe it said that we couldnt use an auxiliary array to pass in values before copying values etc so i was wondering why there is a specific grading criterion that tests for this while this isnt explicitly disallowed in the problem shouldnt it explicitly state that an auxiliary array is not allowed if the graders are to test 3 points worth for it i couldve easily not used an auxiliary array and i had even considered the idea but it wouldve taken more time to think through and wouldve introduced a higher probability of making an arithmetic mistake therefore i chose what worked with the least amount of thought while optimizing my time any info is appreciated thanks
  label = image, content = in the function removeverticalseam it has the rme such as the size of seam is imageheightimg each element x in seam satisfies 0 x imagewidthimg how should i use assert to test this because i do not have access to the size of array or i can skip testing these two requirement
  label = exam, content = i am confused about how this function is tree recursive while funcd calls itself twice in its body the recursive calls do not create a wellformed binary tree for example in countingchange the problem was split into 2 smaller subproblems and combined them after computation by adding the results this creates a tree structure where at each node there is a left and right subtree representing recursive calls and the value of the node is obtained by combining the left and right results through addition in this function the recursive calls are nested so there is no such binary tree structure it is possible to create a tree for the problem but this tree is not a wellformed problem tree like the one above two function calls are made at each node but the result of one is dependent on the other so there is no true combination step and it is impossible to split the tree into two smaller independent subtrees looking back through notes and old materials tree recursion was never thoroughly defined in the way that tail recursion was is this analysis correct
  label = exam, content = hi im just wondering where can i find the gradescope grade and the submission for midterm exam
  label = exam, content = exam grades have been posted you can find grade statistics on the grade statistics 619 thread on piazza i will open up regrade requests when classes resume on monday you must submit your regrade request before eod the following friday 311 these values are out of 72 points note that solutions have been posted under google driveexammidterm so you can understand where points were deducted and study for the final exam in order to view your gradescope grade and submission you may need this class id m7kd8m pin
  label = image, content = the cstring header is not included as one of the libraries that we are allowed to use is it possible to still use cstrings without this header do we just traverse them as pointer arrays to chars what is the difference between a cstring used under this header file and one used without
  label = image, content = just a clarification on how argc and argv function they are both automatically created when you execute a program that has been compiled with g and also automatically sent to your main function thus you can declare them as parameters in your main also when we write main without any parameters are argv and argc still passed on we just arent utilizing them thanks
  label = image, content = when i was trying to test my work against the horse test case i have shifted the order the test is run putting the horse before the crabster and after the dog in the end i managed to get it to passed as well as the other two however when i revert to the original order it was in i suddenly fail the crabsters second seam carve test is there a reason why this is the case
  label = image, content = and they are still not over my friends ran for just a minute am i doing something wrong
  label = image, content = i am having issues with resizecpp when i call seamcarve nothing appears to happen to the image yet i have passed all the test cases for processingcpp thanks
  label = image, content = hey yall so im having trouble with this function i run the tests and it simply says that it doesnt pass my code seems right to meanyone know some common mistakes with this or how to easily find the bug im setting the first row of cost then doing nested for loops with 3 different cases inside if along left wall if in middle if along right wallit seems pretty logical thanks
  label = image, content = for this function when i am trying to find the energy for at a certain index and the pixel that is nesw is the border pixel do i calculate the value of that pixel too or should the value here be whatever the value of the index im at is for example if i had a matrix that is 4 x 4 and the computeenergy function was at 1 x 1the first index that isnt on the border of the matrix for the sq difference function would n and w be the border pixels or the pixel at 1 x 1 i know the spec says to compute for all non border pixels but im confused as to what i should be doing for the indexes next to them
  label = image, content = im passing dog but not the crabster assert for seam carve this assert fails imageequalcarvedimg carvedimgcorrect i have checked all my matrixes and image functions and even tried simplifying some any suggestions on how to debug this code
  label = image, content = for removeverticalseam after i remove the seam in the auxiliary image can i use img aux rather than writing a loop to copy aux into img since img is a pointer i think it should work but actually it doesnt wondering why
  label = image, content = are supposed to literally copy and paste the usage resizeexe infilename stuff or do we have to change infilename to the actual file name we are trying to read in
  label = image, content = so my code compiles without errors using the makefile however when i run the code it just gives me a segfault i dont really know where to start to debug this any suggestions
  label = image, content = if we find errors in matrixcpp while testing for processingcpp will we have a chance to resubmit matrixcpp to get full points thanks
  label = image, content = is it bad styling practice to emit brackets when using a simple one line statement under a conditional or loop eg ifx0 return x instead of ifx0 return x
  label = image, content = i am having trouble passing the seam carve tests particularly the seamcarvewidth function i am following the procedure right from the specification sheet yet i am unable to pass the test any suggestions thanks
  label = image, content = hi my partner and i have finished processingcpp and we are trying to test it right now it successfully tests dog crabster and up to horses remove seam when it gets to horses seam carve 300x382 however it simply freezes in runtime and never finishes in terminal i understand that horses is a big image and so it should take a while to process but it should still eventually finish any ideas on why this may be happening we are experiencing this problem locally with g for mac and on caen thanks
  label = image, content = i tried to test my code for processingcpp and every time i try to run it i get a bad access error for the test on rotate left im confused because isnt rotate left given to us im not sure what is wrong
  label = image, content = 
  label = image, content = i am confused on how to store the input image to be able to pass it to the functions i have written i understand how to read in the string of the input and then open it using an ifstream however i am not sure how to save it as an image and then pass it into a given function thanks
  label = image, content = i have finished writing my code and i kept testing my code for 4 hours for one reason i passed the all test cases for dogs and horses but i kept failing the cost calculation for crabster i tried to com up with the uniqueness of crabster file and write some function to come up with its uniqueness however i still dont understand why i passed the horse image but not crabster could some one give me the hint of crabster image uniqueness
  label = image, content = variable length arrays are a c99 feature i am initializing an array with the size in the brackets what am i doing wrong
  label = image, content = im confused about how we are supposed to find the energy of the pixels what are the north west east and south numbers that we are using to compute the energy
  label = recursion, content = i lost some of the points from project2 where can i see the details i just found a lot of 00 and 5 of 11
  label = image, content = i dont know why i keep getting an error when i attempt to compile resizecpp in caen i ran it through my computer terminal and it does not get this error i dont understand what is wrong with this
  label = image, content = we are having trouble with the seam carve width function it really feels like we have to use recursion it also feels really tedious making each variable into a constant after its corresponding function call what are we doing wrong do we have to make a new image instance each time we take our a seam until we get the desired width
  label = image, content = thank you for the 90 year extension
  label = image, content = why is it that when i run testall findminimalverticalseam takes in a normal int array500 from main but when it enters the function itself seam becomes a pointer to an int
  label = image, content = how is the computeenergymatrix supposed to work if it is passed a 2 x 2 image as there is no center value you cant use north south east and west to calculate what it should be we will just not be passed an image this small thanks
  label = image, content = how should we compute the vertical cost if the entire row has the same value for example every pixel in the bottom row of the matrix energy has the same value and the minimum cost in the row above is 960 since 960 is right in the middle of a 5x5 matrix there are 3 possible pixels below that would return the same cost so how should we determine which one to use
  label = image, content = while trying to initialize seam in the seamwidthcarve function i am running into the compiler not letting use an expression that does not have a const value for the size of the array i have declared a const int variable to hold the result of imageheightimg to no avail how do i create the appropriate size array using the imageheight function i am using visual studio which from looking up has some problems with this httpstackoverflowcomquestions18919647declaringanarrayusingconstinteger thanks
  label = image, content = is it necessity for us to use recursion with computeverticalcostmatrix and also with findminimalverticalseam iteration seems much simpler in those cases but if its for practice i totally follow thanks
  label = image, content = humm the first image shows that i pass on the entire processingtest particularly the testing horses seam carve 400 x 250 so i assume my code should be alright however after i wrote the resizecpp and test it with cywin it gave me an error i tried to debug it with the code from lab1 g ­g resizecpp ­o resize it gave me a bunch or errors how should i debug in this case
  label = image, content = this is the error i am getting when i run processingtestscpp in xcode it is on line 86 of that file would anyone be able to help
  label = image, content = if youve got your resize program working feel free to share the results with some images of your own pin
  label = image, content = if my code passes all the tests in the processingtestscpp does it mean that i will get full mark for the processingcpp for part 2 of project 3
  label = image, content = for other students using cygwin i was getting the error shown below when trying to do make processingtestsexe i found a flag that would workaround this error by changing the makefile to add the flag dglibcxxusec99 as shown in the picture below now i dont have this error make sure to test on linux before submitting to the autograder as usual i hope this helps source of flag httpscygwincommlcygwin201510msg00430html
  label = image, content = hi i have read about 1380 about the tostringerror however this still occurs even after i redownload the materials do you have any idea of why this happened and how should i handle it thanks
  label = recursion, content = so i got some grade out of 67 on project 2 and thats what i see in the gradebook so does the grade out of 67 include style
  label = recursion, content = hi i just checked the email and found that i got 067 for project 2 i felt there might be something wrong since i had my code complied in the terminal and all the tests were passed i went back to the autograder and i found there were two submissions for project 2 the first one was mine and the second one was my partners which showed invalid because he didnt submit the test file is that why im getting 0 because my partner forgot to submit his testing file and did you grade only the last submission of both partners instead of grading the file individually i didnt remember i heard anything like we should only submit once and we would be graded based on the same file like in 183 we were told we could write the code together but we had to write our code individually
  label = image, content = at this point i have implemented the computeenergymatrix function when i tried testing it with the given processingtest file i immediately get a segmentation fault when running the exe is this because i havent implemented the other functions yet when i tried commenting out the function as well as the squareddifference one given the segmentation fault still remains thanks
  label = image, content = are we supposed to create our own min function to compute the minimum cost are we even allowed to create new functions that arent specified in processingh
  label = image, content = do we have to index by pointer or can i index with something like arrayi
  label = image, content = i am confused as to the definition of border pixels may we take the phrase to mean all pixels in the first and last row and first and last column of the image if so how would the function computeenergymatrix be used if given for example a 1x5 image would all pixels be counted as border pixels and thus ignored or would only the end pixels be counted as border pixels similarly if given a 2x7 image would we ignore all pixels as the only two rows and columns would be the first and last rows and columns or would we scan the second row excluding those pixels in the first and last column
  label = image, content = the rme of this function says column 1 is inclusive while column 2 is exclusive does that mean we can never check the whole row because the last element will always be excluded what if the min value is on the last column of a row how would i find this
  label = image, content = in the energy matrix function it says to initialize the energy matrix to be the same size as the given image in order to initialize the matrix we must know the width and height of the image is it safe to assume that in the test cases the image is initialized with a height and width i did not find any imageinit functions in the processingtestscpp so how do we know if the given image will have a provided width and height
  label = exam, content = will solutions for the midterm be posted soon if at all more specifically will they be posted before our grades are released
  label = image, content = will the autograder definitely be up before spring break starts im planing on finishing the project before break because i will not be able to work on it while i am away
  label = image, content = i wrote my processingcpp and am trying to test it on xcode but i cant figure out why processingtestscpp is unable to open dogppm or any of my files for that matter is there a way to run processingtestscpp on xcode so that the files open
  label = image, content = in the spec it explains how to remove the seam by copying all but the seam into another image then copying it back since you cannot change the height or width of an existing image since the height and width will remain the same that means we will need to fill that column with some sort of values then right what should we but putting at the end of the image in order to satisfy this thanks
  label = exam, content = will we get our midterm grade back before the spring break
  label = exam, content = i would like to report a suspected honor code violation that occurred during the midterm exam what is the exact procedure for this i couldnt find anything on the syllabus because it only details the honor code violation for codes on projects
  label = image, content = after reading the spec i am still not sure how to compute the energy values of pixels on the edge of an image is it always the case that every edge pixel will have the same value if so how do you find this value
  label = exam, content = no room number
  label = exam, content = if me and my partner are assigned to different exam rooms should we just go to the same room anyways
  label = exam, content = why is this not tail recursive isnt the last step calling the function hannoi itself
  label = exam, content = in some practice exams the solution directly access the struct member variables are we allowed to do so in todays exam or we should not directly access member variables when we are writing main functions
  label = exam, content = just out of curiosity what happens if we append an empty list to a list with elements ie listt list listmake3 listmake4 listmake listt newlist append listmake list newlist
  label = exam, content = should we use assert to check the required clauses in function rme when we hand writing code in the exam such as assertsrc to check whether it is a null pointer
  label = exam, content = can someone briefly tell me the idea of the solution to problem 4 treefilter function i dont understand the pred function as in why do we only modify the right tree if pred treeelttree r listmaketreeelttree r and why do we return append l r thanks a lot
  label = exam, content = i came across this notation for c return statement while reviewing for the exam return i am curious as the what the means i am under the impression that you can only return 1 value in c assuming that it acts as a comparison how would it evaluate to true or false thanks
  label = exam, content = 
  label = exam, content = for this problem are these two same answers mine solution false 0 true 1 false 0
  label = exam, content = in the solution for problem 3a is the statement return stringlengthhelpers 0 not illegal how can the literal value 0 be passed through by pass by reference
  label = exam, content = in the problem the function pickup has parameter const char obj what does the two stars do in this problem
  label = exam, content = can someone explain this one maybe go through how to get to w and i should be able to figure it out from there i cant seem to get it right thanks
  label = exam, content = on behalf of the entire eecs 280 staff good luck on the midterm today make us proud also i have a special request if and only if you finish the exam early and have checked over all of your answers at least twice consider drawing us a picture or writing down a good joke or two we will see these while we are grading and it will help to pass time cheers vidal and the eecs 280 staff
  label = exam, content = is there a clear definition of active vs passive flow for now i am assuming active flow is before the return statement is executed on the way down and passive flow is after the return statement but can someone clarify this
  label = exam, content = would it be wrong to say infile s i dont really understand why there are three ss
  label = exam, content = can someone give me a hint on how to implement the stretch function from labster i wanted to make a new cstring to store the old one and then stretch but we cant make a cstring without knowing the specific size right how do we stretch without overwriting the data
  label = exam, content = pointers and references for option d is it because we cant assign an integer to an address value also is b the same as b if b is a pointer for the line that says ifk 0 return pos shouldnt it be ifk 0 k return pos since if k was originally 0 k would then make it negative
  label = exam, content = hello i have designed my cheat sheet to be a very nice overview of the semester so far that i would like to use in the future for review purposes at the end of the exam do we need to hand in our cheat sheets along with our tests i am just wondering if i should copy it before the exam for my own sake
  label = exam, content = it says in the schedule of topics that tomorrow is midterm instead of listing a specific topic what does this mean no class tomorrow
  label = exam, content = for problem 5 in winter 2015 the note says that problems here were given in a term when cstyle adt was covered yet does this mean that in the problem 5a using deptptrstudentsi studentsini is not treating interface and implementation separately if so would using pointer arithmetics like department ptr deptptrstudent for ptr studentsini be properly treating interface and implementation separately
  label = exam, content = for the modifies clause in 5b i dont fully understand why file is being modified instead of the name of the file could someone help explain this please thanks
  label = recursion, content = i saw that project 2 was not listed in the autograder anymore and was wondering if that is normal also will we getting our grades back soon
  label = exam, content = if we want to collaborate on a cheat sheet with our classmates can we handwrite one notecard together and then photocopy it or do we each need to hand write the entire thing
  label = exam, content = can stringstream be used as both ostringstream and istringstream unlike the lecture slide i think i accidentally used stringstream instead of istringstream or ostringstream for testing in the project and everything went smoothly can i use stringstream like that in the exam
  label = exam, content = title ex int x 0 int ptr x ptr
  label = exam, content = what does the condition statement currentbestfriend of the if statement mean wouldnt currentbestfriend a pointer type how could we use a pointer as a condition
  label = exam, content = i didnt go to the review session and im not sure if these files on labster are from it but would it be possible to post solutions to them
  label = exam, content = for this question why is it that we can alter s i interpreted this as s was an immobile readonly pointer therefore i thought we couldnt change the location that s points to so i thought the s 1 in the second to last box wouldnt be valid
  label = exam, content = the problem asks us to initialize a local variable that is of type course with the name eecs 280 and worth 4 credits without accessing its member variables i understand that theres a initializer function given but could we use an initializer list like shown in lecture ex course newcourse eecs 280 4
  label = exam, content = will we be provided with all string and cstring methods in the exam or our we supposed to know them
  label = exam, content = in the solutions implementation of assignfriends if we say that one value of i has been assigned a best friend with a certain llama j wouldnt it still continue to look for a llama that fits the requirements until all the llamas in j are looped through doesnt this allow i to be assigned another best friend later on in the loop should there be a break after the last line of the innermost if statement
  label = exam, content = why does cout ptr1 ptr2 endl print out the cstring shouldnt it print out an address
  label = exam, content = if we were dealing with strings or coutcin or assert or anything would you want use to include what library we needed or can we assume it is already included
  label = exam, content = what is the solution to this question the actual solution was a bit hard to read i am especially confused about the plusonefoo due to the multiple signs everywhere
  label = exam, content = hi just a quick question in lecture slide it says that return address is an activation record but in labster when i try to run the program above i find that the return address is stored in temporary objects rather than stack so is return address in the stack anyway
  label = exam, content = why is the answer int f4int instead of int f4int x where x is the name of the pointer to a pointer to an int i know that for function pointers the syntax changes but i thought for regular function declaration you had to give the arguments names
  label = exam, content = for this one am i able to a ifelse branches for recursive case if pass the pred function than append l with the r including top node other wise just append l and r without a top node in the middle
  label = exam, content = for winter 3b is my way a correct implementation also for 3a does this solution check for the case where the length is 0
  label = recursion, content = are the grades showing on the autograder for project 2 final
  label = exam, content = i dont really understand the syntax of a function pointer for instance bool predint i assume this is the correct initialization for a pointer pointing to a function that takes an integer and return true or false then do we know the name of the function if is pred the name of the function or the name of the pointer how do we use the function when we want to use it predx then pred is the name of the function then what is the name of the pointer
  label = exam, content = why is the function hannoi recursive but not tail recursive the return type of hannoi is void and we havent dealt with that before to decide its tail recursive or not
  label = exam, content = if there isnt a space for a helper function does that mean that we cant use one if that isnt true do we just specify that its a helper function in the space for the original function
  label = exam, content = can we change the last two lines to llamasibestfriend llamasj llamasjbestfriend llamasi
  label = exam, content = for the while loop condition would it be acceptable if someone typed while infilefail instead of while infile s s s or is that a glowing difference in code
  label = exam, content = why is it that i cant cout arr3 endl but i can cout arri endl in the lecture slides it says that for the first example i put the compiler reads the arr as a pointer before it even gets to the 3 part why is that not the case for the second example of arri
  label = exam, content = in the main func how can str3 can be initialized without a null character at the end i thought cstyle strings whenever we do not use string literal to initialize them are supposed to contain sentinel at the end
  label = exam, content = for the following code int main char string111 gibberish char string211 balderdash char ptr1 string1 char ptr2 string2 cout ptr1 ptr2 endl why would this print out gibberish balderash as supposed to g b doesnt the pointer only reference the first character
  label = exam, content = can our cheat sheet be written on a sheet of loose leaf rather than an 85 x 11 paper dimensions of loose leaf are smaller but easier to organize
  label = exam, content = what is the actual definition of segfault and which lecture can i find this in
  label = exam, content = on winter 2015 practice exam question 1c it asks to create an array of size 10 of pointers to ints the answer has it as int foo10 but cant you just put int foo10 since automatically an array is a list of pointers to the data type specified
  label = exam, content = inside the main program what is the difference between passing llamas and passing just llamas i am a bit confused why llamainit takes llamas with whereas assignfriends and printfriendships take the whole array without
  label = exam, content = for 1c in the f15 practice exam i follow everything except the output i see the way that glasses will eventually point to the space in memory holding ghosts dont have feet we can call this space in memory 300 when you do cout glasses endl why isnt 300 printed i know an array of chars can be printed by cout whereas you cannot just cout a vector but glasses is a pointer it is storing the location of an object in memory namely it stores 300 so why isnt that printed thanks saul
  label = exam, content = since ptr1 and ptr2 are pointers wouldnt the following print out the addresses stored in those two pointers why the answer is galderdash bibberish instead of two actual addresses
  label = exam, content = i have a question about the winter 3015 exam 3a it reads my solution was char end str len for char ptr str ptr end ptr end if ptr end 1 return false return true does this still count as traversal by pointer the important notes section says we can use pointer arithmetic but we cant dereference a pointer that has been offset by an index variable i used end 1 but i am not sure how else to compare the values if i cant use this thanks so much
  label = exam, content = can anyone help me on the third question what is the value of argv what does argv mean and what its referencing to
  label = exam, content = why local is a property of procedural abstraction what does it mean to be local
  label = exam, content = my understanding of this code above is that the ptr would eventually point to the last element 0 so that when you take the different the string length would be the length counting in the sentinel is that correct
  label = exam, content = could someone explain this question a bit specifically could you explain what happens when assigning values in even yplus2 and y2 thanks
  label = exam, content = i understand that cstrings are just char arrays terminated by a null character and have a few special properties like the ability to print them char str6 he llo 0 cout str endl we print hello however on xcode and labster i find that i can print char arrays that are not terminated by a character as if they were cstrings char str5 he llo cout str endl we still print hello i would have expected the code above to print the address of str array is this a quirk of the the compilers im using or is this how all char arrays behave in c cstring or not thanks
  label = exam, content = so i just noticed that room assignments are by uniquename not last name if my uniquename start with the letter t then im in stamps is that correct
  label = exam, content = i think this one does not check the base case for whether the tree is sorted it should have a base check whether the left element is less than top and whether the right element is larger or equal to the top node
  label = exam, content = i think the a should be changed to a b because we do not know which of the string terminates another question is that are a and a0 equivalent also the one above this question should be not
  label = exam, content = instead of declaring a pointer and then returning that pointer at the end would it be possible to declare an int largest and then inside the for loop set that equal to fptr and finally return largest as an address
  label = exam, content = the solution key says file largest dirfiles but is it okay to not have in front of dirfiles if not when do we need to put infront of struct when calling it inside the function
  label = exam, content = for an empty c string do we treat it as an array like 0 or just an empty array
  label = exam, content = in the lecture 6 examples when the code dereferences a null pointer labster gives a warning about an error in the code yet the code will still return some value at that pointer what is the reason for this and is this always the case if it is how do we know what value will be returned a specific example is in the file l64pointers where the dereferenced null pointer returns 42
  label = exam, content = in the declaration file largest dirfiles why does dir files return file pointer to the first file in the directory dirfiles0 instead of a pointer to the array of file pointers i thought it would be file largest dirfiles0 or dirfiles
  label = exam, content = can we see what the averages were on the practices exams the semesters they were given
  label = exam, content = are we supposed to know the answer 5 bytes if we do which lecture talked about this
  label = exam, content = can we use a function thats not on the list in the back of the exam if we write its implementation
  label = exam, content = okay so as crazy as this may sound serious question am i allowed to bring a magnifying glass to the exam i have practiced writing letters unreadable to the naked eye
  label = image, content = im trying to test computeenergymatrix but when i run processingtests it gets to loadimage and then just closes the execution i have a breakpoint just before it and when i try to step forward the session closes i have all of the files in the resources folder and theyre in the same folder as the actual project am i missing something
  label = exam, content = if these are equivalent why would you ever use this
  label = exam, content = im confused as to how theres a boolean array alreadyprinted which we initialize true for llamas which have already been printed but never implement in a conditional statement for not printing the friendship when the boolean value holds true my assumption is that the closing bracket ifalreadyprintedi alreadyprintedi true this one should be placed just before the end of the for loop ifalreadyprintedi alreadyprintedi true llama current llamai cout endl if
  label = exam, content = hi i was doing the practice tests and came across this conditional statement in problem 3b of the spring 2015 midterm are we out of characters if a im not really clear what this does i wrote if a 0 in its place so could someone clarify if mine is the same or if mine is wrong and elaborate a bit on what is going on in the test solutions thanks
  label = exam, content = why does the value of clue change
  label = exam, content = does it mean when are there most variables in the stack so itll be when min is called in minof3 when there are three stack frames together in the stack
  label = exam, content = 5a to initialize students array of department the solution manual says for int i 0 ideptptrnumstrudents i deptptrstudentsi studentsini however the rme of that function says we are not allowed to copy any student objects can we just go ahead and say deptptrstudents studentsin to copy the pointer to the first element 5d the solution manual says forint i 0 ieecsdeptnumstudents i studentaddcourseeecsdeptstudentsi newcourse however studentaddcourse takes a pointer to student can we then do forint i 0 ieecsdeptnumstudents i studentaddcourseeecsdeptstudentsi newcourse
  label = exam, content = int main int arr5 1 2 3 4 5 int ptr arr 2 ptr 2 ptr 5 rest of problem im confused by the last line by the ptr 2 wouldnt ptr 2 evaluate to 1 since youre dereferencing the address of ptr 2 aka the start of the array why does it let you point to the first element
  label = exam, content = i was looking over the solution to this recursion problem and i was wondering about a couple things first why is the base case return 0 shouldnt it be return count if it were return 0 then wouldnt the function always return 0 no matter what second i was also wondering why the call to stringnequals involved the string length of b and not a i thought it needed to be as length but if it doesnt matter or it as to be bs length some explanation would be nice because i cant seem to get why i tried to recreate this in labster but since i cant use references to anything other than classes labster wouldnt let me i couldnt create the exact same thing
  label = exam, content = what does a referencetoconst do if you pass in reference to const as a parameter to a function how can anything change
  label = exam, content = on this chart it says for the length or copy value of a cstyle string you use strlen or strcpy would strlen and strcpy be given to us if we needed to use it or would we have to implement them ourselves
  label = exam, content = for the question below its obviously bad to increment and decrement pointers that are not pointing to arrays last 2 lines in foo function do we have to write our assumptions for questions like this something like assuming x and y are pointing to objects created in consecutive memory locations would we lose points if we assumed that x and y were not created next to each other and that we could not determine what the pointers were pointing to after the x and y lines of code i think both answers would be legitimate but according to the answer key it seems as though we are supposed to assume that they are in consecutive locations
  label = exam, content = such as how to execute a file or use makefile
  label = exam, content = on slides it says modifies indicates which things are potentially changed as a result of side effects so how about those objects modified but not as a result of side effect such as sort the function does intend to modify v from a nonsorted v to a sorted v
  label = exam, content = if we have some pointer s to a cstring can we terminate by using a condition like whiles s will this terminate once it reaches the termination character
  label = exam, content = would the review session be strictly ending at 230am or there might be possible that gsi answered all the questions students have and wrap up couple hours earlier
  label = exam, content = though vectors are not covered in lecture will we be tested on them
  label = exam, content = i was working on this worksheet and i was wondering why the array a changes to 1 3 3 for question 4 i thought that the array wasnt modified in main are arrays always passed by reference can someone explain to me why it is 1 3 3 instead of 1 2 3 thanks
  label = exam, content = 
  label = exam, content = void fooint x int y int z z z 2 x y z y z y return int main int arr 4321 int a arr1 int b arr int c arr3 fooc b a cout a b c endl return 0 main ok my values for a and c are correct but im confused about b i understand the value b points to changes to 5 but in the next line when its y why doesnt b point to the next value in the array so this case 3 why is that that b continues to point to the first element in the array even though we did y i am confused because whenever we do a for loop like for int ptr arr ptr arr size ptr do something why does ptr then point to the next element in the array but when when we do y in foo it doesnt point to the next element arent they essentially the same thing so shouldnt they have the same behavior
  label = exam, content = if we are asked about performing operations on lists or trees will we be provided the functions that operate on liststrees listmake listfirst etc or do we need to have them memorized do we need to know the inputs and types of treeelt listwhatever
  label = exam, content = i tried searching on piazza but no results come out so im just wondering what is the time and venue of vidals exam review section on saturday also i have trouble accessing the web link shared on the exam review section post on piazza by vidal
  label = exam, content = i am a little confused by this i understand the difference between postfix increment and prefix increment but how does it work out for y x1 is this same as when we do ifx5 which will assign 5 to x and the condition shall evaluate to true how do we know that the assignment of x always happens first what will be the result if i did y x 1 is this to do with operator precedence
  label = exam, content = 
  label = exam, content = i understand the answer to this question except for the value that is printed for b shouldnt b point to the second element index 1 in the array because of the y in foo and therefore b would print 3
  label = exam, content = the question is f3 is a pointer to a function that takes in 3 pointers to ints as input and returns a double why is the answer double f3intintint isnt it supposed to be double f3intintint its a similar with question 1c i and in there they put int f1int whats the difference
  label = exam, content = slide 34 on lecture 10 states that in a class when we call a constructor to initialize data members we dont want to assign a ain instead we want to initialize using a initializer list can someone explain the difference between these two thanks
  label = exam, content = why do structname functions usually takes a pointer to a struct as parameter instead of a struct itself if you want to modify the struct you can pass by reference this way memory wont be taken up too much either
  label = image, content = any idea when the autograder for all of project 3 will open
  label = image, content = how do you know when to use vs the for example the difference between imgredchannel imgredchannel
  label = image, content = 1 do we need to write a test suite for processingcpp or can we just use the given tests in processingtestscpp 2 is it ok if running all the tests in processingtestscpp takes around four minutes on my computer
  label = exam, content = are there answer keys for the previous exams posted on drive
  label = image, content = will there be office hours during spring break i assume there will be some students that are staying on campus and was wondering if some office hours would be held during that time
  label = image, content = should the requires clause for imageinitimage img const matrix mat place some restriction on the contents of mat right now all it requires is that mat is a valid matrix but matrixnormalize requires a matrix of nonnegative values as it is were obligated to provide some kind of sensible output no matter what values mat contains even though many matrices are illegal as arguments to matrixnormalizeand as i understand it all this imageinit function is supposed to do is to run the matrix through matrixnormalize i cant think of what we could with negativevalued matrices that would make any sense
  label = exam, content = does the treefilter function have to recursive or tail recursive or does it not matter at all
  label = image, content = this is my terminal output but my autograder is 01 any ideas
  label = image, content = what should the image be in the case of a zero matrix input should it be an image where all the intensities are 0 or 255
  label = image, content = when i attempt to call matrixnormalize in imageinit it just gives me the error no matching function for call too matrixnormalize ive tried calling it with all sorts of different parameters for matrix mat but shouldnt it just be mat 255 i have all the original inclusions that should link me up to matrixnormalize and when i start typing the function name xcode autofills where did i go so wrong
  label = image, content = when i run the imageprint test case in the starter file for my function i get the blue and white pixels copied onto both lines when i check my stringstream at the points previous to when the blue and white pixel are set into the image i have copies of red and green what kind of error could be causing this
  label = image, content = so im setting up my test function for imageprint to print to a file rather than standard output the idea being that i have another file with the expected output i would then run the terminal diff checker on the two files by writing that code into the test function using system to enact the terminal commands and then passing the output of the diff program to an assert statement that way i wouldnt have to do any visual checking or copy and paste into a diff checker my function would handle everything i realized as i was writing it however that the autograder isnt going to have the extra txt files ive created for this is there a way i can do this that will work in the autograder as well as natively on my machine and if there isnt is there a way to test imageprint to use an output file as well as cout i test the imageinit that takes an input stream as an argument both on a hardcoded string and on input from one of the supplied ppm files that would pass the autograder thanks
  label = image, content = is it possible to adjust the height and width of the redchannel greenchannel and bluechannel when i pass them through matrixat via the imageprint function they keep failing the assert clauses because their heights and widths are 0
  label = image, content = i have a problem with printing output on putty if i run my code on putty it just stop after normalize function i dont know why but i could have gotten full credits from autograder do you think it does matter
  label = image, content = hello my project partner and i are currently using a class type that is representative of each test case that we create so that we wouldnt have to repeat codeprint statements that we would write in each of our individual test functions however it has recently come to our attention that all test functions must be implemented as static upon reading that we need static tests we are considering using an empty namespace to stop outsideoffile access of our test cases since we cannot create a static class could doing this lead to any unexpected ramifications it seems to be a way to address the same issue that making our functions static would and we wont have to deconstruct a large portion of our code this way is this fine
  label = image, content = when trying to run through the public test for image the final assertion on the page fails looking into this i noticed that for the last test when the third imageinit is used the matrix passes through fine as mat 0 1 2 3 4 5 but once it passes through matrixnormalize using maxintensity all values in the matrix change into 2147483468
  label = image, content = i assumed that when we registered our partners for project 2 the only reason to register again was if we were changing partners i did not change partners and therefore did not register him as my partner again what should i do
  label = image, content = for style should we delete the rmes listed above the functions in imagecpp and matrixcpp
  label = image, content = ive been searching on piazza for a while and couldnt find any answers to this but correct me if im wrong how are we supposed to confirm the height and width of the channels if we cant use the matrix functions also how are we supposed to pass a matrix into our second imageinit function if we cant use matrices in our tests thanks
  label = image, content = my copy of the const mat is correct however after running it through normalize it doesnt behave as expected specifically matcopy0 1 2 3 4 5 the expected matcopy after being normalized should be 0 51 102 however my matcopy turns into 0 63 127 191 255 318 recognizing 4 as the largest number to scale does anyone know why this is happening any insight is appreciated thanks
  label = image, content = can someone help me with this error it occurs when i run image public test anyone know what is happening thanks
  label = image, content = i use fmod in matrix which is a part of the cmath library i think i know we are not allowed to include extra libraries but is there another way i can use this function can you do cmathfmod like std
  label = image, content = i looked at 1097 and other posts on piazza but they still didnt answer my question in the requires clause for normalize it only says that it has to be a valid matrix and it is but all the values are just 0 so the max is 0 but that causes the function to divide by zero should we add something to normalize to deal with when max is 0
  label = image, content = ive been having this problem in visual studios where the compiler is tossing me linker errors usually this happens when i havent included all my files in the right directory or im compiling a file that has function declarations that i havent implemented however im almost positive that this isnt the case but yet im still getting these errors any ideas this is what one of the errors is telling me severity code description project file line error lnk2019 unresolved external symbol void cdecl matrixinitstruct matrix intint matrixinityaxpaumatrixhhz referenced in function void cdecl testatvoid testatyaxxz eecs280 project 3
  label = image, content = i get a fault when i declare an image as such image img how do i fix this ive already done ulimit s s 60000
  label = image, content = are we allowed to create matrix pointers to the redchannel greenchannel and bluechannel matrices and then use matrixat to retrieve data elements or does this count as not respecting the interface when done in imageprint we cant get pointer to redchannel for example without doing imgredchannel so i am confused how else we would access these spots in memory we could use getpixel i suppose but i already used matrix pointers any input is appreciated
  label = image, content = currently when i run my image print function it appears to be printing address instead of the actual values that could be there as shown 2 2 255 0x7fff5f922ef00 0x7fff5fa17138 0x7fff5fb0b380 0 0x7fff5fa17138 0x7fff5fb0b380 0 0x7fff5fa1713c 0x7fff5fb0b384 0 0x7fff5fa1713c 0x7fff5fb0b384 i am very confused as to why this is occurring is this likely something with my image init or do i need to modify image print in some way thanks
  label = image, content = hey guys i have a question about how to test the function matrixat since we are not recommended to acquire the elements directly by using the dot operator how could we ensure that the matrixat gives us a pointer that points to the right element
  label = image, content = i tried testing a 2x2 matrix in the third imageinit and the matrixnormalize function is giving me really weird numbers for example when have a 2x2 matrix and filled it with 0 the normalized matrix returns with huge negative numbers
  label = image, content = does the code for the checkpoint need to be fully commented to receive style points fort the checkpoint submission for project 3
  label = image, content = hi i have received this error when running it thru cywin this variable has actually been used in a loop to contain the column value as well as being returned as column value for the function i am not sure why it said set but not used how should i solve this problem when it is in fact used thanks
  label = image, content = when i am testing the function int matrixmaxconst matrix mat it requires a const matrix so how do i declare a const matrix i tried const matrix mat and matrix const mat but neither works
  label = image, content = are we allowed to use constcast in our code
  label = image, content = do we need to protect against invalid ppm input for example p3 1 1 255 255 255 255 0 0 0 or p3 2 2 255 0 0
  label = exam, content = hi all here is the exam review info httpsdocsgooglecomaumichedudocumentd1px7ski4tgyzbee8solwn2msbeoc1q1gtp8pqzywanvgedituspsharing cheers vidal
  label = image, content = for the matrixcolumnofminvalueinrow function the rme has a condition of 0 columnstart columnend matrixwidthmat if a matrix has a width of 5 the columns will be indexed from 0 to 4 so how can columnend be equal to matrixwidth which is 5 shouldnt it be columnend matrixwidth
  label = image, content = confused on how to return a pixel for this function how do create the pixel that will have values set to be returned for the function
  label = image, content = i think i read about this somewhere either on the specs or piazza but i cant find it anymore are we allowed to set matrices to each other say i assign imgredchannel mat would that be allowed
  label = image, content = i tried debugging using cout statements in my test functions to resolve the segmentation error i cout a string in the very first line of one of my test functions but it still gives me a segmentation error for that particular function the function that im testing is the second initialization function in imagetestscpp can someone please help me out
  label = image, content = i keep having an issue where im able to compile and run imagepublictest on my own with all of the tests passing but every time i submit to the autograder it claims that the return code is incorrect just to be sure i tried submitting on different computers setting the stack size limit to 60000 and even compiling on caen right now i am on caen linux the public test for image compiles and runs fine when i set the stack size limit to 60000 but even if i run firefox through terminal to access the autograder the submission still fails the imagepublictest with return code incorrect and no other useful information what am i doing wrong
  label = image, content = inside the test case functions for image is there any way we can call matrixat we cant use dot operator when passing members of imgie redchannel because test case functions are outside the module right or is it just not possible to use matrixat here
  label = image, content = i have searched piazza a bunch of times and found that it is okay to use multiple functions in the same test case if they test the same behavior but i am confused of what a single behavior would be for example for testing matrixprint i would need to use matrixat or matrixfill to change values so would this test then test both of these functions if so does this constitute as testing the same behavior i would also like some clarification as to when it is appropriate to use functions to test each other and when it will cause your code to not work it does not make sense to me how i can use matrixat to test matrixat if that is the function i am testing and yes i have searched piazza and still do not understand how this can be valid is there a way to define what is meant by single behavior in a test i just dont want to use the functions i wrote too often in my test cases because it makes me feel uneasy about them
  label = image, content = this may sound basic but how do you compile our files to test with the publictest files instead of the actual test cases we created through caen linux
  label = image, content = i dont really understand in matrixrow how to access ptr in order to extract the row of the specific element in the matrix and then do basically the same thing for column while using the same variableptr im pretty sure my matrixat is working properly but when i debug in the public test ptr 0x7fff5fb0b604 and ptr 255 i dont know what im doing wrong or how to access two different variables from ptr
  label = image, content = im working in xcode and my program is running extremely slow and xcode is often freezing ive never had this issue before and dont think it is my computer i set a breakpoint and looked into the data of my matrix and there is values for all 250000 spaces some zeros and some junk could having this massive data structure be the reason for my issues thank you
  label = image, content = i got a error message saying that your program exceeded the time limit and was terminated what does this mean
  label = image, content = my partner and i made a ppm file 500x500 to test image init then we realized that the autograder wont be able to use that file so which file should we use for a stressboundary case horses even though it wont be the max height and width
  label = image, content = hello can we access an element in data by index as following matdatai or do we have to access the element in data in a matrix by pointer only matdata i if either is fine is the second one considered better style thanks
  label = image, content = suppose that the normalization of the matrix is not an integral value what should i have the pixel output be ie do i have it round to the nearest int
  label = image, content = specifically for the third initialize function can we assume that all colorchannels and the mat matrice are the same size
  label = image, content = should we reset matrices back to all 0s after testing so the memory values are back to rather than leaving the junk in the memory
  label = image, content = in imagepublictests the imageinitimg mat function is tested by pixel gray 51c 51c 51c assertpixelequalimagegetpixelimg 0 c gray what does the 51c mean how are you able to check that a certain pixel is gray if they are all varying degrees of gray
  label = image, content = so in the specifications it says to be assertive as in to add assertions inside the code implementations for the various matrixcpp and imagecpp functions is the purpose of this to help us debug our programs in case we run into a issue while writing test functions or is it required because the autograder will test for cases that violate the require clause i thought we werent supposed to test for invalid input and that it was ok to assume that the conditions in the required section would not be violated
  label = image, content = so ive been trying to initialize this image right but ive been using a matrix filled with all zeros when i call the normalize function during initialization the function cant hang bruh it tries to divide each value by the max value of the matrix but the problem is the max is zero dawg should we be asserting that the matrix isnt entirely filled with zeros modify the normalize function or what im so lost yo
  label = image, content = i and another group am getting this error message on the checkpoint on auto grader right now
  label = image, content = in matrixprint wherever it is supposed to print a 0 it prints out a number greater than 30000 in the test case that we made while we are able to get around that by saying if the element in the matrix is greater than 30000 print 0 the element in the matrix should not be greater than 30000 it should be 0 what is happening
  label = image, content = i have some questions regarding testing 1is it generally okay for us to use other functions in the same module as helper functions to test a specific function like using matrixfillor more to test matrixat 2 can we use matrix functions in the testing of some image functions 3do we still need to write our testing for matrixfill and imageprint since free ones are already given 4can we use multiple asserts in one function
  label = image, content = is it ok if partner uniqnames are not put on the top of the files i shall put them but just wanted to know in case i forget sometime in the future
  label = image, content = for this function i know we are supposed to normalize mat to maxintensity but are we supposed to assign the values in mat to the red green and blue channels so that all three of the channels are identical to each other
  label = image, content = hi when working to test my imagecpp specifically the set pixel function this error got thrown at me in the terminal to share more detail and i believe this should be in the clear w honor code i initialized a matrix w imageinitimg 3 3 and the error occured when calling imagesetpixelimg 1 1 blue my understanding of the error is that it is due to stack overflow or calling something out of memeory but i believe i should have done neither here any suggestionsfixs for others that have run into this thx
  label = image, content = within matrixcpp can the operator be used to access data or this considered disrespecting the interface
  label = image, content = having some issues with the third imageinit function how i understand it is we need to normalize the values in the matrix passed to us and then assign those values into red green and blue chanel in img to do so should we be making a copy of the values in mat its a const so we cant call the normalize function on it
  label = image, content = is there incentive to submit to the autograder again before the checkpoint deadline if i have a 44 on my last submission improvements that i would make between now and then would be some style corrections and additional test cases
  label = image, content = when it says in the requires clauses that something points to a matrix basically for all the init functions which dont have pointers that point to valid matricesimages that means if i were to assert it it would return false and throw an error right im guessing that since the nonvalid matricesimages have not been properly initialized theres just junk saved in them is my thinking correct on this
  label = image, content = i have a function void test image img cout test endl that causes this stack overflow error exception thrown at 0x011ecc89 in project3exe 0xc00000fd stack overflow parameters 0x00000000 0x00092000 unhandled exception at 0x011ecc89 in project3exe 0xc00000fd stack overflow parameters 0x00000000 0x00092000 the program 6236 project3exe has exited with code 0 0x0 it runs fine when i comment out the image img line im not sure how to go about this isnt it simple declaring an image using the struct from the header file that was provided to us
  label = image, content = what does this array normalize to 0 1 2 3 4 5
  label = image, content = i check if matrixatmat row column matrixatmat 0 0 equals to the desired distance so to speak but this way im using matrixat to test itself would it be acceptable i cant think of any other ways to test it because were not allowed to access data thanks very much
  label = image, content = so for this test in publictest assertactual outputcorrect i printed out both actual and outputcorrect and got this p3 2 2 255 255 0 0 0 255 0 0 0 255 255 255 255 p3 2 2 255 255 0 0 0 255 0 0 0 255 255 255 255 yet i failed this assertion how does this work out
  label = image, content = i have encountered a very odd problem with my imageprint function posted below is the output on the terminal that i get i have an input stream which i print as correct the following couts are sent from the matrixinit function this shows that the values are correctly initialized under printing are couts from matrixprint even though all im doing is dereferencing matrixat to obtain the values at the row column specified as printed its producing the wrong values another interesting tidbit is that it worked with the given test function testprintbasic any idea as to whats gone wrong thanks correct p3 3 2 255 255 0 0 0 255 0 1 2 3 0 0 255 255 255 255 4 5 6 matrixinit red channel value at 0 0 is 255 green channel value at 0 0 is 0 blue channel value at 0 0 is 0 red channel value at 0 1 is 0 green channel value at 0 1 is 255 blue channel value at 0 1 is 0 red channel value at 0 2 is 1 green channel value at 0 2 is 2 blue channel value at 0 2 is 3 red channel value at 1 0 is 0 green channel value at 1 0 is 0 blue channel value at 1 0 is 255 red channel value at 1 1 is 255 green channel value at 1 1 is 255 blue channel value at 1 1 is 255 red channel value at 1 2 is 4 green channel value at 1 2 is 5 blue channel value at 1 2 is 6 now printing p3 3 2 255 red channel value at 0 0 is 255 green channel value at 0 0 is 0 blue channel value at 0 0 is 0 red channel value at 0 1 is 0 green channel value at 0 1 is 255 blue channel value at 0 1 is 0 red channel value at 0 2 is 1 green channel value at 0 2 is 2 blue channel value at 0 2 is 3 red channel value at 1 0 is 1 green channel value at 1 0 is 2 blue channel value at 1 0 is 3 red channel value at 1 1 is 0 green channel value at 1 1 is 0 blue channel value at 1 1 is 255 red channel value at 1 2 is 255 green channel value at 1 2 is 255 blue channel value at 1 2 is 255
  label = image, content = it happened when i used the make command also we only have to write imagecpp and matrixcpp right why is processingtestcpp and processingcpp in the makefile command thank you
  label = image, content = so i printed matrixprintmat ssoutput and asserted for equality with a string thats exactly the same including whitespace as the matrixprint but it still says theres an error what am i doing wrong
  label = image, content = why my xcode only shows number of compile errors on the upper right side instead of showing it on each line when i write code also it corrects no spelling errors
  label = image, content = for some reason the autograder thinks that the deadline for the project 3 checkpoint has passed and is not letting me submit
  label = image, content = i just tried to submit to the autograder and received the message error the deadline for this project has passed not sure why its doing this
  label = image, content = in imagepublictest we have the following code ignore that f3 in cout if im not mistaken the portion where it says a very poorly behaved ppm should result in a assert fail this means that the image img still has the same dimensions as when it was first initialized 3 4 this is resulting in my code throwing up faulty output for the should be well behaved since img hasnt been reinitialized since is this intended to happen if so how would i go about circumventing this thanks
  label = image, content = for the implementation of the first imageinit do we specifically have to create the three channel matrices or do we just have to initialize it i tried just initializing the channels using the matrixinit without creating the matrices themselves but have been getting the error colorchannel was not declared in this scope thanks
  label = image, content = do we necessarily have to test functions like imageheight or matrixwidth or do we need to test all functions by default it just seems that some functions would be unreasonable to test extensively
  label = image, content = should we consider cases where input pixels exceed the maxintensity of imageh for example if we used setpixel to enter a pixel of r 300 should we assert for that condition
  label = image, content = when i test matrixat i may use matrixfill to first fill some elements i am assuming my matrixfill works without bugs when i test matrixfill i may use matrixat to do assert i am assuming my matrixat works without bugs however there must be an order to test these 2 functions whether i test matrixat first or matrixfill first but at the first i trust my other function to be true even i havent got a chance to test it is this allowed to happen in testing
  label = image, content = so for the 3rd image init what exactly is the interaction between the matrix and the image doesnt the image already hold 3 matrices for the r g and blue values can we just fill these matrices with max intensities what is the need for another matrix
  label = image, content = for some reason i get my return code as incorrect when i ran my code through autograder for the matrixpublictest when i ran the file through caen using make it didnt give me any complier errors for matrixpublictest i even tried using make clean but it still ran perfectly fine is the matrixpublic test on the autograder different from the one given to us
  label = image, content = i know someone asked this question earlier however no response was given for the checkpoint it was mentioned that only the public tests cases would be checked by the autograder is this to suggest that our checkpoint grade will equal our autograder grade just trying to get some clarification on this thank you very much
  label = image, content = imagepublictestcpp calls a pixelequal function does this mean we have to right one even though it is not in the h file and is not a helper function
  label = image, content = i am trying to test the function const int matrixat const matrix mat int row int column but i do not know how to declare a const matrix since we cannot use matrixinit after declaring a const matrix in order to call this function we need a pointer to a const matrix right may i know how i could overcome this problem thank you
  label = image, content = not sure if im interpreting this correctly but is autograder telling me matrixh doesnt exist should it not be included in matrixtestscpp
  label = image, content = is it ok if we include two functions in the same test case for example it makes sense to have a single test case for both matrixheight and matrixwidth rather than testing them in separate functions
  label = image, content = i realized that my testing of the width height and imageinit with width and height as parameters will basically all be the exact same code as to test the init function i use the getwidth and getheight functions would it be sufficient to test all three of these functions in one test function or should i find another way to test them separately
  label = image, content = are we allowed to add any include to any of the cpp files that we write
  label = image, content = this is the last test function i am writing but imageinit has an error in this one single test function it works in all other tests except this one and i have no idea what the problem is here
  label = image, content = how do we access the member variable of a pixel i tried using pixel r base operand of has nonpointer type pixel
  label = image, content = hi im having trouble figuring out how to to use matrixrow in the third image initialization i currently want to use a for loop but matrixrow requires a ptr to constant int and i dont know how to have that happen while still in a for loop any suggestions am i not on the right track with using matrixrow inside for loop thanks
  label = image, content = my test for matrixrow is failing i know my matrixat functions work so i created a pointer using matrixat to point to the 14th element in the matrix i created in my test function then i called matrixrow with that matrix and that pointer i traversed through data comparing the address of each element in data to the pointer i printed out each of the addresses and none of them match that of the pointer even though the address of the 14th element and the pointer which points to the 14th element should be the same im not sure what the problem is
  label = image, content = if they dont have a default value which is empty the following way of testing should cause trouble for we dont know whats in ssoutput before or after imageprint is called
  label = image, content = i am confused as to how to use the normalize function given to us because the imageinit function gives us a const matrix so we cant use it as input to the given normalize function also maxintensity is also const so we cant use that with normalize either
  label = image, content = for testing the imagecpp file ive found that i use many of the image functions to set up images for my test cases for example in the imageinit test functions ive been using setpixel fill and the other init functions to create images to compare to the image created by the function test being implemented so for the init that passes a matrix as a parameter i create two images one using that function specifically and one using a different init function and manually filling the image using other means to create an exact copy of what should be created by just using the one init function the reason i think this may be an issue is that technically im using some functions before running the test for it and regardless of the order i run my tests in this will still happen is that okay
  label = image, content = how do i convert a string to istream that i am able to use for a ppm file as a paramerter for initializing image
  label = image, content = should the color channels have the same dimensions as the image
  label = image, content = is the width and height of matrix equivalent to the width and height of image
  label = image, content = do we need to test normalize for matrix thanks saul
  label = image, content = i have several questions about rme and unit tests 1 do we need to write unit test for matrixnormalize since it is provided 2 do we need to include rme for unit tests 3 are we allowed to write functions to help the unit tests ie print things if so do we need rme for them thank you
  label = image, content = has nonpointer type matrix this error came up when i tried to access the data array of a matrix not sure why i cant
  label = image, content = im trying to test my second init function using the string stream im trying to get the dimensions of the image as well as the rgb values for each of the pixels do i use toyviewer to do that because we are going to have to hard code the dimensions of a ppm image to see if our function worked right how exactly do i get the dimensions and values using toyviewer
  label = image, content = can we normalize a matrix to a negative value or negative maximum if so the steps given to find the normalized value will no longer be applicable
  label = exam, content = if we are unable to attend the review session on saturday will it be recorded and will any solutions be posted so we can check some of the problems we did this would be very helpful for studying purposes for those who cant make it
  label = exam, content = this message contains details for the eecs 280 midterm 0 coverage the midterm will cover the following lectures 0011 labs 0106 projects 13 checkpoint 1 time and location same as earlier announcement time monday feb 22nd from 7pm michigan time to 830 80 min location by uniqname below all the exam rooms are filled so please go to your assigned room if we discover that you took your midterm in a room that you are not assigned to we will automatically give you a zero on your midterm room start end chrys220 aaart cjnick ggbl1571 cjosepho gabader ggbl2505 gaozihao jbpruitt dow1010 jbsteinb johnposa dow1013 johnwolf lipworth dow1017 liucody mekeenan dow1005 menchak ndamron dow1006 neckardt olstein dow1018 ostertyl raderm stamps rapakko zyuanzhe we understand that some of these rooms are very obscure on north campus so please find your room before the day of the exam if you have any trouble finding a building here is a link to an interactive map of campus link httpcampusinfoumicheducampusmap 2 exam policies the exam will be closed book and closed notes except for one sheet of 85 x 11 paper handwritten with anything you’d like written on it both sides do not bring a blue book no calculators will be necessary thus no electronics of any kind are permitted the exam will be given under the engineering honor code 3 study materials there are 2 previous midterms you may use as practice exams we will not provide solutions to these midterms so if you have any questions or would like to verify your answers please stop by at office hours or attend vidal’s review on saturday look on calendar for more information we also encourage you to discuss material with friends or on piazza forums 4 alternate and extended time exams emails for students taking alternate and extended time exams have already been sent if you feel you should have received said email but have not please email us eecs280examsumichedu asap happy studying eecs 280 staff
  label = image, content = last week we got an announcement saying that only the public test cases are run for the checkpoint does this mean that the score we see from the autograder is our score for the project checkpoint
  label = image, content = hi i was trying to test imagecpp however i encountered the problem that in this public test case the previously initiated img 3x4 is reused for a smaller img of 2x2 so some of the values from 3x4 reamains in img 904 a professor mentioned that reset matrix to zero is fine for test case but what about in the imginit functions themselves are theythose corresponding rgb channels supposed to be initializedreset to zero at first then take care of the values that the user want to initialized in case the img is going to be reused sorry for my unorganized way of asking this question i hope it is understandable thanks
  label = image, content = just to clarify for this example 1 2 3 4 5 6 7 8 9 matrix width would return 3 and matrix height would return 3 correct
  label = image, content = since matrixnormalize is already provided for us ie we didnt write it do we still have to write test cases for it
  label = image, content = the autograder gave me feedback for my first few tries in like a minute but my latest submission is still going and its been 40 minutes im wondering what might be the problem because its not like last time when so many people were submitting near the deadline
  label = image, content = hello i am testing the imageinitimage img const matrix mat function in the function when i call matrixnormalize it is turning a 1x1 matrix with value 0 into a 1x1 matrix with value 2147483648 does anyone know why this is happening thanks
  label = image, content = how can we develop a test case for this 3rd imageinit function looking at the public test case it multiplies the original value in the matrix by 51 for the grey pixel and then checks each pixel is this how we are supposed to test if so what am i missing about the 51 my other thought is to normalize the matrix in the test function and then somehow compare that normalized matrix to each element in red green and blue of the image however this is following essentially the same logic used in the imageinit function itself so isnt that a bad test
  label = image, content = how can we test these functions if our only method of filling the data array is with using matrixfill
  label = image, content = i submitted my cpp files to the autograder to see how much i would get but the status just says received its not even pending and shows no result is there something wrong with the autograder or is this just me
  label = image, content = how do you test for the void imageinitimage img stdistream is can i make my own ppm in the test function and use that to test the imageinit quite confused here since ill only submit the imagecpp and imagetestcpp to the autograder along with matrixcpp and matrixtestcpp and wont submit any ppm files
  label = image, content = im a bit confused about the format of the rgb data for this function i know that for each pixel the rgb values are the same but does the matrix that is passed in have a copy of this value for each channel in each pixel similar to the format of a ppm file thanks
  label = image, content = what is the difference between stringstream and istringstreamostringstream can stringstream serve as both istringstream and ostringstream
  label = image, content = how do i interpret these results what does it mean by return code did the output just not match the correct output do we have access to a correct output txt file for the sake of diff checking any help would be appreciated
  label = image, content = for the second imageinit the one that has istream is as a parameter do we need to initialize redchannel greenchannel and bluechannel or do we just need to initialize width and height
  label = image, content = my partner and i are having some trouble with the second imageinit function that takes in an istream we think we need to open some ppm file and read in the values to the respective red green or blue channel matrix sort of like the way we read in from a file on the last lab if thats the case how do we know the filename to read from is that something to do with the pointer to an image passed as an argument
  label = image, content = can we assume that the three ints in the pixel struct will always be between 0 and 255 it doesnt say anything about it in the rme so do we need to account for cases where one of the ints in the pixel gets a value outside that range
  label = image, content = is the checkpoint going to be graded for style or this that something we can adhere to afterwards
  label = image, content = im having trouble implementing imageinit in order to initialize the red green and blue channels i have to use matrixinit to create 3 matrices but i keep getting an error telling me that there is no matching function call for matrixinit i have already completed all of the matrix function implementations and they are working
  label = image, content = i searched and reread the specs but i wanted to be clear a matrix can hold any integers so does that mean negative and positive too
  label = image, content = for the free test case that was given testinitbasic the comments say that they initialized a 3x5 matrix but the width is 3 and height is 5 should it not be row by column so that it is a 5x3 matrix
  label = image, content = i have a weird problem when testing imagesetpixel if i do imagesetpixelimg 0 0 red then the pixel on row0 column0 is 255 0 0 but if i then do imagesetpixelimg 1 0 green then the pixel on row1 column0 is 0 255 0 and the pixel on row0 column0 also changed to 0 255 0 as well i dont know why this happen anyone met the same problem or have any idea whats wrong with the code
  label = image, content = im still very confused about the ppm are files like dogcostcorrecttxt and horsecostcorrecttxt in the starter files ppm if so why they are not in the correct format for example the following is what dogcostcorrecttxt contains it has width and height in the first line however where do p3plain ppm file and 225max value for rgb go also if the rgb value is 1470 for a pixel how do i determine what its individual elementredgreenblue is it seems like there are more than one combinations for example in this case red can be 1 green 47 and blue 0 it can also be interpreted as red 14 green 7 blue 0 so how can i tell which combination is true
  label = image, content = effects initializes the image to be a normalized grayscale representation of the data stored in the matrix that is the values in the matrix are normalized to maxintensity and then used to initialize the red green and blue components of each pixel in the image does this mean the values are already normalized or do we need to normalize them by multiplying by 255 before assigning them to the color channels
  label = image, content = for the function void imageinitimage img int width int height we are trying to create a test case we are trying to check that the matrix redchannel bluechannel and greenchannel now have the given width and height but we cant figure out how to write code without directly accessing member data by using imgredchannel
  label = image, content = are we supposed to have test functions that directly test imageinit or do we just test imageprint imagewidth imageheight imagegetpixel imagesetpixel and imagefill because to be used they would need to initialize the image
  label = image, content = because i cannot access a matrixs data variable directly from an outside file can i add in functions to imagecpp in order to work around this problem
  label = image, content = i want to confirm that my idea of a ppm image is correct specifically i want to better understand how pixels and the color channels relate assume we have 3x3 ppm image it is solid green except for a vertical red line running down top to the bottom like this if we were to initialize this image using the image struct it would have the following values image width 3 height 3 redchannel matrix width 3 height 3 data 25500 25500 25500 greenchannel matrix width 3 height 3 data 0255255 0255255 0255255 bluechannel matrix width 3 height 3 data 000 000 000 also to represent a specific pixel of my image we would pick the rgb values from the same specified position in each of the color channel matrices for example the pixel in the first column and row would be represented by 25500 is my understanding correct thanks
  label = image, content = i pass all the asserts but im fairly sure what i print is wrong 3rd row has 6 elements instead of 5
  label = image, content = for imageinitimage img stdistream is and imageinitimage img const matrix mat i have not initialized rbg matrices so it should have no width nor height but i am able to assign values from is or mat how is this possible
  label = image, content = hi i was debugging using labster and the code works fine on g but in labster it tells me that theres a syntax error on the line where i make the declaration stringstream ss however when i include sstream it tells me that include is not supported at the moment what do i do to test my code on labster thanks
  label = image, content = for example a nonempty matrix mat beginbmatrix 0 1 2 3 4 5 6 7 8 endbmatrix that is passed to the function void matrixcopyconst matrix mat matrix temp mat matrix copy temp matrixprintcopy i keep getting an assertion fail stating that the height and the width of copy is 0
  label = image, content = for one of the imageinit functions the requires clauses states that 0 width maxmatrixwidth and 0 height maxmatrixheight should we check these conditions with asserts and if so how do we access maxmatrixheight and maxmatrixwidth
  label = image, content = i just wanted to clarify that the imageprint function only needs to modify the ostream in the arguments it does not need to display a ppm image correct
  label = image, content = or we have to traversal by pointer only when dealing with arrays thanks very much
  label = image, content = in terms of testing setpixel and getpixel i am having a hard time figuring out different way to test them both in both you must initialize an image set some pixels then get some pixels i am tempted to copy and paste my test from set pixel to get pixel i assume that is not sufficient the only other thought i am having is to fill and image then get a pixel then change that pixel then get the pixel again but that would again be essentially the same for both test and set pixel any thoughts or are these tests as coupled and redundant as they seem
  label = image, content = this is one of requires clauses for imageinit i am not sure what this exactly means and how i am supposed to check it
  label = image, content = for the cases when there are already some member functions that provide the information we need for example in matrixprint can we directly access the width and height of the object or we have to call matrixwidth and matrixheight thanks very much
  label = image, content = for this function would each rgb channel be initialized to the same normalized matrix that is redchannel greenchannel and bluechannel are identical
  label = image, content = can we use namespace std in every file in project3 thanks
  label = image, content = is the first row and first columns of the matrix row 0 and column 0 or row 1 and column 1
  label = image, content = in matrixtests the sample test case declared it as static void while the sample test case in imagetests only declared it as void should all test cases in any cpp file be static
  label = image, content = although it is required that width and height to be greater than 0 by the rme are we guaranteed that the autograder will not test for a 0 width or a 0 height matrix i am concerned because one of the functions will fail since i cant divide by 0
  label = recursion, content = im creating a while loop for this function i want the while loop to stop once my pointer is lower than matdata but is it always guaranteed that there will be memory below the array in other words is it valid to check if an address is lower than the address of the 0th index of data
  label = image, content = i clicked on the link for partner registration for project 3 three but it sent me to the project 2 two partner registration where can i register my partnership
  label = image, content = i keep getting an undefined reference error when attempting to compile ive checked other posts but everything that should be included is already present
  label = image, content = im trying to run the public test and any test case at all but i keep getting this error ive tried googling it but im still confused undefined symbols for architecture x8664 matrixinitmatrix int int referenced from main in matrixpublictestdcc9c6o matrixwidthmatrix const referenced from main in matrixpublictestdcc9c6o matrixheightmatrix const referenced from main in matrixpublictestdcc9c6o ld symbols not found for architecture x8664 clang error linker command failed with exit code 1 use v to see invocation all of my files have the include and the right h file so i dont understand
  label = image, content = i didnt see it stated either way in the spec and since every other function is pretty much dependent on it wondered if we needed dedicated test cases in matrixtestscpp it is tricky to test without being dependent on itself
  label = image, content = do addresses increment by one for example say i have an array 1 2 3 4 and the address of the first element is 100 would the address of the second be 101 and the address of the third be 102 and so on
  label = image, content = shouldnt there be modifies os in the rme for imageprint function in imageh matrixprint has modifies os in the rme
  label = exam, content = well be going over mainly noncoding questions from the practice exams this week please attempt everything before arriving to maximize your learning experience if you dont attend my discussion regularly youre welcome to join but if seating becomes limited those who are enrolledregularly attend will have priority seating winter 1 a c spring 1 a c e 2 c d 3 a fall 1 a b d e 3 a c d 4 b 5 b pin
  label = image, content = ive been looking through piazza posts for an answer to this and have found conflicting answers are we required to write asserts to check the required statement before each function many instructors answers here indicate no but the specifications pdf says this
  label = image, content = will the tests for our functions for the checkpoint be tested to see if it can catch errors in a buggy program
  label = image, content = i also get an error about not having a default constructor when creating an istream variable like this istream is
  label = image, content = there is no project 3 to pick from on the new autograder site only 1 and 2 are showing up for me
  label = image, content = after the final row of the matrix is printed should there be an endl printed or not
  label = image, content = how is pixel related to image and matrix im working on imageprint and i dont quite understand how to access each rgb value i believe we will have an array of structs but im not quite sure what that array is i thought it was data but thats of type int is redchannel a 2d array that will contain data 1d which will hold on the red values
  label = image, content = do we need to check things like a matrix which is initialized and not filled i know that the matrix will have values that were left there in memory and that the values are unpredictable therefore do we need to address this type of case in the function itself with an assert if so how do we check this thanks saul
  label = image, content = i am trying to write test cases for imageinitimage img stdistream is are we supposed to create our own ppm files if so how also supposed i wanted to test one of the crabster images how do i know what the ppm format contains for that particular image thanks
  label = image, content = i am getting segmentation fault after i implemented my latest test case i increased the stack size and verified it by using this command ulimit s a nothing changed however how can i fix this thanks
  label = image, content = in the third image initialization function the matrix is declared as constant but the rme says i have to call matrixnormalize on it should i just do this to the individual color channels after the values have been read in
  label = image, content = there is no function like pixelinit are we allowed to initialize pixel in the test cases for example like this void testexample pixel color 100 223 3 thanks
  label = image, content = for the matrixcolumnofminvalueinrow function the rme says that the col start should larger than col end but the col end should less than the matrix width does that mean we are not supposed to test 1x1 matrix because we are not able to put parameters to satisfy the rme
  label = image, content = are we allowed to include the string library in imagecpp
  label = image, content = fills a 3x5 matrix with a value and checks that matrixat returns that value for each element static void testfillbasic matrix mat const int width 3 const int height 5 const int value 42 matrixinitmat 3 5 matrixfillmat value forint r 0 r height r forint c 0 c width c assertmatrixatmat r c value cout testfillbasic pass endl so i am confused about the example in matrixtestcpp it says the matrix is 3x5
  label = image, content = when im trying to run my test cases i got the following error message does anyone know where the problem is bash42 make matrixtestsexe make no rule to make target imagecpp needed by matrixtestsexe stop
  label = image, content = i finished writing my code and this is working well on visual studio now i want to test this on putty to make sure in this case should i test imagetest file and matrixtest file one by one i do not know what to type on the putty after this g wall werror pedantic o1 please let me know what to put after this line and how to test two files at the same time if possible
  label = image, content = if i write mat data is that the value of data or the address of the first object in data a 1d array
  label = image, content = should we put assertmat at the beginning of the body function for those functions who indicate that mat points to a valid matrix
  label = image, content = if i had an array 1 2 3 4 5 6 7 and i had pointers ptr1 and ptr2 that pointed at the 2 and 6 respectively when i perform ptr2ptr1 i should get position of 6 position of 2 4 correct why can i not do this same thing in matrixat with a matrix and int theyre still just pointing at addresses in memory no
  label = image, content = i am trying to use gdb to step through my test programs but cant seem to figure out the correct way to do so when i compile using make matrixtestsexe and then attempt to run through gdb by setting a breakpoint at main gdb runs the program and prints single stepping until exit from function main which has no line number information when the program finishes it then prints missing separate debuginfos use debuginfoinstall glibc217106el721x8664 libgcc4854el7x8664 libstdc4854el7x8664 i looked at the makefile and saw that the g flag is not enabled by default how can we configure things to be compatible with gdb
  label = image, content = 
  label = exam, content = when we the students who have conflicts with the midterm time be notified of the alternate exam time
  label = image, content = i have seen multiple definitions of what this function should do and how it should take the data from matrix and put it into the image color channels 1024 says that every value in the matrix is a separate value for the color channel ie a normalized matrix of 0 255 126 50 250 0 would produce redchannel 0 50 bluechannel 255 50 greenchannel 126 0 however 1007 says that every value in the matrix should be pushed to each color channel ie the same normalized matrix as above would produce redchannel 0 255 126 50 250 0 bluechannel 0 255 126 50 250 0 greenchannel 0 255 126 50 250 0 which one of these is correct
  label = image, content = for the matrixfillborder function should we first use matrixfill to initialize the whole matrix should we set each element in the matrix first or just leave alone those core elements
  label = image, content = so when i test my code for fill border against a matrix that is 500 x 500 it takes quite a bit of time to run and by that i mean a couple minutes it still runs correctly and passes every test but is very slow with that large of data is this okay or should i optimize my function
  label = image, content = do we need to return the column and row with 0 being the first row and column or do we do the matlabmathematical way where 1 is the first rowcolumn
  label = image, content = i know that pointers can point to the address location in a data structure but if i wanted to find out the index location of a specific element in an array how would i find it for example if i had an array 12345 and i had a pointer that was specified to point to the 3 inside the array how would i find that it is specifically the third element in the array returning the pointer without the dereference operator only returns address not index
  label = image, content = what should the new max be in order to create a grayscale image
  label = image, content = in the functions matrixcolumn and matrixrow how should we go about using an assert to check the required statement that ptr points to an element in the matrix
  label = image, content = how do i create a pointer when the parameters to a function are const
  label = image, content = is there a way to test matrixinit or matrixfill without using other functions we implement such as matrixat i dont see how we can verify the correctness of these functions without using other ones that we write are we allowed to just test these functions together with other functions
  label = recursion, content = i dont mean to seem impatient because im sure its a lot of work but when will project two grades be posted
  label = image, content = fills a 3x5 matrix with a value and checks that matrixat returns that value for each element static void testfillbasic matrix mat const int width 3 const int height 5 should the spec read 5x3 matrix since standard is row x column or is this supposed to be represented as width x height how should we approach writing dimensions of the matrix in the project row x column or width x height thanks saul
  label = image, content = do we have to write a test for normalize function or do we only have to write tests for the functions that we implement
  label = image, content = hello is the grade of the first checkpoint final for this part ie can we modify the code on this part after the first checkpoint deadline and get a new grade for this part after full submission if no can we at least modify this part between the checkpoint deadline and full submission deadline thanks very much
  label = image, content = hello why could the following code test whether the array mat points to is null or not thanks very much
  label = image, content = since we cannot directly touch member variables in our tests does that mean we cannot use something like matdatai value when we are manually setting up matrices to compare our function outputs to thanks
  label = image, content = when i implemented matrixat i was using loops to do it and i put the return statement in the loop the compiler told me that its control test for it failed because there wasnt a return statement outside the loop but if the requires clause is met then that wont be a problem do i need to implement it a different way or is there just something i should return at the end to appease the compiler
  label = image, content = is there a way to use assert to test this function right now the output of the function is being printed to my terminal as i sent it cout as my ostream but should i create a correct ostream of what it should be and compare the two streams
  label = image, content = i am having a lot of troubles with testing my code everything in matrixtestscpp and matrixcpp has compiled with no error given but when i run matrixtestsexe the program freezes at the first call to matrixinit it doesnt even go into the function and it doesnt give any feedback after a minute or so the program keeps running and the next calls to matrixinit dont seem to freeze at alli thought it might be a stack error so i double checked that i had used the right command in my cygwin terminal but that still didnt fix the problem is there something wrong in my code or is it the terminal or something else
  label = image, content = for the matrixat function should i return a pointer holds the address or can i just return the deference format that directly representing the address of that element
  label = image, content = im confused about the structure of an image is image just a struct that contains 3 matrices in each column one holding a color value so would creating a 5x5 image be like creating a total of 75 matrices if so how would we transverse through all the different matrices
  label = image, content = i see in the specs is says to implement matrixat we have to convert a rowcolumn pair to an array and remember the row and column but i dont know where to even get started to do that
  label = image, content = im confused about what the variable image img is doing in the first imageinit function we have to make a matrix with the width and height dimensions but are we doing that based on an actual image or do we have to make separate variables inside imageinit that img points to in order to initialize width and height of img correctly
  label = image, content = do we have to use traversal by pointer exclusively or can we use iteration
  label = image, content = how do we go about testing the imageinit function that takes in an image im confused on what exactly to type into the parameter stdistream is for example if you were reading in the crabsterppm would you call the function as imageinitmatcrabsterppm
  label = exam, content = i submitted the form for an alternate midterm exam a while ago and i was wondering when well be hearing about the alternate exam times thanks
  label = image, content = how do i take the element i found in the matrix and return a pointer the int for matrixat i keep getting this error matrixcpp in function ‘ int matrixatmatrix int int ’ matrixcpp9010 error cannot convert ‘ matrix ’ to ‘ int ’ in return return mat
  label = image, content = i keep getting this error message when i try to compile and run my code for matrixtests bash42 make matrixtestsexe make no rule to make target imagecpp needed by matrixtestsexe stop am i missing something
  label = image, content = i believe i was able to produce a normalized matrix needed in the imageinitimage img const matrix max but what exactly are the contents of the matrix im not sure how to use the matrix to initialize image
  label = image, content = is the header for an image always going to be p3
  label = image, content = in the initializer function imageinitimg int width int height do we initialize the imgredchannel and other channels to anything or leave them untouched
  label = image, content = are we allowed to implement extra functions in the matrixcpp file in order to make writing the functions in imagecpp easier
  label = recursion, content = how much was the project 2 code review worth in terms of our grade
  label = image, content = im getting the following error when i try to use a makefile to run my matrixtestscpp file no rule to make target matrixtestscpp needed by matrixtestsexe stop any idea what this could mean im just typing make matrixtestsexe like the specs said
  label = euchre, content = can anyone explain what exactly an interface is and what it does it says matrixh and imageh files are interfaces but i am not getting what it exactly means
  label = image, content = in the specs it says the matrixcolumnofminvalueinrow function returns the minimal value in a particular region the region is defined as elements in the given row and between columnstart inclusive and columnend exclusive to clarify does this mean that if columnstart was the first column in a row and columnend was the last column in a row that columnend would not be considered when determining the column with the minimum value i assume that when it says columnend is exclusive it is not included thanks
  label = image, content = i am trying to create a pointer to data in one of my matrix functions and i am getting the error error cannot initialize a variable of type int with an lvalue of type int const250000 what is wrong with my pointer declaration int firstelt matdata
  label = image, content = so the public test has these following function calls and i want to make sure i understand what theyre doing matrixfillmat 0 this fills the entire matrix with 0s int ptr matrixatmat 2 3 assigns a pointer to what is at row 2 column 3 so 0 assertmatrixrowmat ptr 2 checks if the row the element is being pointed to is 2 but what i do not understand about matrixrow is that we are passing the memory location of 0 to the function where the functions declaration below points to what is in the memory location which is 0 and if we are finding the row 0 is doesnt that mean that could be even in row 0 or 1 because the whole matrix if full of 0s int matrixrowconst matrix mat const int ptr
  label = image, content = my image print function turns a red crabster into green when i try to write a ppm file on my own with the first integer in each pixel as 255 and the other two 0 it converts to a green dot rather than a red dot
  label = image, content = for the matrixat function i used arithmetic in order to access the correct index in the data array given a row or column however i am unsure how to actually access the value in order to return a pointer to it when i try to access it using dataindex the compiler tells me that data has not been declared in scope i though since it is in the struct we didnt need to declare it is there a way to initialize the data array in order to use it in this function if anyone could provide any tips that would be great thanks
  label = image, content = if my understanding is correct seam is simply an array of ints but when i call seamsize i get the error expression must have class type i am using visualstudio any ideas
  label = image, content = in rme for matrixcolumnofminvalueinrow it says that 0 row row matrixheightmat and 0 columnstart columnend matrixwidthmat should the right boundary be changed to columnend matrixwidthmat not if you try to do matrixatmat row matrixwidthmat it breaks the assertion in matrixat
  label = image, content = any hint on how to write imageinit im stuck on how to use stdistream is
  label = image, content = the image tests cpp file does not include fstream so can i still include it
  label = image, content = if you see the description it just says that the first indicates it is a plain ppm file so am i supposed to just put p3 for here or will it be changed in any case i dont know what to put here specifically thanks
  label = image, content = how do we check the requires clause saying is contains an image in ppm format without comments
  label = image, content = when clicking the link in the project specs for visual studio i get this error were sorry the page you requested cannot be found
  label = image, content = do we need to use string stream to test the print out result of we could just print our and manually check the output
  label = image, content = image is composed of pixels so why in image struct theres matrix instead of pixel kinda confused about the relationship about pixel matrix and image here
  label = image, content = so we cannot test any functions before implementing matrixfill because there isnt another way to create a matrix
  label = exam, content = which of these prints hello eecs 280 char a hello eecs 280 char b h e l l o e e c s 2 8 0 0 char c h e l l o e e c s 2 8 0 char d hello eecs 2800 cout a endl cout b endl cout c endl cout d endl my guess is that the correct answer is a and b because the compiler adds the sentinal value at the end for string literals like a am i correct also could someone explain what prints for c and d and why
  label = image, content = when i code in xcode i get a warning for subtracting pointers and assigning the value to an int because the addresses are stored as longs is there a way to avoid this warning or should i ignore it because i know the result will be an int
  label = image, content = what does the int data part of the matrix struct mean because when initializing it we are only given the width and height in the function void matrixinitmatrix mat int width int height struct matrix int width int height int datamaxmatrixwidth maxmatrixheight
  label = image, content = can i put using namespace std for imgcpp or imgh
  label = image, content = i have a question about the use of assert this might be a little repetitive question but are we required to use only a single assert in one test case is it possible that i can use multiple assert in one test case to check that the function returns the valid value for matrixrow depending on different pointer to integer for example i am saying this because pointers are not expensive and if i try to write test cases for different pointers separately my test cases looks so meaninglessly redundant and takes much time to capture what i have to test for the specific function thanks
  label = image, content = if i have a matrix m that is declared but not defined will assertm cause the program to stop or will assert see that the matrix m has been declared and move on thanks
  label = image, content = the rme requires that is contains an image in ppm format without comments how do i read in the filename of an image in ppm file format imageinit doesnt take in any filenames as a parameter
  label = image, content = we dont have to test both int matrixatmatrix mat int row int column and const int matrixatconst matrix mat int row int column right we only need to test one of them i only made test for int matrixat
  label = image, content = how are we able to determine whether the actual values in the matrix is correct or we just need to see whether the dimension is correct
  label = image, content = for a matrix pointer mat if i use arrow like matwidth my xcode compile and does have error but when i try not using arrow but using matwidth the xcode gives me error and could not compile whats the appropriate way to retrieve the element without using arrow
  label = image, content = i tried printing my matrices in my terminal but i get a segmentation fault but when i print in labster it works fine what could be the problem for my matrix being unable to print in the terminal
  label = image, content = hello when i use the make command i get the following error it directs me towards a piece of code i am not supposed to alter the issue seems to be that i havent used implemented code yet do i just have to wait until i find an opportunity to implement squareddifference thank you piazzapostpdf
  label = image, content = the implementation of the matrixnormalize use ptr to navigate in data for example in the matrixpublictest we initialize a 55 matrix which means we only initialize 25 elements in the total 250000 elements i think the index of the initialized elements are 04 500504 10001004 etc however in the double for loop in matrixnormalize we increase ptr by ptr which will make ptr point to element 024 ptr should be replaced by matrixatmat rc
  label = image, content = are we still supposed to write and run test cases after we finished each function when i finish the first matrix initializing function i try to run the given test function it turns out to be like this errors what should i do for the first test case should i ignore and move to next function then what about the first test case
  label = image, content = i notice that all the test functions in matrix test are static functions why is that and for future test functions should we always write static void
  label = image, content = right now we have this function returning immediately after finding the element meaning that if the same element occurred twice in the array it would return the row of the first occurrence is this appropriate
  label = recursion, content = i just realized that i forgot to submit my code review materials would the fact that my partner submitted his with the selfie somehow show that i did it and allow me to turn it inget points
  label = image, content = is there a way to make a matrix with an array of custom values for the purpose of testing functions if we respect the interface we are only able to fill a matrix and change its border this gives us at most two values to work with to test functions such as matrixat matrixmax or matrixfillborder it seems like we would be able to write much more comprehensive test cases if we were able to fill the matrix with various integers say the numbers 115
  label = image, content = the matrixnormalize function uses the line of code int ptr matdata however when we use this function in our code to initialize a pointer we get the error error invalid conversion from ‘ const int ’ to ‘ int ’ fpermissive int ptr matdata
  label = exam, content = will solutions to the review session be uploaded to the google drive if so when
  label = image, content = is there a way to test whether mat points to a matrix
  label = image, content = does the datamaxmatrixwidth maxmatrixheight have the same length regardless of what is the dimension of the matrix do we need to change its length in matrixinit according to the arguments passed in
  label = recursion, content = i am currently in the ugli and am looking for some one to do a code review with
  label = image, content = do we treat the matrix like a 2d array interface or one long array that is 1x the total number of elements
  label = recursion, content = i am currently in the eecs building and available to review your code if you still need it reviewed ill be here for a couple of hours feel free to just show up or email me first person to show up must also review my code 3 i can pose like a french girl if youd like its completely up to your discretion you can find me in the little lounge area by the db cafe first floor on the left side im wearing a vmware shirt
  label = image, content = should the normalized grid look like this 1 1 1 1 1 1 0 0 0 1 1 0 21 0 1 1 0 0 0 1 1 1 1 1 1 if so why would matrixcolumnofminvalueinrowmat 2 2 4 2 because the second column of the second row has a value of 21 which is not the minimal value
  label = image, content = how do we go about testing a function that prints things to an ostream can we compare files do we then have to submit files
  label = image, content = the spec describes reinitializing the matrix to save memory if i have a matrix with a height and width and a bunch of values in the data array is this code sufficient in resetting everything in the matrix matrix mat
  label = image, content = since the boarders of energy are initialized to max energy the first row index 0 is initialized to max energy then since the cost value of each pixel in first row index 0 of cost matrix is initialized to its energy the value of each pixel in the first row index 0 of cost matrix would be its energy which is max energy since all values in the first row of cost matrix are initialized to max energy all values of the first row of cost matrix are the same then trying to find the column of the smallest value in that row would result in returning the leftmost column index which is 0 that 0 then would go on to be the first element index 0 in seam array is it true that each seam array begins with a 0
  label = image, content = since there isnt an example in rme just want to make sure if the array is 12345 when we divide every element by the current maximum value 5 does 1 change to 0 or 1 i dont understand the sentence in the note make sure to do the operations in that order to ensure roundoff error is the same in your implementation as in the correct solution
  label = image, content = i remember in 183 weve never used std and everything went smoothly but in this course we are required to use std sometimes whats the point of using it
  label = image, content = why does the function void imageinitimage img const matrix mat only take a const matrix this makes things difficult can i just delete const how do i deal with it
  label = image, content = what is the format if i want to use the matrixat function to change a value at that address in labster i keep getting a message saying lvalue required as left operand assignment
  label = image, content = im having trouble making test cases for matrixrow and matrixcolumn because i am trying to make an integer pointer int ptr that points to a random element in the matrix we are not allowed to use matrixdata in test cases because that would not be respecting the interface right i originally tried to do pointer arithmetic using the address of the matrix however this does not match with the integer type of the pointer if anyone has any ideas as to how to approach this i would greatly appreciate it
  label = image, content = we know that this works for int ptr arr ptr arr size ptr why doesnt this work int ptr arr for ptr ptr arr size ptr the second version gives me an error of statement has no effect
  label = image, content = in seamcarvewidth in processingcpp i first initialize const int seamsize equal to the height of the image then i initialize an array of ints seam of that size at that point the compiler throws an error iso c forbids variable length array ‘seam’ werrorvla i dont understand why im getting that error since i defined seamsize as const any suggestions what i can do
  label = image, content = matrixinitmatrix width height creates a matrix of rows height and of columns width for example matrixinitmatrix 3 5 would create 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 however the free test case testfailbasic has a comment that say sit fills a 3x5 matrix and then it calls matrixinitmatrix 3 5 usually when people say a matrix of 3x5 means it has rows x columns dimensions when it says a 3x5 matrix does it mean a 3 rows and 5 columns cause if thats the case that contradicts what matrixinit does am i just thinking too hard about this or should it really be fills a 5x3 matrix in the comments of the test case
  label = exam, content = share youre thoughts help us thanks d pin
  label = image, content = maybe were misunderstanding imageinit but why would the argument be constant if were trying to normalize the passed matrix
  label = image, content = im confused as to why we have header files when the cpp file has the rme such as for matrix just as a curious quesion
  label = image, content = i am having an issue that whenever i tried using img in imagetestscpp i would get a segmentation fault to get to the bottom of this i made a separate folder with fresh starter files removing the starter from everything of course and when i ran made and ran matrixtestsexe with the starter files the program ended with a failed assert as expected however when i make and run imagetestsexe with the starter filles i dont get a failed assert but rather a segfault in the given testprintbasic function i commented out everything except the imginitimg 2 2 i got another seg fault then i changed imginit in the cpp h and test files to pass an int rather than a pointer to an image no more segfault im pretty sure confirms that passing img is giving me segfaults this makes no sense considering that this is how its passed in the given test function and that no one else has had this problem im out of ideas any help
  label = image, content = when creating a cost matrix we are supposed to do costr c energyr c mincostr1 c1 costr1 c costr1 c1 how are we supposed to handle if c10 or c1 width1
  label = image, content = in the lecture it was told that initializing is essentially different from simply assigning so here do we lose points if we simply assign
  label = image, content = whats the difference between using mat and mat ive just been passing mat in the matrixcpp functions but in the test cases i just saw that every time they call a function they pass mat in the parameter for example i use matrixwidthmat the test function uses matrixattmat
  label = image, content = if your element lies in the first row of a matrix are we supposed to consider that the element lies in row 0 or row 1 for example in matrixatmatrix mat int row int column would row be inputted as 0 or 1
  label = image, content = so the image struct is essentially a struct which contains three of the matrix structs what im stuck on is accessing the data array within the struct within the struct i tried doing imgredchanneldata and that appeared to be working for a while but now i am getting issues where the redchannel matrix appears to be empty whiles somehow the data i am putting into still exists when i run imageprint however if i do matrixprintimgredchannel then i get 0 0 indicating it is empty so i am not sure what i am supposed to be doing
  label = image, content = for the matrixat function you assign a value to another data value such that int whatever the value of matrix at datacolumn row yet this function means that row 4 column 1 has the same value as row 2 column 2 is it supposed to work this way or have i implemented it incorrectly
  label = image, content = so i was debugging my code and i realized i am encountering a somewhat strange and unique error and i have been cracking at it for hours with no luck as to figuring out what is the cause when i store the value of the matrix width into a variable by doing int width matwidth and then i cout the width or put it to the ostream variable something weird is happening it is first giving me 5555 as a value for width it should be 5 but then if i cout it again the value is 5 this occurs even if the two cout statements are right above eachother like this cout width endl cout width endl the following is printing to the console 5555 5 i have no idea what is going on here and am not sure what to do
  label = image, content = how do we iterate through the data array or go to the next address in the array using a pointer
  label = image, content = in the spec it says that the interface allows us to directly copy the matrix struct as follows matrix matnorm mat when i print out the copied matrix it looks fine but after i pass it through matrixnormalize the elements in the matrix appear as follow i am confused about why this happens because the matrixnormalize function was implemented for the staff and works in the public test case and my own test cases with different matrix structs i have tried to debug my code on xcode but xcode always crashes when i try to access data under each colorchannel matrix is there a chance that the matrixnormalize function produces unexpected output under some circumstances
  label = image, content = we cant access the members of matrix in our testing functions correct how can we then test functions such as matrixat which need values in the matrix to be adequately tested
  label = image, content = so i cant figure out how to pass ostream into the matrixprint function to test it how do we declare it
  label = image, content = what does the ptr for matrixrow point to as in if i get the value of that pointer will i get the value at that element of matrix or will i get the element number
  label = image, content = im having trouble understanding which functions are for us to implement and which functions are given for us to use in creating our implementation
  label = image, content = i am really confused as to what values should each element in the matrix be initialized to also the array data is already assigned a size i suppose we can not change its size
  label = image, content = i noticed matrixtestscpp has includesstream and matrixcpp has stdostream in it i know we touched on fstream in class but can someone explain what these two mean in the context of this project
  label = image, content = in the imagecpp functions one of the versions of imageinit requires us to use an istream variable which i am not familiar with and cannot seem to find info online for how to use them correctly in the context can anyone point me in the correct direction or perhaps shed some light on what this is and how to take in values from it thank yo
  label = recursion, content = can i be partners for 2 people for the code review
  label = image, content = is there a reason there are two matrixat functions with different return types
  label = image, content = how do we initialize the data array i tried using heightwidth for its size but got an error saying variable length arrays are forbidden so how can we change the length of the data array
  label = exam, content = if we take the difference of two pointers should the result be an value of type int
  label = image, content = i generally use visual studio for testing but after 2 projects i get a feeling that in this course we are more encouraged to use command line for testing but actually i know very little about command line could you give us a tutorial on command lineterminal if i want to run test in terminal should i use putty to connect to caen or can i use cygwin as well thanks
  label = image, content = are we suppose to access the values of the matrix by indexing through int datamaxmatrixwidth maxmatrixheight as a 1d array rather than a 2d array
  label = image, content = matrixcpp does not have namespace std and hence when i use endl it gives me a compiler error should i add this to the code on my own or is there another way to create a new line without using namespace std
  label = image, content = hello when i try to compile and run my first test from matrixtestscpp in sublime using cmdb i get the error message that it cannot find matrixh even though after triple checking i am sure matrixh is in the same directory
  label = image, content = so so far i have initialized width and height for mat but i notice that there is this declaration in matrixh int datamaxmatrixwidth maxmatrixheight does initializing mats width and height take care of data or how does one initialize an array in the case of a struct
  label = image, content = when i run processingtestsexe it fails on the dog rotate left test i did modify processingtestscpp so i could store the images in a subdirectory but i didnt modify the rotateleft or testrotate functions or any of the images did i mess something up
  label = image, content = when you type the command line in terminal to increase stack size limit do you do this right when you open terminal or once youve logged into caen and gone into your directory also do you do this every time you reopen terminal
  label = image, content = will there be another partner registration link sent out
  label = exam, content = will we be allowed to use a cheat sheet like the previous years exams
  label = recursion, content = so my partner realized he forgot to check mark one of my boxes and i already submitted it is there anyway of resubmitting or is one box not a big deal
  label = image, content = when reading through the proj 3 spec im confused about the driver program on pg 8 i didnt see a resizecpp or a resizeexe in the starter files
  label = image, content = if we were to print all contexts of the matrix wouldnt all the values be 0 if we havent implemented matrixfill yet
  label = image, content = why are all the indentations in the source code for proj 3 only 2 spaces this seems like a lot to fix just to have consistent spacing so we can get style points in 183 they taught us to use 4 as the standard and the linux kernel coding style recommends 8
  label = recursion, content = can you do the code review sheet for your partner
  label = recursion, content = while doing my partners code review i realized that for one of my helper functions in my test cases and one in my p2cpp file i forgot to label them static my code complies in xcode complies in caen and passed the autograder i know this is generally bad practice and may slightly impact my style grade but will it cause my code to not pass the hidden tests and get a 0 if so and for other small mistakes like that that may cause code not to compile is that what regrade requests are intended for so that you can gain back some of the points you lost because your program crashed thanks
  label = image, content = in my test cases when i initialize a new matrix after i filled another one with a value the initial value of the elements of the new matrix is equal to that of the previous one is this supposed to happen if not what could be the cause of this just to clarify so if i previously set a 5x5 matrices to be filled with the value 3 when i create a 4x4 matrix in another test case the default value becomes 3 without having been filled
  label = image, content = requires img points to a valid image seam points to an array the size of seam is matrixheightimg each element x in seam satisfies 0 x matrixwidthimg modifies img effects removes the given vertical seam from the image that is one pixel will be removed from every row in the image the pixel removed from row r will be the one with column equal to seamr the width of the image will be one less than before see the project spec for details on removing a vertical seam void removeverticalseamimage img const int seam for the rme of removeverticalseam in processingcpp i suppose it meant imagewidthimg instead of matrixwidthimg thanks in advance
  label = recursion, content = i wanted to clarify what we are supposed to submit for the code review am i submitting the code review that i wrote for my friend on his code or am i submitting the code review that my friend wrote for my code
  label = image, content = is the project 3 checkpoint due on wednesday february 17 or on thursday february 18 according to the spec the checkpoint is due on wednesday february 18 thanks in advance for the clarification
  label = recursion, content = anyone still looking for a code review partner
  label = image, content = refer to this post for faqs related to project 3 youtube link from the spec httpswwwyoutubecomwatchv6ncijxtlugc pin
  label = image, content = the link in the spec pdf is not clickable and when i type it into the browser it says that the video is unavailable could you please post the link here
  label = exam, content = where 1017 dow when 7309pm thursday 211 what exam prep review as youll come to realize the projects dont really prepare you to engage in the material of this course in an exam setting to help bridge this gap we will occasionally create worksheets to help you simulate this material in an exam setting this is completely optional the material is posted in the review folder and well go over the solutions and any questions during the office hours this week well be focusing on pointers references strings and arrays you can find the worksheet here please attempt all problems before arrive to maximize what you take away from this
  label = image, content = when will this project be released
  label = recursion, content = if anyone needs a review partner my uniqname is cjglover send me an email
  label = recursion, content = does anyone still need to do the code review i need a partner
  label = exam, content = i dont know how else to check my answers but would the answer to this question be ghosts dont have feet
  label = recursion, content = could i please know what exactly we are supposed to do for this assignment
  label = recursion, content = if me and a friend had already completed the code review before the clarification email was sent out should we redo the code review
  label = exam, content = when we implement functions for problems on practice exams for those on the topic of recursion will we have the option of writing helper functions for those solutions for example is a helper function allowed on problem 4a of the fall 2015 practice midterm
  label = exam, content = will the solutions to the past exams be posted i would like to selfcorrect and find out what i got correctincorrect
  label = recursion, content = what should the autograders total score be out of
  label = recursion, content = the extension for p2 is an extension for submission only this means we will not be answering any p2 related questions on piazza or email for that matter this allows us to keep our deadline of 8pm today but just allow you to submit later you are free to continue working on your project but please know we will not be answering any more questions about it get your submit in by 8pm sunday night
  label = recursion, content = we are aware of the issue with the autograder posting repeatedly about it is not helping the situation please be respectful professors james and amir are posting an announcement on ctools right now do not email us your code this will be handled fairly
  label = recursion, content = i know similar questions have been asked but this is a little different at least i couldnt find the answer i was looking for by searching i submitted to the autograder about 40 minutes ago and its queued up no problem there but my code had a bug i fixed the bug and i want to resubmit my code but i cant until my old code is graded my question is what happens if my old badcode is still queued up in an hour and i cant resubmit the new goodcode before then hopefully it will just finish grading in the next few minutes and i can resubmit and it wont be an issue i just want to go on record that i have good code that i want to submit before the deadline and cant at the moment
  label = recursion, content = 
  label = recursion, content = i cant compile either of these files because of these same three errors how should i fix this
  label = recursion, content = will a submission be accepted if it is queued or does it have to be finished grading by 800 to be accepted as a final submission
  label = recursion, content = when i click into p2cpp it shows that i have an error but autograder still shows queued and doesnt let me submit until current submission is graded
  label = recursion, content = i read 603 about this problem im encountering and dont know what to do my code fails the simple test function when i run make test in putty but outputs the exact same output when i run the autograder it gives me 11 on the simpletest should i leave my code as is or do i need to change something so that it is able to pass the simple test function in putty
  label = recursion, content = hi i tried to submit my p2cpp and p2testscpp onto autograder and it says status queued and it has not been graded i have been experiencing this for more than 10 minutes and i cannot submit another submission because there is an error saying you currently have a submission being processed please wait until it is finished before submitting again should i worry about this or what should i do thanks
  label = recursion, content = when i try to compile my p2tests i get this i also ran it with only the example function given and the same thing happened
  label = recursion, content = i all but a few functions finished with function stubs in the unfinished functions i used the command make p2tests to test the functions i have written but when i do this absolutely no terminal output is shown i the iostream library is included in p2testscpp and i am using cout for the results of each test but nothing happens this is what my terminal looks like when i try to run p2tests bash42 make p2tests g wall werror pedantic o2 stdc11 p2testscpp p2cpp recursivelistcpp binarytreecpp recursivecpp testhelperscpp o p2tests bash42 p2tests bash42
  label = recursion, content = i submitted about 8 minutes ago and this is what i get why can i not see my results it also wont let me resubmit because this one is still being graded
  label = recursion, content = so i submitted my files to the autograder and it says the following submitted at february 5 2016 at 45500 pm est status queued files submitted p2cpp p2testscpp results does this mean it is still in the process of grading or something else
  label = recursion, content = hello the autograder discarded my file and said it is unnecessary while it has exactly the same name as p2cpp does anyone know what is going on here
  label = recursion, content = are we required to make our own functions that require 2 ints and return an int in order to test accumulate or is only testing with sum and product fine
  label = recursion, content = when i tried to run my files xcode showed compile failed and gave some error messages does anyone know what is going on here
  label = recursion, content = do we necessarily have to use static in front of helper function declarations ive been told id get a 0 if i dont put static in front of the helper function declarations
  label = recursion, content = im kind of confused for the rmes for the helper functions because arent they basically the body of the actual function and then the actual function is just calling it ultimately i feel like i am rewriting the given rmes thanks
  label = recursion, content = if a function already has a requires statement would its helper function also need a requires statement i take it as if it passes the initial functions requirements then you would not need to restate the requirements for the helper function also many of my effects statements are fairly similar to the original functions rmes is this an issue my helper functions do everything that would be in my original functions but my original functions simply return the helper functions
  label = recursion, content = are we allowed to use variables with the static keyword in the fibtail function or does it have to be completed only using helper functions
  label = recursion, content = so i know our test functions should follow the style guidelines comments use assert etc but i was wondering if wed get points taken off if our test function outputs are a bit of a mess for example when an assert doesnt work i would print out the listtree to see whats wrong would we get marked down for having those trees and other comments in the cout output
  label = recursion, content = i cannot do make test or compile the code i will post what was outputted to me in the terminal what should i do from here i was in the correct directory all the files are there and none are commented out i believe i types everything in correctly but especially for make test thanks saul
  label = recursion, content = is it ok to name helper functions the same name as the actual function for example if i have a tail recoursive function sumdouble would it be ok to name the helper function sumdouble int thank you
  label = recursion, content = since my partner is basically my classmate can she fill up the review sheet for me and ill do it for her will that be allowed
  label = recursion, content = for the earlier functions in the list section we werent allowed to use for or while loops are we allowed to use them for the maxvalue function
  label = recursion, content = yo what in the world is this code review sheet that i keep hearing about
  label = recursion, content = do we need to include helper functions in both p2cpp and p2testcpp or just in p2cpp
  label = recursion, content = when using the makefile for project 2 the terminal outputs p2cpp in function bool treecontainstreet int p2cpp2731 error control reaches end of nonvoid function werrorreturntype the second line comes up for multiple functions that i have written these being listcontains and my 3 of my helper functions any idea what is causing this and what i can do to fix it
  label = recursion, content = can we find people who take are taking eecs281 to write the this review for me
  label = recursion, content = i used the treecontainstest examples as tests on p2tests the first one terminated with an instance of treeexception and that the error there was that it was tree empty shouldnt it return false if the tree is empty instead of error in p2cpp i wrote return false if the tree was empty what do i have to write in p2tests to assert that it returns false and not error
  label = recursion, content = im having a little trouble understanding how to code my base case for maxvalue i have one base case so far and thats when i cannot add any more items to my knapsack due to capacity limits but i want a base base case that returns the highest maxvalue evaluated ever in my function this means that i only want to return the value maxvalue once but how would my code know when to do this how do i know when all combinations have been done
  label = recursion, content = will there be any points deducted if i create an array for the function numpartitions cause i saw some answers saying you should not create an array
  label = recursion, content = 
  label = recursion, content = im not really sure why simpletest of all functions is failing for me this is what autograder says simpletest compilation success compilation standard output compilation error output return code correct output incorrect score for simpletest total 01 and this is my output from running simpletest 1 2 3 4 5 11 12 13 14 15 5 4 3 2 1 11 12 13 14 15 1 2 3 4 5 i dont recognize the problem thanks
  label = recursion, content = should we test the case when the identity is not correct for the accumulate function
  label = recursion, content = if we use listrest in a function is this considered modifying the list even though it actually creates a new one would we mention this in the m part of our rmes
  label = recursion, content = hi i am testing the traversal function and i tried to use assert to test if the list returned is what it should be however it says that list list is improper use i thought about taking sum of each list and then comparing that but then the order would be lost which is the whole point any suggestions
  label = recursion, content = 
  label = recursion, content = is it fine if i submitted to the autograder but i cannot open p2cpp on it
  label = recursion, content = i didnt realize you provided us with a test function for treecontains and although i pass all of my own tests which are more complex than the one provided i dont pass the provided one when run through the treecontainstestcpp file however when i do the same exact tests in my own test suite i pass them should this concern me
  label = recursion, content = do we need to include helper functions in p2h do we make them static in p2h
  label = recursion, content = would a function be considered tree recursive if it had a similar form to this int fooint x int y if x 0 y 0 return 0 if x 0 return fooxy1 if y 0 return foox1y return foox1 y foox y1 so if it usually is tree recursive but there are some cases where it doesnt do a tree recursive call
  label = recursion, content = on the project 2 code review worksheet it says each test case is implemented as a separate function does this mean that every test case for one function must be put in a separate function and called separately in int main ex void testsum1 void testsum2 void testsum3 is it ok to put different test cases for the same function inside of one test function ex void testsum test case 1 test case 2 test case 3
  label = recursion, content = if itemvalues is empty how can we initialize such an array is it like itemvalues1 or put zero into the array
  label = recursion, content = im sorry if this has been asked before but for testing do we have to use listequal and treeequal can i just print out the output thanks
  label = recursion, content = in the requires part of the rme do the requirements only need to be true for the first call of the function
  label = recursion, content = do we need to write unit test for helper functions or the function we wrote as arguments for accumulate function
  label = recursion, content = if two lists or trees print identically is it safe to assume they are equal or should we use the listequal or treeequal to verify they are equal thanks
  label = recursion, content = hey has anyone found a good resource for finding solutions of the partition problem online the highest i found was n6 but i would love to test a higher integer to stress test the program a little more thnaks
  label = recursion, content = for each function i have one test function for it however in each function i may test the function more then once with different numbers i heard through the grape vine i may need to create a whole separate test function for each test of the same function is this true and if its true since i need only one test function for each function could i just get rid of all the other times i test the function in each test function and not loose any points
  label = recursion, content = i know we have to write at least one test function for every function but can i call both fib and fibtail under fibtest instead of copy pasting the test function
  label = recursion, content = do we need to write rems for our helper functions and our simple maxint int function i understand in the last project we didnt have to write rems for our functions because they were already in our h file does the same apply here or since we have helper functions we need to do it for those and not the others also do we need to include a prototype of our helper functions in our h that was provided
  label = recursion, content = is it required that only one among the two partners submit the project is it okay if both partners submit the projects through the autograder
  label = recursion, content = the p2h file doesnt exactly specify whats supposed to happen when an empty list i assume identity should be returned as accumulate is a generalization of sum and product and if empty lists are passed into those functions they should return their respective identities zero and one im just wondering because for other applications of accumulate perhaps using it to find the max element or the element closest to a certain int value what would the identity be and should the identity be returned
  label = recursion, content = can one person fill out multiple peer reviews if i ask someone to fill it out for me but they have already filled it out for someone else is that allowed
  label = recursion, content = for this sheet do we need to turn it in on ctools because its a pdf so im not sure how to edit it or do we print it out and turn it in thanks
  label = recursion, content = is calling a tailrecursive function inside a helper function to make a tailrecursive function tailrecursive or not for example if i am calling reverse a tailrecursive function inside a helper function is this still a tailrecursive function
  label = recursion, content = for the treecontains function are we supposed to check the condition that the tree given is a sorted binary tree within our function or is it assumed that every tree inputed will be a sorted binary tree
  label = recursion, content = can i use reverse in listt first reversefirst is this correct
  label = recursion, content = for maxvalue function how are we keep tracking of our values would helper function be useful here
  label = recursion, content = 3 should be filtered as an odd number if 3 5 0 9 are put into filterodd then 3 5 and 9 should be in the new list right
  label = recursion, content = i did not write that many test functions but am pretty certain my code works do i have to write more
  label = recursion, content = are we allowed to write two helper functions for one function
  label = recursion, content = has anyone run into this problem on xcode or know what is wrong
  label = recursion, content = can i use listsize to get the number of elements in a list
  label = recursion, content = are we allowed to use void functions in p2cpp
  label = recursion, content = is an empty tree sorted binary tree
  label = recursion, content = i notice that in the tree recursive functions we pass new parameters every time we recur through the function ie switching the tree variable to treeleft or treeright i cant help but notice that maxvale has const arrays and no parameters that would change upon calling it again it just doesnt seem like its meant to be recursive is there something im missing in terms of structure here
  label = recursion, content = my partner and i have been working on this for a really long time is there any other hints we can get from other piazza posts it seems that its necessary to have an array is this really necessary we notice a pattern but we cant seem to implement it right any direction would be great
  label = recursion, content = whenever i try to insert an element anywhere other than the first position i get a message saying exception thrown in visual studio and it takes me to a spot in recursivelistcpp i know there must be an error in my code but visual studio wont let me stepinto the function to debug it what should i do
  label = recursion, content = if this function must be treerecursive how are we expected to iterate through these two arrays i get an arri but if i recur through it i wont know my position without a variable to keep track of place
  label = recursion, content = i am having trouble storing the values from the tree into the list it seems like the values get overwritten when i run my tests the list only contains the top element i run my code on labster and the values are there but they are not saved for the final list that is returned i cannot seem to find a solution that doesnt involve a reference argument does anyone have any tips on how to save the values into one list thanks
  label = recursion, content = thank you in advance
  label = recursion, content = just to make sure this is an incorrectly sorted binary treethe bottom one right
  label = recursion, content = are we allowed to implement a max helper function that calculates the maximum value of two integers and use it to evaluate the return values of recursive cases when we implemented the function in labster it told us that the function itself is not recursive because the max function is technically not recursive should we implement the max functionality within the recursive case to maintain recursion
  label = recursion, content = im trying to test my filter code in labster and its giving me a syntax error when i try to define a variable with a typedef i defined is this not supported in labster
  label = recursion, content = since the instructors have already written one test case for maxvalue do we need to write any more test cases for it
  label = recursion, content = after i go to httpclass1eecsumichedu it redirects me to httpsclass1eecsumicheducallbackmodeselectnextreason and is just a blank page
  label = recursion, content = so if an element is the last element in a tree and i try to call treeleft or treeright from that would these functions return an empty tree i am slightly confused about these functions because they state that they require the tree not be empty but does that mean they cannot be used on an empty tree or does it mean they cannot create empty subtrees from the last element
  label = recursion, content = when i run make test everything works perfectly i even pass all of the tests however in the provided test for treecontains it appears to be testing if my program can identify if a particular sub tree is contained within the whole tree this just seems odd because treecontains is only supposed to see if a tree contains a particular element
  label = recursion, content = the wikipedia page for partition has a recursive mathematical formula that solves the partition problem for any number n are we allowed to use this formula or do you have to come up with our own unique recursive function
  label = recursion, content = the title pretty much says it all in the spec it says we cannot use pass by reference for the main functions but can we for our helper functions
  label = recursion, content = lets say i have a helper function for fx called fhelperx in another function gx is it considered bad style if i call fhelper or i have to recreate a ghelper which is the exact same thing as fhelper
  label = recursion, content = i am trying to use listfirst to get the value from the list and assign it to an int and i dont understand what this error it is giving me means
  label = recursion, content = is there anything we should pay attention to other than function rmes in terms of style and comment of the project 2
  label = recursion, content = after writing traversal i realized that i could write treesum much more efficiently by using traversal however when i checked my code in labster i got this message it only calls two functions one of which im certain is tail recursive and one of which is recursive is treesum still considered recursive in this case if not is it bad style to go back to my old version of tree sum that is tail recursive but is less efficient treesum is not tail recursive the problem is it calls other functions highlighted that arent tail recursive
  label = recursion, content = for the maxvalue function could we use a tail recursive helper function to sum the values of the two arrays
  label = recursion, content = is a function considered tree recursive if they make one call to their helper function which is tree recursive
  label = recursion, content = am i allowed to combine tests for different functions in the same test functions or does each function need its own test function for example could i test the fibtail and the fib functions in a testfibs function or would i need a separate test function for each
  label = recursion, content = this error keeps occurring when i compile with stdc11 or stdc11 when i compile without it it works just fine should i be concerned thanks
  label = recursion, content = was wondering which lecture countchange was referenced in so i may go back to lecture videos and review it any clues thank you
  label = recursion, content = when i run my files at autograder this message comes up for all the tests what would be the issue thank you
  label = recursion, content = for the insert function with lists if an empty list is passed with an integer elt should the function return just an empty list or just a list with one item that it was passedthe elt
  label = recursion, content = can we use the functions we implement in p2cpp in other functions for example can i use the list function append in one of my tree functions thank you
  label = recursion, content = previously i tested all my code with the makefile using the command make however after going back and commenting through my code makefile will no longer compile my code instead i get the message nothing to be done for all i am in the correct directory and the appropriate files are all there can someone tell me why this is
  label = recursion, content = is it possible for there to be an empty placeholder in the middle or beginning of a list for example if a list contained 3 2 1 empty would it have to contain empty 1 2 3 or is this overthinking it thanks
  label = recursion, content = im having an issue testing my code in visual studios i dont understand what the link errors are referring to any help would be appreciated is the issue with what files are being used in the build or something within the file 1 build started project project2 configuration debug win32 1 p2cpp 1p2testsobj error lnk2019 unresolved external symbol public thiscall recursivelistrecursivelistclass recursivelist const 0recursivelistqaeabv0z referenced in function void cdecl testcontainsfalsevoid testcontainsfalseyaxxz 1p2testsobj error lnk2019 unresolved external symbol public class recursivelist thiscall recursivelistoperatorclass recursivelist const 4recursivelistqaeaav0abv0z referenced in function void cdecl testcontainsfalsevoid testcontainsfalseyaxxz 1p2testsobj error lnk2019 unresolved external symbol public thiscall recursivelistrecursivelistvoid 1recursivelistqaexz referenced in function void cdecl testcontainsfalsevoid testcontainsfalseyaxxz 1p2obj error lnk2001 unresolved external symbol public thiscall recursivelistrecursivelistvoid 1recursivelistqaexz 1p2testsobj error lnk2019 unresolved external symbol class recursivelist cdecl listmakevoid listmakeyaavrecursivelistxz referenced in function void cdecl testcontainsfalsevoid testcontainsfalseyaxxz 1p2obj error lnk2001 unresolved external symbol class recursivelist cdecl listmakevoid listmakeyaavrecursivelistxz 1p2testsobj error lnk2019 unresolved external symbol class recursivelist cdecl listmakeintclass recursivelist const listmakeyaavrecursivelisthabv1z referenced in function void cdecl testcontainsfalsevoid testcontainsfalseyaxxz 1p2obj error lnk2019 unresolved external symbol private void thiscall binarytreedeletetreestruct binarytreenode deletetreebinarytreeaaexpaunode1z referenced in function public thiscall binarytreebinarytreevoid 1binarytreeqaexz 1p2obj error lnk2019 unresolved external symbol bool cdecl listisemptyclass recursivelist const listisemptyyanabvrecursivelistz referenced in function bool cdecl listcontainsclass recursivelistint listcontainsyanvrecursivelisthz 1p2obj error lnk2019 unresolved external symbol int cdecl listfirstclass recursivelist const listfirstyahabvrecursivelistz referenced in function bool cdecl listcontainsclass recursivelistint listcontainsyanvrecursivelisthz 1p2obj error lnk2019 unresolved external symbol class recursivelist cdecl listrestclass recursivelist const listrestyaavrecursivelistabv1z referenced in function bool cdecl listcontainsclass recursivelistint listcontainsyanvrecursivelisthz 1cuserslogandocumentsvisual studio 2015projectsproject2debugproject2exe fatal error lnk1120 9 unresolved externals build 0 succeeded 1 failed 0 uptodate 0 skipped
  label = recursion, content = what should the list contains function do if it was given an empty list
  label = recursion, content = when all weights are 0 and the capacity is 0 should maxvalue return 0 or should it return the sum of all values
  label = recursion, content = computerphile makes a great video illustrating stack frames for solving factorial its explained by a very british professor so please enjoy httpswwwyoutubecomwatchvmv9nexx1vhc
  label = recursion, content = i am confused on what the requirements are for comments the other answers were hard to understand 1 is rme required for functions written in p2cpp since they are already state in p2h 2 do helper functions require rme 3 how extensive does testcase comments need to be thanks
  label = recursion, content = i am confused as to how to write the effects part of rme for recursive functions as the function will call itself how do i explain the meaning of the return value should i explicitly describe what the function is returning or should i describe the end result of the recursive call
  label = recursion, content = is there a possibility that the right branch of a tree could extend past the left branch for our cases for example 3 1 4 2 1 4 it fits the definition of a wellformed tree given to us but i am very confused on how we could possibly determine the correct order if this is possible if it is any help would be greatly appreciated thanks
  label = recursion, content = i keep having issues trying to access the tree and list equals functions in testhelpersh i have include testhelpersh written at the top of my p2testscpp but the compiler gives me an error message about an undefined reference to listequal but when i include testhelperscpp the code runs just fine does anyone know what i am doing wrong
  label = recursion, content = would it be helpful to sort the array of itemvalues from least to greatest or find the maximum value in the itemvalues array and then use that for next steps in the function
  label = recursion, content = so for the function partition it said that it has to bee tree recursive does that mean we need to create a tree and make it recursive or simply tail recursive thanks
  label = recursion, content = if you did the coinchange function with a list rather than an array do you need a size parameter like numcoins that keeps track of the elements in the array or can you just use listisempty
  label = recursion, content = besides multiply and add are there any other associative functions that take in two ints and return an int so i can properly test the accumulate function
  label = recursion, content = can i copy and paste the test case from filtertestcpp into my test cases i feel this is a good test case for filter and writing test cases for filter takes longer than most functions it also gives a good model for further cases
  label = recursion, content = when is the deadline for p2 is it tuesday or friday because on the scheduled topics on the gdrive says its on friday which one do i follow
  label = recursion, content = what happens if you dont return a recursive call when you call one i tried this during one of the functions and it did not return the expected value do the base cases still go through
  label = recursion, content = are we required to use the test function that is provided or we can use such as listfirstlist some expected element to test our functions
  label = recursion, content = i remember seeing a note on this somewhere but i couldnt find it in the style guide or on piazza but for bools is it better to return true or return 1 also for checking bool functions do you check 1 or true thanks
  label = recursion, content = traversal is not tail recursive the problem is it calls other functions highlighted that arent tail recursive to be clear this means that traversal is recursive but not tail recursive correct if it were not recursive it would have that statement that says traversal does not appear to use any recursion at all
  label = recursion, content = i saw that in specification we are no t allowed to use for loop for those listt functions but can we use them in the tree recursion such as function numpartitions
  label = recursion, content = im not really sure how to go about testing maxvalue besides testing the base cases
  label = recursion, content = always when i run my p2testscpp code i encounter these error messages however i included all helper function inside the p2cpp and when i test each functionsincluding helper with labster they all work perfectly fine and properly i tried several things but they all didnt work out could you help me out of this i have thank you for example i have a sum function like this
  label = recursion, content = how do you make an array of bounded subset containing integers from 0 to n without using a for loop i cannot think of other ways
  label = recursion, content = are we allowed to assume that the array of items is the same size as the array of weights
  label = recursion, content = in the auto grader it says that it does a simple test can we know what functions are being tested
  label = recursion, content = im getting this error any idea why p2testscpp40730 error ‘ empty ’ was not declared in this scope treet tree1 treemake1 empty empty
  label = recursion, content = i am trying to relate numpartitions to countchange for any num given to numpartitions i thought about creating an array similar to the array of coins that is used in countchange the issue is that the length of the array depends on n and c doesnt let you have variables set the size of an array can i get around this by defining a pointer to an array would that work
  label = recursion, content = is the fibonacci sequence 0 indexed for example is the first term technically the 0th term if the sequence begins 0 1 1 2 3 5 is fib3 2 or 1
  label = recursion, content = for numpartitions i dont understand what the hint means when it says to use a helper function to compute the number of ways to partition n using a bounded subset of integers are we supposed to create an array of possible partitions an isnt it simply just the number n
  label = recursion, content = do the addmultiply functions have to be inside the p2cpp file or can they be in the test file
  label = recursion, content = i keep getting this error in xcode and do not know how to fix it
  label = recursion, content = has anyone seen an error message like this i cant find documentation on it anywhere
  label = recursion, content = is there any library i need to include for list and trees because im getting error messages such as bash42 g wall werror pedantic stdc11 o1 p2cpp simpletestcpp o hell tmpccvmzbhdo in function reversehrecursivelist recursivelist p2cpptext0x98 undefined reference to listisemptyrecursivelist const p2cpptext0xa7 undefined reference to recursivelistrecursivelistrecursivelist const p2cpptext0xb1 undefined reference to listfirstrecursivelist const p2cpptext0xbe undefined reference to listmakeint recursivelist const p2cpptext0xcb undefined reference to listrestrecursivelist const
  label = recursion, content = 
  label = recursion, content = when making a tree how do you make empty branches using the treemake function we are currently doing something like this treet exampletree treemake2 3 which is not compiling
  label = recursion, content = does anyone know whats up with this error this happens when i run make p2tests g wall werror pedantic o2 stdc11 p2testscpp p2cpp recursivelistcpp binarytreecpp recursivecpp testhelperscpp o p2tests undefined symbols for architecture x8664 fibint referenced from testfib in p2tests586f0eo filterrecursivelist bool int referenced from testfilter in p2tests586f0eo ld symbols not found for architecture x8664 clang error linker command failed with exit code 1 use v to see invocation make p2tests error 1
  label = recursion, content = is anyone having trouble with passing the maxvaluetest in the make file ive been testing my maxvalue knapsack function pretty thoroughly and i cant find anything wrong however the make file always says i fail the maxvaluetest i even went so far as printing out what was in the make files arrays for its test and did the work by hand i got the same thing that my algorithm was getting and failing the make file can anyone shed some light on what i may be doing wrong
  label = recursion, content = are we allowed to write helper functions solely for the purpose of simplifying our test cases for example can we write a function to convert an array to a list in order to avoid really long parameter lists with my function i could reduce listt test listmake1 listmake2 listmake3 listmake4 listmake5 listmake to something much easier to read namely int testarray 12345 listt test arraytolisttestarray if we are allowed to do this must these helper functions in p2testscpp also be tail recursive in my case must arraytolist be tail recursive
  label = recursion, content = when i try to test my code using this g wall werror pedantic o2 p2testscpp p2cpp recursivelistcpp binarytreecpp recursivecpp testhelperscpp o p2tests i get an error that says that p2testscpp and recursivecpp are not in my directory but if i ls i can see that they clearly are any ideas for why this might be happening
  label = recursion, content = i dont see whyhow we are supposed to make maxvalue tree recursive from what i can see one could make the function easily by comparing the ratios of particular values assigned to each object this could easily be implemented using a tail recursive function though so im having trouble seeing how we are supposed to convert this to tree recursive if ive missed any obvious hints i would greatly appreciate some advice
  label = recursion, content = im having trouble trying to determine basecase for knapsack im not sure if a helper function is necessary or not because the knapsack has no arguments for amount like countchange does
  label = recursion, content = if i want to test my code for trees and look through it with labster how would i do that
  label = recursion, content = when i try to run my p2testscpp i get the following error it looks like something is wrong filtertestcpp but it could definitely be me doing something wrong too any suggestions about what this error might indicate in function main filtertestcpptextstartup0x172 undefined reference to filterrecursivelist bool int collect2 error ld returned 1 exit status make filtertest error 1
  label = recursion, content = does numitems indicate the number of items we can choose out of the list for example if my array has 5 items but my numitems is 3 does that mean i only have access to first 3 items of my array or does that mean i can choose any 3 items at max given that the total weight of those items are less than or equal to the capacity from the list of items
  label = recursion, content = if i understand correctly we are meant to write test cases inside p2tests for each function of p2 but not for the helper fuctions my question are the public test cases such as maxvaluetestcpp treecontainstestcpp simply there to help us do we still need to write tests for these functions why are they not included inside p2tests i am a little confused as to why they are not inside the p2tests file and whether we need to write additional tests for them what is the purpose of the public test cases thanks
  label = recursion, content = would there be office hours or anyone can help us on project this weekendi really get stuck and want help on writing project
  label = recursion, content = i could not figure out how to write the recursion of the traversal function especially i dont know how to keep storing the left node into a list like i am able to extract the rightest line nodes but i am not able to continue to the lefter side because the tree has been excluded from rightest nodes
  label = recursion, content = 
  label = recursion, content = for the circled numbers would you consider 3 2 9 1 8 1 4 3 2 or 3 2 9 1 8 4 1 3 2 which one is correct after hours of trying to solve this problem i finally come up with sth looks correct but now i am confusing myself about the meaning of leftmost and tree level please point it out which one is correct for me thanks
  label = recursion, content = eg what would the correct sequence be if i were to run it through traverse
  label = recursion, content = the style guidelines say dont use 1 or 0 if you mean true or false use true and false is this for test cases too when testing bools
  label = recursion, content = for test function do we always require to print out an actual value and expected value or using assertion would be fine
  label = recursion, content = is the sum of an empty list simply 0 or undefined there is no requires clause in sum so i coded it assuming the sum is 0
  label = recursion, content = the definition for append does not specify the proper output for when two empty lists are passed in i would assume that appending 2 empty lists would result in an empty list but isnt this an illegal definition of a list
  label = recursion, content = so for accumulate and filter i made new functions to test them in p2testscpp such as add and multiply do i need to write rmes for those
  label = recursion, content = are sum product filtereven filterodd supposed to run independently without accumulate or filter the way i wrote my code makes these functions depend on accumulate and filter
  label = recursion, content = ive been working on fibtail for a while and i cant seem work out an algorithm that works for fib0 and fib1 can i make base cases for these so in result i would have 3 base cases and then one recursive case
  label = recursion, content = are we supposed to write rme for test functions i assumer we dont need to do so
  label = recursion, content = there isnt many restrictions on knapsack i read an earlier post and i believe we are not allowed to use loops also how many if any helper functions can we use and should we assume it is not sorted from highest to lowest value also i noticed in the requires that the size of values can be greater then the number of items how can we reach a base case with out knowing when to stop
  label = recursion, content = when i try to include p2h and recursiveh i am getting the error message error cannot open source file i have all the files saved in the same folder and have them all as source files i am working in visual studio how can i fix this
  label = recursion, content = in order to test the accumulate function i created an add function that the accumulate function will read in as fn and i put the add function in the p2cpp file but when i typed in make test into the terminal it warned that the add function was defined but not used is it okay to have the add function in p2cpp and how should i fix this error
  label = recursion, content = are the functions we right allowed to call other functions
  label = recursion, content = hello i have attached a picture of what happens when i make test i have written function stubs in p2cpp with each stub body containing assertfalse i have included p2h im confused thank you
  label = recursion, content = am i allowed to use another function like reverse for making my append function
  label = recursion, content = since there is already rme for functions in the h file when implementing them in the cpp file do we still need to write rme for function implementations
  label = recursion, content = i try compiling and my program failed but i just wanted to clarify can we have a tree that has a left subtree and a right subtree but no top element for example empty 5 7
  label = recursion, content = for a function to be tail recursive is it necessary that it call itself or is it also tail recursive if it calls a function that is tail recursive but never actaully calls itself
  label = recursion, content = i want to use append for another function but im stuck trying to figure out how to append a single element to two lists because append only take in two lists as arguments
  label = recursion, content = how do i connect the maxvaluetestcpp file to my program thanks
  label = recursion, content = 
  label = recursion, content = because of the multiple stacks in trees traversal function we are trying to pass the list as a reference but we are getting errors listmake isnt working are we actually able to pass list as a reference or is it just that theres probably a bug in our code
  label = recursion, content = if we have a list containing only one integers should the multiplication accumulate function return this integer or the identity
  label = recursion, content = in the project specifications it says that we cant use reference arguments however are we allowed to use pointers in helper functions im kind of confused between using a pointer as a parameter and using a reference argument thanks
  label = recursion, content = in int maxvalue should i assume that size of itemvalues and size of itemweights are equal
  label = recursion, content = will redundant code be marked off during hand grading for style for example are we required to use accumulate for add and product in the list thank you
  label = recursion, content = the append function accepts two input parameters listt first listt second would it be okay if i append list first onto the end of list second and then return list second as my answer or would you prefer me to make a new list which is the combination of the two im assuming its better practice to not change input variables but if i can get by with using list second as my answer i can avoid using a helper function
  label = recursion, content = im working on numpartitions and i cant seem to understand how tree recursion would work for this function
  label = recursion, content = does a sorted binary tree means it would be 1 2 3 also how could we go about implementing this
  label = recursion, content = are we responsible for handling a wrong identity in accumulate in addition 0 is the identity because x 0 x assume i have lista 1234 if i call accumulate using an incorrect identity accumulate lista add 1 will it be a problem if it returns 11 instead of 10 thanks
  label = recursion, content = hi i was trying to compile my codes using the command make test with the makefile the codes ran well in the xcode but some problems with undefined references showed up bash42 make test g wall werror pedantic o2 stdc11 maxvaluetestcpp p2cpp recursivelistcpp binarytreecpp recursivecpp testhelperscpp o maxvaluetest tmpccbdzod5o in function main maxvaluetestcpptextstartup0x76 undefined reference to maxvalueint const int const int int collect2 error ld returned 1 exit status make maxvaluetest error 1 i saw other people were having the similar problem with other functions so i rechecked if i have everythingespecially the makefile in the directory but i still cant find where is the problem
  label = recursion, content = i was wondering where we are supposed to put the implementations of the helper functions for project 2 are we supposed to implement them right above each function that they are for or can we declare them at the beginning of the code and implement them all at the end which is considered better style
  label = recursion, content = an attribute of a wellformed sorted tree is that all elements in the right subtree are greater than or equal to the top element of the tree and all elements in the left subtree are strictly less than the top element of the tree when it refers to the top element does it mean the very peak or just the element above the branch 4 can 3 be a four 2 6 1 3 5 7
  label = recursion, content = do we need to write fib regular nontail recursively to be more specific i wrote fib regular tail recursively not realizing there was a function specifically to write it tail recursively i noticed however in the rme it states this must be recursive but need not be tail recursive does this mean i can just have both regular and fibtail be the same exact thing
  label = recursion, content = i understand that the identity for addition is 0 and for multiplication is 1 but i dont necessarily understand how that is specifically used in accumulate i had written sum and product before accumulate so i had already taken care of their identities so i know that accumulate must work for any associative fn that takes two ints but im also confused of the usage of the parameter int fnint int the example given was just add that refers to the name of a given function correct rme states that for the example the following invocation returns the sum of all elements but what was the difference between calling accumulate vs add basically my question is what is accumulate doing that product or sum isnt
  label = recursion, content = before i noticed it was predeclared for us i wrote my own equivalent to the filterlistt list bool fnint which is actually more efficient as it does not require the creation of yet another helper function filter is already called from filterodd and filtereven my function takes the form of filterbool fnint listt list listt sofar and is tail recursive without the need of a helper function may i use this in lieu of the given starterfunction
  label = recursion, content = if there is a list of one value and you use listrest on this list what exactly would return the list isnt empty so it shouldnt fail right will it just return 0
  label = recursion, content = should we create an array with the an array of specified items the number can be divided into because for count change we had an array of 1 5 10 25
  label = recursion, content = is it okay that nearly all of our functions require helper functions in order to be tail recursive
  label = recursion, content = i ran the simpletest and all the numbers came out correct diff and sdiff claim that the output doesnt match the correct output file even though they look identical so i thought it was a common spacing bug if i use a w flag in diff the problem is resolved so it must be a whitespace problem i assume however diffcheckercom says our output file and the correct output file are identical should i ignore this as we did not write the simple test output and because our numerical output is correct
  label = recursion, content = eg in c when i do cout 17 5 it prints 2 if i remember correctly isnt 17 5 3
  label = recursion, content = hypothetically if there were only one element in the argument listt list for the accumulate function what would be returned i understand the base case when the list is empty returns identity but if a one element list was passed in the function pointer fn which requires two parameters in order to be executed will not be satisfied
  label = recursion, content = how do you initialize a tree i know you use treemakeint lefttree righttree but how would you initialize this 4 2 5 3
  label = recursion, content = i am not quite sure how the fib functions are supposed to work do i create a tree of ns then add them on the way up if so can i use a helper function to first create the tree then another function to get the fibonacci number i guess i am confused how to recursively call the fib function that only passes in an int not a tree
  label = recursion, content = in the rme for numpartitions is says that it must be tree recursive is this supposed to be tail recursive or is there a specific type of tree recursion
  label = recursion, content = when will the autograder for project 2 open
  label = recursion, content = i ended up writing this function by using trees through a helper function the output is correct but i heard that you can write this function using just numbers is it acceptable to write this function using trees if the output is correct or will i lose points
  label = recursion, content = can we have a helper function call another helper function
  label = recursion, content = would it be okay to just repeat the same rme for helpers and the given ones at the functions
  label = recursion, content = so i have written code for traversal and it appears to move through trees in the correct order but i am having trouble getting it into a list when i replace the line of my code that calls listmake by doing list listmaketreeelttreelist with a cout statement that just prints the top element of the tree to the console it prints the elements of the tree in the correct order from left to right however when trying to put these elements into a list i get very weird results as intermediate lists and ultimately end up with an empty list i tried printing the list at every stage and the results dont make a lot of sense i should be outputting something like 7 3 4 2 1 9 but the i am getting something like 7 3 2 4 1 4 9 1 4 when i print the list after every modification of it i am wondering if this is something wrong with the way i am using the listmake function my code clearly is traversing the tree correctly but the list aspect is not working
  label = statistics, content = hi so i noticed that most people i know including me got the percentile function wrong in project 1 can anyone guess what was wrong this isnt for a regrade or anything i was just curious
  label = recursion, content = i keep getting new stack frames each time it goes through any of my tail recursive functions here are the stack frames for my accumulate function i believe the function is tail recursive i rewrote it all in labster and tested it in there and it does say its tailrecursive and running through the simulation does not produce any new stack frames but on visual studio it still creates all these stack frames for all of the functions there is also something weird going on after my base case becomes true and it attempts to return the accumulated value the debugger keeps jumping between a bracket and the recursive return statement of my functions this occurs until the value of the accumulate variable is back to its original value but then my function returns the correct value of the accumulated variable before it was reduced and it passes all my tests what is going on here
  label = recursion, content = i keep getting the following error and im not sure what else i can try to fix it libcabidylib terminating with uncaught exception of type listexception error empty list
  label = recursion, content = can we directly compare two lists using operator
  label = recursion, content = i need some help getting started on tree traversal i am having a hard time identifying the base case and more so understanding how the recursion is going to work also tree traversal returns a list every time so i assume we will have to be repeatedly appending to a list i understand that we need to make a call both left and right in the tree but i dont really understand much else yea i am just pretty confused on how to go about this any explanations would help thanks
  label = recursion, content = we keep getting the error terminate called after throwing an instance of treeexception what error tree empty even though we are passing in a tree we made in the test file to the function treesum
  label = recursion, content = is there any way to obtain the size of a list or could anyone give me a hint as to how to get the size of the list
  label = recursion, content = httpsdrivegooglecomaumichedufiled0b61plkcmluejvlzoz2zqulp2a00viewuspsharing at what point down a particular subtree does it cross above values would the 8 in this picture be to the left of the top 4
  label = recursion, content = how do we compare lists using assert like i want to compare the list generated from my function reverse list to the correct list am i not allowed to use at or
  label = recursion, content = hello is there any way i can delete files under my code that i created and previously saved into the eecs section of labster i have a lot of unwanted files that are just getting in the waythanks in advance
  label = recursion, content = when you call the functions treeleft and treeright does it take off the other branch of the tree for example does calling treeleft remove the right branch does calling treeleft over and over take away a node each time
  label = recursion, content = i am having trouble compiling my accumulate function this is the error message i am receiving error invalid conversion from ‘ int listt aka int recursivelist ’ to ‘ int int int ’ fpermissive assert15 accumulatelist sum 0 any help is appreciated
  label = recursion, content = so during lecture 5 the use of function pointers to fix the problem of repetitive code was mentioned would we need to implement this in our project 2 where for example filterodd and filtereven are extremely similar to each other or would copy paste be acceptable in this case
  label = recursion, content = can you call fibn1 fibn 2 inside of the fibtail function
  label = recursion, content = i know we can append an empty list to the wellformed list but can we append a wellformed list to an empty list because whether first or second can be empty is not specified in the rme for the declaration append
  label = recursion, content = i get an error saying control reaches end of nonvoid function werrorreturntype when i type in make
  label = recursion, content = we keep getting this error when we try to make a function to pass into our test for filter when we call the filter function how do we pass in parameters for the pointer function
  label = recursion, content = hi just wondering if the assignment operator is overloaded for lists in project 2 thanks
  label = recursion, content = do we need to print anything in our test functions or can we just assert various test cases
  label = recursion, content = can we call other functions inside functions ie can i call my reverse function in filterodd and filtereven
  label = recursion, content = i am getting this error when i run my code tmpccqr9h1io in function testsumbasic p2testscpptext0x6f undefined reference to listmake which seems like an error referring to recursiveh file is there something i need to do to link my programs with the recursive file i added include recursiveh to all the necessary files but it does not contribute to anything
  label = statistics, content = is there a way to see how you got points off i received an 912 and just want to know what i got wrong so i can learn for the next project
  label = recursion, content = and that and the p2testscpp files are the only ones we implement in and are we allowed to use any libraries we want thank you
  label = recursion, content = so i wrote all my test functions and i am trying to simply run the program by saying python p2testscpp and it immediately gives the error invalid syntax using namespace std how can that be an error i know that the error is not actually that line but actually something else but how do i find the something else
  label = recursion, content = i have been trying to debug my code in labster but i keep experiencing a syntax error which labster refuses to ignore so that i cannot actually simulate any program on labster the syntax error is not in my code but rather the copy and pasted class definition of recursivelist specfically at the following line it throws an error at column 31 which is the beginning of the parameter elt explicit recursivelistint elt since my functions require this class definition to define all of the other functions that were given to us i think i do not know how to proceed does anyone have any advice for how to fix this in labster thanks
  label = recursion, content = my reverse function works fine i know this because i tested it many times however when i want to use it in filterodd or filtereven because i first reverse the original list and pass the reversed list in a the parameter to the helper function i keep getting a throwback error of empty list not sure why
  label = recursion, content = i know that the style guidelines apply to our test case but im just wondering if we need to write comment for our test case for example do we need to write why we write this test function to catch which bug that would be kind of hard to express in words thanks
  label = recursion, content = do our functions have to work for lists made of doubles or do lists only contain integers
  label = recursion, content = how do we determine what int values taken as input by the fn function pointer in filter return true
  label = recursion, content = can we compare lists directly using assert or do we need to compare the lists element by element
  label = recursion, content = i am getting the undefined symbols error whenever i call any of the original functions in p2cpp even when i call them recursively within p2cpp i cant seem to find the issue undefined symbols for architecture x8664 sumrecursivelist referenced from testsumbasic in p2testso ld symbols not found for architecture x8664 clang error linker command failed with exit code 1 use v to see invocation
  label = recursion, content = so after writing traversal granted my code for this is probably not the best way to do it at all but after spending hours with my partner trying to figure it out it is the best we have got my code takes a while to compile not terribly long but it is a noticeable pause i was wondering if there is going to be a time limit in the auto grader that i should be worried about for this particular project
  label = recursion, content = can someone explain in listextreme how we are calling listextremehelp i dont see where the int sofar is in calling the helper function from main function and why are we passing in listrest and listfirst and not the whole list and what does the last fn mean at the end of the function call
  label = recursion, content = when running the sum function i call sum helper to use tail recursion however the program for some reason is unable to find sumhelper and returns the error that the identifier not found
  label = recursion, content = if we define a new list as an additional parameter of our helper function is that list by default empty or do we need to set it as empty im confused because if i set it to empty then each time the function calls itself itll reset that list to empty
  label = recursion, content = is it possible to append an empty list to another list consisting of an integer followed by a wellformed list for example if lista is empty and listb is 2 4 6 can we append lista to listb would our resulting list be 2 4 6 or would we not get a wellformed list because a is empty
  label = recursion, content = i made my p2cpp file and all my functions with assertfalse including just p2h i also have nothing in p2testscpp besides what was already given however when i run the makefile make p2tests i am getting a bunch of errors p2testscpptext0x21 undefined reference to listmake p2testscpptext0x3f undefined reference to listmakeint recursivelist const p2testscpptext0x52 undefined reference to recursivelistoperatorrecursivelist const p2testscpptext0x5e undefined reference to recursivelistrecursiveli and so on it sounds like it is trying to use the library that was provided for lists but it cant find it i have all of my starter files in one folder so i dont see why it cant find the listmake call any suggestions
  label = recursion, content = for the function listt listinsertlistt list int elt int n if i call the function with an empty list elt 2 and n 0 should it return 4 or empty list
  label = recursion, content = i know in the project spec it says were only allowed to use the standard iostream and cassert libraries but are we allowed to use vector so we can test the maxvalue function
  label = recursion, content = is the product of a list containing 9 simply 1 is the product of a list also 1 the multiplicative identity also we are unsure if two numbers are needed to add so what would the sum be of these lists
  label = recursion, content = do both partners have to register or can just one partner register for the whole team
  label = recursion, content = can i use helper function for making fibtail function
  label = recursion, content = for the test case that was included in p2testscpp void testsumbasic it seems that at the end of the for loop it doesnt make a list of numbers but instead it runs until the only element in the list is 4 so that listc 4 so it doesnt include any of the previous numbers in the list i found this weird shouldnt the list be listc 1234 i used labster and it says listc has only 4 in its list
  label = recursion, content = can you make a new element to a list of the same name using list make while calling the list inside the function ex list listmake4 list would this make list previous list values 4
  label = recursion, content = recursiveh is in the same folder and that folder is linked to my caen account im unsure how to solve this
  label = recursion, content = i get an error saying that listt is not declared in this scope for my function when i run p2cpp do i have to include any other libraries other than includecassert and includeiostream
  label = recursion, content = by saying we need to use tree recursion for certain functions does this just mean to use recursion and pass trees in the recursive calls
  label = recursion, content = writting test cases for this is brutally painful are we allowed to write helper functions that could turn a different easier to make data structure into a list or tree say a vector
  label = recursion, content = when i test for finding elements n 46 in my fibonacci functions i receive negative values ex f46f45 1836311903 1134903107 f47 should return 2971215073 but instead it returns 1323752223 i assume this is because i am returning the negative decimal value equivalents of a 32bit unsigned integer since f47 231 f47 returns 232 2971215073 do we need to account for these larger values of n in our functions even though the algorithm remains fundamentally correct
  label = recursion, content = im trying to fill out the partner form that was posted to ctools it says its restricted im logged in to my umich account is this happening for anyone else
  label = recursion, content = when making the accumulate function tail recursive can you assign the value of fnlistfirstlist accumulatelistrestlist fn identity from the rme into a variable that you then use to call the accumulate function tail recursively
  label = recursion, content = should we use a helper function for this one im confused as to what the purpose of the identity is is it safe to assume that any function ie add multiply can be called for fn so therefore we shouldnt use a helper function to seed the identity with a 0
  label = recursion, content = should we call another function that we implemented in the reverse function or possibly make a temporary list were having trouble accessing the values in the list when we are trying to reverse them is there a way to access the back of the list without getting rid of the front of the list any tips are appreciated
  label = recursion, content = is the only way to make a list using listmake im making lists for tests but i didnt want to have to call listmake 5 or 6 times to make a list unless i have to but i cant see any other way to make the list can you just initialize the list when declaring it or do you need to use listmake thanks
  label = recursion, content = can someone give an example of the listt filterlistt list bool fnint function because there is no example in the rme
  label = recursion, content = i know that we are forbidden to use while foriteration in the official functions that we are implementing in p2cpp but can we use iterations in helper functions i just would like to double check and make sure thanks
  label = recursion, content = i have created a few helper functions for some of my tail recursive functions i have also added them to the p2h library however werror keeps giving me the error that these helper functions are unused functions when i try to compile it what am i doing wrong
  label = recursion, content = i was trying to compile my code so far using the terminal through the ssh command and whenever i enter my password it says permission denied at first i thought i just typed in my password wrong but ive tried it multiple times being extra careful when typing and it still isnt working is caen down thanks
  label = statistics, content = 
  label = recursion, content = can a tree recursive function have more than 2 recursive calls
  label = recursion, content = im confused on how to exactly go about implementing this functions you must make a list beginning with the element that is farthest to the left how can you make a recursive function that will read both the left and right branches of each sub tree im just confused on how to think about this function thanks
  label = recursion, content = the project requirements say that all the implementations of the functions have to be tail recursive i already made the filter function tail recursive can i use this in the implementation of filterevenodd even though those functions will not themselves be recursive or does the project require that each individual function have its own recursive procedure thanks
  label = recursion, content = i understand what were being asked but have no clue where to start is the tree supposed to store number of ways to partition n into k parts or the number of partitions of n using numbers k n any hints would be appreciated
  label = recursion, content = i make my traversal function first and now that i did that my treesum and treecontains functions are two lines long is this allowed they are technically still using recursion since traversal uses recursion thanks
  label = recursion, content = are we allowed to call fib within fibtail or does this make fibtail not tail recursive i am under the impression that it remains tail recursive
  label = recursion, content = is there a way to access the last element of a list
  label = recursion, content = can we use functions listcontains and traversal for implementing function treecontains in the spec it declares that treecontains must be tail recursive if listcontains and traversal are both tail recursive themselves and we use them in the return value with no pending computations does this satisfy that clause
  label = recursion, content = does the append function have to be tail recursive it seems like it would be pretty easy to write an append function using no recursion or iteration so i was wondering if this is still a requirement
  label = recursion, content = the effects of the accumulate function are not so clear what is it supposed to do exactly
  label = recursion, content = are we allowed to use pushback pushfront and popback function for lists
  label = recursion, content = the rme states requires n 0 and n the number of elements in first effects returns a new list comprising the first n elements of this list followed by elt followed by any remaining elements of this list for example insert 4 5 6 1 2 is 4 5 1 6 so if i called listinsert4 5 6 1 3 would that return 4 5 6 1
  label = recursion, content = does a list necessarily have to use consistent datatypes hypothetically could you have a list where one element is an integer the next a double and then a string as well
  label = recursion, content = would it be acceptable to use global variables to store the lists for our test cases it would allow me to group my test functions by the functions they test and avoid declaring the same list multiple times it feels quite tedious and cluttering to declare the same lists at the top of each test function
  label = recursion, content = do we have to write function prototypes for our helper functions at the top of our p2cpp file
  label = recursion, content = is the following function tail recursive int fooint bar return 1 foohelperbar 0 int foohelperint bar int accumulationvar the implentation here is tail recursive in other words if my helper function is totally tail recursive but i call it only once from the regular function in a nontail recursive way is my entire implementation still considered tail recursive
  label = recursion, content = are we allowed to use iteration for tree recursive functions
  label = recursion, content = testsumbasic is rather simple is this only as an example or can we create our other test functions with small lists with sequential values eg 04
  label = recursion, content = i wrote the first function listcontains and wanted to try to run and compile it in visual studio but i get these errors and im not sure what it means i have include iostream and include p2h in my p2cpp file and in my source files i have p2h p2cpp recursiveh binarytreeh and recursionlisth
  label = recursion, content = the functions listcontains sum and product do not have a requires clause so is it safe to assume the list could have anything as in be empty or one element or multiple
  label = recursion, content = if we want to use a text editor instead of nano in the command line while sshing to caen is it possible to use sublime to edit the documents remotely how would you go about doing that
  label = recursion, content = hi so i am having difficulty with the basic issue of compiling through terminal before my program is finished it keeps saying that there is an undefined reference to main in the function start both of which i have not written then it lists a whole bunch of undefined reference to each of my functions in p2cpp i do not know to what this is referring this is how i am compiling g p2cpp recursivecpp o p2 thanks
  label = recursion, content = is it possiible to do lista listb given both are of data type listt
  label = recursion, content = what if the lest is empty
  label = recursion, content = we are given p2h i just wanted to confirm that we should create a file called p2cpp and write our implementations in there right
  label = recursion, content = are we allowed to use for loop in the knapsack problem
  label = recursion, content = as i am testing my first function i have stubbed all the function in p2cpp however i wasnt able to run it because error listt reverselistt assertion false failed whats going on thanks
  label = recursion, content = i am working on developing one of the list functions but i have run into an issue whenever i return a list from one function it seems to disappear as in the list that is assigned the output of that function is empty i have checked and verified that the function inside the function is correct and certainly has values so i am unsure why it is not being properly assigned in case this comes up yes i checked the contents of the list by making a copy first so i didnt undo the entire list in the process of checking it
  label = recursion, content = if a function calls another function that is recursive but not tail recursive is it still recursive
  label = recursion, content = does the operation listfirst return the first element as in the first element to be accessed meaning the one that was last deposited to the list or does it mean the first item that was created in the list to be more clear if i create a list like this empty 1 21 321 does listfirst return 1 because its the first item or does it return 3 because it is the first accessible item in the list
  label = recursion, content = should our helper functions be in p2cpp or should we make a helpercpp and include that file
  label = recursion, content = instead of using a helper function can you give an initial value to a parameter for example could i do something like this int sumlistt list int sofar 0 code here return sumlist sofar
  label = recursion, content = i have just started the project i downloaded all the files and implement the sum function however when i try to do the make p2test in terminal it gives the following error i am missing something to include in the files or should i not be doing this test yet i just want to run the p2testscpp file thanks
  label = recursion, content = if we try to access an element outside of a list would it return an error or give back 0
  label = recursion, content = do we write helper functions right inside p2cpp
  label = recursion, content = im trying to create test cases for functions and was not sure if lists could contain negative numbers or not could somebody clarify this for me
  label = recursion, content = yes i read the entirety of the project spec sheet and the examples of these functions which were provided could anyone offer me an additional explanation of these two functions i couldnt quite grasp what theyre suppose to do from the spec sheet i specifically dont understand what fn is representing thank you in advance
  label = recursion, content = can someone clarify what this function is intended to do effects returns the list first second listt appendlistt first listt second thanks
  label = recursion, content = hey was just wondering if any one had suggestions for easy ways to share code between partners for the projects like is there a google docs for code thx in advance
  label = recursion, content = are we allowed to use github to help us collaborate during partner projects or is that not allowed because its publicly accessible and could violate the honor code
  label = recursion, content = i read in the specification that we are allowed to use helper functions for our tail recursive functions but it only mentioned using them for the fibonacci functions specifically are we also allowed to use them for the other functions such as reverse product filterodd etc also it says that we have to declare them as static is this as easy as just writing static in front of it or do we have to do something else when i just write static i get this error p2h8215 error ‘ listt filterevenhelperlistt listt ’ declared ‘ static ’ but never defined werrorunusedfunction
  label = recursion, content = i need a partner for project two please contact me asap if youre looking for one as well
  label = recursion, content = is it ok to make a function that compares two values and returns bigger one to use in maxvalue function or is something about that and tree recursion going to be covered in the lecture next week
  label = recursion, content = when we want to test some functionslike accumulate we will need to write some new functionsfn where are we supposed to write these is it in the testhelperh or right above main
  label = recursion, content = im slightly confused about what to include in p2cpp do we just include iostream and p2h or all the other header functions in the starter files too
  label = recursion, content = can we make free public github repositories for eecs 280 projects when doing them with partners i wanted to check if this violates the honor code or not before moving forward with the project
  label = recursion, content = i am confused about the function maxvalue int maxvalue const int itemvalues const int itemweights int numitems int capacity according to the description what is the variable numitems if i set numitems 5 but i have 7 items in itemvalues and itemweights does that mean i can only choose 5 items out of 7
  label = recursion, content = i just started this project and am trying to run the makefile command for simpletestcpp to start this project with a better understanding of how all the files work together however when i do this i get a long line of errors that boil down to g being unable to find references to listmake and listmakeint recursivelist const i dont understand how i could have done something wrong as the list of links that would allow simpletestcpp to access those functions lie outside what i have already touched p2h recursiveh recursivelisth does anyone understand how i messed up
  label = recursion, content = since we havent gone over function pointers could you post an example of a simple test function for accumulate or at least a fillintheblanks carcass of a test function so that we know where to plug in our test cases
  label = recursion, content = is anyone preferably on north campus looking for a partner for project 2
  label = recursion, content = after reading the project 2 spec i am still confused as to what it means by identity the identity argument is typically the value for which fnx identity x and fnidentity x x for any x thanks
  label = recursion, content = my gsi said to ask this on piazza does this count as tail recursion void foo int x int n foo x1 return n
  label = recursion, content = any estimate as to when project 2 will be released thank you
  label = recursion, content = refer to this post for faqs related to project 2 pin
  label = statistics, content = for the functions where at least one element is needed as stated by the requires clause should we check for the case where an empty vector is sent as a parameter i did for some of them but then was told by another student that it wasnt needed so i didnt do it for the rest of them just curious if this would lose me points for style or a test case with an empty vector
  label = statistics, content = im getting this error on my terminal when i attempt to compile any of my three files clang error linker command failed with exit code 1 use v to see invocation with a bunch of referenced from statements what causes this or where might i have hit a wrong key
  label = statistics, content = my only diff between my output and the correct output is a newline after summary prints in the correct version it is a newline but for my new line it seems like the endl or n prints out a bunch of increments of tabs to make a new line when i highlight the code the correct output is a solid black line but my output is increments of seperate characters of whitespace it seems any idea what could be causing this
  label = statistics, content = i downloaded both the exceltsv file and the delimited version none of which had a tsv file what am i doing wrong
  label = statistics, content = im not getting any feedback email from autograder what should i do i did check my spam folder too
  label = statistics, content = i am unsure how to fix these errors i copying the the correct output to get the correct spacing but nothing seems to work
  label = statistics, content = i compiled the code and when i run it i can input the filename and the column name but then when its supposed to read the file i get a segmentation error i dont understand whats going wrong
  label = statistics, content = not sure what this error means i clearly initialize mode earlier in the function by the way i am referring to the error near the end that begins with statscpp1018error mode
  label = statistics, content = 
  label = statistics, content = are we allowed to use 1 or 0 in the code the style guideline seems like it wants us to avoid using 1 or 0what would be an alternatives
  label = statistics, content = how can i fix the bounds so that for a set of 5 numbers v5 in the formula does not go out of bounds my current formula is x pn1 1 and i use percentile vix 1 dxvix vix 1 im having a lot of trouble visualizing this
  label = statistics, content = hi when i put extra data into maintestdatatsv extractcolumn starts reading any data past line 6 from column a into column b i was wondering if this issue is coming from a problem in extractcolumn and if im supposed to do anything about it my maincpp got a 22 on the autograder but im worried that this bug will cause it to fail other tests thank you
  label = statistics, content = hello i just finished project1 and i have to say it is more comfortable for me to debug on xcode rather than caen i know we have to learn how to debug on terminal i was wondering will we have a lecture or discussion to tell us debugging rather than just showing them on lab1
  label = statistics, content = is it okay the cout the values within the summarize functionand basically treat the function as void or do we have to return a matrix and cout everything within maincpp
  label = statistics, content = i am trying to stop my code from running in the stdev function for the case that there is only one element in vector v i have tried to use assertcount 1 to crash the code however when i use this expression it stops the code even if there is more than one element in the vector is there something illegal i am doing in the assert statement that prevents this from working as i intended
  label = statistics, content = in maincpp i have a printsummary function does this function need an rme clause
  label = statistics, content = i keep getting error messages saying error include expects filename or filename for each of my include declarations in statscpp and statstestscpp when i try to compile it with the given compile command my include statements look like include string include statsh etc so i really dont know what else could be wrong with them these errors are followed by more errors saying that statements like assert and cout are not declared in this scope yet i did declare everything that should be needed any help would be much appreciated thank you
  label = statistics, content = statsh already has the rme clauses for each function to make statscpp i simply copy and pasted statsh and added the code for each function should we removed the same rme clauses from statscpp my code works according to my tests and the autograder
  label = statistics, content = if the way we prefer to format things like functions is different than that in the given code should we change the given codes style to make it all consistent or should it be left the way it was given i am specifically referring to statstestscpp for example if i prefer to format a function like int main code other code return 0 but the given code is in this style int main code other code return 0
  label = statistics, content = hi i know this question has been kind of asked before but i never really got a clear answer in the project specs when computing stats for the 678910 data the standard deviation is rounded to 5 decimal places but for the romance data the standard deviation has 6 decimal places previous questions asked for the sake of testing but from a perspective of meeting the autograders requirements should we round to 5 or 6 decimal places or not at all just wondering since there seems to be an inconsistency in the specs
  label = statistics, content = the autograder gave me this output when testing the main i have no idea what the problem is in its second test case
  label = statistics, content = hi my visual studios crashed so i am attempting to run my statstestscpp in caen in the same way you run main main however whenever i try to do this i get a message saying i do not have permission to do that i would really like to test my code a bit more before submitting so i am kind of worried any ideas on what i should do
  label = statistics, content = if we are already using a separate header file to declare function for example statsh for statscpp do we need to declare the functions at the top of the cpp file as well
  label = statistics, content = im a bit confused on the vector of a vector in the summarize function lets say we have resultij should i correspond to the outer value and j the inner value in other words should i be the vector inside the outer vector and j the element within that vector lets say we have the following data set 111122335 our vector of vectors would be 14 22 32 51 so result11 would 2 result30 would 5 etc is this correct i think i have it down but i just want to clarify thank you
  label = statistics, content = hello there i used the summarize function to implement my mode function and didnt use a nested loop the function works just as fine will i lose points for not following the hint use a nested loop thanks very much
  label = statistics, content = ive transferred my code through mfile to caen where i am accessing it through vnc on my laptop how do i go about running my program now very confused thanks
  label = statistics, content = is there an easy way to get the line at which your program crashed i know you can step through using gdb but is there a setting you can toggle in order to get more information on the crash directly from running it
  label = statistics, content = everytime i submit my project to autograder it discards the statstestcpp what might the problem be
  label = statistics, content = is the project due tonight at midnight tomorrow at midnight or a different time
  label = statistics, content = when i try to compile my code on linux i get an error message every time i use vsize here is an example statscpp10624 error ‘class stdvector’ has no member named ‘size’ for int i 0 i vsize i i also get an error message when i use the sort function for various reasons statscpp1028 note candidate expects 3 arguments 1 provided sortv statscpp1028 note candidate expects 2 arguments 1 provided sortv statscpp1028 error no matching function for call to ‘sortstdvector’ sortv what do these messages mean and why am i getting multiple errors for the same piece of code
  label = statistics, content = i am trying to writedebug the summarize function but i cannot pass my data in from the test file the v vector parameter is empty i checked that the data that i pass in from the test is in the vector by writing a for loop to cout the vector and its there but when i write the same cout statement in summarize even if its the first line of code i receive a segmentation fault because the vector is empty is there a special way to properly callpass data into this function since its a vector of vectors i have called this function in the exact same way that i have called the other ones but the vector doesnt seem to replace the v vector like it does in the other functions
  label = statistics, content = when i run the real data it only prints 1 3009 and it does not print 2 993 i tried test cases for the summarize function with a bunch of 1s and 2s it prints out the summary correctly i do not know what the issue is here could anyone please help me
  label = statistics, content = is there a delay when you saveupload through stfp on sublime because sometimes i run run my code find an error change my code and saveupload then rerun the program and it runs the old code
  label = statistics, content = im getting this output when i use sdiff in caen and i cant figure out why when i run my code without using main maintestin it looks normal but when i input from maintestin it looks like this ive tried adding newlines in different places by editing in the terminal using nano maincpp but when i do that and run maincpp again i get the exact same error messages from diff maintestout maintestoutcorrect 1c13 and 7a10 and the sdiff output looks exactly the same does this mean im just editing in the wrong place and not doing what i should be doing to correctly fix my code
  label = statistics, content = should i download the real data file to my computer and then upload it to mfile
  label = statistics, content = while testing my code i found that when i include stdc11 i receive a segmentation fault error in p1librarycpp however there is no error and my code compiles properly when i leave out stdc11 and just type the following g wall werror pedantic o1 maincpp statscpp p1librarycpp o main im confused why this is happening as i did not modify p1librarycpp thanks
  label = statistics, content = do we create maintestin file in mfile
  label = statistics, content = can anybody tell me what should i do
  label = statistics, content = for some reason my statscpp file on the caen computers has been reverted meaning that all the changes i made to it in the past few hours have gone is there any reason this would happen and more importantly any way for me to access the files history so i can change it back to the version with the changes i made
  label = statistics, content = g ­wall ­werror ­pedantic ­o1 ­­stdc11 maincpp statscpp p1librarycpp ­o statspublictest when i try to compile on caen over putty with this statement i get the error cc1plus error unrecognized command line option stdc11 cc1plus error unrecognized command line option stdc11 cc1plus error unrecognized command line option stdc11
  label = statistics, content = in the maintestoutcorrect the output begins enter a filename enter a column name reading column b from maintestdatatsv whereas mine begins enter a filename maintestdatatsv enter a column name b reading column b from maintestdatatsv should our output not show what the user entered and if so how do we go about doing so im confused because this is the only output difference i can see on diff checker thanks
  label = statistics, content = when i run statspublictest through terminal everything works just fine however when i submit to the autograder it says the compilation failed whats going on
  label = statistics, content = if i wrote the mode function before the summarize function and didnt realize i couldve used the summarize function in mode would i get points off if i didnt clean my mode function up by now implementing summarize into it thanks
  label = statistics, content = so im trying to test my code in xcode by reading from maintestdatatsv i saved maintestdatatsv to my project folder and im pretty sure my working directory is my project folder but every time i run my program it says theres an error reading from the file i went to office hours and they said my code was right and they werent sure why it wast reading please help
  label = statistics, content = should my code be able to differentiate between values of very small difference like 1000001 vs 1000002 should these values be considered different numbers in the summarize function and in the mode function for example even though the full number does not get printed
  label = statistics, content = should we write comment on the code of project 1 and should we pay very serious attention to the style of the code such as spaces like all the things we have done for 183 projects
  label = statistics, content = i am currently working in linux and have uploaded my files to mifles however when i try to access my eecs280 directory using cd pathto it states there is no such directory found i am confused because when i type ls the eecs 280 folder appears any advice
  label = statistics, content = i cant seem to figure out the difference in my code and the correct output
  label = statistics, content = is this because in my directory i have maintestin txt i tried to upload the file without the txt but it adds it anyways
  label = statistics, content = im not entirely sure why my project is not compiling in the autograder i am able to run my maincpp and statstestscpp files on caen but when i submit my files to the autograder i receive this message
  label = statistics, content = in maintestoutcorrect it shows that there is a newline
  label = statistics, content = i tried to compile and run maincpp in xcode but it showed a warning no rule to process file and an error message linker command failed with exit code 1use v to see invocation what should i do to fix it
  label = statistics, content = i declared a vector in maincpp like this vectordouble initialvector but xcode gave an error message saying expected for functionstyle cast or type construction is there something wrong with the way i declare the vector
  label = statistics, content = currently i have my test suite full of asserts if the auto grader runs this and finds a problem with my first test function assert will make the program stop if the program stops without any of the other test functions being called how will it be able to grade my other test functions
  label = statistics, content = do we need to write comments for statstestscpp
  label = statistics, content = is the final submitting through autograder i know u can submit multiple times but was wondering if the final submit ion is through the autograder
  label = statistics, content = i got 44 on the autograder but i cant seem to figure out how to run my files on linux it keeps coming up as errors like unable to find filedirectory pllibrarycpp even though when i check with ls it says the file is there are my files okay to just submit like that since it works on autograder thanks
  label = statistics, content = is the use of assert required for functions like summarize its slightly easier for me to create vectors and add things to it and viewing the output instead of creating vectors of vectors to compare every time
  label = statistics, content = do we have to put all of our functions that are in statscpp in statstest or this is an option for you to test if your program runs good
  label = statistics, content = my mode function seems to work for all of my test cases but when i test my code with the given data sets it never completes could the reason for this be the nested for loops the data sets have thousands of numbers and then the for loops must compare every element together is there a better way to be doing this thanks
  label = statistics, content = my code looks like this in statscpp void summarizestdvectordouble v and i get this error statscpp226 error functions that differ only in their return type cannot be overloaded void summarizestdvectordouble v statsh3035 note previous declaration is here stdvectorstdvectordouble summarizestdvectordouble v how can i get around this error
  label = statistics, content = are we allowed to alter the stats functions by adding inputs to them
  label = statistics, content = may we use a function that we created if we want to create another function for example if i want to write the summarize function is it okay to call the count function
  label = statistics, content = when i use kompare on terminal in caen i get error the files are identical what is wrong
  label = statistics, content = hi im getting the segmentation fault 11 while using extractcolumn function could anyone give a hint about how to solve this thanks
  label = statistics, content = please let me know how to be graded for the remaining 3 points on autograder thanks
  label = statistics, content = hello for our summarize function the argument stdvectorstdvectordouble summarizestdvectordouble v do we miss before v
  label = statistics, content = is it okay if in statscpp you comment on what you are doing within each function i know in the style guidelines it says to include rmes above the function prototypes but do we comment inside each function as well thanks
  label = statistics, content = whats the style policy regarding magic numbers in this course the style guide lines didnt say
  label = statistics, content = i have successfully compiled and ran all my files in caen linux with no problems but for some reason when i submit to the autograder i get a 0 much of it seems to do with the sort function but i do not understand why below is an example of the error message
  label = statistics, content = so i read over the style guide for project 1 and i couldnt find anything that said if they wanted your name unique name project number class section etc in the files we submit for the projects or labs im guessing we should have our names on them anything else
  label = statistics, content = from my understanding were supposed to use the extract column function that was given to us to open the file after we ask the user which file and column they want but i keep getting an error opening maintestdatatsv message do we open the file outside the extract column function or
  label = statistics, content = when writing the test suite i often use absexpectedvalue givenvalue threshold to see if doubles are equal causes precision issues this works on my machine and no warnings are thrown but when i submit to the autograder i get the following error call of overloaded absdouble is ambiguous and so my test fails the autograder because it doesnt compile any ideas
  label = statistics, content = i tried calling the function by cout summarize data n i keep getting error as attached in pic any suggestion
  label = statistics, content = are we only to do the 0255075100 th percentiles are those numbers we should be passing into the percentile function when we call it or are we supposed to write it so the user inputs the percentile they want to find
  label = statistics, content = for the test cases for the percentile function should we test unusual percentiles like p047226352 or should we limit our test p to 2 decimal places
  label = statistics, content = hello i have done most part of coding but i was still confused about how to compile it on caen environment in my understanding is it right that we do coding on our own computer and then we should upload it to caen linux environment and using g to compile as we did for lab01 q1 how can i upload the code from my local computer to caen q2 for autograder can i submit my local cpp file or what i should do
  label = statistics, content = hi i got into eecs 280 from 280x and missed the lectures however i finished and submitted project 1 and last night i was going through the slides for lecture two and noticed i did my checking for the required a little different i just wanted to know if my way was a good way of doing it or not and i should go change them i didnt do the bad way of trying to fix the problem instead of using asserts in that part i said something like cout error and explained in the cout why the error was being called and returned a negative 1 is this bad practice because the compilation doesnt stop at the assert or is this good because you will see where all your errors are and why the first compilation and if it is good then do i need to write a modifies for all the functions because it could modify by writing cout if there is an error thanks in advance
  label = statistics, content = for the statstestcpp are we writing the test case for our own codes or for the special codes that you provide to find the bugslike the test cases for eecs 183 im wondering if i need to write more test cases
  label = statistics, content = how do we make our own tsv file for testing i tried making one by exporting from excel and also by just making one in a text editor by using tabs neither work as the extractcolumn function results in a vector without any elements
  label = statistics, content = does anyone know what this means
  label = statistics, content = are we guaranteed the input vector will have at least one value
  label = statistics, content = when i use sdiff to display differences between my output and the correct output in maintestoutcorrect everything looks the same however the feedback from using sdiff tells me that there is an issue with every line i tried using sdiff with ignoretrailingspace and doing this sdiff didnt denote any errors in my code i figured that this meant there was an issue with spaces at the end of every line of my code i cant figure out where any extra or missing trailing spaces are
  label = statistics, content = when i try to run my test cases for my stats functions i type exactly the same thing into the command line that our project one guide tells us to but i seem to get an error for every one of my functions in statscpp they all have errors like error no match for call to stdvectordouble int and sometimes i get errors such as control reaches end of non void function i dont understand what these errors mean
  label = statistics, content = just to clarify if we cannot modify the header file then we will need to write own helper function in maincpp since we include statsh and the function is not written there it wont be found in maincpp am i correct in assuming it needs to be declared before int main and then implemented after also do we need to write tests for our helper functions in statstestscpp thank you
  label = statistics, content = for the stdev are we allowed to assume that the stdev is to rounded to 4 decimal places if the stdev is 1956826 then can i get a value like 195683 so then can i assert that the stdev is 195683 in my test cases
  label = statistics, content = im having trouble understanding this error any suggestions on how to approach it
  label = statistics, content = in the rmes for the functions in statsh there are no modifies clauses does that mean that we should not use sortv in any of those functions since the sort functions takes v in by reference wouldnt it be modifying v is it better to set a local vector variable equal to v and then sort that vector so as to not modify any nonlocal elements
  label = statistics, content = i went to httpwwwicpsrumicheduicpsrwebicpsrstudies30103q30103 and cant find the correct download link when i extract i cant find the icpsr30103ds000130103­0001­datatsv file
  label = statistics, content = in the style guideline theres some spec documentation unless they are extremely short put comments on their own line what does this mean i think it should be the opposite situation like when comments are extremely short they are on their own line for longer comments we should start a new line for example int a 0 a represents apple long comments int a 0 is my understanding right and the guideline wrong
  label = statistics, content = i am trying to upload my files to my caen account so i can make it sure it compiles in the autograder but when i try to save them in sublime i get the message sublime sfpt folder not found for clarification i went through the steps in the pinned note to set up the sublimecaen account upload on save are there any ideas on how to fix this
  label = statistics, content = i want to just clarify that the standard deviation of just one element in a vector is null ie undefined and not 0
  label = statistics, content = ive ran my main with both the maintests and the data from the actual relationship study and have gotten the same output as in the project specification yet when i submit to the autograder i get an output mismatch and only get 1 point for the maintest section ive been trying to figure out why and have gotten to here by using the sdiff function but just cannot determine the mismatch ive been running on g through sublime sftp the whole time if that helps
  label = statistics, content = i tested my data through the g compiler and got the exact same output as the sample one given in the project specifications but im getting return code correct output incorrect score for maintest total 12 i dont even know how to start to debug this
  label = statistics, content = just for clarification if i test a vector that contains the data values used in the spec 6 7 8 9 10 should the output of my percentile function for the 0th 25th etc be 6 7 8 9 and 10 respectively
  label = statistics, content = when you test our solutions through the autograder do you run the tests on maincpp or do you have your own written maincpp that you will call our functions from
  label = statistics, content = so a gsi told me to do this but get confirmation for my standard deviation checking i have it set to check my calculated standard deviation to what it should be in my test case to 0001 accuracy my equation basically is assertexpected calculated 0001 is this okay to use for this project
  label = statistics, content = what does the sort function do specifically the rme is very ambiguous
  label = statistics, content = when i attempt to set a breakpoint using gdb i get an error i type gdb statstests break 10 and it gives me the message no symbol table is loaded use the file command im guessing i am missing a step somewhere
  label = statistics, content = hi i wanna clarify where the final submission of the project gonna be my understanding is the latest submission on the autograder will be taken as the final submission is this the right understanding is the autograder a right place to submit project files thanks
  label = statistics, content = i have implemented the percentile function according to the formula on wikipedia and and checking it with excel however when i give it arrays with negative numbers the formula and excel seem to differ checking by hand gives the same answer my program does does excel do something special with negative numbers and if so do we need to account for that
  label = statistics, content = so i understand how to use the helper functions provided to read in information from the tsv file but im still rather confused on how were supposed to read in the file name from the maintestintxt file without the use of fstream
  label = statistics, content = i wrote assertsummarizedata 10 1 to test summarize function but xcode gave an error message that too many arguments provided to functionlike macro invocation how should i fix it
  label = statistics, content = if v is a vector of doubles does vsize return an integer or a double
  label = statistics, content = in the first summarize function is the type of frequency in the returned vector integer
  label = statistics, content = i have a variable named sum which has a value of 135681 i have a line of code that prints out the value of sum i have an assertion that tests whether sum is equal to 135681 i get the following output the sum is equal to 135681 statstests statstestscpp195 void testsum assertion sumdata 135681 failed why is this happening
  label = statistics, content = i went to the autograder link provided in the important links file signed into my umich account and now its telling me that im simply not enrolled in the course is this just some sort of glitch
  label = statistics, content = when i try to use the provided sort function in any of my statscpp functions by including p1libraryh at the top the compiler throws an error saying that there are multiple definitions for sort i also include that header file in my maincpp file if i dont use sort in any of the statscpp functions i have to sort it in my main function which means my functions wont work if passed an unsorted vector which also means id have to manually sort my test case vectors since including p1libraryh into statstestscpp throws the same error is that the only solution or is there a way around it
  label = statistics, content = are we supposed to sort the vector before calculating the percentile p of the numbers in the vector in percentile function
  label = statistics, content = duplicate symbol main in what does this mean
  label = statistics, content = could somebody help explain why the following error message comes up when i try to use the ifstream function aggregate stdifstream myfile had incomplete type and cannot be defined
  label = statistics, content = how do you delete a specific element out of a vector for example if i have a vector 012 how would i delete 1
  label = statistics, content = should our test cases in statstest be able to work for a vector of vectors for example the count function if we have a vector 0 1 2 3 4 5 6 1 is this input allowed for the count function 2 should the count be 4 of elements or 7 of s
  label = statistics, content = should we initialize vectors by using the pushback function or
  label = statistics, content = when i run the autograder under maintest it says return code incorrect and output correct what is return code and if i get the output correct what else is needed
  label = statistics, content = are we allowed to call other functions within functions for example im thinking of calling my count and sum functions in my mean function i swore i saw this asked somewhere else on here but i cant find it for the life of me
  label = statistics, content = im still confused as to why i cant always compile things in terminal but when i go through caen it works for example i kept getting linker errors when trying to run my test cases in terminal but when i did so through caen it was fine thanks
  label = statistics, content = the only difference between my output and the correct output is that there is an extra space before the correct percentile titles however when i add in spaces into my main function before the cout of the titles nothing is changed in the new output is there something i am doing wrong
  label = statistics, content = hello im having issues downloading the online data it keeps asking me to log onsign up thanks
  label = statistics, content = does a 44 on the autograder mean our program is done
  label = statistics, content = so if i pass the autograder does that mean my code compiles in caen or do i need to check if it compiles in caen separately through putty
  label = statistics, content = so i think i coded summarize im not familiar with vectors i was able to call most of the functions and worked how do u call the function summarize to get it working i tried in a if loop cout summarize vectorcolumn i im unable to call i understand it is a vector of vectors any suggestion help thanks
  label = statistics, content = is it bad style to declare and initialize a variable to for example a vector element on the same line ie double myvar v0
  label = statistics, content = so ive finished writing the program and was testing the code in the auto grader and found that the output section of main did not return as correct i checked the diff checker for my output compared to the output from the correct file and it showed no output meaning that there was no difference between the two outputs what am i doing wrong
  label = statistics, content = how would i call the mean function that i wrote in order to use it in another function later in statscpp i am attempting to write double mean meanv but i am getting an error saying mean cannot be used as a function
  label = statistics, content = hello i know that since we cant divide by 0 its crucial that the vector passed in is not empty and i know how to check if its not empty using count the part where im struggling is what exactly to do if its not empty do we exit the function by returning some arbitrary number or something else
  label = statistics, content = when i implement the mode and summarize functions i see myself comparing two values to see if they are equal since were comparing doubles and rounding errors could affect output of the operator should we check to see if the difference is within a small range instead or are the values precise enough that the operator will be sufficient
  label = statistics, content = i include vector however the autograder told me statscpp2612 error class stdvectorstdvectordouble has no member named pushback summarypushbackvpos1 am i not using pushback properly
  label = statistics, content = okay for our style grades is it okay to have comments stacked on top of each other to explain a for loop with different formulas inside such as this will calculate blah takes variable and sets as index sets new variable and sets it to old variable for loop and also my program printed out everything except for the summary no matter what i do i always get an error when i use cout with a vector i tried for loops i tried using the extractcolumn function as a parameter for summarize i tried to push back extractcolumns data into a new vector of doubles and using that vector as the parameter for summarize i even tried to print the vectors rows and columns such as vector using a for loop no matter what i could think of the summary will not print how else could i go about this thank you
  label = statistics, content = when i ran the diff checker i got a output with the difference bash42 diff maintestout maintestoutcorrect 9a10 what does this mean
  label = statistics, content = if i make a test case for summarize how can i use assert for this case and compare my vector of vectors with their test values to the summarize function
  label = statistics, content = i am confused between the project 1 specs and the percentiles rme in statsh from what i gathered in the rme we are supposed to use the microsoft excel version to calculate which make sense however in the project 1 specs in the section where it shows how to read in data from the romance page all of the percentiles are 0 and 1 or 1 and 2 to my understanding the true percentiles in these cases should be decimals between the two numbers for example the 25th percentile of the data ranging from 01 should be somewhere around 25 depending on the actual data but the answer shows the 25th percentile being 0 the test data provided is unclear because the 5 data points perfectly correspond with the true percentile markers so for the percentiles are we supposed to round down to the closest actual value from the data or are we supposed to stay true to the excel definition of percentiles thanks
  label = statistics, content = i still dont have the eecs280 site on tools so i have to use the second link provided on the google drive to log in autograder after i submitted once on autograder i want to submit the second time but i couldnt log in what is the problem
  label = exam, content = i filled out the final exam conflict form and havent heard anything back yet i was wondering when i should expect to know when my final will be
  label = statistics, content = if u submit to the auto grader is it final or is it to check ur work
  label = statistics, content = after the user inputs the file and column names can i then define a vector of doubles equal to the extractcolumn function and then use that vector as the parameter for my stats functions
  label = statistics, content = im using putty to compile and run the code so when i do g maincpp i get undefined reference to extractcolumn so how do i combine or load the files through putty thanks
  label = statistics, content = it is it safe to assume that for this project none of the data we will receive contains negative values
  label = statistics, content = when i try to run the stats public test i find that as long as i test functions including the sort function it cannot compile the error message is 1statsobj error lnk2019 unresolved external symbol void cdecl sortclass stdvectordoubleclass stdallocatordouble sortyaxaavvectornvallocatornstdstdz referenced in function double cdecl maxclass stdvectordoubleclass stdallocatordouble maxyanvvectornvallocatornstdstdz ive include p1libararyh and call the function this way sortv whats wrong with this
  label = statistics, content = im confused about the grading for projects in eecs 280 i took eecs 183 last semester and in that class if we achieve full points in the autograder we achieve full points for the project excluding the style points which will be graded manually afterwards another piazza post here clarified that the autograder for eecs 280 only runs statspublictestcpp which were not supposed to change after the deadline the staff will run the full test suite on our code and our grade will be based on that so if we achieve full points in the autograder it doesnt really mean anything other than our code successfully compiled what is the importance of the statstestcpp we wrote other than for personal testing will it also go through further autograding to test how well it can expose bugs how is style graded are we expected to comment our code descriptively like in 183 and what are the points allocation between the core part of our program and the style
  label = statistics, content = i just finished my statscpp i did includestatscpp in my maincpp and tried to compile but i got an error like this for every function tmpccb4qjdjo in function countstdvectordouble stdallocatordouble statscpptext0x0 multiple definition of countstdvectordouble stdallocatordouble any ideas thanks
  label = statistics, content = i thought we were supposed to get an email from the autograder after we submitis this not the case i submitted to the autograder yesterday and havent received an email in my inbox or in my spam folder
  label = statistics, content = so i am using putty and mfiles to compile my code in caen i have uploaded all cpp files into mfiles but when we get to the wget url o tar xzk i dont know what url to put
  label = statistics, content = will this autograder ignore white space or will differences in whitespace deduct points
  label = statistics, content = what is the best way to iterate through a vector and access its elements
  label = statistics, content = on the wikipedia percentile page there are two examples for how to compute a percentile using the microsoft excel method are we allowed to write test cases that use the same data sets and compute the same percentiles as the wikipedia examples or would that be a violation of the honor code
  label = statistics, content = i made a printsummary function to print the return of summarize is think going to cause problems form me when i submit to the autograder
  label = statistics, content = i am trying to submit to the autograder for p1 and i keep getting this message oops you got an error message error loading group status internal server error is this error likely temporary or is it possible somethings gone wrong on my side
  label = statistics, content = are we allowed to modify functions that were given to us more specifically are we allowed to add a parameter or two that a function takes in
  label = statistics, content = my code works properly when i tested in cygwin linux environment are there any differences from cygwins linux environment and the one in caen computers that i should be concerned about different commands in the command prompt andor compilation differencesproblems i am only wondering because they seem so similar and did not pose a problem for me in engineering 101
  label = statistics, content = im trying to compile my code for statscpp but keep receiving this error that relates to my use of the sort function ive included p1libraryh in statscpp so im not sure why this is happening usrlibgccx8664redhatlinux485lib64crt1o in function start text0x20 undefined reference to main tmpccbhb2hbo in function summarizestdvectordouble stdallocatordouble homeajglasseecs280project1statscpp25 undefined reference to sortstdvectordouble stdallocatordouble tmpccbhb2hbo in function medianstdvectordouble stdallocatordouble homeajglasseecs280project1statscpp104 undefined reference to sortstdvectordouble stdallocatordouble
  label = statistics, content = i removed the makefile but am still getting certain errors
  label = statistics, content = hi i have an error from the autograder for maincpp that says maintest compilation success compilation standard output compilation error output return code correct output incorrect score for maintest total 12 but when i run the diff checker on my own terminal there is no difference since nothing prints after the line diff maintestout maintestoutcorrect any idea on what my issue could be ive tested all the functions themselves as well with no problem
  label = statistics, content = so in eecs 183 we were required to have a certain format at the top of each file that we turned in to the autograder this included listing your name your unique name and a short description of the file is this a requirement in eecs 280 as well i ask because the style guideline given on the google drive does not mention this at all if it is a requirement in your answer can you give an example of what that would look like as i do not recall the exact format that was required thanks
  label = statistics, content = will there be any additional office hours saturday or sunday or even monday im really struggling with the project since its been a semester since i took eecs 183 and the tutoring times do not work for me thanks
  label = statistics, content = this occurs with fresh starter files what can i do to solve this
  label = statistics, content = why dont you just include that information in the cpp file
  label = statistics, content = i created the statscpp file source filesadd new item but for some reason it says it cannot open the source files statsh and p1libraryh when i type in all the includes that we are allowed to use off the spec any ideas as to why this is or did i create my statscpp file wrong
  label = statistics, content = when i complied the program using make file it showed this error how can i fix it
  label = statistics, content = im getting pages of errors like this when im trying to compile my code through caen and through my terminal any idea whats going on i have not edited any of the files given to us usrincludec482bitsstlvectorh in instantiation of ‘ void stdvectortp allocmdefaultinitializestdvectortp allocsizetype with tp double alloc int stdvectortp allocsizetype long unsigned int ’ usrincludec482bitsstlvectorh27134 required from ‘ stdvectortp allocvectorstdvectortp allocsizetype const allocatortype with tp double alloc int stdvectortp allocsizetype long unsigned int stdvectortp allocallocatortype int ’ statscpp2841 required from here usrincludec482bitsstlvectorh122528 error ‘ struct stdvectorbasedouble intvectorimpl ’ has no member named ‘ mstart ’ mgettpallocator usrincludec482bitsstlvectorh122527 error ‘ mgettpallocator ’ was not declared in this scope mgettpallocator usrincludec482bitsstlvectorh122626 error ‘ struct stdvectorbasedouble intvectorimpl ’ has no member named ‘ mendofstorage ’ thismimplmfinish thismimplmendofstorage usrincludec482bitsstlvectorh122626 error ‘ struct stdvectorbasedouble intvectorimpl ’ has no member named ‘ mfinish ’ usrincludec482bitsstlvectorh in instantiation of ‘ stdvectortp allocsizetype stdvectortp allocsize const with tp double alloc int stdvectortp allocsizetype long unsigned int ’ usrincludec482bitsstlvectorh66624 required from ‘ void stdvectortp allocresizestdvectortp allocsizetype with tp double alloc int stdvectortp allocsizetype long unsigned int ’ statscpp3915 required from here usrincludec482bitsstlvectorh64650 error ‘ const struct stdvectorbasedouble intvectorimpl ’ has no member named ‘ mstart ’ return sizetypethismimplmfinish thismimplmstart usrincludec482bitsstlvectorh64650 error ‘ const struct stdvectorbasedouble intvectorimpl ’ has no member named ‘ mfinish ’ in file included from usrincludec482vector690 from statsh11 from statscpp1 usrincludec482bitsvectortcc in instantiation of ‘ void stdvectortp allocmdefaultappendstdvectortp allocsizetype with tp double alloc int stdvectortp allocsizetype long unsigned int ’ usrincludec482bitsstlvectorh66741 required from ‘ void stdvectortp allocresizestdvectortp allocsizetype with tp double alloc int stdvectortp allocsizetype long unsigned int ’ statscpp3915 required from here usrincludec482bitsvectortcc5384 error ‘ struct stdvectorbasedouble intvectorimpl ’ has no member named ‘ mfinish ’ thismimplmfinish n usrincludec482bitsvectortcc5384 error ‘ struct stdvectorbasedouble intvectorimpl ’ has no member named ‘ mendofstorage ’ usrincludec482bitsvectortcc54139 error ‘ struct stdvectorbasedouble intvectorimpl ’ has no member named ‘ mfinish ’ n mgettpallocator usrincludec482bitsvectortcc54138 error ‘ mgettpallocator ’ was not declared in this scope n mgettpallocator usrincludec482bitsvectortcc54232 error ‘ struct stdvectorbasedouble intvectorimpl ’ has no member named ‘ mfinish ’ thismimplmfinish n usrincludec482bitsvectortcc55642 error ‘ struct stdvectorbasedouble intvectorimpl ’ has no member named ‘ mstart ’ newstart mgettpallocator usrincludec482bitsvectortcc55642 error ‘ struct stdvectorbasedouble intvectorimpl ’ has no member named ‘ mfinish ’ usrincludec482bitsvectortcc55641 error ‘ mgettpallocator ’ was not declared in this scope newstart mgettpallocator usrincludec482bitsvectortcc56425 error ‘ mgettpallocator ’ was not declared in this scope mgettpallocator usrincludec482bitsvectortcc56537 error ‘ mdeallocate ’ was not declared in this scope mdeallocatenewstart len usrincludec482bitsvectortcc56929 error ‘ struct stdvectorbasedouble intvectorimpl ’ has no member named ‘ mstart ’ mgettpallocator usrincludec482bitsvectortcc56929 error ‘ struct stdvectorbasedouble intvectorimpl ’ has no member named ‘ mfinish ’ usrincludec482bitsvectortcc56928 error ‘ mgettpallocator ’ was not declared in this scope mgettpallocator usrincludec482bitsvectortcc57232 error ‘ struct stdvectorbasedouble intvectorimpl ’ has no member named ‘ mstart ’ thismimplmstart usrincludec482bitsvectortcc5728 error ‘ struct stdvectorbasedouble intvectorimpl ’ has no member named ‘ mstart ’ thismimplmstart usrincludec482bitsvectortcc5728 error ‘ struct stdvectorbasedouble intvectorimpl ’ has no member named ‘ mendofstorage ’ usrincludec482bitsvectortcc57232 error ‘ mdeallocate ’ was not declared in this scope thismimplmstart usrincludec482bitsvectortcc57331 error ‘ struct stdvectorbasedouble intvectorimpl ’ has no member named ‘ mstart ’ thismimplmstart newstart usrincludec482bitsvectortcc57432 error ‘ struct stdvectorbasedouble intvectorimpl ’ has no member named ‘ mfinish ’ thismimplmfinish newfinish usrincludec482bitsvectortcc57540 error ‘ struct stdvectorbasedouble intvectorimpl ’ has no member named ‘ mendofstorage ’ thismimplmendofstorage newstart len
  label = statistics, content = when i compiled my program on xcode it showed this bug linker command failed with exit code 1 use v to see invocation how can i fix it
  label = statistics, content = lets say im adding up the components of a vector and storing it in a variable called total using a for or while loop if total is declared outside the loop then i sum things into total in the loop then would i be able to return this total value outside of the loop thanks
  label = statistics, content = im confused about whenwhy we need to use std
  label = statistics, content = ive read many piazza posts but still dont fully understand this function and have a few questions extractcolumn isnt something we want to use inside this function correct does the function return a vector of vectors it seems that the inner vectors contain a pair of data how does one store 2 points of data inside a vector it seems that vectorpushbackvalue frequency doesnt work so im assuming there is another way to store the value and frequency as a vector and then pushback that vector into another vector is what ive described correct if so how
  label = statistics, content = ive been working with a file named statstestcpp for my statscpp testing but have an incorrect statstestscpp file saved in caen alongside it when i try to use makefiles they instantly use the statstests version i renamed my statstest to the plural in my computer and resaved to caen but it still seems to give the makefile trouble is there a command to remove a file in the caen directory
  label = statistics, content = should the median function be calling sort because you could get completely different values if it shouldnt
  label = statistics, content = hints for the summarize function algorithm please ive been trying for hours how many for nested loops are we supposed to be using
  label = statistics, content = i understand the project description states that we must write at least one test case for each function but will we lose style points if we only write exactly one test case for every function for example the statsh file gives four examples of possible test cases in the description of mode function but can we simply write one test case for the mode function for the purpose of this assignment
  label = statistics, content = initially only 4 libraries are included in the statstestcpp may i add all of the allowed libraries like cmath to statstestcpp or the initial 4 are the only ones im allowed to use in statstestcpp thank you
  label = statistics, content = the spec makes it very clear we should have assert in the test case however in lecture we learned that whenever there is a requires from rme we should include an assert as the first thing in that function so it can fail or we can salvage if it would have otherwise failed it seems a bit repetitive to have test cases and the actual function with assert however in class we learned to have it in the function should we have assert in the test cases and in each function with a requires it would make sense on the basis that the test case uses assert for specific cases whereas the assert in the function would be to fail given an empty vector or something similar
  label = statistics, content = my program compiles and runs correctly on xcode but when i submitted to the autograder i received this error statscpp3336 error comparison between signed and unsigned integer expressions werrorsigncompare for int j 0 j vsize j any tips
  label = statistics, content = hello ive been using those flags whenever i compile files for the project and they have not really been showing me anything extra i did many test cases on my own to assure proper function of my project when i entered to the autograder it pointed out a few errors that really didnt actually affect my programs performance but mattered to wall werror pedantic o1 why wasnt i previously notified of these errors when compiling in the terminal thank you in advance
  label = statistics, content = what is the significance of the autograder as in if i got a 44 does that just mean my code compiles correctly or does that mean i got everything correct
  label = statistics, content = i have started to use the ssh shell for my mac instead of testing through a caen computer and i dont know exactly what is being tested for example as a test i deleted the maincpp file from the desktop on my caen through mfile yet when i run the main through ssh the program still works how could this be possible
  label = statistics, content = how exactly do we sign up for office hours
  label = statistics, content = when calling the percentile function in main can we use 025 050 075 and 1 as just regular numbers or should i make them global constants
  label = statistics, content = is using preprocessor directives to simplify repetitive code ex setting up unit test function printing the name of the function printing pass at the end of the test function allowed
  label = statistics, content = i dont understand this autograder the announcement linked to its just a webpage with nothing to it unless theres something im missing how do you use it in engr 101 if i remember correctly we just compiled the autograder in the same directory as our cpp files and it generated a text file that detailed how you did is this something similar or completely different
  label = statistics, content = how do you import the data from the files if were not allowed to use include fstream as a library
  label = statistics, content = where is the information for the vector coming from when i am writing summarize i understand that i am supposed to use the data in maintestdatatsv but am i reading that data in in my summarize function or how do i access this data basically i am just confused on how to create the vector of vectors and what exactly p1libraryh and p1librarycpp are giving me where am i supposed to use these
  label = statistics, content = for other functions like mean for example it is very clear the function outputs mean i would return whatever i set my mean to however i am not sure how to output the summarize function what do i return and how do i output the vector of vectors such that my function returns vector of vectors my vector of vectors is called final and i am not sure how to send its value out of the function thanks
  label = statistics, content = what should i write on the right hand of the equation assertsummarizedata if my vector is 1 2 3 then what should i write in my code to do the test correctly i knew i can always check diff but i just wondering how exactly can i use assert to do the test and how autograder would grade on this
  label = statistics, content = when i run the program in main function it gives me this i am not sure whats going on
  label = statistics, content = 
  label = statistics, content = can we edit the testsumsmalldataset function we are given either to change what it prints or even to add tochange the existing test inside it this was a hard no in 183 wondering if theres more leeway now since its a test function and wont normally be called by the program if we can can we also edit the declaration if we carry the change through just to make the name better match any changes to the test
  label = statistics, content = will we receive an email announcement from c tools when the autograder is ready or will it just be posted on piazza
  label = statistics, content = i have helper functions in main to clean up the code where should i put the rmes next to the function declarations or definitions
  label = statistics, content = i am not sure what i am doing wrong when i try running statstests it prints out a long list of errors
  label = statistics, content = i added maintestdatatsv to visual studio source files add existing file but when i run the code it cant find it any ideas
  label = statistics, content = there has been some confusion about the rme for the percentile function in statisticscpp and statisticsh here is what you are supposed to implement
  label = statistics, content = while using maintestdatatsv my mean function correctly outputs an 8 most of the time however occasionally it incorrectly outputs an 82 my mean function uses the count and sum and they output correct values even when the mean function is not i have tried casting the return value of count as a double i have also tried not using the count function and instead using the size function neither of these resolve the issue has anyone ever experienced this before and could it be a quirk of xcode rather than my code i have not tried testing in linux yet thanks
  label = statistics, content = while i understand how the five percentiles work for a data set of five like 25689 0th percentile 2 25th percentile 5 50th percentile 6 75th percentile 8 100th percentile 9 i am confused about how to calculate the 0th and 100th percentiles when the data set contains a number of inputs other than five like 1258 0th percentile 25th percentile 125 50th percentile 35 75th percentile 725 100th percentile to obtain the 25th 50th and 75th percentiles above i used the nist method also known as the microsoft excel method however im not sure how to apply this to 0th or 100th percentile because the equation n1p yields a value that doesnt make sense 0th percentile p 0 n 4 n1p 0 therefore we must find the 0th element of the set 1258 100th percentile p 1 n 4 n1p 5 therefore we must find the 5th element of the set 1258 since the nist method uses 14 to number these elements i have no idea what it means to have a 0th element or a 5th element could someone please explain this
  label = statistics, content = just wanted to clarify whether the values that our stats functions return should be printed in main or in the functions themselves thanks
  label = statistics, content = for the part of the project that requires us to take in a file name to be sorted through are we able to assume that the user will always enter tsv at the end of the file name or do we have to append that after extracting the input string
  label = statistics, content = do we need to comment in our files since we already have the rem specifications in statsh
  label = statistics, content = what does this error mean linker command failed with exit code 1 use v to see invocation
  label = statistics, content = in the statsh file the description for the mode function makes note of the sort function provided in the p1librarycpp file are we allowed to call this sort function only in statscpp or can we use this function in our driver function as well
  label = statistics, content = hi i am sorta confused with the format you would like it to be for the percentile function from the example the percentile out put of 0 25th 50th etc should look like below 0th percentile 6 25th percentile 7 50th percentile 8 75th percentile 9 100th percentile 10 however are those 0th 25th 50th fixed for output or are they depends on which percentile user enter to output for example should it be sth like cout0th percentile percentile function or cout user input from percentile percentile percetile function
  label = statistics, content = how to use wget for project1
  label = statistics, content = when trying to run either maincpp or statstestscpp my program fails saying undefined symbols for architecture and gives me a list of function calls each with one more argument than my function calls or stubs have am i doing something wrong with the header files for your reference
  label = statistics, content = when testing our statscpp functions will negative numbers or complex results be fair game for final autograder testing
  label = statistics, content = i am having trouble finding the real data tsv file i used the icpsr link in the spec but there was no option for the delimited format on the webpage i tried downloading the data in the exceltsv format instead however when i unzipped the files there was no icpsr30103ds0001301030001datatsv file there were only these files icpsr30103termsofusehtml icpsr3010330103manifesttxt icpsr3010330103relatedliteraturetxt icpsr3010330103descriptioncitationpdf icpsr30103ds0001301030001codebookpdf and icpsr30103ds0001301030001questionnairepdf without the tsv file i cannot access the data so how can i get the tsv file
  label = statistics, content = i have tried looking up how vectors of vectors work online and i still have trouble understanding what the vector of vectors actually looks like so if for situations sake you had a vector of integers and laid them up and down a column would a vector of vector of integers would consist of the rows that fill in the right of the original column of integers is this essentially a twodimensional array of integers is the summarize function asking us to create essentially a twodimensional array with two columns but in vector form so we can addsubtract the number of rows thanks
  label = statistics, content = first do we need rme clauses for each of the functions in statstestscpp and if all the rme clauses for a group of functions are the same is it ok to block those function prototypes together under one rme clause
  label = statistics, content = i feel like i need a ton of help on this project and i dont want to use up a ton of other peoples time and im pretty embarrassed about being so lost is there any way to get private help
  label = statistics, content = will the maincpp be checked for the output as in the specs has our program asks for a file name enter a filename but if i were to write enter a filename would mine be incorrect
  label = statistics, content = what are some good strategies to use to write and full and thorough set of test cases maybe more specifically what are you guys thinking about when youre writing the test cases that you guys use for the auto grader if you can tell me thanks
  label = statistics, content = hello i have tried both file names maintestin and maintestintxt when i add txt it outputs a message saying that maintestintxt doesnt exist any help is appreciated here is a picture of my output in the terminal with maintestin
  label = statistics, content = i created a vector of vectors by initializing it now in order to put the data i want in it i am confused whether to use the pushback function or to assign a value into a specific location ie vecofdoubles01 4 do both methods work
  label = statistics, content = some office hours dont have a locationbuilding indicated on the google calendar like office hours today from 5 to 8pm is that going to be fixed
  label = statistics, content = is there a way to step through the code using sublime
  label = statistics, content = i keep getting errors that my files arent found theyre all together in one folder on my computer but when i run my project in terminal it cant find them ive fixed this a few times before but this time i cant seem to figure it out any idea what i keep doing wrong that it cant recognize the files im using the terminal commands given in the spec
  label = exam, content = if you have a final conflict with another class do you need to fill out the final conflict form for both classes or would just filling out the google form survey for this class suffice
  label = statistics, content = we had a folder for engr 101 when i took the course last semester which contained folders where we would turn in our project use the autograder etc i cant find any such folder for eecs 280 on the caen computer im using im looking in the home directory on linux am i supposed to just create a folder in the root directory named project 1 how would you locate my code would you just be looking for a folder named project 1
  label = statistics, content = ive done the project so far in xcode because im waiting for discussion to learn how to use caen i was wondering in xcode when we had to use a txt in eecs 183 we had to change a setting inside of xcode to allow it to use the file i forgot what the setting was in xcode to include a file so for in our case a tsv file
  label = statistics, content = i understand the we are required to use assert statements in out test cases i was just wondering what the advantage of using assert statements are compared to just printing out the expression when i print the expression eg sumdata 6 the program will continue to test other cases rather than crash thus the output can address errors in multiple areas of my code rather than just one part when it crashes is there some advantage of using an assert statement that i just havent figured out yet
  label = statistics, content = i am getting this error when i attempt to compile through putty bash42 make main g wall werror pedantic o1 stdc11 maincpp statscpp p1librarycpp o main tmpccq9d1bcs assembler messages tmpccq9d1bcs fatal error cant write tmpcczseqboo no space left on device tmpccq9d1bcs fatal error cant close tmpcczseqboo no space left on device statscpp1591 fatal error error writing to tmpccq9d1bcs no space left on device compilation terminated p1librarycpp821 fatal error error writing to tmpccq9d1bcs no space left on device compilation terminated make main error 1 i am not sure what the error is try to tell me as 159 and 82 are the last lines the the cpp files
  label = statistics, content = how can i open the input file tsv without using fstream as one of the libraries also can my file path correspond to any folder within my caen folder labelled with my uniquename
  label = statistics, content = i have been trying to use the cygwin virtual linux terminal to develop my program but i have run into issues that seem like they should have an easy answer when i use the standard method of including standard c libraries such as iostream and string g does not physically link them to my program as g subsequently throws an error that the keyword stringand cout are not defined is there a solution beyond manually downloading these libraries and placing them in a location that cygwin can find thanks
  label = statistics, content = im unsure of how to use assert in my statstestscpp to confirm that the summarize function on a set of data is equal to a certain vector of vectors it doesnt seem to be as simple as can be done for a function that returns a double or int ie assertsumdata 6 any advice on how i should approach this
  label = statistics, content = can the column data be negative
  label = statistics, content = in our test cases do we need to take care of letters or chars in our vectors
  label = statistics, content = 
  label = statistics, content = so the example in the specs shows that the percentiles of 678910 are 6 7 8 9 10 respectively however my understanding of the percentile definition given to us is that those shouldnt be the answers am i doing percentiles wrong or are the numbers in the specs using a different definition
  label = statistics, content = i am testing the maincpp and for some reason i am getting an error that says variable stdifstream maindata has initializer but incomplete type in my code i have a variable called data that takes in the users input and maindata is the filename ifstream maindatadatacstr what does it mean when it says has initializer but incomplete type i have included all the include that were given in the specs thanks
  label = statistics, content = is there a fixed number of columns in the tsv file input file
  label = statistics, content = my program is building successfully but doesnt print anything to the output box it was working fine before but randomly stopped any tips
  label = statistics, content = i am receiving this error message when i try to test my statstestcpp when i use the command in the project specification i have p1libraryh and statsh in the same directory what could the problem be
  label = statistics, content = i have downloaded the delimited version of the real data as well as the exceltsv file version but when i extract the zip file the actual data file is not present all other files are present
  label = statistics, content = in statscpp if we want to further break down a function using a helper function is this allowed by allowed i mean is it okay both in terms of style and grading as well as by the limitations of the system of using the header file
  label = statistics, content = if im struggling to just understand how to use terminalcaen and how to go about submitting would it be better for me to go to the caen hotline or office hours
  label = statistics, content = i am having trouble opening the maintestdatatsv file and the screenshot below illustrates my situation i am running my code on xcode and have tried changing the location of the maintestdatatsv file to deriveddata and changing the directory manually to the starterfiles folder none of these seem to work is there a specific place i need to place the maintestdatatsv for it to be opened
  label = statistics, content = when i test the max and min functions it showed that collect2 error ld returned 1 exit status undef ined reference to min how to solve this problem
  label = statistics, content = so in the spec it says your tests should be written as separate functions as demonstrated by the sample test case in statstestscpp so what im wondering is whether we need to create a new function for each test case or if we can put multiple test cases into 1 function that is testing a given function in statscpp example i would have a test function called testmode i would first create a vector called data1 and fill that up and test it using assert then within the same function i would create another vector with different data called data2 and then test that with assert is it okay to have it like this in the example or do i need to make two separate functions to test data1 and data2
  label = statistics, content = when our files are graded under which revision of c will they be compiled the provided makefile specifies that c11 is to be used will the c11 revision be used when compiling during grading or will an older revision be used
  label = statistics, content = i believe i remember seeing somewhere that all of our functions must have a requires modifies effects section in the comments above it this seems like a good idea but all of the functions defined in statsh already have this does this mean that we dont have to do rmes for the statscpp file what about maincpp it just seems strange to me that we would have to write rmes in the comments when theyre already provided for us
  label = statistics, content = im really confused how to compile if i only want to test statscpp and how it relates to statstestcpp is it just two g statements or is it more complicated than that
  label = statistics, content = hi i am working of the step of diff however i got the below error and have no idea how to fix i tried to open the diffexe but nothing shows up
  label = statistics, content = we are to create mainccp and statscpp ourselves those arent given to us correct because ive downloaded the folder and they are not any of the files within it
  label = statistics, content = i have all the files in the same directory i am not exactly sure how to point the terminal to a particular file but i search online and used echo cd cusersdocumentsum classeswinter 2016 umeecs 280project 1 romancestarterfiles bashrc and then i got the following error i have all the maincpp statscpp and files download from the drive what did i do wrong here btw does running in g on my win10 the same as running in cean i know i have to try it on a cane computer at the end but would also like to know whether the answer for this question is true thanks
  label = statistics, content = when i run make test everything works fine until this point binsh maintestin no such file or directory make test error 1 what is going on here
  label = statistics, content = are we supposed to have a function for summary as well
  label = statistics, content = statscpp2223 error expected primaryexpression before ‘’ token sortvectordouble v statscpp2225 error ‘sort’ was not declared in this scope sortvectordouble v statscpp401 error no return statement in function returning nonvoid werrorreturntype when i run the program it said that sort was not declared in this scope but actually i include the p1libraryh is there something wrong here thanks
  label = statistics, content = i am receiving the following error at the end of each of my statscpp functions error control may reach end of nonvoid function werrorwreturntype i looked up what the error means online but i am still not sure what it means i checked to make sure i didnt have any extra brackets as well how can i fix this
  label = statistics, content = i run the statstestscpp and got the following error message it looks like there is something wrong with function testsumsmalldataset but this function is given to us in the starter files does anyone know what is going wrong bash42 g wall werror pedantic o1 stdc11 statstestscpp statscpp p1librarycpp o statstests tmpccigfbhuo in function testsumsmalldataset statstestscpptext0xbf undefined reference to sumstdvectordouble stdallocator collect2 error ld returned 1 exit status
  label = statistics, content = im trying to run my test function for the function summarize the test function is supposed to print out the elements of the two dimensional vectors however nothing is printed out when i run statstestscpp on the terminal like the following bash42 g wall werror pedantic o1 stdc11 statstestscpp statscpp p1librarycpp o statstests bash42
  label = statistics, content = in appendix a of the project specifications both vsize and intvsize are used does vsize return an integer
  label = statistics, content = i cant seem to remember this from 101 if i pushback an already established 1d vector onto an undefined 2d vector is it added as a column or row
  label = statistics, content = i think i read somewhere that we are allowed to use using namespace std but in statsh that isnt used in the function declaration stdvectorstdvectordouble summarizestdvectordouble v so if i wanted to use using namespace std in my statscpp would my declaration just be summarizevectordouble v
  label = statistics, content = where can i find the office hours for eecs 280 professors
  label = statistics, content = can someone explain to me what we are doing with the test functions are we just writing them with self contained data like in the example given already in statstestscpp or are we somehow testing the data given by the userfile to ensure that our functions work correctly also what are the prototypes for the test functions that we have to do in the very beginning of statstestscpp is that just doing requires and effects in the comments and then writing function headers declaring functions thanks
  label = statistics, content = i was just wondering if it is ok if we write our own vector sorting function in statscpp so i can call it in summarize median and mode to make it easier to find those things i know there was a sort function given in a h file but id prefer to write my own if it is allowed thanks
  label = statistics, content = from the spec summary value frequency 6 1 7 1 8 1 9 1 10 1 are we printing out the 6 7 8 9 10 part in maincpp and then using the function summarize in statscpp to find the frequency or are we returning a vector of value frequency in statscpp and then just calling summarizev in maincpp
  label = statistics, content = im looking to get some help on project 1 and was wondering where the best place to go to would be and if there is a difference between the weekend and during the week
  label = statistics, content = the specs say there is a maincpp file in the starter files although there isnt or i havent been able to find it can i create my own file and name it maincpp does the maincpp file which is supposedly in the starter file have valuable information in it which i need or could someone help me locate the maincpp file thanks
  label = statistics, content = i thought that couldnt be used to compare doubles however in the test function provided in statstestscpp the following statement appears assertsumdata 6 since the sum function returns a double why are we allowed to use here
  label = statistics, content = on the project1spec it says the only libraries we can use are include statsh include p1libraryh include iostream include string include vector include cassert include cmath include iomanip so how would you open the file the user inputs the only ways i know of are to use the fstream or stdioh libraries
  label = statistics, content = when i cout the standard deviation calculated in my statscpp for the vector 678910 i get 158114 however when i test this and set my assertstdevdata 158114 my test fails is this because the standard deviation calculation in statscpp is rounding
  label = statistics, content = if statistical calculations are done my main why do we use this file what exactly do you mean by implementation
  label = statistics, content = on what date will the autograder be up im very close to finishing and would like to submit and see what else i need to improve upon
  label = statistics, content = for the output format of the program i am unsure whether there is a space between characters such as in the case of count 5 or 6 1 as shown in the sample output in spec should it be count5 or count 5 and 6 1 or 61 etc is what im asking thanks
  label = statistics, content = vector summarize vector v vector pairs sortv that is what the beginning of my code for the summarize function looks like but when i try to compile it i get an error mentioning a reference to an overloaded function the rest of my code within that function is commented out yet i still get the same error any clues on what i could be doing wrong
  label = statistics, content = ive downloaded the exceltsv zip folder from the given link but it doesnt seem to include a tsv file am i not downloading the correct zip folder thanks
  label = statistics, content = are we supposed to assume that the tsv files that are being read in are in the correct format the first time
  label = statistics, content = is there a location the file has to be for the program to find it i am using the given code and yet the tsv file will not open
  label = statistics, content = so i looked at the wikipedia page in the rme for percentiles and there doesnt seem to be any explicit definition of the microsoft excel method i understand that for calculating standard deviation we are to replicate this formula but there is no equivalent given for percentiles
  label = statistics, content = when i try to access my vector for the summarize function i do finali0 values0 where value is an array of values with the given values my program compiles but i get a runtime error where is this coming from
  label = statistics, content = i downloaded the starter files to the downloads folder on my mac i know how to go into my caen account through terminal but how do i move files from mac to caen via terminal or better yet is there a way i can download from google drive to my caen username instead of to my downloads folder
  label = statistics, content = 1 install the following packages web wget base tar archive bzip2 editors vim editors emacs click next make sure select requied packages is checked off and click next again it will now install this will take a bit click finish when it does can someone explain what that means how do you install these packages and does checked off mean no check mark
  label = statistics, content = can we use include fstream i think we need it but is was not listed in the only libraries you may use
  label = statistics, content = hi in project1 for the standard deviation are we supposed to find the sample standard deviation or the population standard deviation thanks
  label = statistics, content = for the mode function a vector of doubles is being passed in can we use the summarize function that i wrote previously that is a big vector of smaller value frequency vectors because that way i can easily see which values frequency is the highest which then would become the mode
  label = statistics, content = i am using the sublime sftp setup that was posted in 20 and it has been working great however i have run into a problem when compiling my code through my terminal via ssh i get this message bash42 make test statspublictest statspublictest statspublictest cannot execute binary file make test error 126 is this an issue with compiling in the linux environment through ssh and how can i solve this thanks
  label = statistics, content = i have started project 1 in sublime but was thinking about switching to xcode is there a difference or reason we should avoid using either sublime or xcode for the 280 projects thanks
  label = statistics, content = the program runs perfectly and correctly on my xcode then i used the terminal on my mac to make the main file and ran it but after i typed in the filename and column number and error opening the file occurs here are one snapshot of my xcode and one snapshot of my terminal
  label = statistics, content = is count for the number of numbers in the list or the number of unique values in the list
  label = statistics, content = for calculating standard deviation we need to use square root are we allowed to import cmath to use sqrt if not how are we supposed to calculate square root
  label = statistics, content = i was wondering where office hours are held today i dont think the friday locations are posted on the calendar thanks
  label = statistics, content = are we allowed to call another function within a function in statscpp like for example could we call the summarize function inside of the sum function
  label = statistics, content = since were treating all warnings as errors does that mean any vector indexing has to be done with unsigned integers for some reason in my 101 class unsigned integers resulted in autograder problems so i avoided them in the past is it always better practice to make those loopcontrol variables unsigned
  label = statistics, content = what is a driver program it says in the spec sheet finally write a driver program reads a data file from the study and computes statistics in maincpp so i was wondering what does it mean driver program
  label = statistics, content = i hadnt worked with vectors before this project and have been doing some reading online about them are we allowed to use functions such as accumulate etc in this project or is that considered cheating
  label = statistics, content = in the output stdev 158114 whereas it should equal 14142 for the set 678910 the mean is 8 so the variance is 4 1 0 1 45 2 sqrt of 2 is 14142 the error is in the 3rd pg i think my math is right
  label = statistics, content = the functions listed in statsh requires the input vector v is not empty so when writing statscpp do i need to check if input is not empty or i can take it as an assumption that all input is not empty
  label = statistics, content = hi i have a question concerning the summarize function we are supposed to create a vector that contains many vectors the many vectors are in the format value frequency i am able to get access the value part of these vectors through the sort function and the extractcolumn functions and then assign it to each vector however i am finding trouble figuring out how to find the frequency of each value any tips on doing so
  label = statistics, content = i downloaded the starter files for project 1 in the computer lab in bbb however when i try to start coding for project 1 using the computer on the basement of ugli i just cant find my personal files anywhere on the computer its weird because the computer i am using is in the caen lab software environment and you cannot login without a caen account so im wondering which kind of computers i can use for the projects in this course do only the computers on the north campus work
  label = statistics, content = just to be clear the sort function is a function of type void which modifies a vector in order from lowest to greatest the description is unclear as it just says that it sorts it
  label = statistics, content = is the autograder already opened i visit httpclass1eecsumichedu but find nothing there
  label = statistics, content = i wrote the test cases for each function in statstestscpp and wrote function stubs for the functions in statscpp i have not implemented yet however when i try to compile with g ­wall ­werror ­pedantic ­o1 ­­stdc11 statstestscpp statscpp p1librarycpp ­o statstests i get the following errors clang error no such file or directory ­wall clang error no such file or directory ­werror clang error no such file or directory ­pedantic clang error no such file or directory ­o1 clang error no such file or directory ­­stdc11 clang error no such file or directory statstestscpp clang error no such file or directory statscpp clang error no such file or directory p1librarycpp clang error no such file or directory ­o clang error no such file or directory statstests clang error no input files i have downloaded all the files in the zip to my desktop how can i fix this so i can start testing my code
  label = statistics, content = i cannot find delimited format for the real data can anyone help me find it thanks
  label = statistics, content = is it good practice to use the function min with double values for example min1314 or should we avoid the min function when comparing doubles because it is bad practice to use comparison operators with doubles
  label = statistics, content = where can we go this week to get specified help on the caen process
  label = statistics, content = rme clauses are already included in statsh so can we just use those or do we need to also put them into statscpp
  label = statistics, content = how do we go about writing the percentile function the multiple methods on wikipedia are confusing and we only return one double however in the example multiple percentiles are outputted
  label = statistics, content = do we need to align the equal signs when printing the percentiles
  label = statistics, content = it would make sense to test the sum function with double inputs ex a 02 33 50 however the operator should not be used to compare double values since we cannot use the numericlimits library for epsilon how should we go about testing that case
  label = statistics, content = in the project1 spec it says that there is a p1zip that contains all the files for project1 where is this found when i go to the google drive and go to project project1 starterfiles it just has all the files there but they cant be downloaded all at once
  label = statistics, content = i am kind of confused as how to return a vector of vectors for the summarize function i wrote the function definition and i am able to have it print for example using cout 1 2 2 1 3 1 how exactly do we have the function return the data set in this form any hints would be helpful thanks
  label = statistics, content = as the mode function is defined to return a double what should we do when there are multiple modes in the set
  label = statistics, content = what exactly do we do with statstests also there seems to be more than one definition for the microsoft excel method on wikipediawhich is the correct equation
  label = statistics, content = refer to this post for faqs about project 1 this will attempt to minimize piazza clutter with duplicate questions pin
trained on 2552 examples
vocabulary size = 6267

classes:
  calculator, 394 examples, log-prior = -1.87
  euchre, 694 examples, log-prior = -1.3
  exam, 290 examples, log-prior = -2.17
  image, 544 examples, log-prior = -1.55
  recursion, 328 examples, log-prior = -2.05
  statistics, 302 examples, log-prior = -2.13
classifier parameters:
  calculator:0, count = 37, log-likelihood = -2.37
  calculator:00, count = 6, log-likelihood = -4.18
  calculator:0000, count = 2, log-likelihood = -5.28
  calculator:00000000, count = 2, log-likelihood = -5.28
  calculator:00001000, count = 2, log-likelihood = -5.28
  calculator:00002000, count = 2, log-likelihood = -5.28
  calculator:00014000, count = 2, log-likelihood = -5.28
  calculator:00015000, count = 2, log-likelihood = -5.28
  calculator:00021000, count = 2, log-likelihood = -5.28
  calculator:00022000, count = 2, log-likelihood = -5.28
  calculator:000e9000, count = 2, log-likelihood = -5.28
  calculator:000f2000, count = 2, log-likelihood = -5.28
  calculator:00100000, count = 2, log-likelihood = -5.28
  calculator:00101000, count = 2, log-likelihood = -5.28
  calculator:001b6000, count = 2, log-likelihood = -5.28
  calculator:001ba000, count = 2, log-likelihood = -5.28
  calculator:002b, count = 2, log-likelihood = -5.28
  calculator:0040000000402000, count = 2, log-likelihood = -5.28
  calculator:0060100000602000, count = 2, log-likelihood = -5.28
  calculator:0060200000603000, count = 2, log-likelihood = -5.28
  calculator:00undefined, count = 1, log-likelihood = -5.98
  calculator:01, count = 4, log-likelihood = -4.59
  calculator:010, count = 1, log-likelihood = -5.98
  calculator:010c8000010e9000, count = 1, log-likelihood = -5.98
  calculator:02594000025b5000, count = 1, log-likelihood = -5.98
  calculator:0x00000000, count = 1, log-likelihood = -5.98
  calculator:0x00000000010c8030, count = 1, log-likelihood = -5.98
  calculator:0x000000000253e030, count = 1, log-likelihood = -5.98
  calculator:0x0000000002594030, count = 1, log-likelihood = -5.98
  calculator:0x000328eb, count = 1, log-likelihood = -5.98
  calculator:0x0018f098, count = 1, log-likelihood = -5.98
  calculator:0x10000a0fc, count = 1, log-likelihood = -5.98
  calculator:0x1002000a0, count = 1, log-likelihood = -5.98
  calculator:0x1005d8c13, count = 1, log-likelihood = -5.98
  calculator:0x1005db093, count = 1, log-likelihood = -5.98
  calculator:0x1005db182, count = 1, log-likelihood = -5.98
  calculator:0x1005db2e9, count = 1, log-likelihood = -5.98
  calculator:0x1005db300, count = 1, log-likelihood = -5.98
  calculator:0x1005db83c, count = 1, log-likelihood = -5.98
  calculator:0x1005e024e, count = 1, log-likelihood = -5.98
  calculator:0x1005e7efd, count = 1, log-likelihood = -5.98
  calculator:0x1005ed132, count = 1, log-likelihood = -5.98
  calculator:0x400aca, count = 1, log-likelihood = -5.98
  calculator:0x400bd4, count = 1, log-likelihood = -5.98
  calculator:0x400be8, count = 1, log-likelihood = -5.98
  calculator:0x400bf1, count = 1, log-likelihood = -5.98
  calculator:0x400c00, count = 1, log-likelihood = -5.98
  calculator:0x400c08, count = 1, log-likelihood = -5.98
  calculator:0x400c1f, count = 1, log-likelihood = -5.98
  calculator:0x400e68, count = 1, log-likelihood = -5.98
  calculator:0x400e72, count = 1, log-likelihood = -5.98
  calculator:0x40102b, count = 1, log-likelihood = -5.98
  calculator:0x40108f, count = 1, log-likelihood = -5.98
  calculator:0x401a02, count = 1, log-likelihood = -5.98
  calculator:0x402d2f, count = 1, log-likelihood = -5.98
  calculator:0x403e04, count = 1, log-likelihood = -5.98
  calculator:0x404176, count = 1, log-likelihood = -5.98
  calculator:0x4c2a105, count = 1, log-likelihood = -5.98
  calculator:0x4c2b131, count = 2, log-likelihood = -5.28
  calculator:0x5a170a0, count = 1, log-likelihood = -5.98
  calculator:0x5a170a8, count = 1, log-likelihood = -5.98
  calculator:0x5a17640, count = 1, log-likelihood = -5.98
  calculator:0x7766dad8, count = 1, log-likelihood = -5.98
  calculator:0xc0000005, count = 1, log-likelihood = -5.98
  calculator:1, count = 35, log-likelihood = -2.42
  calculator:10, count = 11, log-likelihood = -3.58
  calculator:1000000, count = 1, log-likelihood = -5.98
  calculator:102, count = 1, log-likelihood = -5.98
  calculator:103, count = 1, log-likelihood = -5.98
  calculator:105, count = 2, log-likelihood = -5.28
  calculator:1060569786, count = 1, log-likelihood = -5.98
  calculator:11, count = 1, log-likelihood = -5.98
  calculator:1114pm, count = 1, log-likelihood = -5.98
  calculator:12, count = 3, log-likelihood = -4.88
  calculator:12059310, count = 1, log-likelihood = -5.98
  calculator:12059359, count = 1, log-likelihood = -5.98
  calculator:12059632, count = 1, log-likelihood = -5.98
  calculator:12074364, count = 1, log-likelihood = -5.98
  calculator:12075905, count = 1, log-likelihood = -5.98
  calculator:127, count = 1, log-likelihood = -5.98
  calculator:13, count = 1, log-likelihood = -5.98
  calculator:14, count = 2, log-likelihood = -5.28
  calculator:1459, count = 1, log-likelihood = -5.98
  calculator:1461, count = 1, log-likelihood = -5.98
  calculator:15, count = 2, log-likelihood = -5.28
  calculator:15837, count = 1, log-likelihood = -5.98
  calculator:16, count = 2, log-likelihood = -5.28
  calculator:168, count = 1, log-likelihood = -5.98
  calculator:17, count = 1, log-likelihood = -5.98
  calculator:19, count = 1, log-likelihood = -5.98
  calculator:2, count = 26, log-likelihood = -2.72
  calculator:20, count = 2, log-likelihood = -5.28
  calculator:200, count = 1, log-likelihood = -5.98
  calculator:20022013, count = 3, log-likelihood = -4.88
  calculator:2015, count = 1, log-likelihood = -5.98
  calculator:2064, count = 1, log-likelihood = -5.98
  calculator:21, count = 2, log-likelihood = -5.28
  calculator:2122, count = 1, log-likelihood = -5.98
  calculator:22, count = 1, log-likelihood = -5.98
  calculator:23, count = 4, log-likelihood = -4.59
  calculator:24, count = 4, log-likelihood = -4.59
  calculator:24618, count = 1, log-likelihood = -5.98
  calculator:249449630, count = 1, log-likelihood = -5.98
  calculator:2520, count = 1, log-likelihood = -5.98
  calculator:2741, count = 1, log-likelihood = -5.98
  calculator:28, count = 1, log-likelihood = -5.98
  calculator:2929, count = 1, log-likelihood = -5.98
  calculator:29599, count = 1, log-likelihood = -5.98
  calculator:2970, count = 1, log-likelihood = -5.98
  calculator:2for, count = 1, log-likelihood = -5.98
  calculator:2infinity, count = 1, log-likelihood = -5.98
  calculator:3, count = 17, log-likelihood = -3.14
  calculator:30, count = 2, log-likelihood = -5.28
  calculator:32, count = 1, log-likelihood = -5.98
  calculator:34, count = 2, log-likelihood = -5.28
  calculator:38, count = 1, log-likelihood = -5.98
  calculator:384, count = 1, log-likelihood = -5.98
  calculator:3rd, count = 1, log-likelihood = -5.98
  calculator:4, count = 14, log-likelihood = -3.34
  calculator:408, count = 1, log-likelihood = -5.98
  calculator:415, count = 1, log-likelihood = -5.98
  calculator:42, count = 1, log-likelihood = -5.98
  calculator:422, count = 1, log-likelihood = -5.98
  calculator:43, count = 1, log-likelihood = -5.98
  calculator:45, count = 1, log-likelihood = -5.98
  calculator:48, count = 1, log-likelihood = -5.98
  calculator:480, count = 1, log-likelihood = -5.98
  calculator:5, count = 16, log-likelihood = -3.2
  calculator:502, count = 1, log-likelihood = -5.98
  calculator:524872, count = 1, log-likelihood = -5.98
  calculator:524921, count = 1, log-likelihood = -5.98
  calculator:527413, count = 1, log-likelihood = -5.98
  calculator:539307, count = 1, log-likelihood = -5.98
  calculator:54, count = 2, log-likelihood = -5.28
  calculator:540413, count = 1, log-likelihood = -5.98
  calculator:5482, count = 1, log-likelihood = -5.98
  calculator:55, count = 1, log-likelihood = -5.98
  calculator:59, count = 1, log-likelihood = -5.98
  calculator:5listteststarterexe, count = 1, log-likelihood = -5.98
  calculator:6, count = 5, log-likelihood = -4.37
  calculator:61, count = 1, log-likelihood = -5.98
  calculator:7, count = 3, log-likelihood = -4.88
  calculator:7f07780000007f0778021000, count = 1, log-likelihood = -5.98
  calculator:7f07780210007f077c000000, count = 1, log-likelihood = -5.98
  calculator:7f077c1010007f077c2b7000, count = 1, log-likelihood = -5.98
  calculator:7f077c2b70007f077c4b7000, count = 1, log-likelihood = -5.98
  calculator:7f077c4b70007f077c4bb000, count = 1, log-likelihood = -5.98
  calculator:7f077c4bb0007f077c4bd000, count = 1, log-likelihood = -5.98
  calculator:7f077c4bd0007f077c4c2000, count = 1, log-likelihood = -5.98
  calculator:7f077c4c20007f077c4d7000, count = 1, log-likelihood = -5.98
  calculator:7f077c4d70007f077c6d6000, count = 1, log-likelihood = -5.98
  calculator:7f077c6d60007f077c6d7000, count = 1, log-likelihood = -5.98
  calculator:7f077c6d70007f077c6d8000, count = 1, log-likelihood = -5.98
  calculator:7f077c6d80007f077c7d9000, count = 1, log-likelihood = -5.98
  calculator:7f077c7d90007f077c9d8000, count = 1, log-likelihood = -5.98
  calculator:7f077c9d80007f077c9d9000, count = 1, log-likelihood = -5.98
  calculator:7f077c9d90007f077c9da000, count = 1, log-likelihood = -5.98
  calculator:7f077c9da0007f077cac3000, count = 1, log-likelihood = -5.98
  calculator:7f077cac30007f077ccc3000, count = 1, log-likelihood = -5.98
  calculator:7f077ccc30007f077cccc000, count = 1, log-likelihood = -5.98
  calculator:7f077cccc0007f077ccce000, count = 1, log-likelihood = -5.98
  calculator:7f077ccce0007f077cce3000, count = 1, log-likelihood = -5.98
  calculator:7f077cce30007f077cd04000, count = 1, log-likelihood = -5.98
  calculator:7f077ced80007f077cedd000, count = 1, log-likelihood = -5.98
  calculator:7f077cf010007f077cf04000, count = 1, log-likelihood = -5.98
  calculator:7f077cf040007f077cf05000, count = 1, log-likelihood = -5.98
  calculator:7f077cf050007f077cf06000, count = 1, log-likelihood = -5.98
  calculator:7f077cf060007f077cf07000, count = 1, log-likelihood = -5.98
  calculator:7f79980000007f7998021000, count = 1, log-likelihood = -5.98
  calculator:7f79980210007f799c000000, count = 1, log-likelihood = -5.98
  calculator:7f799c73e0007f799c8f4000, count = 1, log-likelihood = -5.98
  calculator:7f799c8f40007f799caf4000, count = 1, log-likelihood = -5.98
  calculator:7f799caf40007f799caf8000, count = 1, log-likelihood = -5.98
  calculator:7f799caf80007f799cafa000, count = 1, log-likelihood = -5.98
  calculator:7f799cafa0007f799caff000, count = 1, log-likelihood = -5.98
  calculator:7f799caff0007f799cb14000, count = 1, log-likelihood = -5.98
  calculator:7f799cb140007f799cd13000, count = 1, log-likelihood = -5.98
  calculator:7f799cd130007f799cd14000, count = 1, log-likelihood = -5.98
  calculator:7f799cd140007f799cd15000, count = 1, log-likelihood = -5.98
  calculator:7f799cd150007f799ce16000, count = 1, log-likelihood = -5.98
  calculator:7f799ce160007f799d015000, count = 1, log-likelihood = -5.98
  calculator:7f799d0150007f799d016000, count = 1, log-likelihood = -5.98
  calculator:7f799d0160007f799d017000, count = 1, log-likelihood = -5.98
  calculator:7f799d0170007f799d100000, count = 1, log-likelihood = -5.98
  calculator:7f799d1000007f799d300000, count = 1, log-likelihood = -5.98
  calculator:7f799d3000007f799d309000, count = 1, log-likelihood = -5.98
  calculator:7f799d3090007f799d30b000, count = 1, log-likelihood = -5.98
  calculator:7f799d30b0007f799d320000, count = 1, log-likelihood = -5.98
  calculator:7f799d3200007f799d341000, count = 1, log-likelihood = -5.98
  calculator:7f799d5150007f799d51a000, count = 1, log-likelihood = -5.98
  calculator:7f799d53f0007f799d541000, count = 1, log-likelihood = -5.98
  calculator:7f799d5410007f799d542000, count = 1, log-likelihood = -5.98
  calculator:7f799d5420007f799d543000, count = 1, log-likelihood = -5.98
  calculator:7f799d5430007f799d544000, count = 1, log-likelihood = -5.98
  calculator:7ffc1ce6e0007ffc1ce8f000, count = 1, log-likelihood = -5.98
  calculator:7ffc1cee50007ffc1cee7000, count = 1, log-likelihood = -5.98
  calculator:7ffd246ba0007ffd246db000, count = 1, log-likelihood = -5.98
  calculator:7ffd247790007ffd2477b000, count = 1, log-likelihood = -5.98
  calculator:8, count = 3, log-likelihood = -4.88
  calculator:83, count = 1, log-likelihood = -5.98
  calculator:8463, count = 1, log-likelihood = -5.98
  calculator:8464, count = 1, log-likelihood = -5.98
  calculator:8pm, count = 1, log-likelihood = -5.98
  calculator:90, count = 1, log-likelihood = -5.98
  calculator:95, count = 1, log-likelihood = -5.98
  calculator:96, count = 1, log-likelihood = -5.98
  calculator:98, count = 1, log-likelihood = -5.98
  calculator:9854, count = 1, log-likelihood = -5.98
  calculator:99, count = 1, log-likelihood = -5.98
  calculator:9pm, count = 1, log-likelihood = -5.98
  calculator:a, count = 194, log-likelihood = -0.708
  calculator:ab, count = 1, log-likelihood = -5.98
  calculator:able, count = 8, log-likelihood = -3.9
  calculator:aborted, count = 1, log-likelihood = -5.98
  calculator:aborts, count = 1, log-likelihood = -5.98
  calculator:about, count = 20, log-likelihood = -2.98
  calculator:above, count = 3, log-likelihood = -4.88
  calculator:abs, count = 1, log-likelihood = -5.98
  calculator:acceptable, count = 1, log-likelihood = -5.98
  calculator:access, count = 17, log-likelihood = -3.14
  calculator:accessed, count = 3, log-likelihood = -4.88
  calculator:accessing, count = 2, log-likelihood = -5.28
  calculator:accordingly, count = 3, log-likelihood = -4.88
  calculator:account, count = 4, log-likelihood = -4.59
  calculator:accounted, count = 1, log-likelihood = -5.98
  calculator:accounting, count = 1, log-likelihood = -5.98
  calculator:acting, count = 1, log-likelihood = -5.98
  calculator:action, count = 1, log-likelihood = -5.98
  calculator:actual, count = 1, log-likelihood = -5.98
  calculator:actually, count = 6, log-likelihood = -4.18
  calculator:add, count = 15, log-likelihood = -3.27
  calculator:added, count = 5, log-likelihood = -4.37
  calculator:adding, count = 5, log-likelihood = -4.37
  calculator:addition, count = 3, log-likelihood = -4.88
  calculator:additional, count = 3, log-likelihood = -4.88
  calculator:additionally, count = 1, log-likelihood = -5.98
  calculator:address, count = 4, log-likelihood = -4.59
  calculator:addresses, count = 1, log-likelihood = -5.98
  calculator:adjust, count = 1, log-likelihood = -5.98
  calculator:advance, count = 6, log-likelihood = -4.18
  calculator:advice, count = 2, log-likelihood = -5.28
  calculator:affect, count = 1, log-likelihood = -5.98
  calculator:afraid, count = 1, log-likelihood = -5.98
  calculator:after, count = 24, log-likelihood = -2.8
  calculator:ag, count = 1, log-likelihood = -5.98
  calculator:again, count = 8, log-likelihood = -3.9
  calculator:against, count = 3, log-likelihood = -4.88
  calculator:aka, count = 3, log-likelihood = -4.88
  calculator:al, count = 3, log-likelihood = -4.88
  calculator:aliya, count = 1, log-likelihood = -5.98
  calculator:all, count = 38, log-likelihood = -2.34
  calculator:allocated, count = 6, log-likelihood = -4.18
  calculator:allocs, count = 4, log-likelihood = -4.59
  calculator:allow, count = 1, log-likelihood = -5.98
  calculator:allowed, count = 17, log-likelihood = -3.14
  calculator:almost, count = 2, log-likelihood = -5.28
  calculator:along, count = 2, log-likelihood = -5.28
  calculator:already, count = 6, log-likelihood = -4.18
  calculator:also, count = 20, log-likelihood = -2.98
  calculator:alter, count = 1, log-likelihood = -5.98
  calculator:always, count = 6, log-likelihood = -4.18
  calculator:am, count = 58, log-likelihood = -1.92
  calculator:ambiguous, count = 1, log-likelihood = -5.98
  calculator:amount, count = 1, log-likelihood = -5.98
  calculator:an, count = 75, log-likelihood = -1.66
  calculator:and, count = 177, log-likelihood = -0.8
  calculator:andor, count = 1, log-likelihood = -5.98
  calculator:animalstxt, count = 1, log-likelihood = -5.98
  calculator:announcement, count = 1, log-likelihood = -5.98
  calculator:another, count = 7, log-likelihood = -4.03
  calculator:answer, count = 2, log-likelihood = -5.28
  calculator:any, count = 61, log-likelihood = -1.87
  calculator:anybody, count = 1, log-likelihood = -5.98
  calculator:anymore, count = 1, log-likelihood = -5.98
  calculator:anyone, count = 15, log-likelihood = -3.27
  calculator:anything, count = 14, log-likelihood = -3.34
  calculator:anyway, count = 1, log-likelihood = -5.98
  calculator:apparently, count = 1, log-likelihood = -5.98
  calculator:appear, count = 2, log-likelihood = -5.28
  calculator:appears, count = 2, log-likelihood = -5.28
  calculator:appendix, count = 1, log-likelihood = -5.98
  calculator:applies, count = 1, log-likelihood = -5.98
  calculator:appreciate, count = 1, log-likelihood = -5.98
  calculator:appreciated, count = 6, log-likelihood = -4.18
  calculator:approach, count = 2, log-likelihood = -5.28
  calculator:appropriate, count = 1, log-likelihood = -5.98
  calculator:arbitrary, count = 1, log-likelihood = -5.98
  calculator:architecture, count = 2, log-likelihood = -5.28
  calculator:are, count = 85, log-likelihood = -1.53
  calculator:arent, count = 3, log-likelihood = -4.88
  calculator:argument, count = 4, log-likelihood = -4.59
  calculator:arguments, count = 7, log-likelihood = -4.03
  calculator:argv, count = 1, log-likelihood = -5.98
  calculator:arithmetic, count = 1, log-likelihood = -5.98
  calculator:around, count = 3, log-likelihood = -4.88
  calculator:as, count = 62, log-likelihood = -1.85
  calculator:ask, count = 3, log-likelihood = -4.88
  calculator:asks, count = 1, log-likelihood = -5.98
  calculator:assert, count = 12, log-likelihood = -3.49
  calculator:assertcopy, count = 1, log-likelihood = -5.98
  calculator:asserted, count = 1, log-likelihood = -5.98
  calculator:asserti, count = 1, log-likelihood = -5.98
  calculator:asserting, count = 1, log-likelihood = -5.98
  calculator:assertinodeptr, count = 1, log-likelihood = -5.98
  calculator:assertion, count = 2, log-likelihood = -5.28
  calculator:assertlistempty, count = 1, log-likelihood = -5.98
  calculator:assertlistpopallfront, count = 1, log-likelihood = -5.98
  calculator:asserts, count = 3, log-likelihood = -4.88
  calculator:assign, count = 2, log-likelihood = -5.28
  calculator:assigned, count = 1, log-likelihood = -5.98
  calculator:assigning, count = 1, log-likelihood = -5.98
  calculator:assignment, count = 7, log-likelihood = -4.03
  calculator:assignments, count = 1, log-likelihood = -5.98
  calculator:assingnment, count = 1, log-likelihood = -5.98
  calculator:associated, count = 6, log-likelihood = -4.18
  calculator:assume, count = 4, log-likelihood = -4.59
  calculator:assumed, count = 1, log-likelihood = -5.98
  calculator:assuming, count = 3, log-likelihood = -4.88
  calculator:at, count = 41, log-likelihood = -2.26
  calculator:athe, count = 1, log-likelihood = -5.98
  calculator:atoi, count = 3, log-likelihood = -4.88
  calculator:atoistringcstr, count = 1, log-likelihood = -5.98
  calculator:attached, count = 1, log-likelihood = -5.98
  calculator:attempt, count = 2, log-likelihood = -5.28
  calculator:autograder, count = 31, log-likelihood = -2.54
  calculator:autograders, count = 1, log-likelihood = -5.98
  calculator:automatic, count = 1, log-likelihood = -5.98
  calculator:automatically, count = 3, log-likelihood = -4.88
  calculator:avoid, count = 2, log-likelihood = -5.28
  calculator:aware, count = 2, log-likelihood = -5.28
  calculator:awesome, count = 1, log-likelihood = -5.98
  calculator:b, count = 2, log-likelihood = -5.28
  calculator:back, count = 11, log-likelihood = -3.58
  calculator:backtrace, count = 3, log-likelihood = -4.88
  calculator:bad, count = 3, log-likelihood = -4.88
  calculator:base, count = 2, log-likelihood = -5.28
  calculator:based, count = 2, log-likelihood = -5.28
  calculator:basically, count = 2, log-likelihood = -5.28
  calculator:basicistreamchar, count = 1, log-likelihood = -5.98
  calculator:be, count = 104, log-likelihood = -1.33
  calculator:because, count = 26, log-likelihood = -2.72
  calculator:become, count = 4, log-likelihood = -4.59
  calculator:becomes, count = 1, log-likelihood = -5.98
  calculator:becuase, count = 1, log-likelihood = -5.98
  calculator:been, count = 8, log-likelihood = -3.9
  calculator:before, count = 18, log-likelihood = -3.09
  calculator:began, count = 1, log-likelihood = -5.98
  calculator:begin, count = 10, log-likelihood = -3.67
  calculator:beginning, count = 5, log-likelihood = -4.37
  calculator:behavior, count = 2, log-likelihood = -5.28
  calculator:being, count = 14, log-likelihood = -3.34
  calculator:belief, count = 1, log-likelihood = -5.98
  calculator:believe, count = 1, log-likelihood = -5.98
  calculator:below, count = 8, log-likelihood = -3.9
  calculator:besides, count = 2, log-likelihood = -5.28
  calculator:best, count = 1, log-likelihood = -5.98
  calculator:besuch, count = 1, log-likelihood = -5.98
  calculator:better, count = 5, log-likelihood = -4.37
  calculator:between, count = 7, log-likelihood = -4.03
  calculator:beyond, count = 2, log-likelihood = -5.28
  calculator:big, count = 4, log-likelihood = -4.59
  calculator:binary, count = 1, log-likelihood = -5.98
  calculator:binsh, count = 1, log-likelihood = -5.98
  calculator:bit, count = 2, log-likelihood = -5.28
  calculator:blank, count = 1, log-likelihood = -5.98
  calculator:block, count = 3, log-likelihood = -4.88
  calculator:blocks, count = 8, log-likelihood = -3.9
  calculator:blockscope, count = 1, log-likelihood = -5.98
  calculator:blowing, count = 1, log-likelihood = -5.98
  calculator:body, count = 2, log-likelihood = -5.28
  calculator:bool, count = 10, log-likelihood = -3.67
  calculator:boolean, count = 1, log-likelihood = -5.98
  calculator:both, count = 17, log-likelihood = -3.14
  calculator:bottom, count = 4, log-likelihood = -4.59
  calculator:bounds, count = 1, log-likelihood = -5.98
  calculator:box, count = 1, log-likelihood = -5.98
  calculator:braces, count = 1, log-likelihood = -5.98
  calculator:brackets, count = 1, log-likelihood = -5.98
  calculator:break, count = 2, log-likelihood = -5.28
  calculator:breakdown, count = 1, log-likelihood = -5.98
  calculator:breaking, count = 1, log-likelihood = -5.98
  calculator:breakpoint, count = 1, log-likelihood = -5.98
  calculator:breakpoints, count = 1, log-likelihood = -5.98
  calculator:breaks, count = 1, log-likelihood = -5.98
  calculator:bring, count = 1, log-likelihood = -5.98
  calculator:brought, count = 1, log-likelihood = -5.98
  calculator:browser, count = 1, log-likelihood = -5.98
  calculator:brute, count = 1, log-likelihood = -5.98
  calculator:bug, count = 3, log-likelihood = -4.88
  calculator:buggy, count = 4, log-likelihood = -4.59
  calculator:bugs, count = 1, log-likelihood = -5.98
  calculator:built, count = 1, log-likelihood = -5.98
  calculator:bunch, count = 1, log-likelihood = -5.98
  calculator:but, count = 118, log-likelihood = -1.21
  calculator:button, count = 1, log-likelihood = -5.98
  calculator:by, count = 34, log-likelihood = -2.45
  calculator:bytes, count = 7, log-likelihood = -4.03
  calculator:c, count = 8, log-likelihood = -3.9
  calculator:c2040, count = 1, log-likelihood = -5.98
  calculator:c2446, count = 1, log-likelihood = -5.98
  calculator:c3867, count = 1, log-likelihood = -5.98
  calculator:caen, count = 17, log-likelihood = -3.14
  calculator:calc, count = 11, log-likelihood = -3.58
  calculator:calccpp, count = 19, log-likelihood = -3.03
  calculator:calccpp10330, count = 1, log-likelihood = -5.98
  calculator:calccpp13433, count = 1, log-likelihood = -5.98
  calculator:calccpptext0x1080, count = 1, log-likelihood = -5.98
  calculator:calccpptext0x1096, count = 1, log-likelihood = -5.98
  calculator:calccpptext0x305, count = 1, log-likelihood = -5.98
  calculator:calccpptext0x31b, count = 1, log-likelihood = -5.98
  calculator:calccpptext0x71b, count = 1, log-likelihood = -5.98
  calculator:calccpptext0x862, count = 1, log-likelihood = -5.98
  calculator:calccpptext0x9b2, count = 1, log-likelihood = -5.98
  calculator:calccpptext0xb0b, count = 1, log-likelihood = -5.98
  calculator:calccpptext0xedc, count = 1, log-likelihood = -5.98
  calculator:calccpptext0xeeb, count = 1, log-likelihood = -5.98
  calculator:calccpptext0xefe, count = 1, log-likelihood = -5.98
  calculator:calccpptext0xf14, count = 1, log-likelihood = -5.98
  calculator:calcpp, count = 1, log-likelihood = -5.98
  calculator:calctest, count = 1, log-likelihood = -5.98
  calculator:calctest00, count = 3, log-likelihood = -4.88
  calculator:calctest00correctout, count = 1, log-likelihood = -5.98
  calculator:calctest00in, count = 7, log-likelihood = -4.03
  calculator:calctest00out, count = 3, log-likelihood = -4.88
  calculator:calctest01, count = 2, log-likelihood = -5.28
  calculator:calctest01in, count = 2, log-likelihood = -5.28
  calculator:calctest01out, count = 1, log-likelihood = -5.98
  calculator:calculations, count = 1, log-likelihood = -5.98
  calculator:calculator, count = 9, log-likelihood = -3.78
  calculator:call, count = 22, log-likelihood = -2.89
  calculator:called, count = 16, log-likelihood = -3.2
  calculator:calling, count = 10, log-likelihood = -3.67
  calculator:calls, count = 3, log-likelihood = -4.88
  calculator:can, count = 69, log-likelihood = -1.74
  calculator:candidates, count = 1, log-likelihood = -5.98
  calculator:cannot, count = 11, log-likelihood = -3.58
  calculator:cant, count = 21, log-likelihood = -2.93
  calculator:care, count = 1, log-likelihood = -5.98
  calculator:case, count = 12, log-likelihood = -3.49
  calculator:cases, count = 14, log-likelihood = -3.34
  calculator:catch, count = 3, log-likelihood = -4.88
  calculator:catching, count = 1, log-likelihood = -5.98
  calculator:caught, count = 1, log-likelihood = -5.98
  calculator:cause, count = 4, log-likelihood = -4.59
  calculator:causing, count = 7, log-likelihood = -4.03
  calculator:cc1plus, count = 2, log-likelihood = -5.28
  calculator:change, count = 10, log-likelihood = -3.67
  calculator:changed, count = 2, log-likelihood = -5.28
  calculator:changes, count = 2, log-likelihood = -5.28
  calculator:changing, count = 6, log-likelihood = -4.18
  calculator:char, count = 7, log-likelihood = -4.03
  calculator:character, count = 1, log-likelihood = -5.98
  calculator:characters, count = 1, log-likelihood = -5.98
  calculator:check, count = 17, log-likelihood = -3.14
  calculator:checked, count = 1, log-likelihood = -5.98
  calculator:checking, count = 6, log-likelihood = -4.18
  calculator:checkinvariants, count = 1, log-likelihood = -5.98
  calculator:chosen, count = 1, log-likelihood = -5.98
  calculator:cin, count = 4, log-likelihood = -4.59
  calculator:clang, count = 2, log-likelihood = -5.28
  calculator:clarify, count = 5, log-likelihood = -4.37
  calculator:class, count = 45, log-likelihood = -2.17
  calculator:classes, count = 1, log-likelihood = -5.98
  calculator:classsince, count = 1, log-likelihood = -5.98
  calculator:clause, count = 4, log-likelihood = -4.59
  calculator:clauses, count = 1, log-likelihood = -5.98
  calculator:clean, count = 2, log-likelihood = -5.28
  calculator:cleans, count = 1, log-likelihood = -5.98
  calculator:clear, count = 1, log-likelihood = -5.98
  calculator:clearing, count = 1, log-likelihood = -5.98
  calculator:clearly, count = 1, log-likelihood = -5.98
  calculator:clicking, count = 1, log-likelihood = -5.98
  calculator:closer, count = 1, log-likelihood = -5.98
  calculator:clue, count = 2, log-likelihood = -5.28
  calculator:code, count = 50, log-likelihood = -2.06
  calculator:codes, count = 1, log-likelihood = -5.98
  calculator:coding, count = 1, log-likelihood = -5.98
  calculator:collect2, count = 2, log-likelihood = -5.28
  calculator:combination, count = 1, log-likelihood = -5.98
  calculator:combinations, count = 1, log-likelihood = -5.98
  calculator:come, count = 3, log-likelihood = -4.88
  calculator:comes, count = 2, log-likelihood = -5.28
  calculator:coming, count = 1, log-likelihood = -5.98
  calculator:command, count = 12, log-likelihood = -3.49
  calculator:commands, count = 5, log-likelihood = -4.37
  calculator:comment, count = 2, log-likelihood = -5.28
  calculator:common, count = 2, log-likelihood = -5.28
  calculator:comparator, count = 1, log-likelihood = -5.98
  calculator:compare, count = 2, log-likelihood = -5.28
  calculator:compared, count = 2, log-likelihood = -5.28
  calculator:comparing, count = 1, log-likelihood = -5.98
  calculator:comparison, count = 1, log-likelihood = -5.98
  calculator:compilation, count = 5, log-likelihood = -4.37
  calculator:compile, count = 22, log-likelihood = -2.89
  calculator:compilecheck, count = 1, log-likelihood = -5.98
  calculator:compiled, count = 3, log-likelihood = -4.88
  calculator:compiler, count = 13, log-likelihood = -3.41
  calculator:compiles, count = 7, log-likelihood = -4.03
  calculator:compiling, count = 2, log-likelihood = -5.28
  calculator:complete, count = 1, log-likelihood = -5.98
  calculator:completely, count = 1, log-likelihood = -5.98
  calculator:complexity, count = 1, log-likelihood = -5.98
  calculator:complication, count = 1, log-likelihood = -5.98
  calculator:complie, count = 2, log-likelihood = -5.28
  calculator:complier, count = 1, log-likelihood = -5.98
  calculator:component, count = 1, log-likelihood = -5.98
  calculator:computer, count = 2, log-likelihood = -5.28
  calculator:computers, count = 1, log-likelihood = -5.98
  calculator:concept, count = 1, log-likelihood = -5.98
  calculator:condition, count = 1, log-likelihood = -5.98
  calculator:conditional, count = 3, log-likelihood = -4.88
  calculator:conditions, count = 1, log-likelihood = -5.98
  calculator:configuration, count = 1, log-likelihood = -5.98
  calculator:confirm, count = 1, log-likelihood = -5.98
  calculator:confused, count = 25, log-likelihood = -2.76
  calculator:confusing, count = 3, log-likelihood = -4.88
  calculator:consider, count = 3, log-likelihood = -4.88
  calculator:considered, count = 3, log-likelihood = -4.88
  calculator:considering, count = 2, log-likelihood = -5.28
  calculator:const, count = 19, log-likelihood = -3.03
  calculator:constant, count = 1, log-likelihood = -5.98
  calculator:constructed, count = 1, log-likelihood = -5.98
  calculator:constructor, count = 27, log-likelihood = -2.68
  calculator:constructors, count = 1, log-likelihood = -5.98
  calculator:const’, count = 1, log-likelihood = -5.98
  calculator:contain, count = 1, log-likelihood = -5.98
  calculator:contained, count = 1, log-likelihood = -5.98
  calculator:containing, count = 3, log-likelihood = -4.88
  calculator:contains, count = 4, log-likelihood = -4.59
  calculator:contents, count = 2, log-likelihood = -5.28
  calculator:context, count = 2, log-likelihood = -5.28
  calculator:contexts, count = 6, log-likelihood = -4.18
  calculator:contexually, count = 1, log-likelihood = -5.98
  calculator:continue, count = 1, log-likelihood = -5.98
  calculator:continuing, count = 1, log-likelihood = -5.98
  calculator:control, count = 1, log-likelihood = -5.98
  calculator:conversion, count = 3, log-likelihood = -4.88
  calculator:convert, count = 3, log-likelihood = -4.88
  calculator:converted, count = 1, log-likelihood = -5.98
  calculator:convertible, count = 1, log-likelihood = -5.98
  calculator:copied, count = 6, log-likelihood = -4.18
  calculator:copies, count = 1, log-likelihood = -5.98
  calculator:copy, count = 14, log-likelihood = -3.34
  calculator:copyall, count = 7, log-likelihood = -4.03
  calculator:copyallother, count = 1, log-likelihood = -5.98
  calculator:copyctortest, count = 1, log-likelihood = -5.98
  calculator:copyright, count = 3, log-likelihood = -4.88
  calculator:copyswiftv1manglednamechar, count = 1, log-likelihood = -5.98
  calculator:correct, count = 23, log-likelihood = -2.84
  calculator:corrections, count = 1, log-likelihood = -5.98
  calculator:correctly, count = 5, log-likelihood = -4.37
  calculator:correspond, count = 1, log-likelihood = -5.98
  calculator:corruption, count = 3, log-likelihood = -4.88
  calculator:could, count = 15, log-likelihood = -3.27
  calculator:couldnt, count = 3, log-likelihood = -4.88
  calculator:count, count = 2, log-likelihood = -5.28
  calculator:countif, count = 9, log-likelihood = -3.78
  calculator:counting, count = 1, log-likelihood = -5.98
  calculator:counts, count = 5, log-likelihood = -4.37
  calculator:couple, count = 1, log-likelihood = -5.98
  calculator:cout, count = 5, log-likelihood = -4.37
  calculator:covered, count = 1, log-likelihood = -5.98
  calculator:cpp, count = 4, log-likelihood = -4.59
  calculator:cppfiles, count = 1, log-likelihood = -5.98
  calculator:crab, count = 1, log-likelihood = -5.98
  calculator:crash, count = 1, log-likelihood = -5.98
  calculator:crashed, count = 1, log-likelihood = -5.98
  calculator:crashes, count = 1, log-likelihood = -5.98
  calculator:create, count = 14, log-likelihood = -3.34
  calculator:created, count = 11, log-likelihood = -3.58
  calculator:creating, count = 1, log-likelihood = -5.98
  calculator:credit, count = 1, log-likelihood = -5.98
  calculator:crustacean, count = 1, log-likelihood = -5.98
  calculator:cstddef, count = 1, log-likelihood = -5.98
  calculator:cstr, count = 2, log-likelihood = -5.28
  calculator:cstrings, count = 1, log-likelihood = -5.98
  calculator:ctools, count = 2, log-likelihood = -5.28
  calculator:ctors, count = 1, log-likelihood = -5.98
  calculator:ctrlc, count = 1, log-likelihood = -5.98
  calculator:curious, count = 1, log-likelihood = -5.98
  calculator:curly, count = 1, log-likelihood = -5.98
  calculator:current, count = 3, log-likelihood = -4.88
  calculator:currently, count = 3, log-likelihood = -4.88
  calculator:custom, count = 2, log-likelihood = -5.28
  calculator:cygwin, count = 2, log-likelihood = -5.28
  calculator:d, count = 3, log-likelihood = -4.88
  calculator:data, count = 4, log-likelihood = -4.59
  calculator:date, count = 1, log-likelihood = -5.98
  calculator:datlisttho, count = 1, log-likelihood = -5.98
  calculator:datlistthopopback, count = 1, log-likelihood = -5.98
  calculator:datum, count = 8, log-likelihood = -3.9
  calculator:day, count = 1, log-likelihood = -5.98
  calculator:deal, count = 4, log-likelihood = -4.59
  calculator:dealing, count = 1, log-likelihood = -5.98
  calculator:debug, count = 3, log-likelihood = -4.88
  calculator:debugged, count = 1, log-likelihood = -5.98
  calculator:debugging, count = 1, log-likelihood = -5.98
  calculator:decided, count = 2, log-likelihood = -5.28
  calculator:decimal, count = 1, log-likelihood = -5.98
  calculator:deciphering, count = 1, log-likelihood = -5.98
  calculator:decks, count = 1, log-likelihood = -5.98
  calculator:declaration, count = 7, log-likelihood = -4.03
  calculator:declarations, count = 4, log-likelihood = -4.59
  calculator:declare, count = 7, log-likelihood = -4.03
  calculator:declared, count = 13, log-likelihood = -3.41
  calculator:declares, count = 1, log-likelihood = -5.98
  calculator:declaring, count = 3, log-likelihood = -4.88
  calculator:deconstructor, count = 3, log-likelihood = -4.88
  calculator:decrement, count = 3, log-likelihood = -4.88
  calculator:decremented, count = 2, log-likelihood = -5.28
  calculator:decructor, count = 1, log-likelihood = -5.98
  calculator:deduced, count = 1, log-likelihood = -5.98
  calculator:deep, count = 1, log-likelihood = -5.98
  calculator:default, count = 8, log-likelihood = -3.9
  calculator:deference, count = 1, log-likelihood = -5.98
  calculator:define, count = 2, log-likelihood = -5.28
  calculator:defined, count = 6, log-likelihood = -4.18
  calculator:definitely, count = 3, log-likelihood = -4.88
  calculator:definition, count = 4, log-likelihood = -4.59
  calculator:delete, count = 13, log-likelihood = -3.41
  calculator:deleted, count = 3, log-likelihood = -4.88
  calculator:deletevoid, count = 2, log-likelihood = -5.28
  calculator:deleting, count = 3, log-likelihood = -4.88
  calculator:den, count = 1, log-likelihood = -5.98
  calculator:denied, count = 2, log-likelihood = -5.28
  calculator:denom, count = 1, log-likelihood = -5.98
  calculator:denominator, count = 11, log-likelihood = -3.58
  calculator:denominatorin, count = 2, log-likelihood = -5.28
  calculator:denominatory, count = 1, log-likelihood = -5.98
  calculator:dependent, count = 2, log-likelihood = -5.28
  calculator:depends, count = 4, log-likelihood = -4.59
  calculator:depth, count = 1, log-likelihood = -5.98
  calculator:dereference, count = 2, log-likelihood = -5.28
  calculator:dereferenceable, count = 5, log-likelihood = -4.37
  calculator:dereferencing, count = 1, log-likelihood = -5.98
  calculator:derived, count = 1, log-likelihood = -5.98
  calculator:described, count = 1, log-likelihood = -5.98
  calculator:description, count = 2, log-likelihood = -5.28
  calculator:despite, count = 2, log-likelihood = -5.28
  calculator:destroy, count = 1, log-likelihood = -5.98
  calculator:destroyed, count = 1, log-likelihood = -5.98
  calculator:destructor, count = 10, log-likelihood = -3.67
  calculator:detailed, count = 1, log-likelihood = -5.98
  calculator:detected, count = 4, log-likelihood = -4.59
  calculator:detector, count = 3, log-likelihood = -4.88
  calculator:determine, count = 5, log-likelihood = -4.37
  calculator:diagnosing, count = 1, log-likelihood = -5.98
  calculator:did, count = 5, log-likelihood = -4.37
  calculator:didnt, count = 7, log-likelihood = -4.03
  calculator:diff, count = 1, log-likelihood = -5.98
  calculator:differ, count = 1, log-likelihood = -5.98
  calculator:difference, count = 6, log-likelihood = -4.18
  calculator:different, count = 10, log-likelihood = -3.67
  calculator:differently, count = 1, log-likelihood = -5.98
  calculator:differs, count = 1, log-likelihood = -5.98
  calculator:digit, count = 1, log-likelihood = -5.98
  calculator:direct, count = 1, log-likelihood = -5.98
  calculator:directly, count = 1, log-likelihood = -5.98
  calculator:director, count = 1, log-likelihood = -5.98
  calculator:directory, count = 3, log-likelihood = -4.88
  calculator:discussing, count = 1, log-likelihood = -5.98
  calculator:distinguish, count = 2, log-likelihood = -5.28
  calculator:distribution, count = 1, log-likelihood = -5.98
  calculator:divided, count = 1, log-likelihood = -5.98
  calculator:do, count = 99, log-likelihood = -1.38
  calculator:does, count = 57, log-likelihood = -1.93
  calculator:doesnt, count = 15, log-likelihood = -3.27
  calculator:doing, count = 14, log-likelihood = -3.34
  calculator:done, count = 4, log-likelihood = -4.59
  calculator:dont, count = 27, log-likelihood = -2.68
  calculator:double, count = 6, log-likelihood = -4.18
  calculator:doublefree, count = 1, log-likelihood = -5.98
  calculator:doubles, count = 1, log-likelihood = -5.98
  calculator:doubly, count = 1, log-likelihood = -5.98
  calculator:down, count = 6, log-likelihood = -4.18
  calculator:downloading, count = 1, log-likelihood = -5.98
  calculator:dozen, count = 1, log-likelihood = -5.98
  calculator:drags, count = 1, log-likelihood = -5.98
  calculator:drama, count = 1, log-likelihood = -5.98
  calculator:drive, count = 2, log-likelihood = -5.28
  calculator:driver, count = 2, log-likelihood = -5.28
  calculator:drop, count = 1, log-likelihood = -5.98
  calculator:dtor, count = 1, log-likelihood = -5.98
  calculator:dtors, count = 1, log-likelihood = -5.98
  calculator:due, count = 5, log-likelihood = -4.37
  calculator:dumb, count = 1, log-likelihood = -5.98
  calculator:duplication, count = 1, log-likelihood = -5.98
  calculator:duration, count = 1, log-likelihood = -5.98
  calculator:during, count = 1, log-likelihood = -5.98
  calculator:dynamic, count = 5, log-likelihood = -4.37
  calculator:each, count = 13, log-likelihood = -3.41
  calculator:early, count = 1, log-likelihood = -5.98
  calculator:edge, count = 2, log-likelihood = -5.28
  calculator:editor, count = 1, log-likelihood = -5.98
  calculator:effect, count = 1, log-likelihood = -5.98
  calculator:effects, count = 5, log-likelihood = -4.37
  calculator:eg, count = 1, log-likelihood = -5.98
  calculator:either, count = 5, log-likelihood = -4.37
  calculator:element, count = 21, log-likelihood = -2.93
  calculator:elements, count = 13, log-likelihood = -3.41
  calculator:else, count = 2, log-likelihood = -5.28
  calculator:elsewhere, count = 1, log-likelihood = -5.98
  calculator:elt, count = 1, log-likelihood = -5.98
  calculator:empty, count = 19, log-likelihood = -3.03
  calculator:emtpy, count = 1, log-likelihood = -5.98
  calculator:enable, count = 1, log-likelihood = -5.98
  calculator:encounter, count = 2, log-likelihood = -5.28
  calculator:end, count = 29, log-likelihood = -2.61
  calculator:endif, count = 1, log-likelihood = -5.98
  calculator:ending, count = 1, log-likelihood = -5.98
  calculator:endl, count = 2, log-likelihood = -5.28
  calculator:ends, count = 2, log-likelihood = -5.28
  calculator:enlighten, count = 1, log-likelihood = -5.98
  calculator:ensure, count = 2, log-likelihood = -5.28
  calculator:enter, count = 2, log-likelihood = -5.28
  calculator:entered, count = 1, log-likelihood = -5.98
  calculator:enters, count = 1, log-likelihood = -5.98
  calculator:entire, count = 2, log-likelihood = -5.28
  calculator:entirely, count = 1, log-likelihood = -5.98
  calculator:entry, count = 2, log-likelihood = -5.28
  calculator:environment, count = 2, log-likelihood = -5.28
  calculator:equal, count = 7, log-likelihood = -4.03
  calculator:equals, count = 1, log-likelihood = -5.98
  calculator:equivalent, count = 1, log-likelihood = -5.98
  calculator:erase, count = 13, log-likelihood = -3.41
  calculator:erased, count = 1, log-likelihood = -5.98
  calculator:error, count = 81, log-likelihood = -1.58
  calculator:errors, count = 30, log-likelihood = -2.58
  calculator:escape, count = 1, log-likelihood = -5.98
  calculator:especially, count = 1, log-likelihood = -5.98
  calculator:essentially, count = 1, log-likelihood = -5.98
  calculator:establish, count = 1, log-likelihood = -5.98
  calculator:et, count = 3, log-likelihood = -4.88
  calculator:etc, count = 6, log-likelihood = -4.18
  calculator:euclid, count = 1, log-likelihood = -5.98
  calculator:euros, count = 1, log-likelihood = -5.98
  calculator:evaluated, count = 1, log-likelihood = -5.98
  calculator:even, count = 13, log-likelihood = -3.41
  calculator:ever, count = 1, log-likelihood = -5.98
  calculator:every, count = 8, log-likelihood = -3.9
  calculator:everyone, count = 2, log-likelihood = -5.28
  calculator:everything, count = 9, log-likelihood = -3.78
  calculator:everytime, count = 2, log-likelihood = -5.28
  calculator:ex, count = 1, log-likelihood = -5.98
  calculator:exact, count = 3, log-likelihood = -4.88
  calculator:exactly, count = 8, log-likelihood = -3.9
  calculator:example, count = 23, log-likelihood = -2.84
  calculator:examples, count = 2, log-likelihood = -5.28
  calculator:except, count = 4, log-likelihood = -4.59
  calculator:exception, count = 7, log-likelihood = -4.03
  calculator:exceptions, count = 1, log-likelihood = -5.98
  calculator:exec, count = 1, log-likelihood = -5.98
  calculator:executable, count = 1, log-likelihood = -5.98
  calculator:execute, count = 1, log-likelihood = -5.98
  calculator:executes, count = 1, log-likelihood = -5.98
  calculator:execvp, count = 1, log-likelihood = -5.98
  calculator:exist, count = 1, log-likelihood = -5.98
  calculator:existing, count = 1, log-likelihood = -5.98
  calculator:exists, count = 2, log-likelihood = -5.28
  calculator:exit, count = 10, log-likelihood = -3.67
  calculator:exit0, count = 1, log-likelihood = -5.98
  calculator:exiting, count = 2, log-likelihood = -5.28
  calculator:expected, count = 2, log-likelihood = -5.28
  calculator:experiencing, count = 1, log-likelihood = -5.98
  calculator:experiment, count = 1, log-likelihood = -5.98
  calculator:explain, count = 5, log-likelihood = -4.37
  calculator:explains, count = 1, log-likelihood = -5.98
  calculator:explanation, count = 2, log-likelihood = -5.28
  calculator:explicit, count = 1, log-likelihood = -5.98
  calculator:expression, count = 3, log-likelihood = -4.88
  calculator:extension, count = 1, log-likelihood = -5.98
  calculator:extern, count = 1, log-likelihood = -5.98
  calculator:extra, count = 2, log-likelihood = -5.28
  calculator:extract, count = 1, log-likelihood = -5.98
  calculator:extraction, count = 1, log-likelihood = -5.98
  calculator:fact, count = 1, log-likelihood = -5.98
  calculator:factor, count = 1, log-likelihood = -5.98
  calculator:factors, count = 1, log-likelihood = -5.98
  calculator:fail, count = 5, log-likelihood = -4.37
  calculator:failed, count = 11, log-likelihood = -3.58
  calculator:failing, count = 4, log-likelihood = -4.59
  calculator:fails, count = 3, log-likelihood = -4.88
  calculator:failure, count = 1, log-likelihood = -5.98
  calculator:fairly, count = 1, log-likelihood = -5.98
  calculator:false, count = 3, log-likelihood = -4.88
  calculator:familiar, count = 1, log-likelihood = -5.98
  calculator:faq, count = 1, log-likelihood = -5.98
  calculator:faqs, count = 1, log-likelihood = -5.98
  calculator:fast, count = 1, log-likelihood = -5.98
  calculator:fasttop, count = 3, log-likelihood = -4.88
  calculator:fault, count = 7, log-likelihood = -4.03
  calculator:faults, count = 1, log-likelihood = -5.98
  calculator:fd01, count = 2, log-likelihood = -5.28
  calculator:fed, count = 1, log-likelihood = -5.98
  calculator:feedback, count = 2, log-likelihood = -5.28
  calculator:feel, count = 2, log-likelihood = -5.28
  calculator:feels, count = 1, log-likelihood = -5.98
  calculator:few, count = 2, log-likelihood = -5.28
  calculator:ffffffffff600000ffffffffff601000, count = 2, log-likelihood = -5.28
  calculator:figure, count = 9, log-likelihood = -3.78
  calculator:file, count = 35, log-likelihood = -2.42
  calculator:files, count = 21, log-likelihood = -2.93
  calculator:fin, count = 1, log-likelihood = -5.98
  calculator:final, count = 2, log-likelihood = -5.28
  calculator:find, count = 10, log-likelihood = -3.67
  calculator:finding, count = 2, log-likelihood = -5.28
  calculator:finds, count = 1, log-likelihood = -5.98
  calculator:fine, count = 10, log-likelihood = -3.67
  calculator:finished, count = 4, log-likelihood = -4.59
  calculator:finishes, count = 1, log-likelihood = -5.98
  calculator:first, count = 34, log-likelihood = -2.45
  calculator:firstlast, count = 2, log-likelihood = -5.28
  calculator:fit, count = 1, log-likelihood = -5.98
  calculator:five, count = 1, log-likelihood = -5.98
  calculator:fix, count = 8, log-likelihood = -3.9
  calculator:fixes, count = 1, log-likelihood = -5.98
  calculator:fixing, count = 2, log-likelihood = -5.28
  calculator:flag, count = 1, log-likelihood = -5.98
  calculator:flagged, count = 1, log-likelihood = -5.98
  calculator:folder, count = 1, log-likelihood = -5.98
  calculator:follow, count = 4, log-likelihood = -4.59
  calculator:followed, count = 3, log-likelihood = -4.88
  calculator:following, count = 20, log-likelihood = -2.98
  calculator:follows, count = 1, log-likelihood = -5.98
  calculator:for, count = 159, log-likelihood = -0.907
  calculator:forbids, count = 1, log-likelihood = -5.98
  calculator:force, count = 1, log-likelihood = -5.98
  calculator:forever, count = 1, log-likelihood = -5.98
  calculator:forlistt, count = 1, log-likelihood = -5.98
  calculator:form, count = 4, log-likelihood = -4.59
  calculator:format, count = 2, log-likelihood = -5.28
  calculator:formulas, count = 1, log-likelihood = -5.98
  calculator:found, count = 9, log-likelihood = -3.78
  calculator:four, count = 1, log-likelihood = -5.98
  calculator:fpermissive, count = 1, log-likelihood = -5.98
  calculator:fractions, count = 1, log-likelihood = -5.98
  calculator:frank, count = 1, log-likelihood = -5.98
  calculator:free, count = 6, log-likelihood = -4.18
  calculator:freed, count = 5, log-likelihood = -4.37
  calculator:frees, count = 4, log-likelihood = -4.59
  calculator:frequently, count = 1, log-likelihood = -5.98
  calculator:friend, count = 6, log-likelihood = -4.18
  calculator:from, count = 52, log-likelihood = -2.03
  calculator:front, count = 8, log-likelihood = -3.9
  calculator:frontprev, count = 1, log-likelihood = -5.98
  calculator:frustrated, count = 1, log-likelihood = -5.98
  calculator:fstream, count = 1, log-likelihood = -5.98
  calculator:fuction, count = 1, log-likelihood = -5.98
  calculator:full, count = 4, log-likelihood = -4.59
  calculator:funcitons, count = 1, log-likelihood = -5.98
  calculator:function, count = 79, log-likelihood = -1.61
  calculator:functionality, count = 1, log-likelihood = -5.98
  calculator:functionoperator, count = 1, log-likelihood = -5.98
  calculator:functions, count = 48, log-likelihood = -2.11
  calculator:functor, count = 5, log-likelihood = -4.37
  calculator:functors, count = 2, log-likelihood = -5.28
  calculator:funtor, count = 1, log-likelihood = -5.98
  calculator:furthermore, count = 1, log-likelihood = -5.98
  calculator:fxn, count = 1, log-likelihood = -5.98
  calculator:g, count = 8, log-likelihood = -3.9
  calculator:gathered, count = 1, log-likelihood = -5.98
  calculator:gave, count = 1, log-likelihood = -5.98
  calculator:gcd, count = 2, log-likelihood = -5.28
  calculator:gcinit, count = 1, log-likelihood = -5.98
  calculator:gdb, count = 2, log-likelihood = -5.28
  calculator:geared, count = 1, log-likelihood = -5.98
  calculator:general, count = 1, log-likelihood = -5.98
  calculator:get, count = 59, log-likelihood = -1.9
  calculator:getdenom, count = 1, log-likelihood = -5.98
  calculator:getdenominator, count = 1, log-likelihood = -5.98
  calculator:getnum, count = 1, log-likelihood = -5.98
  calculator:getnumerator, count = 3, log-likelihood = -4.88
  calculator:getnumeratordenominator, count = 1, log-likelihood = -5.98
  calculator:gets, count = 2, log-likelihood = -5.28
  calculator:getter, count = 1, log-likelihood = -5.98
  calculator:getting, count = 34, log-likelihood = -2.45
  calculator:give, count = 8, log-likelihood = -3.9
  calculator:given, count = 16, log-likelihood = -3.2
  calculator:gives, count = 8, log-likelihood = -3.9
  calculator:giving, count = 4, log-likelihood = -4.59
  calculator:gnu, count = 3, log-likelihood = -4.88
  calculator:go, count = 5, log-likelihood = -4.37
  calculator:goes, count = 4, log-likelihood = -4.59
  calculator:going, count = 8, log-likelihood = -3.9
  calculator:gone, count = 2, log-likelihood = -5.28
  calculator:good, count = 3, log-likelihood = -4.88
  calculator:google, count = 1, log-likelihood = -5.98
  calculator:googled, count = 1, log-likelihood = -5.98
  calculator:got, count = 4, log-likelihood = -4.59
  calculator:gpld, count = 3, log-likelihood = -4.88
  calculator:grade, count = 3, log-likelihood = -4.88
  calculator:gradebook, count = 1, log-likelihood = -5.98
  calculator:graded, count = 2, log-likelihood = -5.28
  calculator:grading, count = 1, log-likelihood = -5.98
  calculator:great, count = 1, log-likelihood = -5.98
  calculator:greater, count = 1, log-likelihood = -5.98
  calculator:greatern, count = 1, log-likelihood = -5.98
  calculator:greatest, count = 3, log-likelihood = -4.88
  calculator:greatly, count = 1, log-likelihood = -5.98
  calculator:greeted, count = 1, log-likelihood = -5.98
  calculator:growing, count = 1, log-likelihood = -5.98
  calculator:gsi, count = 1, log-likelihood = -5.98
  calculator:guess, count = 3, log-likelihood = -4.88
  calculator:guesses, count = 1, log-likelihood = -5.98
  calculator:guessing, count = 2, log-likelihood = -5.28
  calculator:h, count = 9, log-likelihood = -3.78
  calculator:had, count = 8, log-likelihood = -3.9
  calculator:half, count = 1, log-likelihood = -5.98
  calculator:halts, count = 1, log-likelihood = -5.98
  calculator:hand, count = 2, log-likelihood = -5.28
  calculator:handle, count = 4, log-likelihood = -4.59
  calculator:hanging, count = 1, log-likelihood = -5.98
  calculator:happen, count = 5, log-likelihood = -4.37
  calculator:happening, count = 14, log-likelihood = -3.34
  calculator:happens, count = 8, log-likelihood = -3.9
  calculator:hard, count = 2, log-likelihood = -5.28
  calculator:has, count = 25, log-likelihood = -2.76
  calculator:have, count = 87, log-likelihood = -1.51
  calculator:having, count = 7, log-likelihood = -4.03
  calculator:hdrive, count = 1, log-likelihood = -5.98
  calculator:head, count = 1, log-likelihood = -5.98
  calculator:header, count = 2, log-likelihood = -5.28
  calculator:heap, count = 8, log-likelihood = -3.9
  calculator:held, count = 1, log-likelihood = -5.98
  calculator:hello, count = 6, log-likelihood = -4.18
  calculator:help, count = 17, log-likelihood = -3.14
  calculator:helper, count = 8, log-likelihood = -3.9
  calculator:here, count = 15, log-likelihood = -3.27
  calculator:hey, count = 2, log-likelihood = -5.28
  calculator:hi, count = 13, log-likelihood = -3.41
  calculator:hiccups, count = 1, log-likelihood = -5.98
  calculator:high, count = 1, log-likelihood = -5.98
  calculator:hint, count = 2, log-likelihood = -5.28
  calculator:hitting, count = 1, log-likelihood = -5.98
  calculator:hold, count = 1, log-likelihood = -5.98
  calculator:homejesserbeecs280project5listtesteraseinsertexe, count = 1, log-likelihood = -5.98
  calculator:homejuniusmueecs280project, count = 1, log-likelihood = -5.98
  calculator:homerdkiblereecs280project5starterfilesstacktestpublicexe, count = 1, log-likelihood = -5.98
  calculator:homewbarajaseecs280project5listcompilecheck, count = 1, log-likelihood = -5.98
  calculator:hopefully, count = 1, log-likelihood = -5.98
  calculator:hoping, count = 1, log-likelihood = -5.98
  calculator:hour, count = 1, log-likelihood = -5.98
  calculator:hours, count = 2, log-likelihood = -5.28
  calculator:how, count = 70, log-likelihood = -1.73
  calculator:however, count = 32, log-likelihood = -2.51
  calculator:huge, count = 3, log-likelihood = -4.88
  calculator:hundreds, count = 1, log-likelihood = -5.98
  calculator:i, count = 225, log-likelihood = -0.56
  calculator:ibdoing, count = 1, log-likelihood = -5.98
  calculator:id, count = 1, log-likelihood = -5.98
  calculator:idea, count = 15, log-likelihood = -3.27
  calculator:ideas, count = 15, log-likelihood = -3.27
  calculator:identical, count = 1, log-likelihood = -5.98
  calculator:identifier, count = 1, log-likelihood = -5.98
  calculator:ie, count = 5, log-likelihood = -4.37
  calculator:if, count = 102, log-likelihood = -1.35
  calculator:ifcount, count = 1, log-likelihood = -5.98
  calculator:ifeven, count = 1, log-likelihood = -5.98
  calculator:ifstoiword, count = 1, log-likelihood = -5.98
  calculator:ifstream, count = 2, log-likelihood = -5.28
  calculator:ifstringinput, count = 1, log-likelihood = -5.98
  calculator:ignore, count = 1, log-likelihood = -5.98
  calculator:ignored, count = 2, log-likelihood = -5.28
  calculator:ill, count = 1, log-likelihood = -5.98
  calculator:illegal, count = 1, log-likelihood = -5.98
  calculator:im, count = 60, log-likelihood = -1.88
  calculator:implement, count = 14, log-likelihood = -3.34
  calculator:implementation, count = 11, log-likelihood = -3.58
  calculator:implementations, count = 6, log-likelihood = -4.18
  calculator:implemented, count = 10, log-likelihood = -3.67
  calculator:implementing, count = 7, log-likelihood = -4.03
  calculator:implies, count = 1, log-likelihood = -5.98
  calculator:implimentation, count = 1, log-likelihood = -5.98
  calculator:important, count = 1, log-likelihood = -5.98
  calculator:impossible, count = 2, log-likelihood = -5.28
  calculator:improvements, count = 1, log-likelihood = -5.98
  calculator:in, count = 236, log-likelihood = -0.513
  calculator:include, count = 10, log-likelihood = -3.67
  calculator:included, count = 10, log-likelihood = -3.67
  calculator:includestring, count = 1, log-likelihood = -5.98
  calculator:including, count = 5, log-likelihood = -4.37
  calculator:inclusions, count = 1, log-likelihood = -5.98
  calculator:incorrect, count = 2, log-likelihood = -5.28
  calculator:incorrectly, count = 1, log-likelihood = -5.98
  calculator:increment, count = 2, log-likelihood = -5.28
  calculator:incremented, count = 1, log-likelihood = -5.98
  calculator:index, count = 1, log-likelihood = -5.98
  calculator:indirection, count = 1, log-likelihood = -5.98
  calculator:indirectly, count = 2, log-likelihood = -5.28
  calculator:individual, count = 1, log-likelihood = -5.98
  calculator:infinite, count = 4, log-likelihood = -4.59
  calculator:infinitely, count = 1, log-likelihood = -5.98
  calculator:infinity, count = 5, log-likelihood = -4.37
  calculator:info, count = 4, log-likelihood = -4.59
  calculator:informs, count = 1, log-likelihood = -5.98
  calculator:inin, count = 1, log-likelihood = -5.98
  calculator:initial, count = 1, log-likelihood = -5.98
  calculator:initialization, count = 2, log-likelihood = -5.28
  calculator:initialize, count = 3, log-likelihood = -4.88
  calculator:initialized, count = 3, log-likelihood = -4.88
  calculator:inodeptr, count = 1, log-likelihood = -5.98
  calculator:input, count = 25, log-likelihood = -2.76
  calculator:inputcin, count = 1, log-likelihood = -5.98
  calculator:inputed, count = 1, log-likelihood = -5.98
  calculator:inputs, count = 5, log-likelihood = -4.37
  calculator:inputted, count = 2, log-likelihood = -5.28
  calculator:inputting, count = 1, log-likelihood = -5.98
  calculator:insert, count = 20, log-likelihood = -2.98
  calculator:inserted, count = 2, log-likelihood = -5.28
  calculator:insertion, count = 2, log-likelihood = -5.28
  calculator:insertiter, count = 2, log-likelihood = -5.28
  calculator:insertiterator, count = 1, log-likelihood = -5.98
  calculator:inserts, count = 2, log-likelihood = -5.28
  calculator:inside, count = 13, log-likelihood = -3.41
  calculator:insight, count = 1, log-likelihood = -5.98
  calculator:insights, count = 1, log-likelihood = -5.98
  calculator:installation, count = 1, log-likelihood = -5.98
  calculator:installing, count = 1, log-likelihood = -5.98
  calculator:instance, count = 2, log-likelihood = -5.28
  calculator:instantiation, count = 2, log-likelihood = -5.28
  calculator:instead, count = 10, log-likelihood = -3.67
  calculator:instructions, count = 1, log-likelihood = -5.98
  calculator:insufficient, count = 1, log-likelihood = -5.98
  calculator:int, count = 22, log-likelihood = -2.89
  calculator:integer, count = 5, log-likelihood = -4.37
  calculator:integers, count = 5, log-likelihood = -4.37
  calculator:integersor, count = 1, log-likelihood = -5.98
  calculator:interface, count = 9, log-likelihood = -3.78
  calculator:internal, count = 2, log-likelihood = -5.28
  calculator:interpret, count = 1, log-likelihood = -5.98
  calculator:interpretation, count = 1, log-likelihood = -5.98
  calculator:interpretations, count = 1, log-likelihood = -5.98
  calculator:into, count = 24, log-likelihood = -2.8
  calculator:ints, count = 2, log-likelihood = -5.28
  calculator:intuitively, count = 1, log-likelihood = -5.98
  calculator:int’, count = 1, log-likelihood = -5.98
  calculator:invalid, count = 9, log-likelihood = -3.78
  calculator:invalidate, count = 1, log-likelihood = -5.98
  calculator:invalidated, count = 2, log-likelihood = -5.28
  calculator:invalidating, count = 1, log-likelihood = -5.98
  calculator:invariant, count = 6, log-likelihood = -4.18
  calculator:invariants, count = 7, log-likelihood = -4.03
  calculator:invarients, count = 1, log-likelihood = -5.98
  calculator:invocation, count = 2, log-likelihood = -5.28
  calculator:invoked, count = 1, log-likelihood = -5.98
  calculator:involved, count = 1, log-likelihood = -5.98
  calculator:iostream, count = 1, log-likelihood = -5.98
  calculator:is, count = 204, log-likelihood = -0.658
  calculator:isnt, count = 4, log-likelihood = -4.59
  calculator:iso, count = 1, log-likelihood = -5.98
  calculator:issue, count = 4, log-likelihood = -4.59
  calculator:issues, count = 1, log-likelihood = -5.98
  calculator:istream, count = 1, log-likelihood = -5.98
  calculator:it, count = 173, log-likelihood = -0.823
  calculator:itd, count = 1, log-likelihood = -5.98
  calculator:item, count = 2, log-likelihood = -5.28
  calculator:items, count = 2, log-likelihood = -5.28
  calculator:iter, count = 8, log-likelihood = -3.9
  calculator:iter1, count = 1, log-likelihood = -5.98
  calculator:iter2, count = 2, log-likelihood = -5.28
  calculator:iterate, count = 2, log-likelihood = -5.28
  calculator:iterating, count = 1, log-likelihood = -5.98
  calculator:iterator, count = 65, log-likelihood = -1.8
  calculator:iteratorfirst, count = 2, log-likelihood = -5.28
  calculator:iteratorie, count = 1, log-likelihood = -5.98
  calculator:iteratoroperator, count = 1, log-likelihood = -5.98
  calculator:iterators, count = 10, log-likelihood = -3.67
  calculator:iteratorthisfirst, count = 1, log-likelihood = -5.98
  calculator:itll, count = 1, log-likelihood = -5.98
  calculator:its, count = 26, log-likelihood = -2.72
  calculator:itself, count = 4, log-likelihood = -4.59
  calculator:ive, count = 13, log-likelihood = -3.41
  calculator:jobs, count = 1, log-likelihood = -5.98
  calculator:julian, count = 3, log-likelihood = -4.88
  calculator:jump, count = 3, log-likelihood = -4.88
  calculator:junk, count = 1, log-likelihood = -5.98
  calculator:just, count = 63, log-likelihood = -1.83
  calculator:keep, count = 9, log-likelihood = -3.78
  calculator:key, count = 2, log-likelihood = -5.28
  calculator:keyword, count = 3, log-likelihood = -4.88
  calculator:keywords, count = 1, log-likelihood = -5.98
  calculator:killed, count = 1, log-likelihood = -5.98
  calculator:kind, count = 3, log-likelihood = -4.88
  calculator:know, count = 31, log-likelihood = -2.54
  calculator:knowing, count = 1, log-likelihood = -5.98
  calculator:knowledge, count = 3, log-likelihood = -4.88
  calculator:lab, count = 1, log-likelihood = -5.98
  calculator:lab03, count = 1, log-likelihood = -5.98
  calculator:labs, count = 1, log-likelihood = -5.98
  calculator:lala, count = 1, log-likelihood = -5.98
  calculator:land, count = 1, log-likelihood = -5.98
  calculator:larger, count = 1, log-likelihood = -5.98
  calculator:last, count = 28, log-likelihood = -2.64
  calculator:lastnext, count = 1, log-likelihood = -5.98
  calculator:later, count = 1, log-likelihood = -5.98
  calculator:layoutstringcreate, count = 1, log-likelihood = -5.98
  calculator:ld, count = 4, log-likelihood = -4.59
  calculator:leak, count = 7, log-likelihood = -4.03
  calculator:leakcheckfull, count = 1, log-likelihood = -5.98
  calculator:leakcheckyes, count = 1, log-likelihood = -5.98
  calculator:leaks, count = 6, log-likelihood = -4.18
  calculator:learned, count = 1, log-likelihood = -5.98
  calculator:leasmisallocations, count = 1, log-likelihood = -5.98
  calculator:least, count = 5, log-likelihood = -4.37
  calculator:leave, count = 1, log-likelihood = -5.98
  calculator:lecture, count = 14, log-likelihood = -3.34
  calculator:lectures, count = 1, log-likelihood = -5.98
  calculator:left, count = 2, log-likelihood = -5.28
  calculator:lengthy, count = 1, log-likelihood = -5.98
  calculator:let, count = 3, log-likelihood = -4.88
  calculator:lets, count = 1, log-likelihood = -5.98
  calculator:letting, count = 1, log-likelihood = -5.98
  calculator:level, count = 1, log-likelihood = -5.98
  calculator:levels, count = 1, log-likelihood = -5.98
  calculator:lhs, count = 2, log-likelihood = -5.28
  calculator:lib64libcso60x7d0230x7f077c17e023, count = 1, log-likelihood = -5.98
  calculator:lib64libcso60x7d0230x7f799c7bb023, count = 1, log-likelihood = -5.98
  calculator:lib64libcso60x7d0230x7f8a89d84023, count = 1, log-likelihood = -5.98
  calculator:lib64libcso6libcstartmain0xf50x7f077c122b15, count = 1, log-likelihood = -5.98
  calculator:lib64libcso6libcstartmain0xf50x7f799c75fb15, count = 1, log-likelihood = -5.98
  calculator:lib64libcso6libcstartmain0xf50x7f8a89d28b15, count = 1, log-likelihood = -5.98
  calculator:libcabidylib, count = 1, log-likelihood = -5.98
  calculator:libraries, count = 2, log-likelihood = -5.28
  calculator:library, count = 3, log-likelihood = -4.88
  calculator:libvex, count = 3, log-likelihood = -4.88
  calculator:light, count = 2, log-likelihood = -5.28
  calculator:like, count = 39, log-likelihood = -2.31
  calculator:line, count = 22, log-likelihood = -2.89
  calculator:lines, count = 2, log-likelihood = -5.28
  calculator:linked, count = 4, log-likelihood = -4.59
  calculator:linker, count = 3, log-likelihood = -4.88
  calculator:linux, count = 3, log-likelihood = -4.88
  calculator:list, count = 111, log-likelihood = -1.27
  calculator:list1, count = 2, log-likelihood = -5.28
  calculator:list2, count = 2, log-likelihood = -5.28
  calculator:listbegin, count = 1, log-likelihood = -5.98
  calculator:listcompilecheck, count = 15, log-likelihood = -3.27
  calculator:listcompilecheck0x400969, count = 1, log-likelihood = -5.98
  calculator:listcompilecheck0x400af9, count = 1, log-likelihood = -5.98
  calculator:listcompilecheck0x400b8f, count = 1, log-likelihood = -5.98
  calculator:listcompilecheck0x400de7, count = 1, log-likelihood = -5.98
  calculator:listcompilecheck0x400eba, count = 1, log-likelihood = -5.98
  calculator:listcompilecheck0x4010f5, count = 1, log-likelihood = -5.98
  calculator:listcompilecheckcpp, count = 6, log-likelihood = -4.18
  calculator:listcompilecheckcpp10, count = 1, log-likelihood = -5.98
  calculator:listcompilecheckcpp1315, count = 1, log-likelihood = -5.98
  calculator:listend, count = 1, log-likelihood = -5.98
  calculator:listh, count = 25, log-likelihood = -2.76
  calculator:listh16, count = 1, log-likelihood = -5.98
  calculator:listh1611, count = 1, log-likelihood = -5.98
  calculator:listh16632, count = 1, log-likelihood = -5.98
  calculator:listh18916, count = 1, log-likelihood = -5.98
  calculator:listh20020, count = 1, log-likelihood = -5.98
  calculator:listh22615, count = 1, log-likelihood = -5.98
  calculator:listh22764, count = 1, log-likelihood = -5.98
  calculator:listh4886, count = 1, log-likelihood = -5.98
  calculator:listh9725, count = 1, log-likelihood = -5.98
  calculator:listinsertit, count = 1, log-likelihood = -5.98
  calculator:listinserts, count = 1, log-likelihood = -5.98
  calculator:listint, count = 5, log-likelihood = -4.37
  calculator:listintbegin, count = 1, log-likelihood = -5.98
  calculator:listintcopyalllistint, count = 2, log-likelihood = -5.28
  calculator:listintend, count = 1, log-likelihood = -5.98
  calculator:listintfront, count = 1, log-likelihood = -5.98
  calculator:listintinsertlistintiterator, count = 1, log-likelihood = -5.98
  calculator:listintiterator, count = 4, log-likelihood = -4.59
  calculator:listintiteratoriteratorlistintnode, count = 1, log-likelihood = -5.98
  calculator:listintiteratoroperator, count = 2, log-likelihood = -5.28
  calculator:listintnode, count = 1, log-likelihood = -5.98
  calculator:listintoldlist, count = 1, log-likelihood = -5.98
  calculator:listintpopback, count = 1, log-likelihood = -5.98
  calculator:listintpopfront, count = 2, log-likelihood = -5.28
  calculator:listintsize, count = 1, log-likelihood = -5.98
  calculator:listnode, count = 1, log-likelihood = -5.98
  calculator:listpushbackconst, count = 1, log-likelihood = -5.98
  calculator:lists, count = 10, log-likelihood = -3.67
  calculator:listsize, count = 1, log-likelihood = -5.98
  calculator:liststring, count = 1, log-likelihood = -5.98
  calculator:listt, count = 2, log-likelihood = -5.28
  calculator:listtbegin, count = 1, log-likelihood = -5.98
  calculator:listtempty, count = 1, log-likelihood = -5.98
  calculator:listtest, count = 1, log-likelihood = -5.98
  calculator:listtest00, count = 1, log-likelihood = -5.98
  calculator:listtest1cpptext0x14, count = 1, log-likelihood = -5.98
  calculator:listtest1cpptext0x5, count = 1, log-likelihood = -5.98
  calculator:listtest1cpptext0xa, count = 1, log-likelihood = -5.98
  calculator:listtest1cpptext0xf, count = 1, log-likelihood = -5.98
  calculator:listtest1exe, count = 1, log-likelihood = -5.98
  calculator:listtestbasiccpp, count = 1, log-likelihood = -5.98
  calculator:listtestbasicexe, count = 1, log-likelihood = -5.98
  calculator:listtestbasicintcpp, count = 1, log-likelihood = -5.98
  calculator:listtestbasicintcpp1, count = 1, log-likelihood = -5.98
  calculator:listtestbasicintcpp4714, count = 1, log-likelihood = -5.98
  calculator:listtestconstructorso, count = 1, log-likelihood = -5.98
  calculator:listtestcpp, count = 1, log-likelihood = -5.98
  calculator:listtesteraseinsertcpp, count = 1, log-likelihood = -5.98
  calculator:listtesteraseinsertexe, count = 1, log-likelihood = -5.98
  calculator:listtests, count = 4, log-likelihood = -4.59
  calculator:listteststartercpp, count = 1, log-likelihood = -5.98
  calculator:listteststartercpp2342, count = 1, log-likelihood = -5.98
  calculator:listteststarterexe, count = 3, log-likelihood = -4.88
  calculator:listteststartero, count = 1, log-likelihood = -5.98
  calculator:listteststringcpp, count = 1, log-likelihood = -5.98
  calculator:listteststringcpp188, count = 1, log-likelihood = -5.98
  calculator:listtiterator, count = 7, log-likelihood = -4.03
  calculator:listtiteratorend, count = 1, log-likelihood = -5.98
  calculator:listtiteratoroperator, count = 3, log-likelihood = -4.88
  calculator:listtiteratoroperatoriterator, count = 1, log-likelihood = -5.98
  calculator:listtiteratoroperatorlisttiterator, count = 1, log-likelihood = -5.98
  calculator:listtiteratoroperatortypename, count = 1, log-likelihood = -5.98
  calculator:listtoperatorconst, count = 1, log-likelihood = -5.98
  calculator:little, count = 4, log-likelihood = -4.59
  calculator:loading, count = 1, log-likelihood = -5.98
  calculator:lobster, count = 1, log-likelihood = -5.98
  calculator:local, count = 1, log-likelihood = -5.98
  calculator:locally, count = 1, log-likelihood = -5.98
  calculator:locate, count = 2, log-likelihood = -5.28
  calculator:location, count = 2, log-likelihood = -5.28
  calculator:locations, count = 1, log-likelihood = -5.98
  calculator:long, count = 6, log-likelihood = -4.18
  calculator:longer, count = 1, log-likelihood = -5.98
  calculator:look, count = 5, log-likelihood = -4.37
  calculator:looked, count = 4, log-likelihood = -4.59
  calculator:looking, count = 1, log-likelihood = -5.98
  calculator:looks, count = 1, log-likelihood = -5.98
  calculator:lookup, count = 1, log-likelihood = -5.98
  calculator:loop, count = 5, log-likelihood = -4.37
  calculator:loops, count = 1, log-likelihood = -5.98
  calculator:lose, count = 2, log-likelihood = -5.28
  calculator:losing, count = 1, log-likelihood = -5.98
  calculator:loss, count = 2, log-likelihood = -5.28
  calculator:lost, count = 7, log-likelihood = -4.03
  calculator:lot, count = 3, log-likelihood = -4.88
  calculator:lower, count = 1, log-likelihood = -5.98
  calculator:lowest, count = 1, log-likelihood = -5.98
  calculator:luck, count = 1, log-likelihood = -5.98
  calculator:lvalue, count = 1, log-likelihood = -5.98
  calculator:lying, count = 1, log-likelihood = -5.98
  calculator:m, count = 2, log-likelihood = -5.28
  calculator:machine, count = 1, log-likelihood = -5.98
  calculator:made, count = 7, log-likelihood = -4.03
  calculator:main, count = 15, log-likelihood = -3.27
  calculator:main’, count = 1, log-likelihood = -5.98
  calculator:majority, count = 1, log-likelihood = -5.98
  calculator:make, count = 47, log-likelihood = -2.13
  calculator:makefile, count = 3, log-likelihood = -4.88
  calculator:makes, count = 2, log-likelihood = -5.28
  calculator:making, count = 2, log-likelihood = -5.28
  calculator:malloc, count = 1, log-likelihood = -5.98
  calculator:mallocerrorbreak, count = 1, log-likelihood = -5.98
  calculator:malloczonemalloc, count = 1, log-likelihood = -5.98
  calculator:manage, count = 1, log-likelihood = -5.98
  calculator:manipulate, count = 1, log-likelihood = -5.98
  calculator:manipulation, count = 1, log-likelihood = -5.98
  calculator:manually, count = 2, log-likelihood = -5.28
  calculator:many, count = 4, log-likelihood = -4.59
  calculator:map, count = 3, log-likelihood = -4.88
  calculator:match, count = 8, log-likelihood = -3.9
  calculator:matcher, count = 1, log-likelihood = -5.98
  calculator:matches, count = 1, log-likelihood = -5.98
  calculator:matching, count = 1, log-likelihood = -5.98
  calculator:matter, count = 1, log-likelihood = -5.98
  calculator:max, count = 1, log-likelihood = -5.98
  calculator:maxos, count = 1, log-likelihood = -5.98
  calculator:may, count = 10, log-likelihood = -3.67
  calculator:maybe, count = 3, log-likelihood = -4.88
  calculator:me, count = 26, log-likelihood = -2.72
  calculator:mean, count = 29, log-likelihood = -2.61
  calculator:meaning, count = 1, log-likelihood = -5.98
  calculator:means, count = 7, log-likelihood = -4.03
  calculator:meant, count = 1, log-likelihood = -5.98
  calculator:member, count = 25, log-likelihood = -2.76
  calculator:members, count = 5, log-likelihood = -4.37
  calculator:memcheck, count = 3, log-likelihood = -4.88
  calculator:memory, count = 17, log-likelihood = -3.14
  calculator:mentions, count = 1, log-likelihood = -5.98
  calculator:merely, count = 1, log-likelihood = -5.98
  calculator:message, count = 12, log-likelihood = -3.49
  calculator:messed, count = 1, log-likelihood = -5.98
  calculator:met, count = 1, log-likelihood = -5.98
  calculator:method, count = 6, log-likelihood = -4.18
  calculator:methods, count = 2, log-likelihood = -5.28
  calculator:microsoft, count = 1, log-likelihood = -5.98
  calculator:might, count = 6, log-likelihood = -4.18
  calculator:mimicking, count = 1, log-likelihood = -5.98
  calculator:mind, count = 1, log-likelihood = -5.98
  calculator:minute, count = 2, log-likelihood = -5.28
  calculator:missing, count = 7, log-likelihood = -4.03
  calculator:mistake, count = 2, log-likelihood = -5.28
  calculator:mistaken, count = 1, log-likelihood = -5.98
  calculator:misunderstand, count = 1, log-likelihood = -5.98
  calculator:misunderstanding, count = 2, log-likelihood = -5.28
  calculator:modified, count = 1, log-likelihood = -5.98
  calculator:modifies, count = 3, log-likelihood = -4.88
  calculator:modify, count = 6, log-likelihood = -4.18
  calculator:modifying, count = 1, log-likelihood = -5.98
  calculator:more, count = 11, log-likelihood = -3.58
  calculator:most, count = 3, log-likelihood = -4.88
  calculator:move, count = 5, log-likelihood = -4.37
  calculator:moving, count = 1, log-likelihood = -5.98
  calculator:much, count = 2, log-likelihood = -5.28
  calculator:multiple, count = 1, log-likelihood = -5.98
  calculator:multiply, count = 2, log-likelihood = -5.28
  calculator:multiplying, count = 1, log-likelihood = -5.98
  calculator:must, count = 16, log-likelihood = -3.2
  calculator:my, count = 93, log-likelihood = -1.44
  calculator:mylist, count = 4, log-likelihood = -4.59
  calculator:mylistbegin, count = 3, log-likelihood = -4.88
  calculator:mylistinsertiter, count = 1, log-likelihood = -5.98
  calculator:mylistmylist, count = 1, log-likelihood = -5.98
  calculator:myself, count = 3, log-likelihood = -4.88
  calculator:mysterious, count = 1, log-likelihood = -5.98
  calculator:n, count = 2, log-likelihood = -5.28
  calculator:name, count = 5, log-likelihood = -4.37
  calculator:named, count = 2, log-likelihood = -5.28
  calculator:namespace, count = 1, log-likelihood = -5.98
  calculator:narrowed, count = 1, log-likelihood = -5.98
  calculator:nasty, count = 1, log-likelihood = -5.98
  calculator:necessarily, count = 1, log-likelihood = -5.98
  calculator:necessary, count = 4, log-likelihood = -4.59
  calculator:necessity, count = 1, log-likelihood = -5.98
  calculator:need, count = 22, log-likelihood = -2.89
  calculator:needed, count = 3, log-likelihood = -4.88
  calculator:needs, count = 1, log-likelihood = -5.98
  calculator:negate, count = 2, log-likelihood = -5.28
  calculator:negation, count = 1, log-likelihood = -5.98
  calculator:negative, count = 4, log-likelihood = -4.59
  calculator:negativeexample, count = 1, log-likelihood = -5.98
  calculator:never, count = 4, log-likelihood = -4.59
  calculator:new, count = 12, log-likelihood = -3.49
  calculator:newer, count = 1, log-likelihood = -5.98
  calculator:newline, count = 4, log-likelihood = -4.59
  calculator:newlines, count = 1, log-likelihood = -5.98
  calculator:newlist, count = 1, log-likelihood = -5.98
  calculator:newly, count = 1, log-likelihood = -5.98
  calculator:news, count = 1, log-likelihood = -5.98
  calculator:newunsigned, count = 1, log-likelihood = -5.98
  calculator:next, count = 8, log-likelihood = -3.9
  calculator:nexts, count = 1, log-likelihood = -5.98
  calculator:ninjallama, count = 1, log-likelihood = -5.98
  calculator:no, count = 40, log-likelihood = -2.29
  calculator:node, count = 27, log-likelihood = -2.68
  calculator:nodeptr, count = 10, log-likelihood = -3.67
  calculator:nodes, count = 6, log-likelihood = -4.18
  calculator:non, count = 1, log-likelihood = -5.98
  calculator:nonclass, count = 1, log-likelihood = -5.98
  calculator:nonconst, count = 1, log-likelihood = -5.98
  calculator:none, count = 3, log-likelihood = -4.88
  calculator:nonfixed, count = 1, log-likelihood = -5.98
  calculator:nonmember, count = 1, log-likelihood = -5.98
  calculator:nonstandard, count = 1, log-likelihood = -5.98
  calculator:nonzero, count = 1, log-likelihood = -5.98
  calculator:normal, count = 4, log-likelihood = -4.59
  calculator:not, count = 103, log-likelihood = -1.34
  calculator:notation, count = 1, log-likelihood = -5.98
  calculator:note, count = 3, log-likelihood = -4.88
  calculator:notes, count = 1, log-likelihood = -5.98
  calculator:nothing, count = 4, log-likelihood = -4.59
  calculator:noticed, count = 4, log-likelihood = -4.59
  calculator:now, count = 10, log-likelihood = -3.67
  calculator:null, count = 13, log-likelihood = -3.41
  calculator:nullptr, count = 1, log-likelihood = -5.98
  calculator:num, count = 2, log-likelihood = -5.28
  calculator:number, count = 18, log-likelihood = -3.09
  calculator:numberatorsdenominators, count = 1, log-likelihood = -5.98
  calculator:numbers, count = 7, log-likelihood = -4.03
  calculator:numerator, count = 8, log-likelihood = -3.9
  calculator:numeratordenominator, count = 1, log-likelihood = -5.98
  calculator:numeratorin, count = 2, log-likelihood = -5.28
  calculator:numeratorindenominatorin, count = 1, log-likelihood = -5.98
  calculator:numeratorx, count = 1, log-likelihood = -5.98
  calculator:o, count = 5, log-likelihood = -4.37
  calculator:o1, count = 4, log-likelihood = -4.59
  calculator:objcclass, count = 1, log-likelihood = -5.98
  calculator:objccopyclassnamesforimage, count = 1, log-likelihood = -5.98
  calculator:objcinitializeclasspairinternalobjcclass, count = 1, log-likelihood = -5.98
  calculator:object, count = 12, log-likelihood = -3.49
  calculator:objects, count = 2, log-likelihood = -5.28
  calculator:obvious, count = 2, log-likelihood = -5.28
  calculator:obviously, count = 1, log-likelihood = -5.98
  calculator:occur, count = 1, log-likelihood = -5.98
  calculator:occurrences, count = 1, log-likelihood = -5.98
  calculator:occurs, count = 2, log-likelihood = -5.28
  calculator:odd, count = 1, log-likelihood = -5.98
  calculator:of, count = 182, log-likelihood = -0.772
  calculator:off, count = 4, log-likelihood = -4.59
  calculator:office, count = 1, log-likelihood = -5.98
  calculator:ok, count = 3, log-likelihood = -4.88
  calculator:okay, count = 5, log-likelihood = -4.37
  calculator:old, count = 1, log-likelihood = -5.98
  calculator:on, count = 73, log-likelihood = -1.69
  calculator:once, count = 4, log-likelihood = -4.59
  calculator:one, count = 57, log-likelihood = -1.93
  calculator:ones, count = 1, log-likelihood = -5.98
  calculator:only, count = 33, log-likelihood = -2.48
  calculator:onto, count = 2, log-likelihood = -5.28
  calculator:opening, count = 1, log-likelihood = -5.98
  calculator:openly, count = 1, log-likelihood = -5.98
  calculator:operand, count = 3, log-likelihood = -4.88
  calculator:operands, count = 1, log-likelihood = -5.98
  calculator:operation, count = 3, log-likelihood = -4.88
  calculator:operations, count = 2, log-likelihood = -5.28
  calculator:operator, count = 45, log-likelihood = -2.17
  calculator:operatorconst, count = 1, log-likelihood = -5.98
  calculator:operatoriterator, count = 1, log-likelihood = -5.98
  calculator:operatorrational, count = 1, log-likelihood = -5.98
  calculator:operators, count = 9, log-likelihood = -3.78
  calculator:opperator, count = 1, log-likelihood = -5.98
  calculator:opposed, count = 1, log-likelihood = -5.98
  calculator:option, count = 1, log-likelihood = -5.98
  calculator:or, count = 105, log-likelihood = -1.32
  calculator:order, count = 4, log-likelihood = -4.59
  calculator:original, count = 1, log-likelihood = -5.98
  calculator:originally, count = 2, log-likelihood = -5.28
  calculator:os, count = 1, log-likelihood = -5.98
  calculator:oserror, count = 1, log-likelihood = -5.98
  calculator:other, count = 20, log-likelihood = -2.98
  calculator:otherfirst, count = 1, log-likelihood = -5.98
  calculator:others, count = 1, log-likelihood = -5.98
  calculator:otherwise, count = 1, log-likelihood = -5.98
  calculator:ought, count = 1, log-likelihood = -5.98
  calculator:our, count = 34, log-likelihood = -2.45
  calculator:ours, count = 1, log-likelihood = -5.98
  calculator:ourselves, count = 1, log-likelihood = -5.98
  calculator:out, count = 30, log-likelihood = -2.58
  calculator:outcome, count = 1, log-likelihood = -5.98
  calculator:output, count = 21, log-likelihood = -2.93
  calculator:outputs, count = 2, log-likelihood = -5.28
  calculator:outputted, count = 1, log-likelihood = -5.98
  calculator:outputting, count = 1, log-likelihood = -5.98
  calculator:outside, count = 9, log-likelihood = -3.78
  calculator:over, count = 6, log-likelihood = -4.18
  calculator:overall, count = 1, log-likelihood = -5.98
  calculator:overis, count = 1, log-likelihood = -5.98
  calculator:overload, count = 4, log-likelihood = -4.59
  calculator:overloaded, count = 9, log-likelihood = -3.78
  calculator:overloading, count = 2, log-likelihood = -5.28
  calculator:overloads, count = 1, log-likelihood = -5.98
  calculator:overthinking, count = 1, log-likelihood = -5.98
  calculator:overwrite, count = 2, log-likelihood = -5.28
  calculator:overwritten, count = 1, log-likelihood = -5.98
  calculator:own, count = 11, log-likelihood = -3.58
  calculator:p, count = 5, log-likelihood = -4.37
  calculator:p5, count = 1, log-likelihood = -5.98
  calculator:parameter, count = 10, log-likelihood = -3.67
  calculator:parameters, count = 3, log-likelihood = -4.88
  calculator:parenthesis, count = 1, log-likelihood = -5.98
  calculator:parm, count = 1, log-likelihood = -5.98
  calculator:part, count = 5, log-likelihood = -4.37
  calculator:particular, count = 1, log-likelihood = -5.98
  calculator:particularly, count = 1, log-likelihood = -5.98
  calculator:partner, count = 4, log-likelihood = -4.59
  calculator:pass, count = 5, log-likelihood = -4.37
  calculator:passed, count = 18, log-likelihood = -3.09
  calculator:passes, count = 3, log-likelihood = -4.88
  calculator:passing, count = 4, log-likelihood = -4.59
  calculator:past, count = 11, log-likelihood = -3.58
  calculator:pasted, count = 1, log-likelihood = -5.98
  calculator:pastend, count = 1, log-likelihood = -5.98
  calculator:pedantic, count = 5, log-likelihood = -4.37
  calculator:per, count = 2, log-likelihood = -5.28
  calculator:perfect, count = 1, log-likelihood = -5.98
  calculator:perfectly, count = 2, log-likelihood = -5.28
  calculator:perform, count = 2, log-likelihood = -5.28
  calculator:performed, count = 1, log-likelihood = -5.98
  calculator:perhaps, count = 1, log-likelihood = -5.98
  calculator:permission, count = 2, log-likelihood = -5.28
  calculator:piazza, count = 3, log-likelihood = -4.88
  calculator:piece, count = 1, log-likelihood = -5.98
  calculator:pin, count = 1, log-likelihood = -5.98
  calculator:place, count = 5, log-likelihood = -4.37
  calculator:placed, count = 1, log-likelihood = -5.98
  calculator:please, count = 6, log-likelihood = -4.18
  calculator:point, count = 15, log-likelihood = -3.27
  calculator:pointed, count = 2, log-likelihood = -5.28
  calculator:pointer, count = 25, log-likelihood = -2.76
  calculator:pointers, count = 4, log-likelihood = -4.59
  calculator:pointing, count = 22, log-likelihood = -2.89
  calculator:points, count = 12, log-likelihood = -3.49
  calculator:pop, count = 4, log-likelihood = -4.59
  calculator:popall, count = 4, log-likelihood = -4.59
  calculator:popback, count = 4, log-likelihood = -4.59
  calculator:popfront, count = 5, log-likelihood = -4.37
  calculator:popped, count = 2, log-likelihood = -5.28
  calculator:popping, count = 1, log-likelihood = -5.98
  calculator:pops, count = 1, log-likelihood = -5.98
  calculator:portion, count = 1, log-likelihood = -5.98
  calculator:position, count = 5, log-likelihood = -4.37
  calculator:positive, count = 4, log-likelihood = -4.59
  calculator:possibility, count = 1, log-likelihood = -5.98
  calculator:possible, count = 12, log-likelihood = -3.49
  calculator:possibly, count = 5, log-likelihood = -4.37
  calculator:post, count = 3, log-likelihood = -4.88
  calculator:posted, count = 1, log-likelihood = -5.98
  calculator:postfix, count = 1, log-likelihood = -5.98
  calculator:posting, count = 1, log-likelihood = -5.98
  calculator:posts, count = 2, log-likelihood = -5.28
  calculator:pred, count = 2, log-likelihood = -5.28
  calculator:predicate, count = 3, log-likelihood = -4.88
  calculator:prefix, count = 3, log-likelihood = -4.88
  calculator:preform, count = 1, log-likelihood = -5.98
  calculator:present, count = 2, log-likelihood = -5.28
  calculator:presented, count = 1, log-likelihood = -5.98
  calculator:press, count = 1, log-likelihood = -5.98
  calculator:pressing, count = 1, log-likelihood = -5.98
  calculator:pretty, count = 3, log-likelihood = -4.88
  calculator:prev, count = 3, log-likelihood = -4.88
  calculator:prevent, count = 1, log-likelihood = -5.98
  calculator:previous, count = 5, log-likelihood = -4.37
  calculator:previously, count = 1, log-likelihood = -5.98
  calculator:prew, count = 1, log-likelihood = -5.98
  calculator:print, count = 16, log-likelihood = -3.2
  calculator:printdescription, count = 1, log-likelihood = -5.98
  calculator:printed, count = 6, log-likelihood = -4.18
  calculator:printing, count = 1, log-likelihood = -5.98
  calculator:prints, count = 4, log-likelihood = -4.59
  calculator:private, count = 22, log-likelihood = -2.89
  calculator:probably, count = 1, log-likelihood = -5.98
  calculator:problem, count = 16, log-likelihood = -3.2
  calculator:problems, count = 1, log-likelihood = -5.98
  calculator:process, count = 1, log-likelihood = -5.98
  calculator:produce, count = 1, log-likelihood = -5.98
  calculator:producing, count = 1, log-likelihood = -5.98
  calculator:prof, count = 2, log-likelihood = -5.28
  calculator:program, count = 17, log-likelihood = -3.14
  calculator:project, count = 18, log-likelihood = -3.09
  calculator:project05130990x100082000, count = 1, log-likelihood = -5.98
  calculator:project5exe, count = 2, log-likelihood = -5.28
  calculator:prompt, count = 1, log-likelihood = -5.98
  calculator:properly, count = 4, log-likelihood = -4.59
  calculator:properties, count = 1, log-likelihood = -5.98
  calculator:proposed, count = 1, log-likelihood = -5.98
  calculator:protect, count = 1, log-likelihood = -5.98
  calculator:protocols, count = 1, log-likelihood = -5.98
  calculator:prototype, count = 1, log-likelihood = -5.98
  calculator:provide, count = 1, log-likelihood = -5.98
  calculator:provided, count = 3, log-likelihood = -4.88
  calculator:ps, count = 1, log-likelihood = -5.98
  calculator:ptr, count = 5, log-likelihood = -4.37
  calculator:ptrdatum, count = 1, log-likelihood = -5.98
  calculator:public, count = 29, log-likelihood = -2.61
  calculator:publicstacktest, count = 1, log-likelihood = -5.98
  calculator:push, count = 3, log-likelihood = -4.88
  calculator:pushback, count = 7, log-likelihood = -4.03
  calculator:pushed, count = 2, log-likelihood = -5.28
  calculator:pushedback, count = 1, log-likelihood = -5.98
  calculator:pushes, count = 2, log-likelihood = -5.28
  calculator:pushfront, count = 7, log-likelihood = -4.03
  calculator:put, count = 9, log-likelihood = -3.78
  calculator:putting, count = 3, log-likelihood = -4.88
  calculator:python, count = 2, log-likelihood = -5.28
  calculator:q, count = 5, log-likelihood = -4.37
  calculator:q1, count = 1, log-likelihood = -5.98
  calculator:q2, count = 1, log-likelihood = -5.98
  calculator:qualified, count = 1, log-likelihood = -5.98
  calculator:question, count = 8, log-likelihood = -3.9
  calculator:questions, count = 1, log-likelihood = -5.98
  calculator:queue, count = 4, log-likelihood = -4.59
  calculator:queued, count = 3, log-likelihood = -4.88
  calculator:quick, count = 2, log-likelihood = -5.28
  calculator:quit, count = 2, log-likelihood = -5.28
  calculator:quite, count = 2, log-likelihood = -5.28
  calculator:r, count = 2, log-likelihood = -5.28
  calculator:r0, count = 1, log-likelihood = -5.98
  calculator:r1, count = 1, log-likelihood = -5.98
  calculator:r110, count = 1, log-likelihood = -5.98
  calculator:r2, count = 2, log-likelihood = -5.28
  calculator:r2r1, count = 1, log-likelihood = -5.98
  calculator:r3, count = 1, log-likelihood = -5.98
  calculator:r5, count = 1, log-likelihood = -5.98
  calculator:r55, count = 1, log-likelihood = -5.98
  calculator:ran, count = 5, log-likelihood = -4.37
  calculator:rather, count = 2, log-likelihood = -5.28
  calculator:rational, count = 28, log-likelihood = -2.64
  calculator:rational0, count = 1, log-likelihood = -5.98
  calculator:rational2, count = 1, log-likelihood = -5.98
  calculator:rationalcpp, count = 14, log-likelihood = -3.34
  calculator:rationalgetdenominator, count = 1, log-likelihood = -5.98
  calculator:rationalgetnumerator, count = 1, log-likelihood = -5.98
  calculator:rationalh, count = 10, log-likelihood = -3.67
  calculator:rationalh3622587, count = 1, log-likelihood = -5.98
  calculator:rationalh3622588, count = 1, log-likelihood = -5.98
  calculator:rationalh3622600, count = 1, log-likelihood = -5.98
  calculator:rationalh3622631, count = 1, log-likelihood = -5.98
  calculator:rationalh3622636, count = 1, log-likelihood = -5.98
  calculator:rationalh3622642, count = 1, log-likelihood = -5.98
  calculator:rationalint, count = 2, log-likelihood = -5.28
  calculator:rationalpublictestexe, count = 1, log-likelihood = -5.98
  calculator:rationalrational, count = 1, log-likelihood = -5.98
  calculator:rationalrationalint, count = 2, log-likelihood = -5.28
  calculator:rationals, count = 6, log-likelihood = -4.18
  calculator:rationaltest1exe, count = 1, log-likelihood = -5.98
  calculator:rationaltestpublic, count = 2, log-likelihood = -5.28
  calculator:rationaltestpubliccpp, count = 1, log-likelihood = -5.98
  calculator:rationaltestpublicexe, count = 2, log-likelihood = -5.28
  calculator:rationaltests, count = 3, log-likelihood = -4.88
  calculator:rationalthanks, count = 1, log-likelihood = -5.98
  calculator:reach, count = 1, log-likelihood = -5.98
  calculator:reachable, count = 3, log-likelihood = -4.88
  calculator:reached, count = 1, log-likelihood = -5.98
  calculator:read, count = 18, log-likelihood = -3.09
  calculator:readclassobjcclass, count = 1, log-likelihood = -5.98
  calculator:reading, count = 3, log-likelihood = -4.88
  calculator:reads, count = 3, log-likelihood = -4.88
  calculator:ready, count = 1, log-likelihood = -5.98
  calculator:realize, count = 1, log-likelihood = -5.98
  calculator:realizeclassobjcclass, count = 1, log-likelihood = -5.98
  calculator:realized, count = 3, log-likelihood = -4.88
  calculator:realloc, count = 1, log-likelihood = -5.98
  calculator:really, count = 9, log-likelihood = -3.78
  calculator:reappear, count = 1, log-likelihood = -5.98
  calculator:reason, count = 17, log-likelihood = -3.14
  calculator:reasonable, count = 1, log-likelihood = -5.98
  calculator:reasons, count = 1, log-likelihood = -5.98
  calculator:reassign, count = 1, log-likelihood = -5.98
  calculator:recall, count = 1, log-likelihood = -5.98
  calculator:receive, count = 4, log-likelihood = -4.59
  calculator:received, count = 3, log-likelihood = -4.88
  calculator:recent, count = 1, log-likelihood = -5.98
  calculator:recognized, count = 1, log-likelihood = -5.98
  calculator:recompiling, count = 1, log-likelihood = -5.98
  calculator:record, count = 2, log-likelihood = -5.28
  calculator:rectangle, count = 1, log-likelihood = -5.98
  calculator:recursion, count = 1, log-likelihood = -5.98
  calculator:recursively, count = 1, log-likelihood = -5.98
  calculator:redeclaring, count = 1, log-likelihood = -5.98
  calculator:reduce, count = 2, log-likelihood = -5.28
  calculator:reduced, count = 1, log-likelihood = -5.98
  calculator:refer, count = 1, log-likelihood = -5.98
  calculator:reference, count = 11, log-likelihood = -3.58
  calculator:referenced, count = 2, log-likelihood = -5.28
  calculator:referencei, count = 1, log-likelihood = -5.98
  calculator:references, count = 2, log-likelihood = -5.28
  calculator:regarding, count = 3, log-likelihood = -4.88
  calculator:regardless, count = 1, log-likelihood = -5.98
  calculator:regards, count = 1, log-likelihood = -5.98
  calculator:regular, count = 1, log-likelihood = -5.98
  calculator:relate, count = 1, log-likelihood = -5.98
  calculator:related, count = 3, log-likelihood = -4.88
  calculator:relational, count = 1, log-likelihood = -5.98
  calculator:relevancy, count = 1, log-likelihood = -5.98
  calculator:relevant, count = 1, log-likelihood = -5.98
  calculator:relocation, count = 1, log-likelihood = -5.98
  calculator:remain, count = 1, log-likelihood = -5.98
  calculator:remains, count = 2, log-likelihood = -5.28
  calculator:remember, count = 2, log-likelihood = -5.28
  calculator:remove, count = 3, log-likelihood = -4.88
  calculator:repeated, count = 2, log-likelihood = -5.28
  calculator:repeats, count = 1, log-likelihood = -5.98
  calculator:represent, count = 1, log-likelihood = -5.98
  calculator:representation, count = 1, log-likelihood = -5.98
  calculator:request, count = 1, log-likelihood = -5.98
  calculator:required, count = 2, log-likelihood = -5.28
  calculator:requirement, count = 1, log-likelihood = -5.98
  calculator:requires, count = 6, log-likelihood = -4.18
  calculator:rerun, count = 5, log-likelihood = -4.37
  calculator:resolve, count = 1, log-likelihood = -5.98
  calculator:resources, count = 1, log-likelihood = -5.98
  calculator:respectively, count = 1, log-likelihood = -5.98
  calculator:restart, count = 1, log-likelihood = -5.98
  calculator:resubmit, count = 1, log-likelihood = -5.98
  calculator:result, count = 3, log-likelihood = -4.88
  calculator:resulting, count = 1, log-likelihood = -5.98
  calculator:results, count = 7, log-likelihood = -4.03
  calculator:return, count = 18, log-likelihood = -3.09
  calculator:returned, count = 3, log-likelihood = -4.88
  calculator:returning, count = 2, log-likelihood = -5.28
  calculator:returns, count = 9, log-likelihood = -3.78
  calculator:reverse, count = 1, log-likelihood = -5.98
  calculator:rf, count = 1, log-likelihood = -5.98
  calculator:rhs, count = 5, log-likelihood = -4.37
  calculator:rhsconst, count = 1, log-likelihood = -5.98
  calculator:rhsnodeptr, count = 1, log-likelihood = -5.98
  calculator:right, count = 23, log-likelihood = -2.84
  calculator:rm, count = 1, log-likelihood = -5.98
  calculator:rme, count = 6, log-likelihood = -4.18
  calculator:rmes, count = 3, log-likelihood = -4.88
  calculator:row, count = 1, log-likelihood = -5.98
  calculator:rp, count = 3, log-likelihood = -4.88
  calculator:rule, count = 1, log-likelihood = -5.98
  calculator:run, count = 40, log-likelihood = -2.29
  calculator:runcalculator’, count = 1, log-likelihood = -5.98
  calculator:runmytestspy, count = 2, log-likelihood = -5.28
  calculator:running, count = 18, log-likelihood = -3.09
  calculator:runs, count = 4, log-likelihood = -4.59
  calculator:rwp, count = 2, log-likelihood = -5.28
  calculator:rx8664pc32, count = 1, log-likelihood = -5.98
  calculator:rxp, count = 2, log-likelihood = -5.28
  calculator:safe, count = 2, log-likelihood = -5.28
  calculator:said, count = 8, log-likelihood = -3.9
  calculator:same, count = 22, log-likelihood = -2.89
  calculator:satisfactory, count = 1, log-likelihood = -5.98
  calculator:satisfy, count = 1, log-likelihood = -5.98
  calculator:saved, count = 1, log-likelihood = -5.98
  calculator:saw, count = 5, log-likelihood = -4.37
  calculator:say, count = 11, log-likelihood = -3.58
  calculator:saying, count = 9, log-likelihood = -3.78
  calculator:says, count = 33, log-likelihood = -2.48
  calculator:scenario, count = 2, log-likelihood = -5.28
  calculator:scenarios, count = 1, log-likelihood = -5.98
  calculator:scope, count = 11, log-likelihood = -3.58
  calculator:scoped, count = 1, log-likelihood = -5.98
  calculator:score, count = 2, log-likelihood = -5.28
  calculator:scoreout, count = 1, log-likelihood = -5.98
  calculator:scp, count = 1, log-likelihood = -5.98
  calculator:screen, count = 1, log-likelihood = -5.98
  calculator:searched, count = 1, log-likelihood = -5.98
  calculator:second, count = 5, log-likelihood = -4.37
  calculator:seconds, count = 1, log-likelihood = -5.98
  calculator:section, count = 4, log-likelihood = -4.59
  calculator:see, count = 25, log-likelihood = -2.76
  calculator:seeing, count = 2, log-likelihood = -5.28
  calculator:seem, count = 6, log-likelihood = -4.18
  calculator:seems, count = 18, log-likelihood = -3.09
  calculator:seg, count = 4, log-likelihood = -4.59
  calculator:segfault, count = 1, log-likelihood = -5.98
  calculator:segfaulting, count = 1, log-likelihood = -5.98
  calculator:segmentation, count = 5, log-likelihood = -4.37
  calculator:self, count = 1, log-likelihood = -5.98
  calculator:selfassignment, count = 1, log-likelihood = -5.98
  calculator:sense, count = 4, log-likelihood = -4.59
  calculator:sentinel, count = 1, log-likelihood = -5.98
  calculator:separate, count = 2, log-likelihood = -5.28
  calculator:separated, count = 2, log-likelihood = -5.28
  calculator:separately, count = 2, log-likelihood = -5.28
  calculator:sequence, count = 1, log-likelihood = -5.98
  calculator:set, count = 12, log-likelihood = -3.49
  calculator:setting, count = 1, log-likelihood = -5.98
  calculator:several, count = 2, log-likelihood = -5.28
  calculator:seward, count = 3, log-likelihood = -4.88
  calculator:shadows, count = 1, log-likelihood = -5.98
  calculator:shared, count = 1, log-likelihood = -5.98
  calculator:shed, count = 1, log-likelihood = -5.98
  calculator:sheet, count = 1, log-likelihood = -5.98
  calculator:should, count = 66, log-likelihood = -1.79
  calculator:shouldnt, count = 3, log-likelihood = -4.88
  calculator:show, count = 1, log-likelihood = -5.98
  calculator:showing, count = 1, log-likelihood = -5.98
  calculator:showleakkindsall, count = 1, log-likelihood = -5.98
  calculator:shown, count = 1, log-likelihood = -5.98
  calculator:shows, count = 3, log-likelihood = -4.88
  calculator:shrinking, count = 1, log-likelihood = -5.98
  calculator:sign, count = 3, log-likelihood = -4.88
  calculator:silly, count = 3, log-likelihood = -4.88
  calculator:similar, count = 4, log-likelihood = -4.59
  calculator:simplification, count = 1, log-likelihood = -5.98
  calculator:simplify24, count = 1, log-likelihood = -5.98
  calculator:simplify40, count = 1, log-likelihood = -5.98
  calculator:simply, count = 3, log-likelihood = -4.88
  calculator:since, count = 18, log-likelihood = -3.09
  calculator:single, count = 9, log-likelihood = -3.78
  calculator:site, count = 1, log-likelihood = -5.98
  calculator:situation, count = 2, log-likelihood = -5.28
  calculator:situations, count = 1, log-likelihood = -5.98
  calculator:size, count = 15, log-likelihood = -3.27
  calculator:slide, count = 5, log-likelihood = -4.37
  calculator:slides, count = 7, log-likelihood = -4.03
  calculator:so, count = 69, log-likelihood = -1.74
  calculator:solution, count = 4, log-likelihood = -4.59
  calculator:solve, count = 1, log-likelihood = -5.98
  calculator:some, count = 25, log-likelihood = -2.76
  calculator:somehow, count = 3, log-likelihood = -4.88
  calculator:someone, count = 12, log-likelihood = -3.49
  calculator:something, count = 23, log-likelihood = -2.84
  calculator:sometimes, count = 1, log-likelihood = -5.98
  calculator:somewhat, count = 1, log-likelihood = -5.98
  calculator:soon, count = 1, log-likelihood = -5.98
  calculator:sorry, count = 3, log-likelihood = -4.88
  calculator:sort, count = 1, log-likelihood = -5.98
  calculator:sorta, count = 1, log-likelihood = -5.98
  calculator:source, count = 3, log-likelihood = -4.88
  calculator:space, count = 2, log-likelihood = -5.28
  calculator:spaces, count = 2, log-likelihood = -5.28
  calculator:spec, count = 18, log-likelihood = -3.09
  calculator:specific, count = 2, log-likelihood = -5.28
  calculator:specifically, count = 5, log-likelihood = -4.37
  calculator:specification, count = 2, log-likelihood = -5.28
  calculator:specifications, count = 2, log-likelihood = -5.28
  calculator:specified, count = 3, log-likelihood = -4.88
  calculator:specs, count = 8, log-likelihood = -3.9
  calculator:spotted, count = 1, log-likelihood = -5.98
  calculator:stack, count = 41, log-likelihood = -2.26
  calculator:stackcountifequalsfirst, count = 1, log-likelihood = -5.98
  calculator:stackh, count = 13, log-likelihood = -3.41
  calculator:stackh187, count = 1, log-likelihood = -5.98
  calculator:stackh18712, count = 1, log-likelihood = -5.98
  calculator:stackmake, count = 1, log-likelihood = -5.98
  calculator:stackpop, count = 1, log-likelihood = -5.98
  calculator:stackpublictests, count = 1, log-likelihood = -5.98
  calculator:stackpushelt, count = 1, log-likelihood = -5.98
  calculator:stacks, count = 3, log-likelihood = -4.88
  calculator:stackstackrationalpushnumber, count = 1, log-likelihood = -5.98
  calculator:stackt, count = 1, log-likelihood = -5.98
  calculator:stacktcountifpredicate, count = 2, log-likelihood = -5.28
  calculator:stacktest1exe, count = 1, log-likelihood = -5.98
  calculator:stacktestpublic, count = 2, log-likelihood = -5.28
  calculator:stacktestpubliccpp, count = 1, log-likelihood = -5.98
  calculator:stacktestpubliccpp10, count = 1, log-likelihood = -5.98
  calculator:stacktestpubliccpp563, count = 1, log-likelihood = -5.98
  calculator:stacktestpublicexe, count = 1, log-likelihood = -5.98
  calculator:stacktestpublicexe0x4009a9, count = 1, log-likelihood = -5.98
  calculator:stacktestpublicexe0x400c20, count = 1, log-likelihood = -5.98
  calculator:stacktests, count = 4, log-likelihood = -4.59
  calculator:stacktestsupermegacocochocolateexe, count = 1, log-likelihood = -5.98
  calculator:stacktiterator, count = 1, log-likelihood = -5.98
  calculator:stacktop, count = 1, log-likelihood = -5.98
  calculator:standard, count = 4, log-likelihood = -4.59
  calculator:start, count = 7, log-likelihood = -4.03
  calculator:started, count = 1, log-likelihood = -5.98
  calculator:starter, count = 2, log-likelihood = -5.28
  calculator:starting, count = 5, log-likelihood = -4.37
  calculator:starts, count = 1, log-likelihood = -5.98
  calculator:startup, count = 1, log-likelihood = -5.98
  calculator:stated, count = 2, log-likelihood = -5.28
  calculator:statement, count = 10, log-likelihood = -3.67
  calculator:statements, count = 5, log-likelihood = -4.37
  calculator:states, count = 4, log-likelihood = -4.59
  calculator:static, count = 2, log-likelihood = -5.28
  calculator:staticcast, count = 1, log-likelihood = -5.98
  calculator:status, count = 5, log-likelihood = -4.37
  calculator:stay, count = 1, log-likelihood = -5.98
  calculator:stays, count = 1, log-likelihood = -5.98
  calculator:std, count = 3, log-likelihood = -4.88
  calculator:stdbadalloc, count = 1, log-likelihood = -5.98
  calculator:stdc11, count = 4, log-likelihood = -4.59
  calculator:stdcharchartraitschar, count = 1, log-likelihood = -5.98
  calculator:stdinvalidargument, count = 2, log-likelihood = -5.28
  calculator:step, count = 3, log-likelihood = -4.88
  calculator:steve, count = 1, log-likelihood = -5.98
  calculator:stick, count = 1, log-likelihood = -5.98
  calculator:still, count = 25, log-likelihood = -2.76
  calculator:stoi, count = 6, log-likelihood = -4.18
  calculator:stoistring, count = 1, log-likelihood = -5.98
  calculator:stop, count = 1, log-likelihood = -5.98
  calculator:stops, count = 1, log-likelihood = -5.98
  calculator:storage, count = 2, log-likelihood = -5.28
  calculator:straight, count = 1, log-likelihood = -5.98
  calculator:strange, count = 4, log-likelihood = -4.59
  calculator:strategy, count = 1, log-likelihood = -5.98
  calculator:stray, count = 1, log-likelihood = -5.98
  calculator:stream, count = 1, log-likelihood = -5.98
  calculator:string, count = 8, log-likelihood = -3.9
  calculator:stringcstr, count = 1, log-likelihood = -5.98
  calculator:strings, count = 1, log-likelihood = -5.98
  calculator:struct, count = 2, log-likelihood = -5.28
  calculator:structure, count = 1, log-likelihood = -5.98
  calculator:struggling, count = 2, log-likelihood = -5.28
  calculator:studio, count = 1, log-likelihood = -5.98
  calculator:studios, count = 1, log-likelihood = -5.98
  calculator:stuff, count = 2, log-likelihood = -5.28
  calculator:submission, count = 3, log-likelihood = -4.88
  calculator:submit, count = 3, log-likelihood = -4.88
  calculator:submitted, count = 4, log-likelihood = -4.59
  calculator:submitting, count = 2, log-likelihood = -5.28
  calculator:subtraction, count = 1, log-likelihood = -5.98
  calculator:such, count = 10, log-likelihood = -3.67
  calculator:suffice, count = 1, log-likelihood = -5.98
  calculator:sufficient, count = 2, log-likelihood = -5.28
  calculator:suggested, count = 1, log-likelihood = -5.98
  calculator:suggestion, count = 1, log-likelihood = -5.98
  calculator:suggestions, count = 3, log-likelihood = -4.88
  calculator:summary, count = 6, log-likelihood = -4.18
  calculator:super, count = 1, log-likelihood = -5.98
  calculator:support, count = 1, log-likelihood = -5.98
  calculator:supposed, count = 20, log-likelihood = -2.98
  calculator:suppressed, count = 6, log-likelihood = -4.18
  calculator:sure, count = 31, log-likelihood = -2.54
  calculator:suspect, count = 1, log-likelihood = -5.98
  calculator:switch, count = 1, log-likelihood = -5.98
  calculator:switching, count = 1, log-likelihood = -5.98
  calculator:symbol, count = 2, log-likelihood = -5.28
  calculator:symbols, count = 2, log-likelihood = -5.28
  calculator:syntax, count = 2, log-likelihood = -5.28
  calculator:t, count = 15, log-likelihood = -3.27
  calculator:take, count = 8, log-likelihood = -3.9
  calculator:takes, count = 3, log-likelihood = -4.88
  calculator:taking, count = 4, log-likelihood = -4.59
  calculator:talking, count = 1, log-likelihood = -5.98
  calculator:talks, count = 1, log-likelihood = -5.98
  calculator:target, count = 1, log-likelihood = -5.98
  calculator:technician, count = 1, log-likelihood = -5.98
  calculator:tell, count = 5, log-likelihood = -4.37
  calculator:telling, count = 2, log-likelihood = -5.28
  calculator:tells, count = 3, log-likelihood = -4.88
  calculator:temp, count = 2, log-likelihood = -5.28
  calculator:template, count = 17, log-likelihood = -3.14
  calculator:templatetypename, count = 1, log-likelihood = -5.98
  calculator:temporarily, count = 1, log-likelihood = -5.98
  calculator:term, count = 1, log-likelihood = -5.98
  calculator:terminal, count = 4, log-likelihood = -4.59
  calculator:terminating, count = 2, log-likelihood = -5.28
  calculator:test, count = 56, log-likelihood = -1.95
  calculator:test00, count = 1, log-likelihood = -5.98
  calculator:testassignmentoperator, count = 1, log-likelihood = -5.98
  calculator:testback, count = 2, log-likelihood = -5.28
  calculator:testcopyconstructor, count = 1, log-likelihood = -5.98
  calculator:testcpp, count = 1, log-likelihood = -5.98
  calculator:tested, count = 2, log-likelihood = -5.28
  calculator:testempty, count = 3, log-likelihood = -4.88
  calculator:tester, count = 1, log-likelihood = -5.98
  calculator:testerase, count = 1, log-likelihood = -5.98
  calculator:testfront, count = 2, log-likelihood = -5.28
  calculator:testg, count = 1, log-likelihood = -5.98
  calculator:testing, count = 9, log-likelihood = -3.78
  calculator:testinsert, count = 1, log-likelihood = -5.98
  calculator:testminusminusandplusplus, count = 1, log-likelihood = -5.98
  calculator:testoperatorassignment, count = 1, log-likelihood = -5.98
  calculator:testoperatorequalequal, count = 1, log-likelihood = -5.98
  calculator:testoperatornotequal, count = 1, log-likelihood = -5.98
  calculator:testpopback, count = 2, log-likelihood = -5.28
  calculator:testpopfront, count = 2, log-likelihood = -5.28
  calculator:testpushback, count = 1, log-likelihood = -5.98
  calculator:testpushfront, count = 1, log-likelihood = -5.98
  calculator:testpy, count = 1, log-likelihood = -5.98
  calculator:tests, count = 33, log-likelihood = -2.48
  calculator:testsize, count = 3, log-likelihood = -4.88
  calculator:text, count = 4, log-likelihood = -4.59
  calculator:than, count = 12, log-likelihood = -3.49
  calculator:thank, count = 10, log-likelihood = -3.67
  calculator:thanks, count = 54, log-likelihood = -1.99
  calculator:thansk, count = 1, log-likelihood = -5.98
  calculator:that, count = 137, log-likelihood = -1.06
  calculator:thats, count = 3, log-likelihood = -4.88
  calculator:the, count = 322, log-likelihood = -0.202
  calculator:their, count = 2, log-likelihood = -5.28
  calculator:them, count = 25, log-likelihood = -2.76
  calculator:then, count = 30, log-likelihood = -2.58
  calculator:there, count = 57, log-likelihood = -1.93
  calculator:theree, count = 1, log-likelihood = -5.98
  calculator:therefore, count = 2, log-likelihood = -5.28
  calculator:theres, count = 2, log-likelihood = -5.28
  calculator:there’s, count = 1, log-likelihood = -5.98
  calculator:these, count = 17, log-likelihood = -3.14
  calculator:they, count = 14, log-likelihood = -3.34
  calculator:theyre, count = 2, log-likelihood = -5.28
  calculator:thing, count = 5, log-likelihood = -4.37
  calculator:things, count = 2, log-likelihood = -5.28
  calculator:think, count = 13, log-likelihood = -3.41
  calculator:thinking, count = 7, log-likelihood = -4.03
  calculator:this, count = 172, log-likelihood = -0.829
  calculator:thiscall, count = 1, log-likelihood = -5.98
  calculator:thispushback, count = 1, log-likelihood = -5.98
  calculator:thorough, count = 1, log-likelihood = -5.98
  calculator:those, count = 7, log-likelihood = -4.03
  calculator:though, count = 5, log-likelihood = -4.37
  calculator:thought, count = 5, log-likelihood = -4.37
  calculator:three, count = 6, log-likelihood = -4.18
  calculator:through, count = 15, log-likelihood = -3.27
  calculator:throughout, count = 1, log-likelihood = -5.98
  calculator:throw, count = 2, log-likelihood = -5.28
  calculator:throwing, count = 1, log-likelihood = -5.98
  calculator:thrown, count = 2, log-likelihood = -5.28
  calculator:throws, count = 2, log-likelihood = -5.28
  calculator:thus, count = 4, log-likelihood = -4.59
  calculator:till, count = 1, log-likelihood = -5.98
  calculator:time, count = 7, log-likelihood = -4.03
  calculator:timeout, count = 1, log-likelihood = -5.98
  calculator:times, count = 2, log-likelihood = -5.28
  calculator:title, count = 2, log-likelihood = -5.28
  calculator:tmpcchyjusxolistcompilecheckcpptext0x91, count = 1, log-likelihood = -5.98
  calculator:tmpcchyjusxolistcompilecheckcpptext0xab, count = 1, log-likelihood = -5.98
  calculator:tmpccpoga5uo, count = 1, log-likelihood = -5.98
  calculator:tmpccpoga5uocalccpptext0xc33, count = 1, log-likelihood = -5.98
  calculator:to, count = 268, log-likelihood = -0.385
  calculator:tois, count = 1, log-likelihood = -5.98
  calculator:token, count = 1, log-likelihood = -5.98
  calculator:told, count = 2, log-likelihood = -5.28
  calculator:ton, count = 1, log-likelihood = -5.98
  calculator:too, count = 3, log-likelihood = -4.88
  calculator:took, count = 1, log-likelihood = -5.98
  calculator:toolmemcheck, count = 1, log-likelihood = -5.98
  calculator:top, count = 9, log-likelihood = -3.78
  calculator:total, count = 5, log-likelihood = -4.37
  calculator:towards, count = 2, log-likelihood = -5.28
  calculator:track, count = 1, log-likelihood = -5.98
  calculator:trackoriginsyes, count = 1, log-likelihood = -5.98
  calculator:traverse, count = 1, log-likelihood = -5.98
  calculator:treated, count = 2, log-likelihood = -5.28
  calculator:tricks, count = 1, log-likelihood = -5.98
  calculator:tried, count = 16, log-likelihood = -3.2
  calculator:tries, count = 1, log-likelihood = -5.98
  calculator:trouble, count = 2, log-likelihood = -5.28
  calculator:true, count = 3, log-likelihood = -4.88
  calculator:truncated, count = 1, log-likelihood = -5.98
  calculator:try, count = 28, log-likelihood = -2.64
  calculator:trying, count = 27, log-likelihood = -2.68
  calculator:ttypename, count = 1, log-likelihood = -5.98
  calculator:turn, count = 2, log-likelihood = -5.28
  calculator:twice, count = 3, log-likelihood = -4.88
  calculator:two, count = 21, log-likelihood = -2.93
  calculator:type, count = 29, log-likelihood = -2.61
  calculator:typed, count = 2, log-likelihood = -5.28
  calculator:typename, count = 10, log-likelihood = -3.67
  calculator:types, count = 3, log-likelihood = -4.88
  calculator:typing, count = 1, log-likelihood = -5.98
  calculator:unable, count = 2, log-likelihood = -5.28
  calculator:uncaught, count = 2, log-likelihood = -5.28
  calculator:unclear, count = 1, log-likelihood = -5.98
  calculator:undeclared, count = 1, log-likelihood = -5.98
  calculator:undefined, count = 11, log-likelihood = -3.58
  calculator:under, count = 1, log-likelihood = -5.98
  calculator:underneath, count = 1, log-likelihood = -5.98
  calculator:underscore, count = 1, log-likelihood = -5.98
  calculator:understand, count = 16, log-likelihood = -3.2
  calculator:understanding, count = 1, log-likelihood = -5.98
  calculator:understood, count = 1, log-likelihood = -5.98
  calculator:unfreed, count = 1, log-likelihood = -5.98
  calculator:unhandled, count = 1, log-likelihood = -5.98
  calculator:uninitialised, count = 3, log-likelihood = -4.88
  calculator:uninitialized, count = 3, log-likelihood = -4.88
  calculator:unit, count = 1, log-likelihood = -5.98
  calculator:unless, count = 1, log-likelihood = -5.98
  calculator:unnecessary, count = 2, log-likelihood = -5.28
  calculator:unqualified, count = 1, log-likelihood = -5.98
  calculator:unsatisfying, count = 1, log-likelihood = -5.98
  calculator:unsure, count = 2, log-likelihood = -5.28
  calculator:until, count = 4, log-likelihood = -4.59
  calculator:up, count = 19, log-likelihood = -3.03
  calculator:update, count = 2, log-likelihood = -5.28
  calculator:updated, count = 1, log-likelihood = -5.98
  calculator:upload, count = 1, log-likelihood = -5.98
  calculator:us, count = 6, log-likelihood = -4.18
  calculator:usage, count = 4, log-likelihood = -4.59
  calculator:use, count = 65, log-likelihood = -1.8
  calculator:used, count = 17, log-likelihood = -3.14
  calculator:useful, count = 1, log-likelihood = -5.98
  calculator:user, count = 12, log-likelihood = -3.49
  calculator:users, count = 1, log-likelihood = -5.98
  calculator:uses, count = 2, log-likelihood = -5.28
  calculator:using, count = 43, log-likelihood = -2.22
  calculator:usrbinvalgrind, count = 4, log-likelihood = -4.59
  calculator:usrincludec48cassert430, count = 1, log-likelihood = -5.98
  calculator:usrlib64ld217so, count = 2, log-likelihood = -5.28
  calculator:usrlib64libc217so, count = 2, log-likelihood = -5.28
  calculator:usrlib64libgccs48520150702so1, count = 2, log-likelihood = -5.28
  calculator:usrlib64libm217so, count = 2, log-likelihood = -5.28
  calculator:usrlib64libstdcso6019, count = 2, log-likelihood = -5.28
  calculator:usrlib64valgrindvgpreloadmemcheckamd64linuxso, count = 2, log-likelihood = -5.28
  calculator:usrliblibobjcadylib, count = 1, log-likelihood = -5.98
  calculator:v, count = 7, log-likelihood = -4.03
  calculator:val, count = 1, log-likelihood = -5.98
  calculator:valgrind, count = 20, log-likelihood = -2.98
  calculator:valgrind3100, count = 3, log-likelihood = -4.88
  calculator:valgrinds, count = 1, log-likelihood = -5.98
  calculator:valid, count = 14, log-likelihood = -3.34
  calculator:value, count = 14, log-likelihood = -3.34
  calculator:values, count = 8, log-likelihood = -3.9
  calculator:valuess, count = 1, log-likelihood = -5.98
  calculator:variable, count = 7, log-likelihood = -4.03
  calculator:variablefunction, count = 1, log-likelihood = -5.98
  calculator:variables, count = 3, log-likelihood = -4.88
  calculator:various, count = 1, log-likelihood = -5.98
  calculator:vdso, count = 2, log-likelihood = -5.28
  calculator:version, count = 3, log-likelihood = -4.88
  calculator:very, count = 2, log-likelihood = -5.28
  calculator:vgreplacemallocc305, count = 1, log-likelihood = -5.98
  calculator:via, count = 1, log-likelihood = -5.98
  calculator:victim, count = 1, log-likelihood = -5.98
  calculator:vidal, count = 1, log-likelihood = -5.98
  calculator:violate, count = 1, log-likelihood = -5.98
  calculator:violating, count = 1, log-likelihood = -5.98
  calculator:violation, count = 3, log-likelihood = -4.88
  calculator:virtual, count = 1, log-likelihood = -5.98
  calculator:visual, count = 2, log-likelihood = -5.28
  calculator:void, count = 5, log-likelihood = -4.37
  calculator:vs, count = 1, log-likelihood = -5.98
  calculator:vsyscall, count = 2, log-likelihood = -5.28
  calculator:waited, count = 1, log-likelihood = -5.98
  calculator:wall, count = 5, log-likelihood = -4.37
  calculator:want, count = 17, log-likelihood = -3.14
  calculator:wanted, count = 3, log-likelihood = -4.88
  calculator:warning, count = 2, log-likelihood = -5.28
  calculator:warnings, count = 2, log-likelihood = -5.28
  calculator:was, count = 41, log-likelihood = -2.26
  calculator:wasnt, count = 3, log-likelihood = -4.88
  calculator:way, count = 19, log-likelihood = -3.03
  calculator:wayjust, count = 1, log-likelihood = -5.98
  calculator:ways, count = 2, log-likelihood = -5.28
  calculator:we, count = 146, log-likelihood = -0.993
  calculator:wecan, count = 1, log-likelihood = -5.98
  calculator:weekend, count = 1, log-likelihood = -5.98
  calculator:weird, count = 3, log-likelihood = -4.88
  calculator:welcomed, count = 1, log-likelihood = -5.98
  calculator:well, count = 11, log-likelihood = -3.58
  calculator:went, count = 1, log-likelihood = -5.98
  calculator:were, count = 23, log-likelihood = -2.84
  calculator:werent, count = 1, log-likelihood = -5.98
  calculator:werror, count = 6, log-likelihood = -4.18
  calculator:werroruninitialized, count = 1, log-likelihood = -5.98
  calculator:werrorunusedvalue, count = 1, log-likelihood = -5.98
  calculator:what, count = 96, log-likelihood = -1.41
  calculator:whatever, count = 2, log-likelihood = -5.28
  calculator:whats, count = 12, log-likelihood = -3.49
  calculator:whatsoever, count = 1, log-likelihood = -5.98
  calculator:when, count = 121, log-likelihood = -1.18
  calculator:whenever, count = 6, log-likelihood = -4.18
  calculator:where, count = 24, log-likelihood = -2.8
  calculator:wherever, count = 1, log-likelihood = -5.98
  calculator:whether, count = 3, log-likelihood = -4.88
  calculator:whever, count = 1, log-likelihood = -5.98
  calculator:which, count = 24, log-likelihood = -2.8
  calculator:while, count = 5, log-likelihood = -4.37
  calculator:whilecin, count = 1, log-likelihood = -5.98
  calculator:white, count = 1, log-likelihood = -5.98
  calculator:whitespace, count = 2, log-likelihood = -5.28
  calculator:whole, count = 2, log-likelihood = -5.28
  calculator:why, count = 34, log-likelihood = -2.45
  calculator:whywhat, count = 1, log-likelihood = -5.98
  calculator:will, count = 32, log-likelihood = -2.51
  calculator:willing, count = 1, log-likelihood = -5.98
  calculator:windows, count = 2, log-likelihood = -5.28
  calculator:wish, count = 1, log-likelihood = -5.98
  calculator:with, count = 74, log-likelihood = -1.67
  calculator:within, count = 7, log-likelihood = -4.03
  calculator:without, count = 8, log-likelihood = -3.9
  calculator:wonder, count = 1, log-likelihood = -5.98
  calculator:wondering, count = 11, log-likelihood = -3.58
  calculator:wont, count = 4, log-likelihood = -4.59
  calculator:word, count = 1, log-likelihood = -5.98
  calculator:words, count = 1, log-likelihood = -5.98
  calculator:work, count = 11, log-likelihood = -3.58
  calculator:working, count = 8, log-likelihood = -3.9
  calculator:works, count = 11, log-likelihood = -3.58
  calculator:worried, count = 1, log-likelihood = -5.98
  calculator:worry, count = 1, log-likelihood = -5.98
  calculator:would, count = 56, log-likelihood = -1.95
  calculator:wouldnt, count = 5, log-likelihood = -4.37
  calculator:write, count = 14, log-likelihood = -3.34
  calculator:writing, count = 4, log-likelihood = -4.59
  calculator:written, count = 4, log-likelihood = -4.59
  calculator:wrong, count = 15, log-likelihood = -3.27
  calculator:wrote, count = 8, log-likelihood = -3.9
  calculator:wrtie, count = 1, log-likelihood = -5.98
  calculator:x, count = 3, log-likelihood = -4.88
  calculator:x8664, count = 2, log-likelihood = -5.28
  calculator:xcode, count = 11, log-likelihood = -3.58
  calculator:y, count = 1, log-likelihood = -5.98
  calculator:yall, count = 1, log-likelihood = -5.98
  calculator:yes, count = 2, log-likelihood = -5.28
  calculator:yesterday, count = 3, log-likelihood = -4.88
  calculator:yet, count = 4, log-likelihood = -4.59
  calculator:yields, count = 1, log-likelihood = -5.98
  calculator:you, count = 33, log-likelihood = -2.48
  calculator:your, count = 2, log-likelihood = -5.28
  calculator:youre, count = 2, log-likelihood = -5.28
  calculator:zero, count = 4, log-likelihood = -4.59
  calculator:zeros, count = 1, log-likelihood = -5.98
  calculator:zxc, count = 1, log-likelihood = -5.98
  calculator:­, count = 1, log-likelihood = -5.98
  calculator:‘, count = 2, log-likelihood = -5.28
  calculator:‘copyall’, count = 1, log-likelihood = -5.98
  calculator:‘int, count = 2, log-likelihood = -5.28
  calculator:‘listintiteratoriteratorlistintiterator’, count = 1, log-likelihood = -5.98
  calculator:‘listt, count = 1, log-likelihood = -5.98
  calculator:‘mylistlistintfirst’, count = 1, log-likelihood = -5.98
  calculator:‘mylist’, count = 1, log-likelihood = -5.98
  calculator:‘operator’, count = 1, log-likelihood = -5.98
  calculator:‘stackrationalpush’, count = 1, log-likelihood = -5.98
  calculator:‘stackrational’, count = 1, log-likelihood = -5.98
  calculator:‘stackt’, count = 1, log-likelihood = -5.98
  calculator:‘stack’, count = 1, log-likelihood = -5.98
  calculator:‘void, count = 1, log-likelihood = -5.98
  calculator:‘’, count = 2, log-likelihood = -5.28
  calculator:’, count = 2, log-likelihood = -5.28
  euchre:0, count = 27, log-likelihood = -3.25
  euchre:00, count = 1, log-likelihood = -6.54
  euchre:01, count = 6, log-likelihood = -4.75
  euchre:01s, count = 1, log-likelihood = -6.54
  euchre:02, count = 1, log-likelihood = -6.54
  euchre:0s, count = 1, log-likelihood = -6.54
  euchre:0th, count = 1, log-likelihood = -6.54
  euchre:0x100200a00, count = 1, log-likelihood = -6.54
  euchre:0­16, count = 1, log-likelihood = -6.54
  euchre:1, count = 48, log-likelihood = -2.67
  euchre:10, count = 10, log-likelihood = -4.24
  euchre:100, count = 2, log-likelihood = -5.85
  euchre:1010, count = 4, log-likelihood = -5.16
  euchre:108, count = 1, log-likelihood = -6.54
  euchre:11, count = 4, log-likelihood = -5.16
  euchre:1100am, count = 1, log-likelihood = -6.54
  euchre:12, count = 2, log-likelihood = -5.85
  euchre:1230330, count = 1, log-likelihood = -6.54
  euchre:13, count = 2, log-likelihood = -5.85
  euchre:1327, count = 2, log-likelihood = -5.85
  euchre:134, count = 2, log-likelihood = -5.85
  euchre:15, count = 3, log-likelihood = -5.44
  euchre:16, count = 2, log-likelihood = -5.85
  euchre:1695, count = 1, log-likelihood = -6.54
  euchre:17, count = 3, log-likelihood = -5.44
  euchre:1709, count = 1, log-likelihood = -6.54
  euchre:17th, count = 1, log-likelihood = -6.54
  euchre:17­23, count = 1, log-likelihood = -6.54
  euchre:183, count = 1, log-likelihood = -6.54
  euchre:1895, count = 1, log-likelihood = -6.54
  euchre:19659, count = 1, log-likelihood = -6.54
  euchre:1c1, count = 1, log-likelihood = -6.54
  euchre:1can, count = 1, log-likelihood = -6.54
  euchre:2, count = 27, log-likelihood = -3.25
  euchre:20, count = 1, log-likelihood = -6.54
  euchre:2013, count = 1, log-likelihood = -6.54
  euchre:2041, count = 1, log-likelihood = -6.54
  euchre:2061, count = 1, log-likelihood = -6.54
  euchre:21, count = 1, log-likelihood = -6.54
  euchre:22, count = 1, log-likelihood = -6.54
  euchre:2218, count = 1, log-likelihood = -6.54
  euchre:23, count = 6, log-likelihood = -4.75
  euchre:24, count = 11, log-likelihood = -4.14
  euchre:2450, count = 1, log-likelihood = -6.54
  euchre:24ul’, count = 1, log-likelihood = -6.54
  euchre:28, count = 1, log-likelihood = -6.54
  euchre:280, count = 1, log-likelihood = -6.54
  euchre:2am, count = 1, log-likelihood = -6.54
  euchre:2nd, count = 1, log-likelihood = -6.54
  euchre:2to, count = 1, log-likelihood = -6.54
  euchre:3, count = 13, log-likelihood = -3.98
  euchre:30, count = 1, log-likelihood = -6.54
  euchre:32232, count = 1, log-likelihood = -6.54
  euchre:3rd, count = 2, log-likelihood = -5.85
  euchre:4, count = 18, log-likelihood = -3.65
  euchre:40, count = 1, log-likelihood = -6.54
  euchre:400, count = 1, log-likelihood = -6.54
  euchre:410, count = 1, log-likelihood = -6.54
  euchre:445, count = 1, log-likelihood = -6.54
  euchre:46951, count = 1, log-likelihood = -6.54
  euchre:46c46, count = 1, log-likelihood = -6.54
  euchre:47d46, count = 1, log-likelihood = -6.54
  euchre:5, count = 14, log-likelihood = -3.9
  euchre:50, count = 3, log-likelihood = -5.44
  euchre:52, count = 1, log-likelihood = -6.54
  euchre:524, count = 2, log-likelihood = -5.85
  euchre:53, count = 2, log-likelihood = -5.85
  euchre:6, count = 2, log-likelihood = -5.85
  euchre:603, count = 1, log-likelihood = -6.54
  euchre:610, count = 1, log-likelihood = -6.54
  euchre:6308pm, count = 1, log-likelihood = -6.54
  euchre:69, count = 1, log-likelihood = -6.54
  euchre:7, count = 2, log-likelihood = -5.85
  euchre:70, count = 2, log-likelihood = -5.85
  euchre:700, count = 1, log-likelihood = -6.54
  euchre:710, count = 1, log-likelihood = -6.54
  euchre:711, count = 2, log-likelihood = -5.85
  euchre:77, count = 1, log-likelihood = -6.54
  euchre:8, count = 1, log-likelihood = -6.54
  euchre:80, count = 1, log-likelihood = -6.54
  euchre:810, count = 1, log-likelihood = -6.54
  euchre:8pm, count = 3, log-likelihood = -5.44
  euchre:9, count = 7, log-likelihood = -4.6
  euchre:90, count = 1, log-likelihood = -6.54
  euchre:99, count = 1, log-likelihood = -6.54
  euchre:a, count = 346, log-likelihood = -0.696
  euchre:aain, count = 1, log-likelihood = -6.54
  euchre:ability, count = 1, log-likelihood = -6.54
  euchre:able, count = 17, log-likelihood = -3.71
  euchre:aborted, count = 1, log-likelihood = -6.54
  euchre:about, count = 44, log-likelihood = -2.76
  euchre:above, count = 8, log-likelihood = -4.46
  euchre:absolutely, count = 1, log-likelihood = -6.54
  euchre:abstract, count = 5, log-likelihood = -4.93
  euchre:absurd, count = 2, log-likelihood = -5.85
  euchre:acceptable, count = 5, log-likelihood = -4.93
  euchre:access, count = 20, log-likelihood = -3.55
  euchre:accessed, count = 1, log-likelihood = -6.54
  euchre:accessible, count = 1, log-likelihood = -6.54
  euchre:accessing, count = 2, log-likelihood = -5.85
  euchre:accidentally, count = 1, log-likelihood = -6.54
  euchre:according, count = 9, log-likelihood = -4.35
  euchre:accordingly, count = 1, log-likelihood = -6.54
  euchre:account, count = 8, log-likelihood = -4.46
  euchre:accounting, count = 1, log-likelihood = -6.54
  euchre:accusation, count = 1, log-likelihood = -6.54
  euchre:ace, count = 20, log-likelihood = -3.55
  euchre:achieved, count = 1, log-likelihood = -6.54
  euchre:across, count = 1, log-likelihood = -6.54
  euchre:act, count = 1, log-likelihood = -6.54
  euchre:action, count = 1, log-likelihood = -6.54
  euchre:actions, count = 1, log-likelihood = -6.54
  euchre:actual, count = 8, log-likelihood = -4.46
  euchre:actually, count = 9, log-likelihood = -4.35
  euchre:add, count = 20, log-likelihood = -3.55
  euchre:addanddiscard, count = 12, log-likelihood = -4.06
  euchre:addcard, count = 5, log-likelihood = -4.93
  euchre:addcardconst, count = 1, log-likelihood = -6.54
  euchre:adddrop, count = 1, log-likelihood = -6.54
  euchre:added, count = 5, log-likelihood = -4.93
  euchre:adding, count = 3, log-likelihood = -5.44
  euchre:additional, count = 1, log-likelihood = -6.54
  euchre:additionally, count = 1, log-likelihood = -6.54
  euchre:address, count = 4, log-likelihood = -5.16
  euchre:addresses, count = 2, log-likelihood = -5.85
  euchre:adds, count = 4, log-likelihood = -5.16
  euchre:adequately, count = 1, log-likelihood = -6.54
  euchre:adjustments, count = 1, log-likelihood = -6.54
  euchre:administrator, count = 3, log-likelihood = -5.44
  euchre:advance, count = 10, log-likelihood = -4.24
  euchre:advice, count = 6, log-likelihood = -4.75
  euchre:affect, count = 4, log-likelihood = -5.16
  euchre:affected, count = 1, log-likelihood = -6.54
  euchre:affecting, count = 1, log-likelihood = -6.54
  euchre:aforementioned, count = 1, log-likelihood = -6.54
  euchre:after, count = 38, log-likelihood = -2.9
  euchre:again, count = 11, log-likelihood = -4.14
  euchre:against, count = 12, log-likelihood = -4.06
  euchre:ago, count = 5, log-likelihood = -4.93
  euchre:agree, count = 1, log-likelihood = -6.54
  euchre:ain, count = 1, log-likelihood = -6.54
  euchre:aka, count = 4, log-likelihood = -5.16
  euchre:al, count = 1, log-likelihood = -6.54
  euchre:albeit, count = 1, log-likelihood = -6.54
  euchre:algorithm, count = 6, log-likelihood = -4.75
  euchre:algorithmic, count = 1, log-likelihood = -6.54
  euchre:algorithmlibrary, count = 1, log-likelihood = -6.54
  euchre:alias, count = 1, log-likelihood = -6.54
  euchre:alice, count = 20, log-likelihood = -3.55
  euchre:alices, count = 5, log-likelihood = -4.93
  euchre:aliya, count = 3, log-likelihood = -5.44
  euchre:all, count = 78, log-likelihood = -2.19
  euchre:alleviate, count = 1, log-likelihood = -6.54
  euchre:allocate, count = 3, log-likelihood = -5.44
  euchre:allocated, count = 2, log-likelihood = -5.85
  euchre:allocating, count = 1, log-likelihood = -6.54
  euchre:allow, count = 4, log-likelihood = -5.16
  euchre:allowed, count = 38, log-likelihood = -2.9
  euchre:allowing, count = 1, log-likelihood = -6.54
  euchre:almost, count = 4, log-likelihood = -5.16
  euchre:along, count = 1, log-likelihood = -6.54
  euchre:already, count = 10, log-likelihood = -4.24
  euchre:alright, count = 3, log-likelihood = -5.44
  euchre:also, count = 41, log-likelihood = -2.83
  euchre:alter, count = 1, log-likelihood = -6.54
  euchre:alternate, count = 1, log-likelihood = -6.54
  euchre:although, count = 4, log-likelihood = -5.16
  euchre:always, count = 21, log-likelihood = -3.5
  euchre:am, count = 92, log-likelihood = -2.02
  euchre:amount, count = 5, log-likelihood = -4.93
  euchre:ampersand, count = 1, log-likelihood = -6.54
  euchre:an, count = 109, log-likelihood = -1.85
  euchre:analysis, count = 1, log-likelihood = -6.54
  euchre:and, count = 339, log-likelihood = -0.716
  euchre:andor, count = 4, log-likelihood = -5.16
  euchre:animal, count = 1, log-likelihood = -6.54
  euchre:announcement, count = 1, log-likelihood = -6.54
  euchre:another, count = 16, log-likelihood = -3.77
  euchre:answer, count = 1, log-likelihood = -6.54
  euchre:answering, count = 1, log-likelihood = -6.54
  euchre:answers, count = 1, log-likelihood = -6.54
  euchre:any, count = 83, log-likelihood = -2.12
  euchre:anybody, count = 1, log-likelihood = -6.54
  euchre:anymore, count = 2, log-likelihood = -5.85
  euchre:anyone, count = 25, log-likelihood = -3.32
  euchre:anything, count = 22, log-likelihood = -3.45
  euchre:anytime, count = 1, log-likelihood = -6.54
  euchre:anyway, count = 3, log-likelihood = -5.44
  euchre:anywhere, count = 2, log-likelihood = -5.85
  euchre:apologize, count = 2, log-likelihood = -5.85
  euchre:apparent, count = 2, log-likelihood = -5.85
  euchre:apparently, count = 1, log-likelihood = -6.54
  euchre:appear, count = 1, log-likelihood = -6.54
  euchre:appeared, count = 1, log-likelihood = -6.54
  euchre:appears, count = 5, log-likelihood = -4.93
  euchre:appendix, count = 2, log-likelihood = -5.85
  euchre:applicable, count = 1, log-likelihood = -6.54
  euchre:applicationsxcodeappcontentsdevelopertoolchainsxcodedefaultxctoolchainusrbinincludecv1iosfwd13133, count = 1, log-likelihood = -6.54
  euchre:applies, count = 2, log-likelihood = -5.85
  euchre:apply, count = 1, log-likelihood = -6.54
  euchre:appreciate, count = 4, log-likelihood = -5.16
  euchre:appreciated, count = 13, log-likelihood = -3.98
  euchre:approach, count = 1, log-likelihood = -6.54
  euchre:appropriate, count = 3, log-likelihood = -5.44
  euchre:approximately, count = 1, log-likelihood = -6.54
  euchre:architecture, count = 7, log-likelihood = -4.6
  euchre:are, count = 153, log-likelihood = -1.51
  euchre:arent, count = 11, log-likelihood = -4.14
  euchre:arg1, count = 1, log-likelihood = -6.54
  euchre:argc, count = 2, log-likelihood = -5.85
  euchre:argument, count = 7, log-likelihood = -4.6
  euchre:arguments, count = 13, log-likelihood = -3.98
  euchre:argv, count = 4, log-likelihood = -5.16
  euchre:argv0, count = 1, log-likelihood = -6.54
  euchre:argv1, count = 1, log-likelihood = -6.54
  euchre:argvi, count = 1, log-likelihood = -6.54
  euchre:around, count = 8, log-likelihood = -4.46
  euchre:arratn, count = 1, log-likelihood = -6.54
  euchre:array, count = 38, log-likelihood = -2.9
  euchre:array0, count = 1, log-likelihood = -6.54
  euchre:array0getrank, count = 1, log-likelihood = -6.54
  euchre:array0getsuit, count = 1, log-likelihood = -6.54
  euchre:array1, count = 1, log-likelihood = -6.54
  euchre:array1getrank, count = 1, log-likelihood = -6.54
  euchre:array1getsuit, count = 1, log-likelihood = -6.54
  euchre:arraycard, count = 2, log-likelihood = -5.85
  euchre:arrays, count = 2, log-likelihood = -5.85
  euchre:arraytype, count = 1, log-likelihood = -6.54
  euchre:arrn, count = 1, log-likelihood = -6.54
  euchre:as, count = 126, log-likelihood = -1.71
  euchre:ascending, count = 8, log-likelihood = -4.46
  euchre:ask, count = 3, log-likelihood = -5.44
  euchre:asked, count = 4, log-likelihood = -5.16
  euchre:asking, count = 1, log-likelihood = -6.54
  euchre:assert, count = 17, log-likelihood = -3.71
  euchre:assert0, count = 1, log-likelihood = -6.54
  euchre:assertcardlessc14, count = 1, log-likelihood = -6.54
  euchre:assertcardlessc15, count = 1, log-likelihood = -6.54
  euchre:assertcardlesstwospades, count = 1, log-likelihood = -6.54
  euchre:assertfirstcard, count = 1, log-likelihood = -6.54
  euchre:assertion, count = 1, log-likelihood = -6.54
  euchre:assertions, count = 1, log-likelihood = -6.54
  euchre:assertjackofheartsgetsuitcardsuitdiamonds, count = 1, log-likelihood = -6.54
  euchre:assertjackofheartsgetsuitdiamonds, count = 1, log-likelihood = -6.54
  euchre:asserts, count = 1, log-likelihood = -6.54
  euchre:assertthreespadesgetsuit, count = 1, log-likelihood = -6.54
  euchre:assertthreespadesgetsuitcardsuitclubs, count = 2, log-likelihood = -5.85
  euchre:assign, count = 8, log-likelihood = -4.46
  euchre:assigned, count = 2, log-likelihood = -5.85
  euchre:assigning, count = 3, log-likelihood = -5.44
  euchre:assignment, count = 1, log-likelihood = -6.54
  euchre:associated, count = 1, log-likelihood = -6.54
  euchre:assume, count = 29, log-likelihood = -3.18
  euchre:assumed, count = 1, log-likelihood = -6.54
  euchre:assuming, count = 9, log-likelihood = -4.35
  euchre:assumption, count = 3, log-likelihood = -5.44
  euchre:assumptions, count = 1, log-likelihood = -6.54
  euchre:asterisk, count = 1, log-likelihood = -6.54
  euchre:aswell, count = 1, log-likelihood = -6.54
  euchre:at, count = 61, log-likelihood = -2.43
  euchre:attach, count = 1, log-likelihood = -6.54
  euchre:attached, count = 1, log-likelihood = -6.54
  euchre:attempt, count = 1, log-likelihood = -6.54
  euchre:attempting, count = 2, log-likelihood = -5.85
  euchre:attempts, count = 2, log-likelihood = -5.85
  euchre:auto, count = 2, log-likelihood = -5.85
  euchre:autocompletion, count = 1, log-likelihood = -6.54
  euchre:autograde, count = 1, log-likelihood = -6.54
  euchre:autograder, count = 70, log-likelihood = -2.29
  euchre:autograders, count = 1, log-likelihood = -6.54
  euchre:autogravder, count = 1, log-likelihood = -6.54
  euchre:automate, count = 1, log-likelihood = -6.54
  euchre:automatically, count = 3, log-likelihood = -5.44
  euchre:autorgrader, count = 1, log-likelihood = -6.54
  euchre:avail, count = 1, log-likelihood = -6.54
  euchre:available, count = 2, log-likelihood = -5.85
  euchre:avoid, count = 4, log-likelihood = -5.16
  euchre:aware, count = 1, log-likelihood = -6.54
  euchre:away, count = 4, log-likelihood = -5.16
  euchre:awhile, count = 1, log-likelihood = -6.54
  euchre:b, count = 7, log-likelihood = -4.6
  euchre:back, count = 9, log-likelihood = -4.35
  euchre:backwards, count = 1, log-likelihood = -6.54
  euchre:bad, count = 3, log-likelihood = -5.44
  euchre:barrage, count = 1, log-likelihood = -6.54
  euchre:base, count = 1, log-likelihood = -6.54
  euchre:based, count = 2, log-likelihood = -5.85
  euchre:bash42, count = 10, log-likelihood = -4.24
  euchre:basic, count = 2, log-likelihood = -5.85
  euchre:basically, count = 5, log-likelihood = -4.93
  euchre:basicifstream, count = 1, log-likelihood = -6.54
  euchre:basicstringsconstruct, count = 1, log-likelihood = -6.54
  euchre:bbb, count = 1, log-likelihood = -6.54
  euchre:bbin, count = 1, log-likelihood = -6.54
  euchre:bc, count = 1, log-likelihood = -6.54
  euchre:be, count = 201, log-likelihood = -1.24
  euchre:beat, count = 1, log-likelihood = -6.54
  euchre:because, count = 64, log-likelihood = -2.38
  euchre:become, count = 3, log-likelihood = -5.44
  euchre:becomes, count = 2, log-likelihood = -5.85
  euchre:been, count = 24, log-likelihood = -3.36
  euchre:before, count = 32, log-likelihood = -3.08
  euchre:begin, count = 3, log-likelihood = -5.44
  euchre:begining, count = 1, log-likelihood = -6.54
  euchre:beginning, count = 4, log-likelihood = -5.16
  euchre:behavior, count = 4, log-likelihood = -5.16
  euchre:behind, count = 1, log-likelihood = -6.54
  euchre:being, count = 29, log-likelihood = -3.18
  euchre:beinggraded, count = 1, log-likelihood = -6.54
  euchre:believe, count = 6, log-likelihood = -4.75
  euchre:bells, count = 1, log-likelihood = -6.54
  euchre:below, count = 7, log-likelihood = -4.6
  euchre:beneficial, count = 3, log-likelihood = -5.44
  euchre:beside, count = 1, log-likelihood = -6.54
  euchre:besides, count = 5, log-likelihood = -4.93
  euchre:best, count = 3, log-likelihood = -5.44
  euchre:bestcard, count = 1, log-likelihood = -6.54
  euchre:better, count = 11, log-likelihood = -4.14
  euchre:between, count = 16, log-likelihood = -3.77
  euchre:beyond, count = 1, log-likelihood = -6.54
  euchre:big, count = 1, log-likelihood = -6.54
  euchre:bin, count = 1, log-likelihood = -6.54
  euchre:binary, count = 3, log-likelihood = -5.44
  euchre:binsh, count = 1, log-likelihood = -6.54
  euchre:bit, count = 6, log-likelihood = -4.75
  euchre:bits, count = 1, log-likelihood = -6.54
  euchre:blank, count = 3, log-likelihood = -5.44
  euchre:blankhave, count = 1, log-likelihood = -6.54
  euchre:blindly, count = 1, log-likelihood = -6.54
  euchre:blocks, count = 2, log-likelihood = -5.85
  euchre:bob, count = 17, log-likelihood = -3.71
  euchre:bobs, count = 1, log-likelihood = -6.54
  euchre:body, count = 4, log-likelihood = -5.16
  euchre:bool, count = 13, log-likelihood = -3.98
  euchre:bools, count = 1, log-likelihood = -6.54
  euchre:both, count = 26, log-likelihood = -3.28
  euchre:bother, count = 1, log-likelihood = -6.54
  euchre:bottom, count = 2, log-likelihood = -5.85
  euchre:bower, count = 18, log-likelihood = -3.65
  euchre:bowler, count = 1, log-likelihood = -6.54
  euchre:braces, count = 1, log-likelihood = -6.54
  euchre:brackets, count = 2, log-likelihood = -5.85
  euchre:branch, count = 1, log-likelihood = -6.54
  euchre:break, count = 1, log-likelihood = -6.54
  euchre:breakpoint, count = 1, log-likelihood = -6.54
  euchre:breaks, count = 1, log-likelihood = -6.54
  euchre:broken, count = 1, log-likelihood = -6.54
  euchre:brought, count = 2, log-likelihood = -5.85
  euchre:browser, count = 1, log-likelihood = -6.54
  euchre:bug, count = 1, log-likelihood = -6.54
  euchre:buggy, count = 2, log-likelihood = -5.85
  euchre:bugs, count = 2, log-likelihood = -5.85
  euchre:build, count = 5, log-likelihood = -4.93
  euchre:building, count = 1, log-likelihood = -6.54
  euchre:bunch, count = 3, log-likelihood = -5.44
  euchre:bus, count = 1, log-likelihood = -6.54
  euchre:business, count = 1, log-likelihood = -6.54
  euchre:but, count = 179, log-likelihood = -1.36
  euchre:by, count = 50, log-likelihood = -2.63
  euchre:bytes, count = 2, log-likelihood = -5.85
  euchre:c, count = 6, log-likelihood = -4.75
  euchre:c11, count = 1, log-likelihood = -6.54
  euchre:c132, count = 1, log-likelihood = -6.54
  euchre:c14, count = 1, log-likelihood = -6.54
  euchre:c15, count = 1, log-likelihood = -6.54
  euchre:c2061, count = 1, log-likelihood = -6.54
  euchre:c2678, count = 1, log-likelihood = -6.54
  euchre:c42, count = 1, log-likelihood = -6.54
  euchre:caen, count = 22, log-likelihood = -3.45
  euchre:calendar, count = 1, log-likelihood = -6.54
  euchre:call, count = 33, log-likelihood = -3.05
  euchre:called, count = 16, log-likelihood = -3.77
  euchre:calling, count = 12, log-likelihood = -4.06
  euchre:calls, count = 2, log-likelihood = -5.85
  euchre:came, count = 3, log-likelihood = -5.44
  euchre:can, count = 123, log-likelihood = -1.73
  euchre:candidate, count = 1, log-likelihood = -6.54
  euchre:cannot, count = 27, log-likelihood = -3.25
  euchre:canshould, count = 1, log-likelihood = -6.54
  euchre:cant, count = 29, log-likelihood = -3.18
  euchre:capture, count = 1, log-likelihood = -6.54
  euchre:card, count = 150, log-likelihood = -1.53
  euchre:cardcard, count = 6, log-likelihood = -4.75
  euchre:cardcardrankking, count = 1, log-likelihood = -6.54
  euchre:cardcardranknine, count = 1, log-likelihood = -6.54
  euchre:cardcardrankqueen, count = 1, log-likelihood = -6.54
  euchre:cardcardstdstring, count = 4, log-likelihood = -5.16
  euchre:cardconst, count = 1, log-likelihood = -6.54
  euchre:cardcpp, count = 22, log-likelihood = -3.45
  euchre:carddefaultconstructor, count = 1, log-likelihood = -6.54
  euchre:cardfirst, count = 1, log-likelihood = -6.54
  euchre:cardgetrank, count = 2, log-likelihood = -5.85
  euchre:cardgetsuit, count = 1, log-likelihood = -6.54
  euchre:cardgetsuitstdstring, count = 1, log-likelihood = -6.54
  euchre:cardh, count = 20, log-likelihood = -3.55
  euchre:cardh167, count = 1, log-likelihood = -6.54
  euchre:cardisface, count = 2, log-likelihood = -5.85
  euchre:cardking, count = 1, log-likelihood = -6.54
  euchre:cardless, count = 9, log-likelihood = -4.35
  euchre:cardlessconst, count = 2, log-likelihood = -5.85
  euchre:cardmaxhandsize, count = 1, log-likelihood = -6.54
  euchre:cardone, count = 1, log-likelihood = -6.54
  euchre:cardoperatorcard, count = 1, log-likelihood = -6.54
  euchre:cardoperatorconst, count = 3, log-likelihood = -5.44
  euchre:cardpackplayer, count = 1, log-likelihood = -6.54
  euchre:cardpublictest, count = 5, log-likelihood = -4.93
  euchre:cardpublictestcpp, count = 7, log-likelihood = -4.6
  euchre:cardpublictestcpptext0x17, count = 1, log-likelihood = -6.54
  euchre:cardpublictestcpptext0x561, count = 1, log-likelihood = -6.54
  euchre:cardpublictestcpptext0xca, count = 1, log-likelihood = -6.54
  euchre:cardpublictests, count = 1, log-likelihood = -6.54
  euchre:cardranknine, count = 1, log-likelihood = -6.54
  euchre:cards, count = 89, log-likelihood = -2.05
  euchre:cards0, count = 1, log-likelihood = -6.54
  euchre:cards0cardtempranktempsuit, count = 1, log-likelihood = -6.54
  euchre:cardscpp, count = 1, log-likelihood = -6.54
  euchre:cardsh, count = 3, log-likelihood = -5.44
  euchre:cardsi, count = 1, log-likelihood = -6.54
  euchre:cardsinplayershand, count = 1, log-likelihood = -6.54
  euchre:cardsuitclubs, count = 2, log-likelihood = -5.85
  euchre:cardsuitdiamonds, count = 3, log-likelihood = -5.44
  euchre:cardsuithearts, count = 3, log-likelihood = -5.44
  euchre:cardsuitspades, count = 7, log-likelihood = -4.6
  euchre:cardsuitxxxx, count = 1, log-likelihood = -6.54
  euchre:cardtest, count = 2, log-likelihood = -5.85
  euchre:cardtest1, count = 1, log-likelihood = -6.54
  euchre:cardtest1cpp, count = 5, log-likelihood = -4.93
  euchre:cardtest1cpp410, count = 1, log-likelihood = -6.54
  euchre:cardtest1cpptext0x5e, count = 1, log-likelihood = -6.54
  euchre:cardtest1exe, count = 2, log-likelihood = -5.85
  euchre:cardtest2cpp, count = 1, log-likelihood = -6.54
  euchre:cardtestcpp, count = 7, log-likelihood = -4.6
  euchre:cardtestcpptext0x11, count = 1, log-likelihood = -6.54
  euchre:cardtestcpptext0x133, count = 1, log-likelihood = -6.54
  euchre:cardtestcpptext0x1a5, count = 1, log-likelihood = -6.54
  euchre:cardtestcpptext0x208, count = 1, log-likelihood = -6.54
  euchre:cardtestcpptext0x380, count = 1, log-likelihood = -6.54
  euchre:cardtestcpptext0x430, count = 1, log-likelihood = -6.54
  euchre:cardtestcpptext0x4e0, count = 1, log-likelihood = -6.54
  euchre:cardtestcpptext0x590, count = 1, log-likelihood = -6.54
  euchre:cardtestcpptext0x5db, count = 1, log-likelihood = -6.54
  euchre:cardtestcpptext0x607, count = 1, log-likelihood = -6.54
  euchre:cardtestcpptext0x633, count = 1, log-likelihood = -6.54
  euchre:cardtestcpptext0x65f, count = 1, log-likelihood = -6.54
  euchre:cardtestcpptext0x6a, count = 1, log-likelihood = -6.54
  euchre:cardtestcpptext0x6e4, count = 1, log-likelihood = -6.54
  euchre:cardtestcpptext0xa3, count = 1, log-likelihood = -6.54
  euchre:cardtestcpptext0xe6, count = 1, log-likelihood = -6.54
  euchre:cardtestexe, count = 3, log-likelihood = -5.44
  euchre:cardtestexes, count = 1, log-likelihood = -6.54
  euchre:cardtests, count = 5, log-likelihood = -4.93
  euchre:cardtestsimplecpp, count = 1, log-likelihood = -6.54
  euchre:cardteststartercpp, count = 1, log-likelihood = -6.54
  euchre:cardteststartero, count = 1, log-likelihood = -6.54
  euchre:card’, count = 2, log-likelihood = -5.85
  euchre:case, count = 43, log-likelihood = -2.78
  euchre:cases, count = 32, log-likelihood = -3.08
  euchre:cassert, count = 3, log-likelihood = -5.44
  euchre:catch, count = 1, log-likelihood = -6.54
  euchre:cathy, count = 15, log-likelihood = -3.83
  euchre:cause, count = 6, log-likelihood = -4.75
  euchre:caused, count = 1, log-likelihood = -6.54
  euchre:causes, count = 2, log-likelihood = -5.85
  euchre:causing, count = 9, log-likelihood = -4.35
  euchre:cc1plus, count = 1, log-likelihood = -6.54
  euchre:cdt, count = 1, log-likelihood = -6.54
  euchre:central, count = 1, log-likelihood = -6.54
  euchre:certain, count = 6, log-likelihood = -4.75
  euchre:chance, count = 3, log-likelihood = -5.44
  euchre:change, count = 14, log-likelihood = -3.9
  euchre:changed, count = 6, log-likelihood = -4.75
  euchre:changes, count = 2, log-likelihood = -5.85
  euchre:changing, count = 1, log-likelihood = -6.54
  euchre:char, count = 6, log-likelihood = -4.75
  euchre:character, count = 2, log-likelihood = -5.85
  euchre:check, count = 30, log-likelihood = -3.14
  euchre:checked, count = 11, log-likelihood = -4.14
  euchre:checker, count = 4, log-likelihood = -5.16
  euchre:checking, count = 7, log-likelihood = -4.6
  euchre:checkpack, count = 1, log-likelihood = -6.54
  euchre:checkpackdefaultpack, count = 1, log-likelihood = -6.54
  euchre:checkpackpack, count = 1, log-likelihood = -6.54
  euchre:checks, count = 2, log-likelihood = -5.85
  euchre:checksum, count = 1, log-likelihood = -6.54
  euchre:child, count = 1, log-likelihood = -6.54
  euchre:childexception, count = 2, log-likelihood = -5.85
  euchre:choices, count = 1, log-likelihood = -6.54
  euchre:choose, count = 8, log-likelihood = -4.46
  euchre:chooses, count = 1, log-likelihood = -6.54
  euchre:chose, count = 1, log-likelihood = -6.54
  euchre:chosen, count = 1, log-likelihood = -6.54
  euchre:cin, count = 3, log-likelihood = -5.44
  euchre:circumstances, count = 1, log-likelihood = -6.54
  euchre:clang, count = 6, log-likelihood = -4.75
  euchre:clarification, count = 4, log-likelihood = -5.16
  euchre:clarifications, count = 1, log-likelihood = -6.54
  euchre:clarify, count = 3, log-likelihood = -5.44
  euchre:class, count = 61, log-likelihood = -2.43
  euchre:classes, count = 18, log-likelihood = -3.65
  euchre:classtype, count = 1, log-likelihood = -6.54
  euchre:clause, count = 5, log-likelihood = -4.93
  euchre:clauses, count = 3, log-likelihood = -5.44
  euchre:clean, count = 1, log-likelihood = -6.54
  euchre:cleaner, count = 1, log-likelihood = -6.54
  euchre:clear, count = 4, log-likelihood = -5.16
  euchre:clearly, count = 1, log-likelihood = -6.54
  euchre:clock, count = 1, log-likelihood = -6.54
  euchre:closer, count = 1, log-likelihood = -6.54
  euchre:clubs, count = 26, log-likelihood = -3.28
  euchre:clue, count = 3, log-likelihood = -5.44
  euchre:code, count = 72, log-likelihood = -2.27
  euchre:codes, count = 1, log-likelihood = -6.54
  euchre:codewise, count = 1, log-likelihood = -6.54
  euchre:coding, count = 1, log-likelihood = -6.54
  euchre:coincidentally, count = 1, log-likelihood = -6.54
  euchre:collect2, count = 6, log-likelihood = -4.75
  euchre:color, count = 11, log-likelihood = -4.14
  euchre:combination, count = 1, log-likelihood = -6.54
  euchre:combinations, count = 1, log-likelihood = -6.54
  euchre:come, count = 3, log-likelihood = -5.44
  euchre:comes, count = 6, log-likelihood = -4.75
  euchre:coming, count = 3, log-likelihood = -5.44
  euchre:command, count = 27, log-likelihood = -3.25
  euchre:commands, count = 1, log-likelihood = -6.54
  euchre:comment, count = 4, log-likelihood = -5.16
  euchre:commented, count = 1, log-likelihood = -6.54
  euchre:comparator, count = 1, log-likelihood = -6.54
  euchre:compare, count = 5, log-likelihood = -4.93
  euchre:compared, count = 1, log-likelihood = -6.54
  euchre:comparing, count = 6, log-likelihood = -4.75
  euchre:comparison, count = 5, log-likelihood = -4.93
  euchre:comparisons, count = 2, log-likelihood = -5.85
  euchre:compatible, count = 1, log-likelihood = -6.54
  euchre:compilation, count = 4, log-likelihood = -5.16
  euchre:compile, count = 21, log-likelihood = -3.5
  euchre:compiled, count = 2, log-likelihood = -5.85
  euchre:compiledreceived, count = 1, log-likelihood = -6.54
  euchre:compiler, count = 20, log-likelihood = -3.55
  euchre:compiles, count = 5, log-likelihood = -4.93
  euchre:compiling, count = 6, log-likelihood = -4.75
  euchre:complain, count = 1, log-likelihood = -6.54
  euchre:complete, count = 2, log-likelihood = -5.85
  euchre:completed, count = 2, log-likelihood = -5.85
  euchre:completely, count = 6, log-likelihood = -4.75
  euchre:complier, count = 1, log-likelihood = -6.54
  euchre:complies, count = 2, log-likelihood = -5.85
  euchre:complile, count = 1, log-likelihood = -6.54
  euchre:comprehensive, count = 1, log-likelihood = -6.54
  euchre:computer, count = 5, log-likelihood = -4.93
  euchre:computers, count = 3, log-likelihood = -5.44
  euchre:concerned, count = 2, log-likelihood = -5.85
  euchre:conditionals, count = 1, log-likelihood = -6.54
  euchre:conditions, count = 3, log-likelihood = -5.44
  euchre:confident, count = 1, log-likelihood = -6.54
  euchre:confirm, count = 1, log-likelihood = -6.54
  euchre:confirmation, count = 1, log-likelihood = -6.54
  euchre:conflicting, count = 1, log-likelihood = -6.54
  euchre:confuse, count = 1, log-likelihood = -6.54
  euchre:confused, count = 32, log-likelihood = -3.08
  euchre:confusion, count = 2, log-likelihood = -5.85
  euchre:conjunction, count = 1, log-likelihood = -6.54
  euchre:consider, count = 8, log-likelihood = -4.46
  euchre:consideration, count = 2, log-likelihood = -5.85
  euchre:considered, count = 13, log-likelihood = -3.98
  euchre:considering, count = 7, log-likelihood = -4.6
  euchre:consist, count = 2, log-likelihood = -5.85
  euchre:consistently, count = 1, log-likelihood = -6.54
  euchre:console, count = 1, log-likelihood = -6.54
  euchre:const, count = 49, log-likelihood = -2.65
  euchre:constant, count = 1, log-likelihood = -6.54
  euchre:constantly, count = 1, log-likelihood = -6.54
  euchre:constants, count = 1, log-likelihood = -6.54
  euchre:constexpr, count = 5, log-likelihood = -4.93
  euchre:construct, count = 1, log-likelihood = -6.54
  euchre:constructed, count = 1, log-likelihood = -6.54
  euchre:constructions, count = 1, log-likelihood = -6.54
  euchre:constructor, count = 33, log-likelihood = -3.05
  euchre:constructors, count = 15, log-likelihood = -3.83
  euchre:consts, count = 1, log-likelihood = -6.54
  euchre:contact, count = 4, log-likelihood = -5.16
  euchre:contain, count = 5, log-likelihood = -4.93
  euchre:containing, count = 1, log-likelihood = -6.54
  euchre:contains, count = 3, log-likelihood = -5.44
  euchre:content, count = 1, log-likelihood = -6.54
  euchre:contents, count = 1, log-likelihood = -6.54
  euchre:context, count = 1, log-likelihood = -6.54
  euchre:contexts, count = 1, log-likelihood = -6.54
  euchre:contingent, count = 1, log-likelihood = -6.54
  euchre:continue, count = 2, log-likelihood = -5.85
  euchre:conversion, count = 3, log-likelihood = -5.44
  euchre:convert, count = 6, log-likelihood = -4.75
  euchre:cool, count = 1, log-likelihood = -6.54
  euchre:copied, count = 2, log-likelihood = -5.85
  euchre:copy, count = 6, log-likelihood = -4.75
  euchre:copying, count = 1, log-likelihood = -6.54
  euchre:correct, count = 61, log-likelihood = -2.43
  euchre:correcting, count = 1, log-likelihood = -6.54
  euchre:corrections, count = 2, log-likelihood = -5.85
  euchre:correctly, count = 16, log-likelihood = -3.77
  euchre:correctness, count = 1, log-likelihood = -6.54
  euchre:corresponding, count = 2, log-likelihood = -5.85
  euchre:could, count = 47, log-likelihood = -2.69
  euchre:couldnt, count = 5, log-likelihood = -4.93
  euchre:count, count = 5, log-likelihood = -4.93
  euchre:countcards, count = 1, log-likelihood = -6.54
  euchre:countcardsconst, count = 1, log-likelihood = -6.54
  euchre:counted, count = 1, log-likelihood = -6.54
  euchre:counting, count = 2, log-likelihood = -5.85
  euchre:counts, count = 3, log-likelihood = -5.44
  euchre:couple, count = 1, log-likelihood = -6.54
  euchre:course, count = 5, log-likelihood = -4.93
  euchre:cout, count = 17, log-likelihood = -3.71
  euchre:couts, count = 1, log-likelihood = -6.54
  euchre:covered, count = 1, log-likelihood = -6.54
  euchre:cpp, count = 11, log-likelihood = -4.14
  euchre:cpps, count = 1, log-likelihood = -6.54
  euchre:crazy, count = 1, log-likelihood = -6.54
  euchre:create, count = 13, log-likelihood = -3.98
  euchre:created, count = 16, log-likelihood = -3.77
  euchre:creating, count = 9, log-likelihood = -4.35
  euchre:creation, count = 1, log-likelihood = -6.54
  euchre:credit, count = 1, log-likelihood = -6.54
  euchre:cross, count = 2, log-likelihood = -5.85
  euchre:crucial, count = 1, log-likelihood = -6.54
  euchre:cry, count = 1, log-likelihood = -6.54
  euchre:cstdlib, count = 2, log-likelihood = -5.85
  euchre:cstring, count = 3, log-likelihood = -5.44
  euchre:cstrings, count = 1, log-likelihood = -6.54
  euchre:cstyle, count = 1, log-likelihood = -6.54
  euchre:ctor, count = 1, log-likelihood = -6.54
  euchre:cue, count = 1, log-likelihood = -6.54
  euchre:cued, count = 2, log-likelihood = -5.85
  euchre:curly, count = 1, log-likelihood = -6.54
  euchre:current, count = 2, log-likelihood = -5.85
  euchre:currently, count = 8, log-likelihood = -4.46
  euchre:custom, count = 1, log-likelihood = -6.54
  euchre:cut, count = 2, log-likelihood = -5.85
  euchre:cutting, count = 3, log-likelihood = -5.44
  euchre:cxx, count = 1, log-likelihood = -6.54
  euchre:cxxflags, count = 2, log-likelihood = -5.85
  euchre:cygwin, count = 4, log-likelihood = -5.16
  euchre:d, count = 1, log-likelihood = -6.54
  euchre:dangling, count = 1, log-likelihood = -6.54
  euchre:data, count = 6, log-likelihood = -4.75
  euchre:day, count = 4, log-likelihood = -5.16
  euchre:daynights, count = 1, log-likelihood = -6.54
  euchre:days, count = 2, log-likelihood = -5.85
  euchre:deadline, count = 2, log-likelihood = -5.85
  euchre:deal, count = 7, log-likelihood = -4.6
  euchre:dealer, count = 33, log-likelihood = -3.05
  euchre:dealers, count = 1, log-likelihood = -6.54
  euchre:dealing, count = 7, log-likelihood = -4.6
  euchre:dealone, count = 6, log-likelihood = -4.75
  euchre:deals, count = 3, log-likelihood = -5.44
  euchre:dealt, count = 4, log-likelihood = -5.16
  euchre:debug, count = 4, log-likelihood = -5.16
  euchre:debugging, count = 2, log-likelihood = -5.85
  euchre:debugrelease, count = 1, log-likelihood = -6.54
  euchre:decide, count = 1, log-likelihood = -6.54
  euchre:decides, count = 1, log-likelihood = -6.54
  euchre:deciding, count = 1, log-likelihood = -6.54
  euchre:decision, count = 4, log-likelihood = -5.16
  euchre:decisions, count = 1, log-likelihood = -6.54
  euchre:deck, count = 14, log-likelihood = -3.9
  euchre:declaration, count = 9, log-likelihood = -4.35
  euchre:declarations, count = 2, log-likelihood = -5.85
  euchre:declare, count = 16, log-likelihood = -3.77
  euchre:declared, count = 18, log-likelihood = -3.65
  euchre:declares, count = 1, log-likelihood = -6.54
  euchre:declaring, count = 2, log-likelihood = -5.85
  euchre:deconstructor, count = 1, log-likelihood = -6.54
  euchre:decrement, count = 1, log-likelihood = -6.54
  euchre:deduction, count = 1, log-likelihood = -6.54
  euchre:deeply, count = 1, log-likelihood = -6.54
  euchre:default, count = 9, log-likelihood = -4.35
  euchre:defaultpack, count = 1, log-likelihood = -6.54
  euchre:define, count = 3, log-likelihood = -5.44
  euchre:defined, count = 11, log-likelihood = -4.14
  euchre:defines, count = 1, log-likelihood = -6.54
  euchre:definitely, count = 4, log-likelihood = -5.16
  euchre:definition, count = 9, log-likelihood = -4.35
  euchre:definitions, count = 1, log-likelihood = -6.54
  euchre:delete, count = 14, log-likelihood = -3.9
  euchre:deleted, count = 6, log-likelihood = -4.75
  euchre:deletes, count = 1, log-likelihood = -6.54
  euchre:deleting, count = 2, log-likelihood = -5.85
  euchre:demonstrate, count = 2, log-likelihood = -5.85
  euchre:denied, count = 1, log-likelihood = -6.54
  euchre:dependencies, count = 1, log-likelihood = -6.54
  euchre:dependent, count = 1, log-likelihood = -6.54
  euchre:depending, count = 1, log-likelihood = -6.54
  euchre:depends, count = 1, log-likelihood = -6.54
  euchre:dept, count = 1, log-likelihood = -6.54
  euchre:dereference, count = 1, log-likelihood = -6.54
  euchre:derived, count = 8, log-likelihood = -4.46
  euchre:describe, count = 1, log-likelihood = -6.54
  euchre:described, count = 3, log-likelihood = -5.44
  euchre:description, count = 1, log-likelihood = -6.54
  euchre:design, count = 1, log-likelihood = -6.54
  euchre:designed, count = 1, log-likelihood = -6.54
  euchre:despite, count = 2, log-likelihood = -5.85
  euchre:destructed, count = 1, log-likelihood = -6.54
  euchre:destructor, count = 4, log-likelihood = -5.16
  euchre:destructors, count = 1, log-likelihood = -6.54
  euchre:detail, count = 1, log-likelihood = -6.54
  euchre:detected, count = 2, log-likelihood = -5.85
  euchre:determine, count = 5, log-likelihood = -4.93
  euchre:determines, count = 1, log-likelihood = -6.54
  euchre:determining, count = 3, log-likelihood = -5.44
  euchre:developing, count = 2, log-likelihood = -5.85
  euchre:devestating, count = 1, log-likelihood = -6.54
  euchre:dialogue, count = 1, log-likelihood = -6.54
  euchre:diamond, count = 6, log-likelihood = -4.75
  euchre:diamonds, count = 38, log-likelihood = -2.9
  euchre:did, count = 20, log-likelihood = -3.55
  euchre:didnt, count = 10, log-likelihood = -4.24
  euchre:diff, count = 13, log-likelihood = -3.98
  euchre:diffcheck, count = 1, log-likelihood = -6.54
  euchre:diffcheckercom, count = 1, log-likelihood = -6.54
  euchre:diffed, count = 1, log-likelihood = -6.54
  euchre:differ, count = 2, log-likelihood = -5.85
  euchre:difference, count = 22, log-likelihood = -3.45
  euchre:differences, count = 2, log-likelihood = -5.85
  euchre:different, count = 26, log-likelihood = -3.28
  euchre:differentiate, count = 1, log-likelihood = -6.54
  euchre:difficult, count = 3, log-likelihood = -5.44
  euchre:difficulties, count = 1, log-likelihood = -6.54
  euchre:direct, count = 1, log-likelihood = -6.54
  euchre:directly, count = 6, log-likelihood = -4.75
  euchre:directory, count = 3, log-likelihood = -5.44
  euchre:dis, count = 1, log-likelihood = -6.54
  euchre:disable, count = 1, log-likelihood = -6.54
  euchre:disabled, count = 2, log-likelihood = -5.85
  euchre:discard, count = 21, log-likelihood = -3.5
  euchre:discarded, count = 4, log-likelihood = -5.16
  euchre:discarding, count = 2, log-likelihood = -5.85
  euchre:discards, count = 3, log-likelihood = -5.44
  euchre:discovery, count = 1, log-likelihood = -6.54
  euchre:discussed, count = 1, log-likelihood = -6.54
  euchre:disparaging, count = 1, log-likelihood = -6.54
  euchre:display, count = 1, log-likelihood = -6.54
  euchre:displayed, count = 1, log-likelihood = -6.54
  euchre:disposal, count = 1, log-likelihood = -6.54
  euchre:dissapointed, count = 1, log-likelihood = -6.54
  euchre:distribute, count = 1, log-likelihood = -6.54
  euchre:do, count = 152, log-likelihood = -1.52
  euchre:doc, count = 1, log-likelihood = -6.54
  euchre:docked, count = 1, log-likelihood = -6.54
  euchre:document, count = 3, log-likelihood = -5.44
  euchre:does, count = 114, log-likelihood = -1.81
  euchre:doesnt, count = 21, log-likelihood = -3.5
  euchre:doing, count = 14, log-likelihood = -3.9
  euchre:done, count = 8, log-likelihood = -4.46
  euchre:dont, count = 52, log-likelihood = -2.59
  euchre:double, count = 3, log-likelihood = -5.44
  euchre:doubtful, count = 1, log-likelihood = -6.54
  euchre:down, count = 12, log-likelihood = -4.06
  euchre:download, count = 2, log-likelihood = -5.85
  euchre:downloaded, count = 2, log-likelihood = -5.85
  euchre:drew, count = 15, log-likelihood = -3.83
  euchre:drews, count = 1, log-likelihood = -6.54
  euchre:drive, count = 3, log-likelihood = -5.44
  euchre:driver, count = 5, log-likelihood = -4.93
  euchre:drivereuchercpp, count = 1, log-likelihood = -6.54
  euchre:due, count = 12, log-likelihood = -4.06
  euchre:dumb, count = 2, log-likelihood = -5.85
  euchre:dumbing, count = 1, log-likelihood = -6.54
  euchre:duplicated, count = 1, log-likelihood = -6.54
  euchre:duplicates, count = 2, log-likelihood = -5.85
  euchre:duplicating, count = 1, log-likelihood = -6.54
  euchre:during, count = 15, log-likelihood = -3.83
  euchre:dynamic, count = 2, log-likelihood = -5.85
  euchre:dynamically, count = 2, log-likelihood = -5.85
  euchre:each, count = 31, log-likelihood = -3.11
  euchre:earlier, count = 2, log-likelihood = -5.85
  euchre:early, count = 1, log-likelihood = -6.54
  euchre:easier, count = 6, log-likelihood = -4.75
  euchre:easy, count = 3, log-likelihood = -5.44
  euchre:echrecpp, count = 1, log-likelihood = -6.54
  euchre:eclipse, count = 1, log-likelihood = -6.54
  euchre:edge, count = 1, log-likelihood = -6.54
  euchre:edit, count = 1, log-likelihood = -6.54
  euchre:editing, count = 1, log-likelihood = -6.54
  euchre:eecs, count = 1, log-likelihood = -6.54
  euchre:effect, count = 3, log-likelihood = -5.44
  euchre:effectiveness, count = 1, log-likelihood = -6.54
  euchre:effects, count = 6, log-likelihood = -4.75
  euchre:efficient, count = 2, log-likelihood = -5.85
  euchre:eg, count = 2, log-likelihood = -5.85
  euchre:eight, count = 1, log-likelihood = -6.54
  euchre:either, count = 9, log-likelihood = -4.35
  euchre:eldest, count = 1, log-likelihood = -6.54
  euchre:element, count = 4, log-likelihood = -5.16
  euchre:elements, count = 3, log-likelihood = -5.44
  euchre:else, count = 16, log-likelihood = -3.77
  euchre:elsewhere, count = 1, log-likelihood = -6.54
  euchre:emacs, count = 1, log-likelihood = -6.54
  euchre:email, count = 1, log-likelihood = -6.54
  euchre:emitted, count = 1, log-likelihood = -6.54
  euchre:empty, count = 5, log-likelihood = -4.93
  euchre:encapsulated, count = 1, log-likelihood = -6.54
  euchre:encased, count = 1, log-likelihood = -6.54
  euchre:encountering, count = 1, log-likelihood = -6.54
  euchre:end, count = 21, log-likelihood = -3.5
  euchre:ending, count = 2, log-likelihood = -5.85
  euchre:endl, count = 6, log-likelihood = -4.75
  euchre:ends, count = 1, log-likelihood = -6.54
  euchre:enemy, count = 1, log-likelihood = -6.54
  euchre:enough, count = 4, log-likelihood = -5.16
  euchre:enter, count = 9, log-likelihood = -4.35
  euchre:enters, count = 3, log-likelihood = -5.44
  euchre:entire, count = 4, log-likelihood = -5.16
  euchre:entirety, count = 1, log-likelihood = -6.54
  euchre:entry, count = 1, log-likelihood = -6.54
  euchre:entrystart, count = 1, log-likelihood = -6.54
  euchre:enumeration, count = 1, log-likelihood = -6.54
  euchre:environments, count = 1, log-likelihood = -6.54
  euchre:equal, count = 12, log-likelihood = -4.06
  euchre:equate, count = 1, log-likelihood = -6.54
  euchre:equivalence, count = 2, log-likelihood = -5.85
  euchre:equivalent, count = 1, log-likelihood = -6.54
  euchre:erase, count = 1, log-likelihood = -6.54
  euchre:errno, count = 2, log-likelihood = -5.85
  euchre:error, count = 121, log-likelihood = -1.75
  euchre:errors, count = 29, log-likelihood = -3.18
  euchre:errread, count = 2, log-likelihood = -5.85
  euchre:errwrite, count = 2, log-likelihood = -5.85
  euchre:essentially, count = 7, log-likelihood = -4.6
  euchre:estimated, count = 1, log-likelihood = -6.54
  euchre:etc, count = 10, log-likelihood = -4.24
  euchre:euchercpp, count = 2, log-likelihood = -5.85
  euchre:euchre, count = 39, log-likelihood = -2.88
  euchre:euchre48b5deo, count = 1, log-likelihood = -6.54
  euchre:euchre50, count = 1, log-likelihood = -6.54
  euchre:euchrecpp, count = 40, log-likelihood = -2.85
  euchre:euchrecpp146111, count = 1, log-likelihood = -6.54
  euchre:euchrecpp9314, count = 1, log-likelihood = -6.54
  euchre:euchreexe, count = 1, log-likelihood = -6.54
  euchre:euchretest00, count = 5, log-likelihood = -4.93
  euchre:euchretest00out, count = 5, log-likelihood = -4.93
  euchre:euchretest00outcorrect, count = 6, log-likelihood = -4.75
  euchre:euchretest00outeuchretest00outcorrect, count = 1, log-likelihood = -6.54
  euchre:euchretest00withsolutioncardpackplayer, count = 1, log-likelihood = -6.54
  euchre:euchretest01, count = 7, log-likelihood = -4.6
  euchre:euchretest01outcorrect, count = 3, log-likelihood = -5.44
  euchre:euchretest01withsolutioncardpackplayer, count = 1, log-likelihood = -6.54
  euchre:euchretest50, count = 6, log-likelihood = -4.75
  euchre:euchretest50in, count = 2, log-likelihood = -5.85
  euchre:euchretest50out, count = 2, log-likelihood = -5.85
  euchre:euchretest50outcorrect, count = 5, log-likelihood = -4.93
  euchre:euchretestoutcorrect, count = 1, log-likelihood = -6.54
  euchre:euchretests, count = 1, log-likelihood = -6.54
  euchre:evaluating, count = 1, log-likelihood = -6.54
  euchre:evaluation, count = 2, log-likelihood = -5.85
  euchre:even, count = 17, log-likelihood = -3.71
  euchre:event, count = 2, log-likelihood = -5.85
  euchre:eventually, count = 1, log-likelihood = -6.54
  euchre:ever, count = 5, log-likelihood = -4.93
  euchre:every, count = 18, log-likelihood = -3.65
  euchre:everyone, count = 2, log-likelihood = -5.85
  euchre:everything, count = 8, log-likelihood = -4.46
  euchre:everywhere, count = 1, log-likelihood = -6.54
  euchre:ex, count = 3, log-likelihood = -5.44
  euchre:exact, count = 8, log-likelihood = -4.46
  euchre:exactly, count = 22, log-likelihood = -3.45
  euchre:example, count = 38, log-likelihood = -2.9
  euchre:examples, count = 1, log-likelihood = -6.54
  euchre:excbad, count = 1, log-likelihood = -6.54
  euchre:excbadaccess, count = 2, log-likelihood = -5.85
  euchre:exceed, count = 1, log-likelihood = -6.54
  euchre:except, count = 8, log-likelihood = -4.46
  euchre:excerpt, count = 1, log-likelihood = -6.54
  euchre:excessive, count = 1, log-likelihood = -6.54
  euchre:excluding, count = 1, log-likelihood = -6.54
  euchre:exec, count = 1, log-likelihood = -6.54
  euchre:executable, count = 3, log-likelihood = -5.44
  euchre:executechild, count = 2, log-likelihood = -5.85
  euchre:executed, count = 1, log-likelihood = -6.54
  euchre:executes, count = 1, log-likelihood = -6.54
  euchre:exist, count = 1, log-likelihood = -6.54
  euchre:existence, count = 1, log-likelihood = -6.54
  euchre:exit, count = 12, log-likelihood = -4.06
  euchre:exiting, count = 2, log-likelihood = -5.85
  euchre:exits, count = 1, log-likelihood = -6.54
  euchre:expected, count = 10, log-likelihood = -4.24
  euchre:expecting, count = 1, log-likelihood = -6.54
  euchre:experiencing, count = 1, log-likelihood = -6.54
  euchre:explain, count = 5, log-likelihood = -4.93
  euchre:explained, count = 1, log-likelihood = -6.54
  euchre:explaining, count = 2, log-likelihood = -5.85
  euchre:explanation, count = 3, log-likelihood = -5.44
  euchre:explicit, count = 1, log-likelihood = -6.54
  euchre:explodes, count = 1, log-likelihood = -6.54
  euchre:expression, count = 3, log-likelihood = -5.44
  euchre:expressions, count = 2, log-likelihood = -5.85
  euchre:extension, count = 7, log-likelihood = -4.6
  euchre:external, count = 1, log-likelihood = -6.54
  euchre:extra, count = 7, log-likelihood = -4.6
  euchre:extract, count = 1, log-likelihood = -6.54
  euchre:extraction, count = 1, log-likelihood = -6.54
  euchre:extreme, count = 1, log-likelihood = -6.54
  euchre:extremely, count = 4, log-likelihood = -5.16
  euchre:eye, count = 1, log-likelihood = -6.54
  euchre:face, count = 8, log-likelihood = -4.46
  euchre:faced, count = 1, log-likelihood = -6.54
  euchre:fact, count = 2, log-likelihood = -5.85
  euchre:factor, count = 1, log-likelihood = -6.54
  euchre:factors, count = 1, log-likelihood = -6.54
  euchre:factory, count = 9, log-likelihood = -4.35
  euchre:fail, count = 8, log-likelihood = -4.46
  euchre:failed, count = 12, log-likelihood = -4.06
  euchre:failing, count = 13, log-likelihood = -3.98
  euchre:fails, count = 3, log-likelihood = -5.44
  euchre:fair, count = 3, log-likelihood = -5.44
  euchre:fairly, count = 1, log-likelihood = -6.54
  euchre:false, count = 8, log-likelihood = -4.46
  euchre:faq, count = 1, log-likelihood = -6.54
  euchre:faqs, count = 2, log-likelihood = -5.85
  euchre:far, count = 1, log-likelihood = -6.54
  euchre:fatal, count = 1, log-likelihood = -6.54
  euchre:fault, count = 9, log-likelihood = -4.35
  euchre:faults, count = 1, log-likelihood = -6.54
  euchre:faulty, count = 2, log-likelihood = -5.85
  euchre:feature, count = 1, log-likelihood = -6.54
  euchre:feedback, count = 4, log-likelihood = -5.16
  euchre:feel, count = 8, log-likelihood = -4.46
  euchre:feels, count = 4, log-likelihood = -5.16
  euchre:felt, count = 1, log-likelihood = -6.54
  euchre:few, count = 9, log-likelihood = -4.35
  euchre:fewer, count = 2, log-likelihood = -5.85
  euchre:field, count = 1, log-likelihood = -6.54
  euchre:figure, count = 5, log-likelihood = -4.93
  euchre:figured, count = 1, log-likelihood = -6.54
  euchre:figuring, count = 3, log-likelihood = -5.44
  euchre:file, count = 79, log-likelihood = -2.17
  euchre:filename, count = 6, log-likelihood = -4.75
  euchre:fileopenpackfilenamecstr, count = 1, log-likelihood = -6.54
  euchre:files, count = 47, log-likelihood = -2.69
  euchre:filled, count = 1, log-likelihood = -6.54
  euchre:filling, count = 1, log-likelihood = -6.54
  euchre:final, count = 7, log-likelihood = -4.6
  euchre:finally, count = 1, log-likelihood = -6.54
  euchre:find, count = 18, log-likelihood = -3.65
  euchre:finding, count = 1, log-likelihood = -6.54
  euchre:fine, count = 13, log-likelihood = -3.98
  euchre:finish, count = 1, log-likelihood = -6.54
  euchre:finished, count = 6, log-likelihood = -4.75
  euchre:finpackin, count = 1, log-likelihood = -6.54
  euchre:first, count = 46, log-likelihood = -2.71
  euchre:firstcard, count = 2, log-likelihood = -5.85
  euchre:fit, count = 1, log-likelihood = -6.54
  euchre:five, count = 2, log-likelihood = -5.85
  euchre:fix, count = 14, log-likelihood = -3.9
  euchre:fixed, count = 1, log-likelihood = -6.54
  euchre:fixing, count = 2, log-likelihood = -5.85
  euchre:folder, count = 3, log-likelihood = -5.44
  euchre:follow, count = 11, log-likelihood = -4.14
  euchre:followed, count = 1, log-likelihood = -6.54
  euchre:following, count = 29, log-likelihood = -3.18
  euchre:follows, count = 2, log-likelihood = -5.85
  euchre:followup, count = 1, log-likelihood = -6.54
  euchre:for, count = 296, log-likelihood = -0.852
  euchre:forany, count = 1, log-likelihood = -6.54
  euchre:forced, count = 1, log-likelihood = -6.54
  euchre:forcing, count = 1, log-likelihood = -6.54
  euchre:forget, count = 1, log-likelihood = -6.54
  euchre:forgot, count = 1, log-likelihood = -6.54
  euchre:forloop, count = 1, log-likelihood = -6.54
  euchre:format, count = 4, log-likelihood = -5.16
  euchre:formatted, count = 2, log-likelihood = -5.85
  euchre:former, count = 1, log-likelihood = -6.54
  euchre:found, count = 14, log-likelihood = -3.9
  euchre:four, count = 6, log-likelihood = -4.75
  euchre:free, count = 2, log-likelihood = -5.85
  euchre:freed, count = 2, log-likelihood = -5.85
  euchre:freedom, count = 1, log-likelihood = -6.54
  euchre:freely, count = 1, log-likelihood = -6.54
  euchre:freeze, count = 1, log-likelihood = -6.54
  euchre:friday, count = 1, log-likelihood = -6.54
  euchre:friends, count = 3, log-likelihood = -5.44
  euchre:from, count = 78, log-likelihood = -2.19
  euchre:front, count = 3, log-likelihood = -5.44
  euchre:frustrated, count = 2, log-likelihood = -5.85
  euchre:fstream, count = 2, log-likelihood = -5.85
  euchre:full, count = 2, log-likelihood = -5.85
  euchre:fully, count = 3, log-likelihood = -5.44
  euchre:fun, count = 1, log-likelihood = -6.54
  euchre:funcitons, count = 1, log-likelihood = -6.54
  euchre:function, count = 145, log-likelihood = -1.57
  euchre:functional, count = 2, log-likelihood = -5.85
  euchre:functionalities, count = 1, log-likelihood = -6.54
  euchre:functionits, count = 1, log-likelihood = -6.54
  euchre:functions, count = 91, log-likelihood = -2.03
  euchre:fundamental, count = 1, log-likelihood = -6.54
  euchre:further, count = 1, log-likelihood = -6.54
  euchre:future, count = 2, log-likelihood = -5.85
  euchre:g, count = 12, log-likelihood = -4.06
  euchre:gaining, count = 1, log-likelihood = -6.54
  euchre:game, count = 28, log-likelihood = -3.21
  euchre:gamedealermaketrumpgameupcard, count = 1, log-likelihood = -6.54
  euchre:gameplayers0, count = 1, log-likelihood = -6.54
  euchre:gameplayersnextplayerindexgame, count = 1, log-likelihood = -6.54
  euchre:games, count = 3, log-likelihood = -5.44
  euchre:gameupcardgetsuit, count = 1, log-likelihood = -6.54
  euchre:garbage, count = 1, log-likelihood = -6.54
  euchre:gave, count = 7, log-likelihood = -4.6
  euchre:gcc, count = 1, log-likelihood = -6.54
  euchre:gdb, count = 3, log-likelihood = -5.44
  euchre:general, count = 2, log-likelihood = -5.85
  euchre:generally, count = 1, log-likelihood = -6.54
  euchre:generated, count = 1, log-likelihood = -6.54
  euchre:genericpublic, count = 1, log-likelihood = -6.54
  euchre:get, count = 84, log-likelihood = -2.11
  euchre:getcardweight, count = 1, log-likelihood = -6.54
  euchre:gethand, count = 1, log-likelihood = -6.54
  euchre:getline, count = 1, log-likelihood = -6.54
  euchre:getname, count = 7, log-likelihood = -4.6
  euchre:getrank, count = 2, log-likelihood = -5.85
  euchre:gets, count = 5, log-likelihood = -4.93
  euchre:getstrategy, count = 1, log-likelihood = -6.54
  euchre:getsuit, count = 6, log-likelihood = -4.75
  euchre:getsuitconst, count = 2, log-likelihood = -5.85
  euchre:getsuittrump, count = 4, log-likelihood = -5.16
  euchre:getter, count = 1, log-likelihood = -6.54
  euchre:getters, count = 1, log-likelihood = -6.54
  euchre:getting, count = 53, log-likelihood = -2.57
  euchre:giant, count = 1, log-likelihood = -6.54
  euchre:give, count = 4, log-likelihood = -5.16
  euchre:given, count = 21, log-likelihood = -3.5
  euchre:gives, count = 8, log-likelihood = -4.46
  euchre:giving, count = 2, log-likelihood = -5.85
  euchre:glibcxxmovefirst, count = 1, log-likelihood = -6.54
  euchre:global, count = 3, log-likelihood = -5.44
  euchre:go, count = 15, log-likelihood = -3.83
  euchre:goes, count = 3, log-likelihood = -5.44
  euchre:going, count = 24, log-likelihood = -3.36
  euchre:gone, count = 2, log-likelihood = -5.85
  euchre:good, count = 4, log-likelihood = -5.16
  euchre:googl, count = 1, log-likelihood = -6.54
  euchre:google, count = 4, log-likelihood = -5.16
  euchre:got, count = 24, log-likelihood = -3.36
  euchre:gotten, count = 1, log-likelihood = -6.54
  euchre:grab, count = 1, log-likelihood = -6.54
  euchre:grabbing, count = 1, log-likelihood = -6.54
  euchre:grade, count = 6, log-likelihood = -4.75
  euchre:graded, count = 9, log-likelihood = -4.35
  euchre:grader, count = 4, log-likelihood = -5.16
  euchre:graders, count = 1, log-likelihood = -6.54
  euchre:grading, count = 7, log-likelihood = -4.6
  euchre:granted, count = 1, log-likelihood = -6.54
  euchre:great, count = 1, log-likelihood = -6.54
  euchre:greater, count = 2, log-likelihood = -5.85
  euchre:greatly, count = 6, log-likelihood = -4.75
  euchre:guaranteed, count = 1, log-likelihood = -6.54
  euchre:guess, count = 2, log-likelihood = -5.85
  euchre:guessing, count = 2, log-likelihood = -5.85
  euchre:guys, count = 3, log-likelihood = -5.44
  euchre:h, count = 8, log-likelihood = -4.46
  euchre:had, count = 15, log-likelihood = -3.83
  euchre:half, count = 4, log-likelihood = -5.16
  euchre:hand, count = 87, log-likelihood = -2.08
  euchre:hand0, count = 1, log-likelihood = -6.54
  euchre:hand5, count = 1, log-likelihood = -6.54
  euchre:handed, count = 2, log-likelihood = -5.85
  euchre:handend, count = 1, log-likelihood = -6.54
  euchre:handgraded, count = 2, log-likelihood = -5.85
  euchre:handhighestcardofsuitledcardgetsuit, count = 1, log-likelihood = -6.54
  euchre:handindexbestcardinhand, count = 1, log-likelihood = -6.54
  euchre:handle, count = 3, log-likelihood = -5.44
  euchre:handled, count = 2, log-likelihood = -5.85
  euchre:handling, count = 1, log-likelihood = -6.54
  euchre:handprint, count = 1, log-likelihood = -6.54
  euchre:hands, count = 5, log-likelihood = -4.93
  euchre:handsize, count = 1, log-likelihood = -6.54
  euchre:handsorthandbegin, count = 1, log-likelihood = -6.54
  euchre:hangs, count = 1, log-likelihood = -6.54
  euchre:happen, count = 8, log-likelihood = -4.46
  euchre:happening, count = 10, log-likelihood = -4.24
  euchre:happens, count = 10, log-likelihood = -4.24
  euchre:happy, count = 2, log-likelihood = -5.85
  euchre:hard, count = 5, log-likelihood = -4.93
  euchre:hardcode, count = 1, log-likelihood = -6.54
  euchre:harder, count = 1, log-likelihood = -6.54
  euchre:harmful, count = 1, log-likelihood = -6.54
  euchre:has, count = 50, log-likelihood = -2.63
  euchre:hasnt, count = 3, log-likelihood = -5.44
  euchre:hassle, count = 1, log-likelihood = -6.54
  euchre:have, count = 173, log-likelihood = -1.39
  euchre:havent, count = 3, log-likelihood = -5.44
  euchre:having, count = 17, log-likelihood = -3.71
  euchre:havnt, count = 1, log-likelihood = -6.54
  euchre:he, count = 5, log-likelihood = -4.93
  euchre:header, count = 7, log-likelihood = -4.6
  euchre:headers, count = 1, log-likelihood = -6.54
  euchre:heap, count = 1, log-likelihood = -6.54
  euchre:heart, count = 4, log-likelihood = -5.16
  euchre:hearts, count = 35, log-likelihood = -2.99
  euchre:hello, count = 9, log-likelihood = -4.35
  euchre:help, count = 28, log-likelihood = -3.21
  euchre:helper, count = 20, log-likelihood = -3.55
  euchre:helpers, count = 2, log-likelihood = -5.85
  euchre:hence, count = 1, log-likelihood = -6.54
  euchre:hep, count = 1, log-likelihood = -6.54
  euchre:her, count = 1, log-likelihood = -6.54
  euchre:here, count = 20, log-likelihood = -3.55
  euchre:heres, count = 4, log-likelihood = -5.16
  euchre:hey, count = 3, log-likelihood = -5.44
  euchre:hi, count = 17, log-likelihood = -3.71
  euchre:high, count = 1, log-likelihood = -6.54
  euchre:higher, count = 2, log-likelihood = -5.85
  euchre:highest, count = 12, log-likelihood = -4.06
  euchre:highlighted, count = 1, log-likelihood = -6.54
  euchre:him, count = 1, log-likelihood = -6.54
  euchre:hint, count = 1, log-likelihood = -6.54
  euchre:hinted, count = 1, log-likelihood = -6.54
  euchre:hints, count = 1, log-likelihood = -6.54
  euchre:his, count = 3, log-likelihood = -5.44
  euchre:hit, count = 2, log-likelihood = -5.85
  euchre:hiwe, count = 1, log-likelihood = -6.54
  euchre:hold, count = 6, log-likelihood = -4.75
  euchre:holds, count = 2, log-likelihood = -5.85
  euchre:hole, count = 1, log-likelihood = -6.54
  euchre:holeindex, count = 1, log-likelihood = -6.54
  euchre:hope, count = 3, log-likelihood = -5.44
  euchre:hopefully, count = 2, log-likelihood = -5.85
  euchre:hoping, count = 1, log-likelihood = -6.54
  euchre:hour, count = 4, log-likelihood = -5.16
  euchre:hours, count = 13, log-likelihood = -3.98
  euchre:how, count = 114, log-likelihood = -1.81
  euchre:howdy, count = 1, log-likelihood = -6.54
  euchre:however, count = 43, log-likelihood = -2.78
  euchre:httpsdrivegooglecomopenid0bvmvpmyraxvavfjqnhux09intg, count = 1, log-likelihood = -6.54
  euchre:httpstackoverflowcomquestions650162whyswitchstatementcannotbeappliedonstrings, count = 1, log-likelihood = -6.54
  euchre:httpswwwyoutubecomwatchvm0jgj0nrcrc, count = 1, log-likelihood = -6.54
  euchre:human, count = 83, log-likelihood = -2.12
  euchre:humanhand, count = 1, log-likelihood = -6.54
  euchre:humanhuman, count = 1, log-likelihood = -6.54
  euchre:humanhumanstdstring, count = 1, log-likelihood = -6.54
  euchre:humanname, count = 2, log-likelihood = -5.85
  euchre:humanplayer, count = 9, log-likelihood = -4.35
  euchre:humans, count = 2, log-likelihood = -5.85
  euchre:hypothetical, count = 1, log-likelihood = -6.54
  euchre:i, count = 380, log-likelihood = -0.602
  euchre:id, count = 2, log-likelihood = -5.85
  euchre:ide, count = 2, log-likelihood = -5.85
  euchre:idea, count = 7, log-likelihood = -4.6
  euchre:ideally, count = 1, log-likelihood = -6.54
  euchre:ideas, count = 14, log-likelihood = -3.9
  euchre:identical, count = 5, log-likelihood = -4.93
  euchre:identified, count = 1, log-likelihood = -6.54
  euchre:identifier, count = 1, log-likelihood = -6.54
  euchre:identify, count = 2, log-likelihood = -5.85
  euchre:ie, count = 5, log-likelihood = -4.93
  euchre:if, count = 191, log-likelihood = -1.29
  euchre:ifelse, count = 1, log-likelihood = -6.54
  euchre:ifsfilename, count = 1, log-likelihood = -6.54
  euchre:ifsimpleplayercountcardshand, count = 1, log-likelihood = -6.54
  euchre:ifstream, count = 4, log-likelihood = -5.16
  euchre:ifstreamopen, count = 1, log-likelihood = -6.54
  euchre:ii, count = 1, log-likelihood = -6.54
  euchre:ill, count = 2, log-likelihood = -5.85
  euchre:im, count = 90, log-likelihood = -2.04
  euchre:image, count = 1, log-likelihood = -6.54
  euchre:imageh, count = 1, log-likelihood = -6.54
  euchre:images, count = 1, log-likelihood = -6.54
  euchre:imagetestscpp, count = 1, log-likelihood = -6.54
  euchre:immediately, count = 2, log-likelihood = -5.85
  euchre:implement, count = 21, log-likelihood = -3.5
  euchre:implementation, count = 15, log-likelihood = -3.83
  euchre:implementations, count = 9, log-likelihood = -4.35
  euchre:implemented, count = 11, log-likelihood = -4.14
  euchre:implementing, count = 7, log-likelihood = -4.6
  euchre:implicit, count = 5, log-likelihood = -4.93
  euchre:implied, count = 1, log-likelihood = -6.54
  euchre:implimention, count = 1, log-likelihood = -6.54
  euchre:implying, count = 1, log-likelihood = -6.54
  euchre:important, count = 3, log-likelihood = -5.44
  euchre:impossible, count = 2, log-likelihood = -5.85
  euchre:impress, count = 1, log-likelihood = -6.54
  euchre:improper, count = 1, log-likelihood = -6.54
  euchre:improve, count = 1, log-likelihood = -6.54
  euchre:in, count = 385, log-likelihood = -0.589
  euchre:inaccessible, count = 2, log-likelihood = -5.85
  euchre:include, count = 23, log-likelihood = -3.41
  euchre:included, count = 17, log-likelihood = -3.71
  euchre:includes, count = 2, log-likelihood = -5.85
  euchre:including, count = 13, log-likelihood = -3.98
  euchre:inclusions, count = 1, log-likelihood = -6.54
  euchre:incomplete, count = 3, log-likelihood = -5.44
  euchre:incorrect, count = 6, log-likelihood = -4.75
  euchre:incorrectly, count = 1, log-likelihood = -6.54
  euchre:incredibly, count = 1, log-likelihood = -6.54
  euchre:indeed, count = 2, log-likelihood = -5.85
  euchre:independent, count = 1, log-likelihood = -6.54
  euchre:independently, count = 1, log-likelihood = -6.54
  euchre:index, count = 11, log-likelihood = -4.14
  euchre:indexer, count = 1, log-likelihood = -6.54
  euchre:indexing, count = 2, log-likelihood = -5.85
  euchre:indicate, count = 2, log-likelihood = -5.85
  euchre:indication, count = 1, log-likelihood = -6.54
  euchre:indicators, count = 1, log-likelihood = -6.54
  euchre:indices, count = 1, log-likelihood = -6.54
  euchre:indirectly, count = 2, log-likelihood = -5.85
  euchre:individual, count = 3, log-likelihood = -5.44
  euchre:individually, count = 1, log-likelihood = -6.54
  euchre:indstead, count = 1, log-likelihood = -6.54
  euchre:ineffective, count = 1, log-likelihood = -6.54
  euchre:infinite, count = 1, log-likelihood = -6.54
  euchre:info, count = 1, log-likelihood = -6.54
  euchre:information, count = 3, log-likelihood = -5.44
  euchre:informationnamely, count = 1, log-likelihood = -6.54
  euchre:inherit, count = 1, log-likelihood = -6.54
  euchre:inherited, count = 1, log-likelihood = -6.54
  euchre:inherits, count = 2, log-likelihood = -5.85
  euchre:init, count = 2, log-likelihood = -5.85
  euchre:initial, count = 1, log-likelihood = -6.54
  euchre:initialization, count = 3, log-likelihood = -5.44
  euchre:initializations, count = 1, log-likelihood = -6.54
  euchre:initialize, count = 19, log-likelihood = -3.6
  euchre:initialized, count = 2, log-likelihood = -5.85
  euchre:initializeplayersint, count = 1, log-likelihood = -6.54
  euchre:initializer, count = 5, log-likelihood = -4.93
  euchre:initializers, count = 1, log-likelihood = -6.54
  euchre:initializes, count = 3, log-likelihood = -5.44
  euchre:initializing, count = 2, log-likelihood = -5.85
  euchre:initially, count = 1, log-likelihood = -6.54
  euchre:initiate, count = 2, log-likelihood = -5.85
  euchre:input, count = 18, log-likelihood = -3.65
  euchre:inputparameters, count = 1, log-likelihood = -6.54
  euchre:inputs, count = 3, log-likelihood = -5.44
  euchre:inputted, count = 1, log-likelihood = -6.54
  euchre:ins, count = 1, log-likelihood = -6.54
  euchre:inserted, count = 1, log-likelihood = -6.54
  euchre:insertion, count = 1, log-likelihood = -6.54
  euchre:inside, count = 11, log-likelihood = -4.14
  euchre:insisting, count = 1, log-likelihood = -6.54
  euchre:instance, count = 5, log-likelihood = -4.93
  euchre:instantiation, count = 3, log-likelihood = -5.44
  euchre:instead, count = 13, log-likelihood = -3.98
  euchre:instructor, count = 1, log-likelihood = -6.54
  euchre:instructors, count = 3, log-likelihood = -5.44
  euchre:int, count = 10, log-likelihood = -4.24
  euchre:integer, count = 3, log-likelihood = -5.44
  euchre:intentionally, count = 1, log-likelihood = -6.54
  euchre:interchangeably, count = 2, log-likelihood = -5.85
  euchre:interested, count = 1, log-likelihood = -6.54
  euchre:interface, count = 2, log-likelihood = -5.85
  euchre:interfaces, count = 1, log-likelihood = -6.54
  euchre:interpreted, count = 1, log-likelihood = -6.54
  euchre:into, count = 29, log-likelihood = -3.18
  euchre:introducing, count = 1, log-likelihood = -6.54
  euchre:ints, count = 1, log-likelihood = -6.54
  euchre:invalid, count = 7, log-likelihood = -4.6
  euchre:invariants, count = 1, log-likelihood = -6.54
  euchre:invocation, count = 6, log-likelihood = -4.75
  euchre:invoked, count = 2, log-likelihood = -5.85
  euchre:iostream, count = 4, log-likelihood = -5.16
  euchre:is, count = 370, log-likelihood = -0.629
  euchre:isdealer, count = 5, log-likelihood = -4.93
  euchre:isface, count = 1, log-likelihood = -6.54
  euchre:islead, count = 1, log-likelihood = -6.54
  euchre:isnt, count = 16, log-likelihood = -3.77
  euchre:issue, count = 21, log-likelihood = -3.5
  euchre:issued, count = 1, log-likelihood = -6.54
  euchre:issues, count = 6, log-likelihood = -4.75
  euchre:issuewhy, count = 1, log-likelihood = -6.54
  euchre:istream, count = 4, log-likelihood = -5.16
  euchre:istringstreams, count = 1, log-likelihood = -6.54
  euchre:istrump, count = 2, log-likelihood = -5.85
  euchre:iswhat, count = 1, log-likelihood = -6.54
  euchre:it, count = 295, log-likelihood = -0.855
  euchre:iterators, count = 1, log-likelihood = -6.54
  euchre:its, count = 47, log-likelihood = -2.69
  euchre:itself, count = 5, log-likelihood = -4.93
  euchre:ive, count = 15, log-likelihood = -3.83
  euchre:j, count = 1, log-likelihood = -6.54
  euchre:jack, count = 35, log-likelihood = -2.99
  euchre:jackdiamondsgetsuitcardsuitclubs, count = 1, log-likelihood = -6.54
  euchre:jacks, count = 2, log-likelihood = -5.85
  euchre:jim, count = 1, log-likelihood = -6.54
  euchre:joke, count = 1, log-likelihood = -6.54
  euchre:judge, count = 1, log-likelihood = -6.54
  euchre:judging, count = 1, log-likelihood = -6.54
  euchre:jump, count = 1, log-likelihood = -6.54
  euchre:just, count = 95, log-likelihood = -1.99
  euchre:keep, count = 18, log-likelihood = -3.65
  euchre:keeping, count = 1, log-likelihood = -6.54
  euchre:keeps, count = 3, log-likelihood = -5.44
  euchre:keyword, count = 3, log-likelihood = -5.44
  euchre:kill, count = 1, log-likelihood = -6.54
  euchre:killed, count = 1, log-likelihood = -6.54
  euchre:kind, count = 2, log-likelihood = -5.85
  euchre:king, count = 15, log-likelihood = -3.83
  euchre:knew, count = 1, log-likelihood = -6.54
  euchre:know, count = 53, log-likelihood = -2.57
  euchre:knowing, count = 2, log-likelihood = -5.85
  euchre:knowledge, count = 2, log-likelihood = -5.85
  euchre:known, count = 3, log-likelihood = -5.44
  euchre:kwargswait, count = 2, log-likelihood = -5.85
  euchre:laid, count = 1, log-likelihood = -6.54
  euchre:lambda, count = 1, log-likelihood = -6.54
  euchre:language, count = 2, log-likelihood = -5.85
  euchre:laptop, count = 1, log-likelihood = -6.54
  euchre:larger, count = 3, log-likelihood = -5.44
  euchre:last, count = 17, log-likelihood = -3.71
  euchre:lasted, count = 1, log-likelihood = -6.54
  euchre:lasts, count = 1, log-likelihood = -6.54
  euchre:later, count = 2, log-likelihood = -5.85
  euchre:latest, count = 1, log-likelihood = -6.54
  euchre:latter, count = 2, log-likelihood = -5.85
  euchre:launch, count = 1, log-likelihood = -6.54
  euchre:lay, count = 2, log-likelihood = -5.85
  euchre:layers, count = 1, log-likelihood = -6.54
  euchre:ld, count = 12, log-likelihood = -4.06
  euchre:lead, count = 12, log-likelihood = -4.06
  euchre:leadcard, count = 5, log-likelihood = -4.93
  euchre:leader, count = 1, log-likelihood = -6.54
  euchre:leading, count = 2, log-likelihood = -5.85
  euchre:leads, count = 5, log-likelihood = -4.93
  euchre:leak, count = 2, log-likelihood = -5.85
  euchre:leaks, count = 1, log-likelihood = -6.54
  euchre:learn, count = 1, log-likelihood = -6.54
  euchre:learning, count = 2, log-likelihood = -5.85
  euchre:least, count = 7, log-likelihood = -4.6
  euchre:leave, count = 4, log-likelihood = -5.16
  euchre:leaving, count = 1, log-likelihood = -6.54
  euchre:lecture, count = 2, log-likelihood = -5.85
  euchre:led, count = 27, log-likelihood = -3.25
  euchre:ledcard, count = 3, log-likelihood = -5.44
  euchre:ledcardgetsuit, count = 1, log-likelihood = -6.54
  euchre:left, count = 20, log-likelihood = -3.55
  euchre:leftbower, count = 2, log-likelihood = -5.85
  euchre:lefthand, count = 1, log-likelihood = -6.54
  euchre:length, count = 1, log-likelihood = -6.54
  euchre:leo, count = 1, log-likelihood = -6.54
  euchre:less, count = 8, log-likelihood = -4.46
  euchre:let, count = 5, log-likelihood = -4.93
  euchre:lets, count = 2, log-likelihood = -5.85
  euchre:lett, count = 1, log-likelihood = -6.54
  euchre:letters, count = 2, log-likelihood = -5.85
  euchre:lhs, count = 3, log-likelihood = -5.44
  euchre:lhsgetsuit, count = 1, log-likelihood = -6.54
  euchre:libcpptypevisonly, count = 1, log-likelihood = -6.54
  euchre:libraries, count = 7, log-likelihood = -4.6
  euchre:library, count = 5, log-likelihood = -4.93
  euchre:lies, count = 1, log-likelihood = -6.54
  euchre:like, count = 69, log-likelihood = -2.31
  euchre:likely, count = 1, log-likelihood = -6.54
  euchre:limit, count = 1, log-likelihood = -6.54
  euchre:limitation, count = 1, log-likelihood = -6.54
  euchre:limited, count = 1, log-likelihood = -6.54
  euchre:line, count = 42, log-likelihood = -2.8
  euchre:lined, count = 1, log-likelihood = -6.54
  euchre:lines, count = 10, log-likelihood = -4.24
  euchre:link, count = 3, log-likelihood = -5.44
  euchre:linker, count = 6, log-likelihood = -4.75
  euchre:linking, count = 1, log-likelihood = -6.54
  euchre:links, count = 1, log-likelihood = -6.54
  euchre:linux, count = 2, log-likelihood = -5.85
  euchre:lion, count = 1, log-likelihood = -6.54
  euchre:lionleo, count = 1, log-likelihood = -6.54
  euchre:list, count = 5, log-likelihood = -4.93
  euchre:listed, count = 3, log-likelihood = -5.44
  euchre:listedand, count = 1, log-likelihood = -6.54
  euchre:literally, count = 2, log-likelihood = -5.85
  euchre:little, count = 13, log-likelihood = -3.98
  euchre:lldb, count = 1, log-likelihood = -6.54
  euchre:load, count = 1, log-likelihood = -6.54
  euchre:loading, count = 1, log-likelihood = -6.54
  euchre:local, count = 1, log-likelihood = -6.54
  euchre:locally, count = 3, log-likelihood = -5.44
  euchre:location, count = 1, log-likelihood = -6.54
  euchre:locations, count = 1, log-likelihood = -6.54
  euchre:logic, count = 2, log-likelihood = -5.85
  euchre:logically, count = 1, log-likelihood = -6.54
  euchre:long, count = 10, log-likelihood = -4.24
  euchre:longer, count = 1, log-likelihood = -6.54
  euchre:look, count = 9, log-likelihood = -4.35
  euchre:looked, count = 2, log-likelihood = -5.85
  euchre:looking, count = 5, log-likelihood = -4.93
  euchre:looks, count = 8, log-likelihood = -4.46
  euchre:loop, count = 7, log-likelihood = -4.6
  euchre:looping, count = 1, log-likelihood = -6.54
  euchre:loops, count = 2, log-likelihood = -5.85
  euchre:lose, count = 2, log-likelihood = -5.85
  euchre:loses, count = 1, log-likelihood = -6.54
  euchre:loss, count = 1, log-likelihood = -6.54
  euchre:lost, count = 3, log-likelihood = -5.44
  euchre:lot, count = 8, log-likelihood = -4.46
  euchre:lots, count = 1, log-likelihood = -6.54
  euchre:low, count = 2, log-likelihood = -5.85
  euchre:lower, count = 4, log-likelihood = -5.16
  euchre:lowest, count = 13, log-likelihood = -3.98
  euchre:luck, count = 1, log-likelihood = -6.54
  euchre:luckily, count = 1, log-likelihood = -6.54
  euchre:luna, count = 1, log-likelihood = -6.54
  euchre:mac, count = 2, log-likelihood = -5.85
  euchre:macosx, count = 1, log-likelihood = -6.54
  euchre:made, count = 12, log-likelihood = -4.06
  euchre:main, count = 16, log-likelihood = -3.77
  euchre:maincpp, count = 1, log-likelihood = -6.54
  euchre:mainint, count = 1, log-likelihood = -6.54
  euchre:major, count = 2, log-likelihood = -5.85
  euchre:make, count = 86, log-likelihood = -2.09
  euchre:makefile, count = 10, log-likelihood = -4.24
  euchre:makefile42, count = 1, log-likelihood = -6.54
  euchre:makeplayer, count = 1, log-likelihood = -6.54
  euchre:makes, count = 7, log-likelihood = -4.6
  euchre:maketrump, count = 18, log-likelihood = -3.65
  euchre:maketrumpconst, count = 1, log-likelihood = -6.54
  euchre:making, count = 19, log-likelihood = -3.6
  euchre:malloc, count = 1, log-likelihood = -6.54
  euchre:mallocerrorbreak, count = 1, log-likelihood = -6.54
  euchre:manages, count = 1, log-likelihood = -6.54
  euchre:manually, count = 4, log-likelihood = -5.16
  euchre:many, count = 11, log-likelihood = -4.14
  euchre:march, count = 3, log-likelihood = -5.44
  euchre:marked, count = 5, log-likelihood = -4.93
  euchre:massage, count = 1, log-likelihood = -6.54
  euchre:match, count = 6, log-likelihood = -4.75
  euchre:matches, count = 4, log-likelihood = -5.16
  euchre:matching, count = 6, log-likelihood = -4.75
  euchre:matrixh, count = 1, log-likelihood = -6.54
  euchre:matter, count = 7, log-likelihood = -4.6
  euchre:matters, count = 1, log-likelihood = -6.54
  euchre:maxhands, count = 1, log-likelihood = -6.54
  euchre:maxhandsize, count = 4, log-likelihood = -5.16
  euchre:maximum, count = 2, log-likelihood = -5.85
  euchre:may, count = 13, log-likelihood = -3.98
  euchre:maybe, count = 5, log-likelihood = -4.93
  euchre:mb, count = 1, log-likelihood = -6.54
  euchre:me, count = 43, log-likelihood = -2.78
  euchre:mean, count = 42, log-likelihood = -2.8
  euchre:meaning, count = 2, log-likelihood = -5.85
  euchre:meaningful, count = 1, log-likelihood = -6.54
  euchre:means, count = 10, log-likelihood = -4.24
  euchre:meant, count = 2, log-likelihood = -5.85
  euchre:meanwhat, count = 1, log-likelihood = -6.54
  euchre:meets, count = 1, log-likelihood = -6.54
  euchre:member, count = 40, log-likelihood = -2.85
  euchre:members, count = 7, log-likelihood = -4.6
  euchre:membership, count = 1, log-likelihood = -6.54
  euchre:memory, count = 4, log-likelihood = -5.16
  euchre:mention, count = 2, log-likelihood = -5.85
  euchre:mentioned, count = 2, log-likelihood = -5.85
  euchre:message, count = 20, log-likelihood = -3.55
  euchre:messages, count = 4, log-likelihood = -5.16
  euchre:method, count = 5, log-likelihood = -4.93
  euchre:methods, count = 1, log-likelihood = -6.54
  euchre:mfile, count = 1, log-likelihood = -6.54
  euchre:mfileumichedu, count = 1, log-likelihood = -6.54
  euchre:microsoft, count = 1, log-likelihood = -6.54
  euchre:might, count = 13, log-likelihood = -3.98
  euchre:mingw, count = 1, log-likelihood = -6.54
  euchre:mins, count = 1, log-likelihood = -6.54
  euchre:minus, count = 1, log-likelihood = -6.54
  euchre:minute, count = 2, log-likelihood = -5.85
  euchre:minutes, count = 4, log-likelihood = -5.16
  euchre:missed, count = 2, log-likelihood = -5.85
  euchre:missing, count = 10, log-likelihood = -4.24
  euchre:misspellednot, count = 1, log-likelihood = -6.54
  euchre:misunderstood, count = 1, log-likelihood = -6.54
  euchre:mix, count = 3, log-likelihood = -5.44
  euchre:mixture, count = 1, log-likelihood = -6.54
  euchre:mode, count = 1, log-likelihood = -6.54
  euchre:modified, count = 4, log-likelihood = -5.16
  euchre:modifies, count = 3, log-likelihood = -5.44
  euchre:modify, count = 9, log-likelihood = -4.35
  euchre:modifying, count = 2, log-likelihood = -5.85
  euchre:module, count = 2, log-likelihood = -5.85
  euchre:more, count = 21, log-likelihood = -3.5
  euchre:morning, count = 3, log-likelihood = -5.44
  euchre:most, count = 6, log-likelihood = -4.75
  euchre:move, count = 1, log-likelihood = -6.54
  euchre:moved, count = 1, log-likelihood = -6.54
  euchre:moves, count = 1, log-likelihood = -6.54
  euchre:much, count = 14, log-likelihood = -3.9
  euchre:multiple, count = 13, log-likelihood = -3.98
  euchre:multitude, count = 1, log-likelihood = -6.54
  euchre:must, count = 15, log-likelihood = -3.83
  euchre:my, count = 164, log-likelihood = -1.44
  euchre:myplayer, count = 1, log-likelihood = -6.54
  euchre:myself, count = 1, log-likelihood = -6.54
  euchre:mysterious, count = 1, log-likelihood = -6.54
  euchre:naked, count = 1, log-likelihood = -6.54
  euchre:name, count = 20, log-likelihood = -3.55
  euchre:name1, count = 1, log-likelihood = -6.54
  euchre:name2, count = 1, log-likelihood = -6.54
  euchre:nameassigning, count = 1, log-likelihood = -6.54
  euchre:named, count = 5, log-likelihood = -4.93
  euchre:namein, count = 1, log-likelihood = -6.54
  euchre:namely, count = 1, log-likelihood = -6.54
  euchre:names, count = 6, log-likelihood = -4.75
  euchre:namespace, count = 1, log-likelihood = -6.54
  euchre:naming, count = 3, log-likelihood = -5.44
  euchre:narrow, count = 1, log-likelihood = -6.54
  euchre:near, count = 1, log-likelihood = -6.54
  euchre:necessarily, count = 3, log-likelihood = -5.44
  euchre:necessary, count = 5, log-likelihood = -4.93
  euchre:need, count = 46, log-likelihood = -2.71
  euchre:needed, count = 7, log-likelihood = -4.6
  euchre:needs, count = 2, log-likelihood = -5.85
  euchre:neither, count = 2, log-likelihood = -5.85
  euchre:nested, count = 1, log-likelihood = -6.54
  euchre:never, count = 5, log-likelihood = -4.93
  euchre:new, count = 32, log-likelihood = -3.08
  euchre:newline, count = 6, log-likelihood = -4.75
  euchre:newlines, count = 2, log-likelihood = -5.85
  euchre:next, count = 17, log-likelihood = -3.71
  euchre:nice, count = 1, log-likelihood = -6.54
  euchre:night, count = 1, log-likelihood = -6.54
  euchre:nine, count = 23, log-likelihood = -3.41
  euchre:no, count = 59, log-likelihood = -2.46
  euchre:non, count = 2, log-likelihood = -5.85
  euchre:nonconst, count = 1, log-likelihood = -6.54
  euchre:nondefault, count = 2, log-likelihood = -5.85
  euchre:none, count = 3, log-likelihood = -5.44
  euchre:nonetheless, count = 1, log-likelihood = -6.54
  euchre:nonstop, count = 1, log-likelihood = -6.54
  euchre:non­trump, count = 1, log-likelihood = -6.54
  euchre:noon, count = 1, log-likelihood = -6.54
  euchre:nor, count = 1, log-likelihood = -6.54
  euchre:normal, count = 3, log-likelihood = -5.44
  euchre:normally, count = 2, log-likelihood = -5.85
  euchre:noshuffle, count = 9, log-likelihood = -4.35
  euchre:not, count = 160, log-likelihood = -1.47
  euchre:notably, count = 1, log-likelihood = -6.54
  euchre:note, count = 6, log-likelihood = -4.75
  euchre:nothing, count = 11, log-likelihood = -4.14
  euchre:notice, count = 3, log-likelihood = -5.44
  euchre:noticed, count = 8, log-likelihood = -4.46
  euchre:now, count = 23, log-likelihood = -3.41
  euchre:nowcurrent, count = 1, log-likelihood = -6.54
  euchre:nowhere, count = 1, log-likelihood = -6.54
  euchre:null, count = 2, log-likelihood = -5.85
  euchre:nullptr, count = 1, log-likelihood = -6.54
  euchre:number, count = 15, log-likelihood = -3.83
  euchre:numplayers, count = 1, log-likelihood = -6.54
  euchre:nvm, count = 1, log-likelihood = -6.54
  euchre:o, count = 10, log-likelihood = -4.24
  euchre:o1, count = 1, log-likelihood = -6.54
  euchre:object, count = 9, log-likelihood = -4.35
  euchre:objective, count = 1, log-likelihood = -6.54
  euchre:objects, count = 6, log-likelihood = -4.75
  euchre:obligations, count = 1, log-likelihood = -6.54
  euchre:obtain, count = 1, log-likelihood = -6.54
  euchre:obvious, count = 3, log-likelihood = -5.44
  euchre:obviously, count = 3, log-likelihood = -5.44
  euchre:occur, count = 3, log-likelihood = -5.44
  euchre:occurring, count = 2, log-likelihood = -5.85
  euchre:occurs, count = 2, log-likelihood = -5.85
  euchre:of, count = 317, log-likelihood = -0.784
  euchre:off, count = 8, log-likelihood = -4.46
  euchre:office, count = 5, log-likelihood = -4.93
  euchre:official, count = 1, log-likelihood = -6.54
  euchre:offload, count = 1, log-likelihood = -6.54
  euchre:ok, count = 6, log-likelihood = -4.75
  euchre:okay, count = 6, log-likelihood = -4.75
  euchre:omit, count = 1, log-likelihood = -6.54
  euchre:on, count = 128, log-likelihood = -1.69
  euchre:once, count = 6, log-likelihood = -4.75
  euchre:one, count = 68, log-likelihood = -2.32
  euchre:ones, count = 4, log-likelihood = -5.16
  euchre:online, count = 3, log-likelihood = -5.44
  euchre:only, count = 61, log-likelihood = -2.43
  euchre:open, count = 2, log-likelihood = -5.85
  euchre:opened, count = 2, log-likelihood = -5.85
  euchre:opening, count = 2, log-likelihood = -5.85
  euchre:operand, count = 5, log-likelihood = -4.93
  euchre:operands, count = 1, log-likelihood = -6.54
  euchre:operating, count = 1, log-likelihood = -6.54
  euchre:operational, count = 1, log-likelihood = -6.54
  euchre:operations, count = 1, log-likelihood = -6.54
  euchre:operator, count = 30, log-likelihood = -3.14
  euchre:operatorcard, count = 2, log-likelihood = -5.85
  euchre:operatorconst, count = 1, log-likelihood = -6.54
  euchre:operators, count = 4, log-likelihood = -5.16
  euchre:operatorstd1basicostreamchar, count = 1, log-likelihood = -6.54
  euchre:operatorstdostream, count = 1, log-likelihood = -6.54
  euchre:opinion, count = 1, log-likelihood = -6.54
  euchre:opportunity, count = 1, log-likelihood = -6.54
  euchre:opposite, count = 1, log-likelihood = -6.54
  euchre:option, count = 9, log-likelihood = -4.35
  euchre:options, count = 1, log-likelihood = -6.54
  euchre:or, count = 185, log-likelihood = -1.32
  euchre:order, count = 36, log-likelihood = -2.96
  euchre:ordered, count = 8, log-likelihood = -4.46
  euchre:ordering, count = 2, log-likelihood = -5.85
  euchre:orders, count = 15, log-likelihood = -3.83
  euchre:orderupsuit, count = 7, log-likelihood = -4.6
  euchre:orderwould, count = 1, log-likelihood = -6.54
  euchre:original, count = 4, log-likelihood = -5.16
  euchre:originally, count = 1, log-likelihood = -6.54
  euchre:os, count = 1, log-likelihood = -6.54
  euchre:oserror, count = 2, log-likelihood = -5.85
  euchre:ostreamstring, count = 1, log-likelihood = -6.54
  euchre:ostringstream, count = 2, log-likelihood = -5.85
  euchre:other, count = 42, log-likelihood = -2.8
  euchre:others, count = 1, log-likelihood = -6.54
  euchre:otherwise, count = 2, log-likelihood = -5.85
  euchre:our, count = 71, log-likelihood = -2.28
  euchre:ourselves, count = 2, log-likelihood = -5.85
  euchre:out, count = 46, log-likelihood = -2.71
  euchre:outline, count = 1, log-likelihood = -6.54
  euchre:output, count = 54, log-likelihood = -2.55
  euchre:outputcorrect, count = 1, log-likelihood = -6.54
  euchre:outputcorrects, count = 1, log-likelihood = -6.54
  euchre:outputs, count = 6, log-likelihood = -4.75
  euchre:outputting, count = 1, log-likelihood = -6.54
  euchre:outside, count = 8, log-likelihood = -4.46
  euchre:outstream, count = 1, log-likelihood = -6.54
  euchre:over, count = 11, log-likelihood = -4.14
  euchre:overall, count = 2, log-likelihood = -5.85
  euchre:overload, count = 5, log-likelihood = -4.93
  euchre:overloaded, count = 2, log-likelihood = -5.85
  euchre:overloading, count = 2, log-likelihood = -5.85
  euchre:overloads, count = 2, log-likelihood = -5.85
  euchre:overridden, count = 1, log-likelihood = -6.54
  euchre:overriding, count = 1, log-likelihood = -6.54
  euchre:overwriting, count = 1, log-likelihood = -6.54
  euchre:overwritten, count = 1, log-likelihood = -6.54
  euchre:own, count = 15, log-likelihood = -3.83
  euchre:p, count = 1, log-likelihood = -6.54
  euchre:p16, count = 1, log-likelihood = -6.54
  euchre:p1some, count = 1, log-likelihood = -6.54
  euchre:p2, count = 1, log-likelihood = -6.54
  euchre:p3, count = 1, log-likelihood = -6.54
  euchre:p4, count = 4, log-likelihood = -5.16
  euchre:p4s, count = 1, log-likelihood = -6.54
  euchre:pack, count = 60, log-likelihood = -2.45
  euchre:packconst, count = 1, log-likelihood = -6.54
  euchre:packcpp, count = 10, log-likelihood = -4.24
  euchre:packcpp1318, count = 1, log-likelihood = -6.54
  euchre:packcpptext0x166, count = 1, log-likelihood = -6.54
  euchre:packcpptext0x2dd, count = 1, log-likelihood = -6.54
  euchre:packcpptext0x523, count = 1, log-likelihood = -6.54
  euchre:packcpptext0x800, count = 1, log-likelihood = -6.54
  euchre:packcpptext0x949, count = 1, log-likelihood = -6.54
  euchre:packcpptext0xe7, count = 1, log-likelihood = -6.54
  euchre:packdealone, count = 2, log-likelihood = -5.85
  euchre:packempty, count = 1, log-likelihood = -6.54
  euchre:packfilemane, count = 1, log-likelihood = -6.54
  euchre:packfilename, count = 4, log-likelihood = -5.16
  euchre:packfromfilename, count = 1, log-likelihood = -6.54
  euchre:packfromstream, count = 1, log-likelihood = -6.54
  euchre:packh, count = 6, log-likelihood = -4.75
  euchre:packin, count = 23, log-likelihood = -3.41
  euchre:packinput, count = 4, log-likelihood = -5.16
  euchre:packintxt, count = 4, log-likelihood = -5.16
  euchre:packpack, count = 1, log-likelihood = -6.54
  euchre:packpackistream, count = 1, log-likelihood = -6.54
  euchre:packpackstd1basicistreamchar, count = 1, log-likelihood = -6.54
  euchre:packpackstdistream, count = 1, log-likelihood = -6.54
  euchre:packpackstdstring, count = 1, log-likelihood = -6.54
  euchre:packptr, count = 1, log-likelihood = -6.54
  euchre:packpublic, count = 1, log-likelihood = -6.54
  euchre:packpublictest, count = 10, log-likelihood = -4.24
  euchre:packpublictestcpp, count = 2, log-likelihood = -5.85
  euchre:packpublictestcpptext0x10f, count = 1, log-likelihood = -6.54
  euchre:packpublictestcpptext0x11c, count = 1, log-likelihood = -6.54
  euchre:packpublictestcpptext0x20b, count = 1, log-likelihood = -6.54
  euchre:packpublictestcpptext0x218, count = 1, log-likelihood = -6.54
  euchre:packpublictestcpptext0x303, count = 1, log-likelihood = -6.54
  euchre:packpublictestcpptext0x313, count = 1, log-likelihood = -6.54
  euchre:packpublictesto, count = 1, log-likelihood = -6.54
  euchre:packreadpack, count = 1, log-likelihood = -6.54
  euchre:packreadpackstdistream, count = 1, log-likelihood = -6.54
  euchre:packreset, count = 1, log-likelihood = -6.54
  euchre:packs, count = 3, log-likelihood = -5.44
  euchre:packshuffle, count = 3, log-likelihood = -5.44
  euchre:packsize, count = 4, log-likelihood = -5.16
  euchre:packstdistream, count = 2, log-likelihood = -5.85
  euchre:packtestcpp, count = 1, log-likelihood = -6.54
  euchre:packtests, count = 1, log-likelihood = -6.54
  euchre:packtestsimplecpp, count = 1, log-likelihood = -6.54
  euchre:page, count = 2, log-likelihood = -5.85
  euchre:pages, count = 1, log-likelihood = -6.54
  euchre:paired, count = 1, log-likelihood = -6.54
  euchre:pairing, count = 1, log-likelihood = -6.54
  euchre:panicked, count = 1, log-likelihood = -6.54
  euchre:paragraph, count = 1, log-likelihood = -6.54
  euchre:parameter, count = 15, log-likelihood = -3.83
  euchre:parameters, count = 4, log-likelihood = -5.16
  euchre:part, count = 12, log-likelihood = -4.06
  euchre:particular, count = 3, log-likelihood = -5.44
  euchre:particularly, count = 2, log-likelihood = -5.85
  euchre:partner, count = 20, log-likelihood = -3.55
  euchre:partners, count = 3, log-likelihood = -5.44
  euchre:partnership, count = 1, log-likelihood = -6.54
  euchre:parts, count = 1, log-likelihood = -6.54
  euchre:pass, count = 31, log-likelihood = -3.11
  euchre:passed, count = 17, log-likelihood = -3.71
  euchre:passes, count = 16, log-likelihood = -3.77
  euchre:passing, count = 10, log-likelihood = -4.24
  euchre:past, count = 6, log-likelihood = -4.75
  euchre:paste, count = 1, log-likelihood = -6.54
  euchre:pasted, count = 3, log-likelihood = -5.44
  euchre:pattern, count = 2, log-likelihood = -5.85
  euchre:pedantic, count = 10, log-likelihood = -4.24
  euchre:pending, count = 1, log-likelihood = -6.54
  euchre:people, count = 3, log-likelihood = -5.44
  euchre:per, count = 1, log-likelihood = -6.54
  euchre:percent, count = 1, log-likelihood = -6.54
  euchre:perfect, count = 2, log-likelihood = -5.85
  euchre:perfectly, count = 1, log-likelihood = -6.54
  euchre:perform, count = 2, log-likelihood = -5.85
  euchre:perhaps, count = 1, log-likelihood = -6.54
  euchre:permissible, count = 1, log-likelihood = -6.54
  euchre:permission, count = 1, log-likelihood = -6.54
  euchre:permitted, count = 1, log-likelihood = -6.54
  euchre:person, count = 2, log-likelihood = -5.85
  euchre:personal, count = 1, log-likelihood = -6.54
  euchre:pertains, count = 1, log-likelihood = -6.54
  euchre:photo, count = 1, log-likelihood = -6.54
  euchre:piazza, count = 5, log-likelihood = -4.93
  euchre:pic, count = 1, log-likelihood = -6.54
  euchre:pick, count = 5, log-likelihood = -4.93
  euchre:picked, count = 1, log-likelihood = -6.54
  euchre:picking, count = 1, log-likelihood = -6.54
  euchre:picks, count = 2, log-likelihood = -5.85
  euchre:picture, count = 1, log-likelihood = -6.54
  euchre:pictures, count = 1, log-likelihood = -6.54
  euchre:pile, count = 1, log-likelihood = -6.54
  euchre:pin, count = 2, log-likelihood = -5.85
  euchre:pinned, count = 1, log-likelihood = -6.54
  euchre:place, count = 5, log-likelihood = -4.93
  euchre:placed, count = 1, log-likelihood = -6.54
  euchre:places, count = 1, log-likelihood = -6.54
  euchre:plain, count = 1, log-likelihood = -6.54
  euchre:plan, count = 2, log-likelihood = -5.85
  euchre:planning, count = 2, log-likelihood = -5.85
  euchre:plans, count = 1, log-likelihood = -6.54
  euchre:play, count = 28, log-likelihood = -3.21
  euchre:playcard, count = 8, log-likelihood = -4.46
  euchre:playcardconst, count = 1, log-likelihood = -6.54
  euchre:played, count = 13, log-likelihood = -3.98
  euchre:player, count = 164, log-likelihood = -1.44
  euchre:player1, count = 1, log-likelihood = -6.54
  euchre:player2, count = 1, log-likelihood = -6.54
  euchre:playercpp, count = 45, log-likelihood = -2.74
  euchre:playercpp12822, count = 1, log-likelihood = -6.54
  euchre:playercpp14746, count = 1, log-likelihood = -6.54
  euchre:playercpp15769, count = 1, log-likelihood = -6.54
  euchre:playercpp1763, count = 1, log-likelihood = -6.54
  euchre:playercpp18939, count = 1, log-likelihood = -6.54
  euchre:playercpp18940, count = 1, log-likelihood = -6.54
  euchre:playercpp18942, count = 1, log-likelihood = -6.54
  euchre:playercpp1899, count = 1, log-likelihood = -6.54
  euchre:playercpp20, count = 1, log-likelihood = -6.54
  euchre:playercpp2018, count = 1, log-likelihood = -6.54
  euchre:playercpp2087, count = 1, log-likelihood = -6.54
  euchre:playercpp27540, count = 1, log-likelihood = -6.54
  euchre:playercpp32926, count = 1, log-likelihood = -6.54
  euchre:playercpp3452, count = 1, log-likelihood = -6.54
  euchre:playercpp5, count = 1, log-likelihood = -6.54
  euchre:playercpp5471, count = 1, log-likelihood = -6.54
  euchre:playercpp6058, count = 1, log-likelihood = -6.54
  euchre:playercpp620, count = 1, log-likelihood = -6.54
  euchre:playercpp6675, count = 1, log-likelihood = -6.54
  euchre:playercpptextzn5humanc2esszn5humanc5ess0x4a, count = 1, log-likelihood = -6.54
  euchre:playercpptextzn5humanc2evzn5humanc5ev0x1f, count = 1, log-likelihood = -6.54
  euchre:playercpptextzn6simplec2evzn6simplec5ev0x20, count = 1, log-likelihood = -6.54
  euchre:playerfactorplayer, count = 1, log-likelihood = -6.54
  euchre:playerfactory, count = 11, log-likelihood = -4.14
  euchre:playerfactoryalice, count = 1, log-likelihood = -6.54
  euchre:playerfactoryargvi, count = 1, log-likelihood = -6.54
  euchre:playerfactorybob, count = 1, log-likelihood = -6.54
  euchre:playerfactorycompile, count = 1, log-likelihood = -6.54
  euchre:playerfactoryconst, count = 3, log-likelihood = -5.44
  euchre:playerfactorydoesnt, count = 1, log-likelihood = -6.54
  euchre:playerfactoryjim, count = 1, log-likelihood = -6.54
  euchre:playerfactoryplayer, count = 1, log-likelihood = -6.54
  euchre:playerfactorystd1basicstringchar, count = 2, log-likelihood = -5.85
  euchre:playerfactorystdstring, count = 2, log-likelihood = -5.85
  euchre:playergetname, count = 2, log-likelihood = -5.85
  euchre:playerh, count = 11, log-likelihood = -4.14
  euchre:playerh2031, count = 1, log-likelihood = -6.54
  euchre:playerhand, count = 1, log-likelihood = -6.54
  euchre:playermaketrumpcard, count = 1, log-likelihood = -6.54
  euchre:playerone, count = 1, log-likelihood = -6.54
  euchre:playerpublictest, count = 7, log-likelihood = -4.6
  euchre:playerpublictestcpp, count = 2, log-likelihood = -5.85
  euchre:playerpublicteste28342o, count = 1, log-likelihood = -6.54
  euchre:playerpublictesto, count = 1, log-likelihood = -6.54
  euchre:playerpublictestwithsolutioncard, count = 1, log-likelihood = -6.54
  euchre:players, count = 48, log-likelihood = -2.67
  euchre:players0, count = 1, log-likelihood = -6.54
  euchre:players1, count = 1, log-likelihood = -6.54
  euchre:playersi, count = 1, log-likelihood = -6.54
  euchre:playersnumofplayer, count = 1, log-likelihood = -6.54
  euchre:playertestcpp, count = 1, log-likelihood = -6.54
  euchre:playertestexe, count = 1, log-likelihood = -6.54
  euchre:playertests, count = 2, log-likelihood = -5.85
  euchre:playertestsimplecpptext0x0, count = 1, log-likelihood = -6.54
  euchre:playertestsimpleexe, count = 1, log-likelihood = -6.54
  euchre:playerteststartercpp, count = 2, log-likelihood = -5.85
  euchre:playerteststarterexe, count = 3, log-likelihood = -5.44
  euchre:player’, count = 1, log-likelihood = -6.54
  euchre:player’s, count = 3, log-likelihood = -5.44
  euchre:playing, count = 9, log-likelihood = -4.35
  euchre:plays, count = 4, log-likelihood = -5.16
  euchre:please, count = 15, log-likelihood = -3.83
  euchre:plenty, count = 1, log-likelihood = -6.54
  euchre:plug, count = 1, log-likelihood = -6.54
  euchre:plus, count = 1, log-likelihood = -6.54
  euchre:plz, count = 1, log-likelihood = -6.54
  euchre:point, count = 14, log-likelihood = -3.9
  euchre:pointed, count = 1, log-likelihood = -6.54
  euchre:pointer, count = 14, log-likelihood = -3.9
  euchre:pointers, count = 12, log-likelihood = -4.06
  euchre:pointing, count = 2, log-likelihood = -5.85
  euchre:points, count = 15, log-likelihood = -3.83
  euchre:pointstowin, count = 1, log-likelihood = -6.54
  euchre:poor, count = 2, log-likelihood = -5.85
  euchre:popenpopenargs, count = 2, log-likelihood = -5.85
  euchre:pople, count = 1, log-likelihood = -6.54
  euchre:popped, count = 1, log-likelihood = -6.54
  euchre:positive, count = 4, log-likelihood = -5.16
  euchre:possibility, count = 3, log-likelihood = -5.44
  euchre:possible, count = 13, log-likelihood = -3.98
  euchre:possibly, count = 3, log-likelihood = -5.44
  euchre:post, count = 5, log-likelihood = -4.93
  euchre:posted, count = 4, log-likelihood = -5.16
  euchre:posts, count = 4, log-likelihood = -5.16
  euchre:potential, count = 1, log-likelihood = -6.54
  euchre:powerpoint, count = 1, log-likelihood = -6.54
  euchre:practice, count = 1, log-likelihood = -6.54
  euchre:precedence, count = 1, log-likelihood = -6.54
  euchre:precedent, count = 1, log-likelihood = -6.54
  euchre:precision, count = 1, log-likelihood = -6.54
  euchre:predicate, count = 1, log-likelihood = -6.54
  euchre:predicted, count = 1, log-likelihood = -6.54
  euchre:preferred, count = 1, log-likelihood = -6.54
  euchre:pretty, count = 4, log-likelihood = -5.16
  euchre:prevent, count = 1, log-likelihood = -6.54
  euchre:previous, count = 2, log-likelihood = -5.85
  euchre:previously, count = 1, log-likelihood = -6.54
  euchre:prides, count = 1, log-likelihood = -6.54
  euchre:primitive, count = 1, log-likelihood = -6.54
  euchre:print, count = 42, log-likelihood = -2.8
  euchre:printed, count = 9, log-likelihood = -4.35
  euchre:printing, count = 7, log-likelihood = -4.6
  euchre:prints, count = 7, log-likelihood = -4.6
  euchre:private, count = 27, log-likelihood = -3.25
  euchre:probably, count = 5, log-likelihood = -4.93
  euchre:problem, count = 23, log-likelihood = -3.41
  euchre:problematic, count = 1, log-likelihood = -6.54
  euchre:problems, count = 5, log-likelihood = -4.93
  euchre:procactive, count = 1, log-likelihood = -6.54
  euchre:procedure, count = 3, log-likelihood = -5.44
  euchre:process, count = 5, log-likelihood = -4.93
  euchre:processed, count = 1, log-likelihood = -6.54
  euchre:processor, count = 1, log-likelihood = -6.54
  euchre:produces, count = 1, log-likelihood = -6.54
  euchre:prof, count = 1, log-likelihood = -6.54
  euchre:program, count = 15, log-likelihood = -3.83
  euchre:project, count = 38, log-likelihood = -2.9
  euchre:project4, count = 2, log-likelihood = -5.85
  euchre:project4838970x7fff7a9f9300, count = 1, log-likelihood = -6.54
  euchre:projects, count = 6, log-likelihood = -4.75
  euchre:prompt, count = 10, log-likelihood = -4.24
  euchre:prompted, count = 2, log-likelihood = -5.85
  euchre:prompts, count = 2, log-likelihood = -5.85
  euchre:promt, count = 1, log-likelihood = -6.54
  euchre:proper, count = 4, log-likelihood = -5.16
  euchre:properly, count = 5, log-likelihood = -4.93
  euchre:property, count = 1, log-likelihood = -6.54
  euchre:protected, count = 1, log-likelihood = -6.54
  euchre:provide, count = 2, log-likelihood = -5.85
  euchre:provided, count = 2, log-likelihood = -5.85
  euchre:providing, count = 1, log-likelihood = -6.54
  euchre:ps, count = 1, log-likelihood = -6.54
  euchre:ptr, count = 1, log-likelihood = -6.54
  euchre:ptrs, count = 1, log-likelihood = -6.54
  euchre:public, count = 37, log-likelihood = -2.93
  euchre:pure, count = 1, log-likelihood = -6.54
  euchre:purpose, count = 5, log-likelihood = -4.93
  euchre:purposes, count = 2, log-likelihood = -5.85
  euchre:push, count = 1, log-likelihood = -6.54
  euchre:pushing, count = 1, log-likelihood = -6.54
  euchre:put, count = 17, log-likelihood = -3.71
  euchre:putting, count = 1, log-likelihood = -6.54
  euchre:putty, count = 1, log-likelihood = -6.54
  euchre:python, count = 2, log-likelihood = -5.85
  euchre:qualify, count = 1, log-likelihood = -6.54
  euchre:que, count = 2, log-likelihood = -5.85
  euchre:queen, count = 18, log-likelihood = -3.65
  euchre:question, count = 18, log-likelihood = -3.65
  euchre:questions, count = 3, log-likelihood = -5.44
  euchre:queue, count = 8, log-likelihood = -4.46
  euchre:queued, count = 6, log-likelihood = -4.75
  euchre:quite, count = 4, log-likelihood = -5.16
  euchre:quotations, count = 1, log-likelihood = -6.54
  euchre:raise, count = 2, log-likelihood = -5.85
  euchre:raiter, count = 1, log-likelihood = -6.54
  euchre:ran, count = 15, log-likelihood = -3.83
  euchre:rand, count = 1, log-likelihood = -6.54
  euchre:randomly, count = 1, log-likelihood = -6.54
  euchre:range, count = 1, log-likelihood = -6.54
  euchre:rank, count = 20, log-likelihood = -3.55
  euchre:rankace, count = 1, log-likelihood = -6.54
  euchre:ranked, count = 1, log-likelihood = -6.54
  euchre:rankin, count = 1, log-likelihood = -6.54
  euchre:ranking, count = 1, log-likelihood = -6.54
  euchre:rankjack, count = 1, log-likelihood = -6.54
  euchre:ranknamesbyweight, count = 2, log-likelihood = -5.85
  euchre:ranknine, count = 1, log-likelihood = -6.54
  euchre:ranks, count = 7, log-likelihood = -4.6
  euchre:rankten, count = 1, log-likelihood = -6.54
  euchre:ranktwo, count = 3, log-likelihood = -5.44
  euchre:rather, count = 3, log-likelihood = -5.44
  euchre:ratio, count = 1, log-likelihood = -6.54
  euchre:reach, count = 1, log-likelihood = -6.54
  euchre:reachable, count = 1, log-likelihood = -6.54
  euchre:reaches, count = 5, log-likelihood = -4.93
  euchre:reaching, count = 1, log-likelihood = -6.54
  euchre:read, count = 19, log-likelihood = -3.6
  euchre:reading, count = 7, log-likelihood = -4.6
  euchre:readpack, count = 8, log-likelihood = -4.46
  euchre:reads, count = 3, log-likelihood = -5.44
  euchre:ready, count = 1, log-likelihood = -6.54
  euchre:real, count = 2, log-likelihood = -5.85
  euchre:realize, count = 3, log-likelihood = -5.44
  euchre:realized, count = 2, log-likelihood = -5.85
  euchre:really, count = 19, log-likelihood = -3.6
  euchre:realm, count = 1, log-likelihood = -6.54
  euchre:reason, count = 16, log-likelihood = -3.77
  euchre:reasonable, count = 1, log-likelihood = -6.54
  euchre:reasonably, count = 1, log-likelihood = -6.54
  euchre:reasoning, count = 1, log-likelihood = -6.54
  euchre:reasons, count = 1, log-likelihood = -6.54
  euchre:reassemble, count = 1, log-likelihood = -6.54
  euchre:rebubmit, count = 1, log-likelihood = -6.54
  euchre:receive, count = 4, log-likelihood = -5.16
  euchre:received, count = 9, log-likelihood = -4.35
  euchre:receiving, count = 4, log-likelihood = -5.16
  euchre:recent, count = 4, log-likelihood = -5.16
  euchre:recipe, count = 1, log-likelihood = -6.54
  euchre:recognizable, count = 1, log-likelihood = -6.54
  euchre:recommend, count = 2, log-likelihood = -5.85
  euchre:recommended, count = 2, log-likelihood = -5.85
  euchre:redeclaring, count = 1, log-likelihood = -6.54
  euchre:redefinition, count = 1, log-likelihood = -6.54
  euchre:redundant, count = 3, log-likelihood = -5.44
  euchre:refer, count = 4, log-likelihood = -5.16
  euchre:reference, count = 18, log-likelihood = -3.65
  euchre:referenced, count = 6, log-likelihood = -4.75
  euchre:references, count = 2, log-likelihood = -5.85
  euchre:referencing, count = 1, log-likelihood = -6.54
  euchre:referring, count = 1, log-likelihood = -6.54
  euchre:refers, count = 1, log-likelihood = -6.54
  euchre:reflected, count = 1, log-likelihood = -6.54
  euchre:refreshed, count = 1, log-likelihood = -6.54
  euchre:regarded, count = 1, log-likelihood = -6.54
  euchre:regarding, count = 1, log-likelihood = -6.54
  euchre:regardless, count = 2, log-likelihood = -5.85
  euchre:regards, count = 1, log-likelihood = -6.54
  euchre:regex, count = 1, log-likelihood = -6.54
  euchre:register, count = 1, log-likelihood = -6.54
  euchre:registration, count = 2, log-likelihood = -5.85
  euchre:regular, count = 2, log-likelihood = -5.85
  euchre:regularly, count = 1, log-likelihood = -6.54
  euchre:rejected, count = 1, log-likelihood = -6.54
  euchre:related, count = 2, log-likelihood = -5.85
  euchre:relating, count = 1, log-likelihood = -6.54
  euchre:relocation, count = 1, log-likelihood = -6.54
  euchre:remaining, count = 1, log-likelihood = -6.54
  euchre:remake, count = 1, log-likelihood = -6.54
  euchre:remember, count = 2, log-likelihood = -5.85
  euchre:remove, count = 3, log-likelihood = -5.44
  euchre:removed, count = 4, log-likelihood = -5.16
  euchre:removes, count = 2, log-likelihood = -5.85
  euchre:removing, count = 1, log-likelihood = -6.54
  euchre:renamed, count = 1, log-likelihood = -6.54
  euchre:renaming, count = 1, log-likelihood = -6.54
  euchre:renders, count = 1, log-likelihood = -6.54
  euchre:repeatedly, count = 1, log-likelihood = -6.54
  euchre:replace, count = 6, log-likelihood = -4.75
  euchre:replaced, count = 1, log-likelihood = -6.54
  euchre:represent, count = 2, log-likelihood = -5.85
  euchre:representing, count = 1, log-likelihood = -6.54
  euchre:represents, count = 2, log-likelihood = -5.85
  euchre:reprint, count = 1, log-likelihood = -6.54
  euchre:request, count = 1, log-likelihood = -6.54
  euchre:require, count = 2, log-likelihood = -5.85
  euchre:required, count = 6, log-likelihood = -4.75
  euchre:requirement, count = 1, log-likelihood = -6.54
  euchre:requirements, count = 1, log-likelihood = -6.54
  euchre:requires, count = 10, log-likelihood = -4.24
  euchre:rerun, count = 1, log-likelihood = -6.54
  euchre:reset, count = 8, log-likelihood = -4.46
  euchre:reshuffle, count = 1, log-likelihood = -6.54
  euchre:resolution, count = 2, log-likelihood = -5.85
  euchre:resolve, count = 1, log-likelihood = -6.54
  euchre:resolved, count = 2, log-likelihood = -5.85
  euchre:resources, count = 1, log-likelihood = -6.54
  euchre:respond, count = 1, log-likelihood = -6.54
  euchre:response, count = 2, log-likelihood = -5.85
  euchre:rest, count = 3, log-likelihood = -5.44
  euchre:resubmit, count = 6, log-likelihood = -4.75
  euchre:resubmitted, count = 1, log-likelihood = -6.54
  euchre:result, count = 10, log-likelihood = -4.24
  euchre:results, count = 3, log-likelihood = -5.44
  euchre:retrieve, count = 1, log-likelihood = -6.54
  euchre:return, count = 26, log-likelihood = -3.28
  euchre:returncode, count = 2, log-likelihood = -5.85
  euchre:returned, count = 11, log-likelihood = -4.14
  euchre:returning, count = 2, log-likelihood = -5.85
  euchre:returns, count = 14, log-likelihood = -3.9
  euchre:review, count = 2, log-likelihood = -5.85
  euchre:rewriting, count = 1, log-likelihood = -6.54
  euchre:rhs, count = 3, log-likelihood = -5.44
  euchre:rhsgetsuit, count = 1, log-likelihood = -6.54
  euchre:ridiculous, count = 4, log-likelihood = -5.16
  euchre:right, count = 38, log-likelihood = -2.9
  euchre:rights, count = 1, log-likelihood = -6.54
  euchre:rme, count = 5, log-likelihood = -4.93
  euchre:rmes, count = 4, log-likelihood = -5.16
  euchre:role, count = 1, log-likelihood = -6.54
  euchre:round, count = 35, log-likelihood = -2.99
  euchre:rounds, count = 1, log-likelihood = -6.54
  euchre:row, count = 2, log-likelihood = -5.85
  euchre:ruining, count = 1, log-likelihood = -6.54
  euchre:rule, count = 4, log-likelihood = -5.16
  euchre:rules, count = 3, log-likelihood = -5.44
  euchre:run, count = 54, log-likelihood = -2.55
  euchre:runmytestspy, count = 3, log-likelihood = -5.44
  euchre:running, count = 12, log-likelihood = -4.06
  euchre:runs, count = 5, log-likelihood = -4.93
  euchre:rx8664pc32, count = 1, log-likelihood = -6.54
  euchre:safe, count = 8, log-likelihood = -4.46
  euchre:said, count = 8, log-likelihood = -4.46
  euchre:same, count = 70, log-likelihood = -2.29
  euchre:saul, count = 5, log-likelihood = -4.93
  euchre:saveregister, count = 1, log-likelihood = -6.54
  euchre:saw, count = 3, log-likelihood = -5.44
  euchre:say, count = 20, log-likelihood = -3.55
  euchre:saying, count = 14, log-likelihood = -3.9
  euchre:says, count = 52, log-likelihood = -2.59
  euchre:scenarios, count = 1, log-likelihood = -6.54
  euchre:scheduled, count = 1, log-likelihood = -6.54
  euchre:scheme, count = 1, log-likelihood = -6.54
  euchre:scope, count = 6, log-likelihood = -4.75
  euchre:scopes, count = 1, log-likelihood = -6.54
  euchre:score, count = 9, log-likelihood = -4.35
  euchre:scores, count = 1, log-likelihood = -6.54
  euchre:scoring, count = 1, log-likelihood = -6.54
  euchre:screen, count = 2, log-likelihood = -5.85
  euchre:screenshot, count = 2, log-likelihood = -5.85
  euchre:screenshot20160325at121622ampng, count = 1, log-likelihood = -6.54
  euchre:screw, count = 6, log-likelihood = -4.75
  euchre:scroll, count = 1, log-likelihood = -6.54
  euchre:sdiff, count = 6, log-likelihood = -4.75
  euchre:sdiffautograder, count = 1, log-likelihood = -6.54
  euchre:sdiffing, count = 1, log-likelihood = -6.54
  euchre:second, count = 11, log-likelihood = -4.14
  euchre:secondchild, count = 1, log-likelihood = -6.54
  euchre:secondthird, count = 1, log-likelihood = -6.54
  euchre:section, count = 2, log-likelihood = -5.85
  euchre:sections, count = 1, log-likelihood = -6.54
  euchre:see, count = 32, log-likelihood = -3.08
  euchre:seeing, count = 6, log-likelihood = -4.75
  euchre:seem, count = 8, log-likelihood = -4.46
  euchre:seems, count = 19, log-likelihood = -3.6
  euchre:seen, count = 1, log-likelihood = -6.54
  euchre:seg, count = 3, log-likelihood = -5.44
  euchre:segfault, count = 4, log-likelihood = -5.16
  euchre:segmentation, count = 7, log-likelihood = -4.6
  euchre:select, count = 6, log-likelihood = -4.75
  euchre:selected, count = 1, log-likelihood = -6.54
  euchre:selecting, count = 1, log-likelihood = -6.54
  euchre:semester, count = 1, log-likelihood = -6.54
  euchre:senario, count = 1, log-likelihood = -6.54
  euchre:sends, count = 1, log-likelihood = -6.54
  euchre:sense, count = 6, log-likelihood = -4.75
  euchre:sensitive, count = 1, log-likelihood = -6.54
  euchre:separate, count = 2, log-likelihood = -5.85
  euchre:set, count = 13, log-likelihood = -3.98
  euchre:setter, count = 1, log-likelihood = -6.54
  euchre:setters, count = 1, log-likelihood = -6.54
  euchre:setting, count = 1, log-likelihood = -6.54
  euchre:settings, count = 2, log-likelihood = -5.85
  euchre:seven, count = 1, log-likelihood = -6.54
  euchre:several, count = 5, log-likelihood = -4.93
  euchre:sheet, count = 3, log-likelihood = -5.44
  euchre:short, count = 2, log-likelihood = -5.85
  euchre:should, count = 113, log-likelihood = -1.82
  euchre:shouldnt, count = 8, log-likelihood = -4.46
  euchre:show, count = 4, log-likelihood = -5.16
  euchre:showed, count = 1, log-likelihood = -6.54
  euchre:showing, count = 1, log-likelihood = -6.54
  euchre:shown, count = 1, log-likelihood = -6.54
  euchre:shows, count = 10, log-likelihood = -4.24
  euchre:shrink, count = 1, log-likelihood = -6.54
  euchre:shuffle, count = 18, log-likelihood = -3.65
  euchre:shuffled, count = 4, log-likelihood = -5.16
  euchre:shufflenoshuffle, count = 1, log-likelihood = -6.54
  euchre:shuffles, count = 4, log-likelihood = -5.16
  euchre:shuffle”, count = 1, log-likelihood = -6.54
  euchre:shuffling, count = 12, log-likelihood = -4.06
  euchre:side, count = 1, log-likelihood = -6.54
  euchre:sign, count = 2, log-likelihood = -5.85
  euchre:signed, count = 2, log-likelihood = -5.85
  euchre:silly, count = 2, log-likelihood = -5.85
  euchre:similar, count = 12, log-likelihood = -4.06
  euchre:similarly, count = 1, log-likelihood = -6.54
  euchre:simple, count = 84, log-likelihood = -2.11
  euchre:simpleleadcardconst, count = 1, log-likelihood = -6.54
  euchre:simpleplaycardconst, count = 1, log-likelihood = -6.54
  euchre:simpleplayer, count = 12, log-likelihood = -4.06
  euchre:simpleplayercountcards, count = 1, log-likelihood = -6.54
  euchre:simpleplayercountcardsconst, count = 1, log-likelihood = -6.54
  euchre:simpleplayercountcardshand, count = 1, log-likelihood = -6.54
  euchre:simpleplayerh, count = 1, log-likelihood = -6.54
  euchre:simpleplayermaketrumpconst, count = 1, log-likelihood = -6.54
  euchre:simpleplayername, count = 1, log-likelihood = -6.54
  euchre:simpleplayerplaycard, count = 1, log-likelihood = -6.54
  euchre:simpleplayers, count = 1, log-likelihood = -6.54
  euchre:simpleplayertest, count = 1, log-likelihood = -6.54
  euchre:simplesimple, count = 1, log-likelihood = -6.54
  euchre:simplesimpleconst, count = 1, log-likelihood = -6.54
  euchre:simplethis, count = 1, log-likelihood = -6.54
  euchre:simple’, count = 1, log-likelihood = -6.54
  euchre:simplify, count = 1, log-likelihood = -6.54
  euchre:simply, count = 2, log-likelihood = -5.85
  euchre:simulation, count = 1, log-likelihood = -6.54
  euchre:since, count = 46, log-likelihood = -2.71
  euchre:single, count = 8, log-likelihood = -4.46
  euchre:situation, count = 6, log-likelihood = -4.75
  euchre:situations, count = 2, log-likelihood = -5.85
  euchre:six, count = 1, log-likelihood = -6.54
  euchre:size, count = 7, log-likelihood = -4.6
  euchre:skew, count = 1, log-likelihood = -6.54
  euchre:slight, count = 1, log-likelihood = -6.54
  euchre:slightly, count = 3, log-likelihood = -5.44
  euchre:small, count = 1, log-likelihood = -6.54
  euchre:smaller, count = 2, log-likelihood = -5.85
  euchre:smoothly, count = 1, log-likelihood = -6.54
  euchre:so, count = 110, log-likelihood = -1.84
  euchre:solaris, count = 1, log-likelihood = -6.54
  euchre:solution, count = 5, log-likelihood = -4.93
  euchre:solutions, count = 2, log-likelihood = -5.85
  euchre:solve, count = 2, log-likelihood = -5.85
  euchre:solved, count = 1, log-likelihood = -6.54
  euchre:solving, count = 1, log-likelihood = -6.54
  euchre:some, count = 30, log-likelihood = -3.14
  euchre:someone, count = 12, log-likelihood = -4.06
  euchre:someones, count = 1, log-likelihood = -6.54
  euchre:something, count = 36, log-likelihood = -2.96
  euchre:sometime, count = 1, log-likelihood = -6.54
  euchre:sometimes, count = 1, log-likelihood = -6.54
  euchre:somewhere, count = 3, log-likelihood = -5.44
  euchre:sorry, count = 5, log-likelihood = -4.93
  euchre:sort, count = 25, log-likelihood = -3.32
  euchre:sortable, count = 1, log-likelihood = -6.54
  euchre:sorted, count = 2, log-likelihood = -5.85
  euchre:sortfunction, count = 1, log-likelihood = -6.54
  euchre:sorthandhandsizecardless, count = 1, log-likelihood = -6.54
  euchre:sorting, count = 3, log-likelihood = -5.44
  euchre:sorts, count = 1, log-likelihood = -6.54
  euchre:sortxbeginyend, count = 1, log-likelihood = -6.54
  euchre:sound, count = 1, log-likelihood = -6.54
  euchre:soundtrack, count = 1, log-likelihood = -6.54
  euchre:source, count = 2, log-likelihood = -5.85
  euchre:sourcecodemake, count = 1, log-likelihood = -6.54
  euchre:space, count = 6, log-likelihood = -4.75
  euchre:spacing, count = 1, log-likelihood = -6.54
  euchre:spade, count = 1, log-likelihood = -6.54
  euchre:spades, count = 38, log-likelihood = -2.9
  euchre:spec, count = 41, log-likelihood = -2.83
  euchre:special, count = 1, log-likelihood = -6.54
  euchre:specific, count = 14, log-likelihood = -3.9
  euchre:specifically, count = 6, log-likelihood = -4.75
  euchre:specification, count = 1, log-likelihood = -6.54
  euchre:specifications, count = 1, log-likelihood = -6.54
  euchre:specifics, count = 1, log-likelihood = -6.54
  euchre:specified, count = 4, log-likelihood = -5.16
  euchre:specifier, count = 1, log-likelihood = -6.54
  euchre:specify, count = 1, log-likelihood = -6.54
  euchre:specs, count = 16, log-likelihood = -3.77
  euchre:speed, count = 1, log-likelihood = -6.54
  euchre:spent, count = 1, log-likelihood = -6.54
  euchre:spite, count = 1, log-likelihood = -6.54
  euchre:split, count = 3, log-likelihood = -5.44
  euchre:spot, count = 1, log-likelihood = -6.54
  euchre:sstream, count = 7, log-likelihood = -4.6
  euchre:stack, count = 1, log-likelihood = -6.54
  euchre:staff, count = 1, log-likelihood = -6.54
  euchre:stage, count = 1, log-likelihood = -6.54
  euchre:standard, count = 6, log-likelihood = -4.75
  euchre:start, count = 8, log-likelihood = -4.46
  euchre:started, count = 1, log-likelihood = -6.54
  euchre:starter, count = 1, log-likelihood = -6.54
  euchre:starts, count = 2, log-likelihood = -5.85
  euchre:state, count = 1, log-likelihood = -6.54
  euchre:stated, count = 3, log-likelihood = -5.44
  euchre:statement, count = 9, log-likelihood = -4.35
  euchre:statements, count = 13, log-likelihood = -3.98
  euchre:states, count = 2, log-likelihood = -5.85
  euchre:static, count = 20, log-likelihood = -3.55
  euchre:stating, count = 2, log-likelihood = -5.85
  euchre:status, count = 10, log-likelihood = -4.24
  euchre:stay, count = 1, log-likelihood = -6.54
  euchre:stays, count = 1, log-likelihood = -6.54
  euchre:std, count = 2, log-likelihood = -5.85
  euchre:std1allocatorchar, count = 2, log-likelihood = -5.85
  euchre:std1basicifstreamchar, count = 1, log-likelihood = -6.54
  euchre:std1basicstringchar, count = 2, log-likelihood = -5.85
  euchre:std1chartraitschar, count = 5, log-likelihood = -4.93
  euchre:stdarray, count = 1, log-likelihood = -6.54
  euchre:stdarraycard, count = 2, log-likelihood = -5.85
  euchre:stdbasicostreamchar, count = 1, log-likelihood = -6.54
  euchre:stdc0x, count = 1, log-likelihood = -6.54
  euchre:stdc11, count = 10, log-likelihood = -4.24
  euchre:stdifstream, count = 1, log-likelihood = -6.54
  euchre:stditeratortraitscard’, count = 1, log-likelihood = -6.54
  euchre:stdlogicerror, count = 1, log-likelihood = -6.54
  euchre:stdostream, count = 1, log-likelihood = -6.54
  euchre:stdoutofrange, count = 1, log-likelihood = -6.54
  euchre:stdptrdifft, count = 1, log-likelihood = -6.54
  euchre:stdsizet, count = 1, log-likelihood = -6.54
  euchre:stdsortraiter, count = 1, log-likelihood = -6.54
  euchre:stdstring, count = 19, log-likelihood = -3.6
  euchre:stdvectorcard, count = 1, log-likelihood = -6.54
  euchre:steam, count = 1, log-likelihood = -6.54
  euchre:step, count = 1, log-likelihood = -6.54
  euchre:still, count = 28, log-likelihood = -3.21
  euchre:stop, count = 3, log-likelihood = -5.44
  euchre:stops, count = 3, log-likelihood = -5.44
  euchre:store, count = 5, log-likelihood = -4.93
  euchre:stored, count = 3, log-likelihood = -5.44
  euchre:straight, count = 1, log-likelihood = -6.54
  euchre:straightforward, count = 1, log-likelihood = -6.54
  euchre:strange, count = 2, log-likelihood = -5.85
  euchre:strategies, count = 1, log-likelihood = -6.54
  euchre:strategy, count = 10, log-likelihood = -4.24
  euchre:stream, count = 4, log-likelihood = -5.16
  euchre:streams, count = 2, log-likelihood = -5.85
  euchre:strictly, count = 1, log-likelihood = -6.54
  euchre:string, count = 31, log-likelihood = -3.11
  euchre:stringcardranknine, count = 1, log-likelihood = -6.54
  euchre:stringranknine, count = 1, log-likelihood = -6.54
  euchre:strings, count = 9, log-likelihood = -4.35
  euchre:stringstream, count = 3, log-likelihood = -5.44
  euchre:stringstreams, count = 1, log-likelihood = -6.54
  euchre:string’, count = 1, log-likelihood = -6.54
  euchre:struct, count = 8, log-likelihood = -4.46
  euchre:struggling, count = 1, log-likelihood = -6.54
  euchre:stub, count = 1, log-likelihood = -6.54
  euchre:stuck, count = 3, log-likelihood = -5.44
  euchre:student, count = 6, log-likelihood = -4.75
  euchre:students, count = 2, log-likelihood = -5.85
  euchre:studio, count = 2, log-likelihood = -5.85
  euchre:stuff, count = 1, log-likelihood = -6.54
  euchre:stuffs, count = 1, log-likelihood = -6.54
  euchre:stumped, count = 2, log-likelihood = -5.85
  euchre:stupid, count = 1, log-likelihood = -6.54
  euchre:style, count = 6, log-likelihood = -4.75
  euchre:stylistically, count = 1, log-likelihood = -6.54
  euchre:subclass, count = 2, log-likelihood = -5.85
  euchre:subclasses, count = 10, log-likelihood = -4.24
  euchre:sublime, count = 1, log-likelihood = -6.54
  euchre:submission, count = 12, log-likelihood = -4.06
  euchre:submissions, count = 1, log-likelihood = -6.54
  euchre:submit, count = 16, log-likelihood = -3.77
  euchre:submitted, count = 12, log-likelihood = -4.06
  euchre:submitting, count = 4, log-likelihood = -5.16
  euchre:subprocesscall, count = 2, log-likelihood = -5.85
  euchre:subsequent, count = 1, log-likelihood = -6.54
  euchre:substantial, count = 2, log-likelihood = -5.85
  euchre:subtype, count = 1, log-likelihood = -6.54
  euchre:success, count = 1, log-likelihood = -6.54
  euchre:successfully, count = 2, log-likelihood = -5.85
  euchre:such, count = 15, log-likelihood = -3.83
  euchre:suggest, count = 2, log-likelihood = -5.85
  euchre:suggestions, count = 6, log-likelihood = -4.75
  euchre:suit, count = 86, log-likelihood = -2.09
  euchre:suitclubs, count = 1, log-likelihood = -6.54
  euchre:suitdiamonds, count = 2, log-likelihood = -5.85
  euchre:suite, count = 2, log-likelihood = -5.85
  euchre:suites, count = 2, log-likelihood = -5.85
  euchre:suithearts, count = 1, log-likelihood = -6.54
  euchre:suitin, count = 1, log-likelihood = -6.54
  euchre:suitnamesbyweight, count = 3, log-likelihood = -5.44
  euchre:suitnamesrankname, count = 1, log-likelihood = -6.54
  euchre:suitnext, count = 6, log-likelihood = -4.75
  euchre:suitnextstdstring, count = 1, log-likelihood = -6.54
  euchre:suitrank, count = 1, log-likelihood = -6.54
  euchre:suits, count = 6, log-likelihood = -4.75
  euchre:suitspades, count = 1, log-likelihood = -6.54
  euchre:suitstring, count = 1, log-likelihood = -6.54
  euchre:summary, count = 2, log-likelihood = -5.85
  euchre:sunday, count = 1, log-likelihood = -6.54
  euchre:sundays, count = 1, log-likelihood = -6.54
  euchre:support, count = 3, log-likelihood = -5.44
  euchre:suppose, count = 4, log-likelihood = -5.16
  euchre:supposed, count = 31, log-likelihood = -3.11
  euchre:suppressed, count = 1, log-likelihood = -6.54
  euchre:sure, count = 43, log-likelihood = -2.78
  euchre:swap, count = 3, log-likelihood = -5.44
  euchre:switch, count = 2, log-likelihood = -5.85
  euchre:switched, count = 1, log-likelihood = -6.54
  euchre:switches, count = 1, log-likelihood = -6.54
  euchre:switching, count = 1, log-likelihood = -6.54
  euchre:syllabus, count = 1, log-likelihood = -6.54
  euchre:symbol, count = 1, log-likelihood = -6.54
  euchre:symbols, count = 7, log-likelihood = -4.6
  euchre:syntax, count = 4, log-likelihood = -5.16
  euchre:system, count = 1, log-likelihood = -6.54
  euchre:systematic, count = 1, log-likelihood = -6.54
  euchre:t, count = 2, log-likelihood = -5.85
  euchre:tagging, count = 1, log-likelihood = -6.54
  euchre:take, count = 21, log-likelihood = -3.5
  euchre:takellumichedu, count = 1, log-likelihood = -6.54
  euchre:taken, count = 2, log-likelihood = -5.85
  euchre:takes, count = 15, log-likelihood = -3.83
  euchre:taking, count = 5, log-likelihood = -4.93
  euchre:talk, count = 1, log-likelihood = -6.54
  euchre:talks, count = 1, log-likelihood = -6.54
  euchre:target, count = 4, log-likelihood = -5.16
  euchre:teaching, count = 1, log-likelihood = -6.54
  euchre:team, count = 6, log-likelihood = -4.75
  euchre:teammate, count = 1, log-likelihood = -6.54
  euchre:teams, count = 4, log-likelihood = -5.16
  euchre:technical, count = 1, log-likelihood = -6.54
  euchre:technically, count = 5, log-likelihood = -4.93
  euchre:tedious, count = 1, log-likelihood = -6.54
  euchre:tell, count = 6, log-likelihood = -4.75
  euchre:telling, count = 2, log-likelihood = -5.85
  euchre:tells, count = 2, log-likelihood = -5.85
  euchre:temp, count = 1, log-likelihood = -6.54
  euchre:template, count = 2, log-likelihood = -5.85
  euchre:temporary, count = 2, log-likelihood = -5.85
  euchre:temprank, count = 1, log-likelihood = -6.54
  euchre:tempsuit, count = 1, log-likelihood = -6.54
  euchre:ten, count = 13, log-likelihood = -3.98
  euchre:term, count = 2, log-likelihood = -5.85
  euchre:terminal, count = 14, log-likelihood = -3.9
  euchre:terminate, count = 3, log-likelihood = -5.44
  euchre:terminating, count = 1, log-likelihood = -6.54
  euchre:terminology, count = 1, log-likelihood = -6.54
  euchre:terms, count = 4, log-likelihood = -5.16
  euchre:tes, count = 1, log-likelihood = -6.54
  euchre:test, count = 132, log-likelihood = -1.66
  euchre:test00, count = 4, log-likelihood = -5.16
  euchre:test01, count = 3, log-likelihood = -5.44
  euchre:test50, count = 3, log-likelihood = -5.44
  euchre:testcardinit, count = 1, log-likelihood = -6.54
  euchre:testcases, count = 1, log-likelihood = -6.54
  euchre:testcpp, count = 1, log-likelihood = -6.54
  euchre:tested, count = 13, log-likelihood = -3.98
  euchre:testequalunequal, count = 1, log-likelihood = -6.54
  euchre:testfaces, count = 1, log-likelihood = -6.54
  euchre:testing, count = 35, log-likelihood = -2.99
  euchre:tests, count = 52, log-likelihood = -2.59
  euchre:teststarter, count = 1, log-likelihood = -6.54
  euchre:text, count = 4, log-likelihood = -5.16
  euchre:than, count = 36, log-likelihood = -2.96
  euchre:thank, count = 28, log-likelihood = -3.21
  euchre:thanks, count = 73, log-likelihood = -2.25
  euchre:that, count = 256, log-likelihood = -0.997
  euchre:thatll, count = 1, log-likelihood = -6.54
  euchre:thats, count = 10, log-likelihood = -4.24
  euchre:thatsymbol, count = 1, log-likelihood = -6.54
  euchre:the, count = 595, log-likelihood = -0.154
  euchre:their, count = 21, log-likelihood = -3.5
  euchre:them, count = 35, log-likelihood = -2.99
  euchre:themselves, count = 1, log-likelihood = -6.54
  euchre:then, count = 52, log-likelihood = -2.59
  euchre:there, count = 108, log-likelihood = -1.86
  euchre:thered, count = 1, log-likelihood = -6.54
  euchre:therefore, count = 4, log-likelihood = -5.16
  euchre:theres, count = 5, log-likelihood = -4.93
  euchre:these, count = 45, log-likelihood = -2.74
  euchre:they, count = 63, log-likelihood = -2.4
  euchre:theyd, count = 1, log-likelihood = -6.54
  euchre:theyre, count = 2, log-likelihood = -5.85
  euchre:thing, count = 6, log-likelihood = -4.75
  euchre:things, count = 4, log-likelihood = -5.16
  euchre:think, count = 18, log-likelihood = -3.65
  euchre:thinking, count = 8, log-likelihood = -4.46
  euchre:thinks, count = 2, log-likelihood = -5.85
  euchre:third, count = 4, log-likelihood = -5.16
  euchre:this, count = 273, log-likelihood = -0.933
  euchre:thisa, count = 1, log-likelihood = -6.54
  euchre:thisb, count = 1, log-likelihood = -6.54
  euchre:tho, count = 1, log-likelihood = -6.54
  euchre:thoroughly, count = 1, log-likelihood = -6.54
  euchre:those, count = 13, log-likelihood = -3.98
  euchre:though, count = 7, log-likelihood = -4.6
  euchre:thought, count = 8, log-likelihood = -4.46
  euchre:thoughts, count = 1, log-likelihood = -6.54
  euchre:three, count = 12, log-likelihood = -4.06
  euchre:threespades, count = 1, log-likelihood = -6.54
  euchre:through, count = 18, log-likelihood = -3.65
  euchre:throughout, count = 2, log-likelihood = -5.85
  euchre:throw, count = 1, log-likelihood = -6.54
  euchre:throwing, count = 3, log-likelihood = -5.44
  euchre:throws, count = 2, log-likelihood = -5.85
  euchre:thursday, count = 1, log-likelihood = -6.54
  euchre:thus, count = 3, log-likelihood = -5.44
  euchre:time, count = 16, log-likelihood = -3.77
  euchre:times, count = 7, log-likelihood = -4.6
  euchre:title, count = 4, log-likelihood = -5.16
  euchre:tldr, count = 1, log-likelihood = -6.54
  euchre:tmpccelabwoo, count = 1, log-likelihood = -6.54
  euchre:tmpccfv6vcyo, count = 1, log-likelihood = -6.54
  euchre:tmpcchpepztopackcpptextznst5arrayi4cardlm24eec1evznst5arrayi4cardlm24eec1ev0x2a, count = 1, log-likelihood = -6.54
  euchre:tmpcciompbeo, count = 1, log-likelihood = -6.54
  euchre:tmpccm5eeoboplayercpptext0x0, count = 1, log-likelihood = -6.54
  euchre:tmpccmpxuh3o, count = 1, log-likelihood = -6.54
  euchre:tmpccpdp3eho, count = 1, log-likelihood = -6.54
  euchre:tmpccxdmgcco, count = 1, log-likelihood = -6.54
  euchre:to, count = 455, log-likelihood = -0.422
  euchre:today, count = 8, log-likelihood = -4.46
  euchre:together, count = 3, log-likelihood = -5.44
  euchre:token, count = 2, log-likelihood = -5.85
  euchre:told, count = 3, log-likelihood = -5.44
  euchre:tomorrow, count = 1, log-likelihood = -6.54
  euchre:too, count = 8, log-likelihood = -4.46
  euchre:took, count = 3, log-likelihood = -5.44
  euchre:toolchain, count = 1, log-likelihood = -6.54
  euchre:tools, count = 1, log-likelihood = -6.54
  euchre:top, count = 13, log-likelihood = -3.98
  euchre:tops, count = 1, log-likelihood = -6.54
  euchre:total, count = 3, log-likelihood = -5.44
  euchre:totally, count = 1, log-likelihood = -6.54
  euchre:touch, count = 1, log-likelihood = -6.54
  euchre:touched, count = 1, log-likelihood = -6.54
  euchre:towards, count = 1, log-likelihood = -6.54
  euchre:town, count = 1, log-likelihood = -6.54
  euchre:traceback, count = 2, log-likelihood = -5.85
  euchre:track, count = 5, log-likelihood = -4.93
  euchre:traditional, count = 1, log-likelihood = -6.54
  euchre:treated, count = 1, log-likelihood = -6.54
  euchre:treats, count = 1, log-likelihood = -6.54
  euchre:treid, count = 1, log-likelihood = -6.54
  euchre:trick, count = 16, log-likelihood = -3.77
  euchre:tricks, count = 2, log-likelihood = -5.85
  euchre:tried, count = 20, log-likelihood = -3.55
  euchre:tries, count = 1, log-likelihood = -6.54
  euchre:trivial, count = 1, log-likelihood = -6.54
  euchre:trouble, count = 8, log-likelihood = -4.46
  euchre:true, count = 9, log-likelihood = -4.35
  euchre:trump, count = 77, log-likelihood = -2.2
  euchre:trumping, count = 1, log-likelihood = -6.54
  euchre:truncated, count = 1, log-likelihood = -6.54
  euchre:trust, count = 1, log-likelihood = -6.54
  euchre:try, count = 30, log-likelihood = -3.14
  euchre:trying, count = 32, log-likelihood = -3.08
  euchre:tuesday, count = 1, log-likelihood = -6.54
  euchre:tuesdays, count = 1, log-likelihood = -6.54
  euchre:turn, count = 5, log-likelihood = -4.93
  euchre:turned, count = 5, log-likelihood = -4.93
  euchre:turning, count = 1, log-likelihood = -6.54
  euchre:tutorials, count = 1, log-likelihood = -6.54
  euchre:twenty, count = 1, log-likelihood = -6.54
  euchre:twice, count = 1, log-likelihood = -6.54
  euchre:two, count = 37, log-likelihood = -2.93
  euchre:twodiamonds, count = 1, log-likelihood = -6.54
  euchre:txt, count = 4, log-likelihood = -5.16
  euchre:type, count = 36, log-likelihood = -2.96
  euchre:typed, count = 2, log-likelihood = -5.85
  euchre:types, count = 12, log-likelihood = -4.06
  euchre:typespecifier, count = 1, log-likelihood = -6.54
  euchre:typical, count = 1, log-likelihood = -6.54
  euchre:typing, count = 2, log-likelihood = -5.85
  euchre:unable, count = 3, log-likelihood = -5.44
  euchre:unchanged, count = 1, log-likelihood = -6.54
  euchre:unclear, count = 1, log-likelihood = -6.54
  euchre:undefined, count = 20, log-likelihood = -3.55
  euchre:under, count = 8, log-likelihood = -4.46
  euchre:understand, count = 24, log-likelihood = -3.36
  euchre:understanding, count = 10, log-likelihood = -4.24
  euchre:understood, count = 1, log-likelihood = -6.54
  euchre:unecessary, count = 1, log-likelihood = -6.54
  euchre:unequal, count = 1, log-likelihood = -6.54
  euchre:unfair, count = 2, log-likelihood = -5.85
  euchre:unhighlighted, count = 1, log-likelihood = -6.54
  euchre:uninitialized, count = 1, log-likelihood = -6.54
  euchre:unintended, count = 1, log-likelihood = -6.54
  euchre:unique, count = 3, log-likelihood = -5.44
  euchre:uniquely, count = 1, log-likelihood = -6.54
  euchre:unit, count = 2, log-likelihood = -5.85
  euchre:unknown, count = 1, log-likelihood = -6.54
  euchre:unless, count = 1, log-likelihood = -6.54
  euchre:unnecessary, count = 3, log-likelihood = -5.44
  euchre:unqualifiedid, count = 1, log-likelihood = -6.54
  euchre:unresolved, count = 2, log-likelihood = -5.85
  euchre:unsettling, count = 1, log-likelihood = -6.54
  euchre:unsigned, count = 1, log-likelihood = -6.54
  euchre:unspecified, count = 1, log-likelihood = -6.54
  euchre:unsure, count = 3, log-likelihood = -5.44
  euchre:until, count = 10, log-likelihood = -4.24
  euchre:up, count = 57, log-likelihood = -2.5
  euchre:upcard, count = 36, log-likelihood = -2.96
  euchre:upcardgetsuit, count = 1, log-likelihood = -6.54
  euchre:upcards, count = 4, log-likelihood = -5.16
  euchre:update, count = 2, log-likelihood = -5.85
  euchre:upon, count = 1, log-likelihood = -6.54
  euchre:upside, count = 1, log-likelihood = -6.54
  euchre:us, count = 14, log-likelihood = -3.9
  euchre:usable, count = 1, log-likelihood = -6.54
  euchre:usage, count = 2, log-likelihood = -5.85
  euchre:use, count = 112, log-likelihood = -1.82
  euchre:used, count = 17, log-likelihood = -3.71
  euchre:useful, count = 3, log-likelihood = -5.44
  euchre:user, count = 12, log-likelihood = -4.06
  euchre:userssylviadesktopproject4project4makefile, count = 1, log-likelihood = -6.54
  euchre:uses, count = 5, log-likelihood = -4.93
  euchre:using, count = 53, log-likelihood = -2.57
  euchre:usrincludec482algorithm620, count = 1, log-likelihood = -6.54
  euchre:usrincludec482bitsstlalgoh, count = 1, log-likelihood = -6.54
  euchre:usrincludec482bitsstlalgoh54502, count = 1, log-likelihood = -6.54
  euchre:usrincludec482bitsstlheaph23729, count = 1, log-likelihood = -6.54
  euchre:usrincludec482extnewallocatorh4414, count = 1, log-likelihood = -6.54
  euchre:usrincludec482extnewallocatorh4514, count = 1, log-likelihood = -6.54
  euchre:usrlib64python27subprocesspy, count = 2, log-likelihood = -5.85
  euchre:usually, count = 1, log-likelihood = -6.54
  euchre:utilize, count = 1, log-likelihood = -6.54
  euchre:v, count = 8, log-likelihood = -4.46
  euchre:vague, count = 1, log-likelihood = -6.54
  euchre:valgrind, count = 3, log-likelihood = -5.44
  euchre:valid, count = 9, log-likelihood = -4.35
  euchre:validate, count = 1, log-likelihood = -6.54
  euchre:valuable, count = 1, log-likelihood = -6.54
  euchre:value, count = 15, log-likelihood = -3.83
  euchre:valued, count = 2, log-likelihood = -5.85
  euchre:values, count = 8, log-likelihood = -4.46
  euchre:valuetype, count = 1, log-likelihood = -6.54
  euchre:variable, count = 14, log-likelihood = -3.9
  euchre:variables, count = 16, log-likelihood = -3.77
  euchre:variant, count = 1, log-likelihood = -6.54
  euchre:various, count = 2, log-likelihood = -5.85
  euchre:vector, count = 21, log-likelihood = -3.5
  euchre:vectorcard, count = 2, log-likelihood = -5.85
  euchre:vectormrangecheck, count = 1, log-likelihood = -6.54
  euchre:vectorplayer, count = 2, log-likelihood = -5.85
  euchre:vectorsort, count = 1, log-likelihood = -6.54
  euchre:version, count = 9, log-likelihood = -4.35
  euchre:very, count = 10, log-likelihood = -4.24
  euchre:via, count = 2, log-likelihood = -5.85
  euchre:viable, count = 1, log-likelihood = -6.54
  euchre:vibe, count = 1, log-likelihood = -6.54
  euchre:vidal, count = 1, log-likelihood = -6.54
  euchre:video, count = 2, log-likelihood = -5.85
  euchre:videos, count = 2, log-likelihood = -5.85
  euchre:view, count = 1, log-likelihood = -6.54
  euchre:violate, count = 1, log-likelihood = -6.54
  euchre:virtual, count = 14, log-likelihood = -3.9
  euchre:visual, count = 2, log-likelihood = -5.85
  euchre:vnc, count = 1, log-likelihood = -6.54
  euchre:void, count = 5, log-likelihood = -4.93
  euchre:volume, count = 1, log-likelihood = -6.54
  euchre:vs, count = 3, log-likelihood = -5.44
  euchre:vtable, count = 2, log-likelihood = -5.85
  euchre:wait, count = 3, log-likelihood = -5.44
  euchre:waiting, count = 2, log-likelihood = -5.85
  euchre:wall, count = 10, log-likelihood = -4.24
  euchre:wanna, count = 1, log-likelihood = -6.54
  euchre:want, count = 43, log-likelihood = -2.78
  euchre:wanted, count = 6, log-likelihood = -4.75
  euchre:wants, count = 5, log-likelihood = -4.93
  euchre:warning, count = 4, log-likelihood = -5.16
  euchre:warnings, count = 2, log-likelihood = -5.85
  euchre:was, count = 62, log-likelihood = -2.42
  euchre:wasnt, count = 1, log-likelihood = -6.54
  euchre:way, count = 53, log-likelihood = -2.57
  euchre:ways, count = 1, log-likelihood = -6.54
  euchre:we, count = 268, log-likelihood = -0.951
  euchre:website, count = 1, log-likelihood = -6.54
  euchre:wed, count = 2, log-likelihood = -5.85
  euchre:weight, count = 1, log-likelihood = -6.54
  euchre:weird, count = 8, log-likelihood = -4.46
  euchre:welcomed, count = 1, log-likelihood = -6.54
  euchre:well, count = 23, log-likelihood = -3.41
  euchre:went, count = 3, log-likelihood = -5.44
  euchre:were, count = 38, log-likelihood = -2.9
  euchre:werror, count = 10, log-likelihood = -4.24
  euchre:werrormaybeuninitialized, count = 1, log-likelihood = -6.54
  euchre:wget, count = 1, log-likelihood = -6.54
  euchre:what, count = 140, log-likelihood = -1.6
  euchre:whatever, count = 4, log-likelihood = -5.16
  euchre:whats, count = 17, log-likelihood = -3.71
  euchre:when, count = 201, log-likelihood = -1.24
  euchre:whenever, count = 5, log-likelihood = -4.93
  euchre:where, count = 37, log-likelihood = -2.93
  euchre:wherewhat, count = 1, log-likelihood = -6.54
  euchre:whether, count = 18, log-likelihood = -3.65
  euchre:which, count = 44, log-likelihood = -2.76
  euchre:while, count = 15, log-likelihood = -3.83
  euchre:whilst, count = 1, log-likelihood = -6.54
  euchre:whistles, count = 1, log-likelihood = -6.54
  euchre:whitespace, count = 2, log-likelihood = -5.85
  euchre:who, count = 8, log-likelihood = -4.46
  euchre:whoever, count = 1, log-likelihood = -6.54
  euchre:whole, count = 5, log-likelihood = -4.93
  euchre:whos, count = 1, log-likelihood = -6.54
  euchre:whose, count = 1, log-likelihood = -6.54
  euchre:why, count = 60, log-likelihood = -2.45
  euchre:will, count = 64, log-likelihood = -2.38
  euchre:win, count = 7, log-likelihood = -4.6
  euchre:windows, count = 2, log-likelihood = -5.85
  euchre:winner, count = 1, log-likelihood = -6.54
  euchre:winners, count = 1, log-likelihood = -6.54
  euchre:wins, count = 1, log-likelihood = -6.54
  euchre:winvalidpptoken, count = 1, log-likelihood = -6.54
  euchre:with, count = 115, log-likelihood = -1.8
  euchre:wither, count = 1, log-likelihood = -6.54
  euchre:within, count = 11, log-likelihood = -4.14
  euchre:without, count = 27, log-likelihood = -3.25
  euchre:withsolution, count = 1, log-likelihood = -6.54
  euchre:withsolutioncardpack, count = 1, log-likelihood = -6.54
  euchre:withsolutioncardpackplayer, count = 2, log-likelihood = -5.85
  euchre:wlstacksize0x4000000, count = 1, log-likelihood = -6.54
  euchre:won, count = 2, log-likelihood = -5.85
  euchre:wonder, count = 4, log-likelihood = -5.16
  euchre:wondering, count = 20, log-likelihood = -3.55
  euchre:wont, count = 6, log-likelihood = -4.75
  euchre:word, count = 4, log-likelihood = -5.16
  euchre:wording, count = 1, log-likelihood = -6.54
  euchre:words, count = 1, log-likelihood = -6.54
  euchre:work, count = 17, log-likelihood = -3.71
  euchre:workaround, count = 2, log-likelihood = -5.85
  euchre:worked, count = 4, log-likelihood = -5.16
  euchre:working, count = 12, log-likelihood = -4.06
  euchre:works, count = 17, log-likelihood = -3.71
  euchre:world, count = 1, log-likelihood = -6.54
  euchre:worried, count = 1, log-likelihood = -6.54
  euchre:worst, count = 1, log-likelihood = -6.54
  euchre:worth, count = 1, log-likelihood = -6.54
  euchre:would, count = 103, log-likelihood = -1.91
  euchre:wouldnt, count = 4, log-likelihood = -5.16
  euchre:wrap, count = 1, log-likelihood = -6.54
  euchre:write, count = 34, log-likelihood = -3.02
  euchre:writing, count = 7, log-likelihood = -4.6
  euchre:written, count = 6, log-likelihood = -4.75
  euchre:wrong, count = 27, log-likelihood = -3.25
  euchre:wrote, count = 4, log-likelihood = -5.16
  euchre:x8664, count = 7, log-likelihood = -4.6
  euchre:xcode, count = 7, log-likelihood = -4.6
  euchre:xoutcorrect, count = 1, log-likelihood = -6.54
  euchre:ya, count = 1, log-likelihood = -6.54
  euchre:yells, count = 1, log-likelihood = -6.54
  euchre:yes, count = 2, log-likelihood = -5.85
  euchre:yesterday, count = 1, log-likelihood = -6.54
  euchre:yet, count = 10, log-likelihood = -4.24
  euchre:you, count = 90, log-likelihood = -2.04
  euchre:youd, count = 1, log-likelihood = -6.54
  euchre:your, count = 17, log-likelihood = -3.71
  euchre:youre, count = 1, log-likelihood = -6.54
  euchre:youtube, count = 1, log-likelihood = -6.54
  euchre:zero, count = 2, log-likelihood = -5.85
  euchre:­, count = 1, log-likelihood = -6.54
  euchre:­1, count = 1, log-likelihood = -6.54
  euchre:‘, count = 4, log-likelihood = -5.16
  euchre:‘cardgetter’, count = 1, log-likelihood = -6.54
  euchre:‘card’, count = 2, log-likelihood = -5.85
  euchre:‘class, count = 1, log-likelihood = -6.54
  euchre:‘const, count = 1, log-likelihood = -6.54
  euchre:‘human’, count = 1, log-likelihood = -6.54
  euchre:‘operator’, count = 1, log-likelihood = -6.54
  euchre:‘player, count = 1, log-likelihood = -6.54
  euchre:‘simpleplayer’, count = 1, log-likelihood = -6.54
  euchre:‘stdarraycard, count = 1, log-likelihood = -6.54
  euchre:‘stdptrdifft’, count = 1, log-likelihood = -6.54
  euchre:‘stdremovereferencetype, count = 1, log-likelihood = -6.54
  euchre:‘stdsizet’, count = 1, log-likelihood = -6.54
  euchre:‘struct, count = 1, log-likelihood = -6.54
  euchre:‘this’, count = 1, log-likelihood = -6.54
  euchre:‘valuetype’, count = 1, log-likelihood = -6.54
  euchre:‘void, count = 1, log-likelihood = -6.54
  euchre:’, count = 3, log-likelihood = -5.44
  euchre:“one, count = 1, log-likelihood = -6.54
  exam:0, count = 22, log-likelihood = -2.58
  exam:0011, count = 1, log-likelihood = -5.67
  exam:0106, count = 1, log-likelihood = -5.67
  exam:07, count = 1, log-likelihood = -5.67
  exam:1, count = 18, log-likelihood = -2.78
  exam:10, count = 2, log-likelihood = -4.98
  exam:1017, count = 1, log-likelihood = -5.67
  exam:1030, count = 1, log-likelihood = -5.67
  exam:1030am, count = 1, log-likelihood = -5.67
  exam:11, count = 3, log-likelihood = -4.57
  exam:12, count = 2, log-likelihood = -4.98
  exam:120, count = 1, log-likelihood = -5.67
  exam:1223, count = 1, log-likelihood = -5.67
  exam:123, count = 1, log-likelihood = -5.67
  exam:1230pm, count = 1, log-likelihood = -5.67
  exam:1289, count = 1, log-likelihood = -5.67
  exam:13, count = 3, log-likelihood = -4.57
  exam:15, count = 2, log-likelihood = -4.98
  exam:1500, count = 1, log-likelihood = -5.67
  exam:1571, count = 1, log-likelihood = -5.67
  exam:17, count = 1, log-likelihood = -5.67
  exam:1bi, count = 1, log-likelihood = -5.67
  exam:1c, count = 3, log-likelihood = -4.57
  exam:1d, count = 1, log-likelihood = -5.67
  exam:2, count = 17, log-likelihood = -2.84
  exam:2015, count = 14, log-likelihood = -3.03
  exam:211, count = 1, log-likelihood = -5.67
  exam:21st, count = 1, log-likelihood = -5.67
  exam:22nd, count = 2, log-likelihood = -4.98
  exam:230am, count = 1, log-likelihood = -5.67
  exam:24, count = 1, log-likelihood = -5.67
  exam:280, count = 6, log-likelihood = -3.88
  exam:2800, count = 1, log-likelihood = -5.67
  exam:2a, count = 3, log-likelihood = -4.57
  exam:2b3, count = 1, log-likelihood = -5.67
  exam:3, count = 14, log-likelihood = -3.03
  exam:300, count = 1, log-likelihood = -5.67
  exam:3015, count = 1, log-likelihood = -5.67
  exam:311, count = 2, log-likelihood = -4.98
  exam:32216, count = 1, log-likelihood = -5.67
  exam:34, count = 1, log-likelihood = -5.67
  exam:3a, count = 5, log-likelihood = -4.06
  exam:3b, count = 4, log-likelihood = -4.28
  exam:3c, count = 2, log-likelihood = -4.98
  exam:3s, count = 1, log-likelihood = -5.67
  exam:4, count = 13, log-likelihood = -3.1
  exam:412, count = 1, log-likelihood = -5.67
  exam:42, count = 1, log-likelihood = -5.67
  exam:425, count = 1, log-likelihood = -5.67
  exam:4321, count = 1, log-likelihood = -5.67
  exam:45, count = 1, log-likelihood = -5.67
  exam:4a, count = 4, log-likelihood = -4.28
  exam:4b, count = 2, log-likelihood = -4.98
  exam:4c, count = 1, log-likelihood = -5.67
  exam:5, count = 9, log-likelihood = -3.47
  exam:58, count = 1, log-likelihood = -5.67
  exam:5a, count = 3, log-likelihood = -4.57
  exam:5b, count = 1, log-likelihood = -5.67
  exam:5c, count = 3, log-likelihood = -4.57
  exam:5d, count = 1, log-likelihood = -5.67
  exam:5e, count = 1, log-likelihood = -5.67
  exam:6, count = 2, log-likelihood = -4.98
  exam:619, count = 1, log-likelihood = -5.67
  exam:6544, count = 1, log-likelihood = -5.67
  exam:67, count = 1, log-likelihood = -5.67
  exam:72, count = 2, log-likelihood = -4.98
  exam:7309pm, count = 1, log-likelihood = -5.67
  exam:730p, count = 1, log-likelihood = -5.67
  exam:7pm, count = 1, log-likelihood = -5.67
  exam:8, count = 2, log-likelihood = -4.98
  exam:80, count = 1, log-likelihood = -5.67
  exam:830, count = 1, log-likelihood = -5.67
  exam:85, count = 3, log-likelihood = -4.57
  exam:a, count = 137, log-likelihood = -0.75
  exam:a0, count = 1, log-likelihood = -5.67
  exam:aaart, count = 2, log-likelihood = -4.98
  exam:ability, count = 1, log-likelihood = -5.67
  exam:able, count = 5, log-likelihood = -4.06
  exam:about, count = 21, log-likelihood = -2.63
  exam:above, count = 10, log-likelihood = -3.37
  exam:absolute, count = 1, log-likelihood = -5.67
  exam:abstraction, count = 1, log-likelihood = -5.67
  exam:acceptable, count = 1, log-likelihood = -5.67
  exam:access, count = 6, log-likelihood = -3.88
  exam:accessing, count = 2, log-likelihood = -4.98
  exam:accidentally, count = 1, log-likelihood = -5.67
  exam:according, count = 2, log-likelihood = -4.98
  exam:accounted, count = 1, log-likelihood = -5.67
  exam:accurate, count = 1, log-likelihood = -5.67
  exam:achieved, count = 1, log-likelihood = -5.67
  exam:acknowledge, count = 2, log-likelihood = -4.98
  exam:acorrect, count = 1, log-likelihood = -5.67
  exam:across, count = 3, log-likelihood = -4.57
  exam:activation, count = 1, log-likelihood = -5.67
  exam:active, count = 1, log-likelihood = -5.67
  exam:acts, count = 1, log-likelihood = -5.67
  exam:actual, count = 4, log-likelihood = -4.28
  exam:actually, count = 4, log-likelihood = -4.28
  exam:add, count = 1, log-likelihood = -5.67
  exam:adding, count = 2, log-likelihood = -4.98
  exam:addition, count = 1, log-likelihood = -5.67
  exam:addmeeting, count = 1, log-likelihood = -5.67
  exam:address, count = 8, log-likelihood = -3.59
  exam:addresses, count = 1, log-likelihood = -5.67
  exam:adds, count = 1, log-likelihood = -5.67
  exam:addsecond, count = 1, log-likelihood = -5.67
  exam:adt, count = 2, log-likelihood = -4.98
  exam:advance, count = 2, log-likelihood = -4.98
  exam:advanced, count = 1, log-likelihood = -5.67
  exam:advantage, count = 1, log-likelihood = -5.67
  exam:affect, count = 1, log-likelihood = -5.67
  exam:after, count = 15, log-likelihood = -2.96
  exam:afterwards, count = 1, log-likelihood = -5.67
  exam:again, count = 1, log-likelihood = -5.67
  exam:ago, count = 1, log-likelihood = -5.67
  exam:ahead, count = 1, log-likelihood = -5.67
  exam:ain, count = 1, log-likelihood = -5.67
  exam:aka, count = 2, log-likelihood = -4.98
  exam:alias, count = 1, log-likelihood = -5.67
  exam:all, count = 25, log-likelihood = -2.45
  exam:allocated, count = 4, log-likelihood = -4.28
  exam:allow, count = 1, log-likelihood = -5.67
  exam:allowed, count = 9, log-likelihood = -3.47
  exam:along, count = 1, log-likelihood = -5.67
  exam:already, count = 8, log-likelihood = -3.59
  exam:alreadyprinted, count = 1, log-likelihood = -5.67
  exam:alreadyprintedi, count = 1, log-likelihood = -5.67
  exam:also, count = 19, log-likelihood = -2.73
  exam:alter, count = 1, log-likelihood = -5.67
  exam:alternate, count = 4, log-likelihood = -4.28
  exam:although, count = 3, log-likelihood = -4.57
  exam:altsmith, count = 1, log-likelihood = -5.67
  exam:always, count = 8, log-likelihood = -3.59
  exam:am, count = 17, log-likelihood = -2.84
  exam:amaarahj, count = 1, log-likelihood = -5.67
  exam:among, count = 1, log-likelihood = -5.67
  exam:amount, count = 1, log-likelihood = -5.67
  exam:an, count = 40, log-likelihood = -1.98
  exam:analysis, count = 1, log-likelihood = -5.67
  exam:and, count = 104, log-likelihood = -1.03
  exam:angle, count = 1, log-likelihood = -5.67
  exam:announcement, count = 4, log-likelihood = -4.28
  exam:another, count = 7, log-likelihood = -3.72
  exam:answer, count = 24, log-likelihood = -2.49
  exam:answered, count = 1, log-likelihood = -5.67
  exam:answers, count = 10, log-likelihood = -3.37
  exam:any, count = 25, log-likelihood = -2.45
  exam:anyone, count = 5, log-likelihood = -4.06
  exam:anything, count = 13, log-likelihood = -3.1
  exam:anyway, count = 1, log-likelihood = -5.67
  exam:anyways, count = 1, log-likelihood = -5.67
  exam:anywhere, count = 2, log-likelihood = -4.98
  exam:appears, count = 1, log-likelihood = -5.67
  exam:append, count = 3, log-likelihood = -4.57
  exam:apply, count = 1, log-likelihood = -5.67
  exam:appreciated, count = 2, log-likelihood = -4.98
  exam:april, count = 2, log-likelihood = -4.98
  exam:are, count = 63, log-likelihood = -1.53
  exam:arent, count = 1, log-likelihood = -5.67
  exam:argument, count = 1, log-likelihood = -5.67
  exam:arguments, count = 1, log-likelihood = -5.67
  exam:argv, count = 1, log-likelihood = -5.67
  exam:arithmetic, count = 2, log-likelihood = -4.98
  exam:arithmetics, count = 1, log-likelihood = -5.67
  exam:armybegin, count = 1, log-likelihood = -5.67
  exam:arr, count = 5, log-likelihood = -4.06
  exam:arr1, count = 1, log-likelihood = -5.67
  exam:arr3, count = 2, log-likelihood = -4.98
  exam:arr5, count = 1, log-likelihood = -5.67
  exam:arrarrayset4, count = 1, log-likelihood = -5.67
  exam:array, count = 18, log-likelihood = -2.78
  exam:arrayintset, count = 1, log-likelihood = -5.67
  exam:arrays, count = 4, log-likelihood = -4.28
  exam:arrayset, count = 1, log-likelihood = -5.67
  exam:arraysetconst, count = 1, log-likelihood = -5.67
  exam:arraysetint, count = 1, log-likelihood = -5.67
  exam:arri, count = 1, log-likelihood = -5.67
  exam:arrive, count = 1, log-likelihood = -5.67
  exam:arriving, count = 1, log-likelihood = -5.67
  exam:as, count = 52, log-likelihood = -1.72
  exam:asap, count = 2, log-likelihood = -4.98
  exam:asdumed, count = 1, log-likelihood = -5.67
  exam:ask, count = 1, log-likelihood = -5.67
  exam:asked, count = 7, log-likelihood = -3.72
  exam:asking, count = 1, log-likelihood = -5.67
  exam:asks, count = 4, log-likelihood = -4.28
  exam:assert, count = 7, log-likelihood = -3.72
  exam:assertsrc, count = 1, log-likelihood = -5.67
  exam:assign, count = 3, log-likelihood = -4.57
  exam:assigned, count = 5, log-likelihood = -4.06
  exam:assignfriends, count = 2, log-likelihood = -4.98
  exam:assigning, count = 1, log-likelihood = -5.67
  exam:assignment, count = 5, log-likelihood = -4.06
  exam:assignments, count = 1, log-likelihood = -5.67
  exam:assume, count = 6, log-likelihood = -3.88
  exam:assumed, count = 1, log-likelihood = -5.67
  exam:assuming, count = 6, log-likelihood = -3.88
  exam:assumption, count = 1, log-likelihood = -5.67
  exam:assumptions, count = 1, log-likelihood = -5.67
  exam:astoits, count = 1, log-likelihood = -5.67
  exam:asudarsh, count = 1, log-likelihood = -5.67
  exam:at, count = 27, log-likelihood = -2.37
  exam:attempt, count = 3, log-likelihood = -4.57
  exam:attempted, count = 1, log-likelihood = -5.67
  exam:attend, count = 5, log-likelihood = -4.06
  exam:auto, count = 2, log-likelihood = -4.98
  exam:automatically, count = 4, log-likelihood = -4.28
  exam:auxiliary, count = 1, log-likelihood = -5.67
  exam:averages, count = 1, log-likelihood = -5.67
  exam:avoid, count = 1, log-likelihood = -5.67
  exam:away, count = 1, log-likelihood = -5.67
  exam:b, count = 12, log-likelihood = -3.18
  exam:back, count = 5, log-likelihood = -4.06
  exam:bad, count = 1, log-likelihood = -5.67
  exam:baits, count = 1, log-likelihood = -5.67
  exam:balderash, count = 1, log-likelihood = -5.67
  exam:balderdash, count = 1, log-likelihood = -5.67
  exam:bar, count = 1, log-likelihood = -5.67
  exam:bart, count = 1, log-likelihood = -5.67
  exam:base, count = 14, log-likelihood = -3.03
  exam:based, count = 1, log-likelihood = -5.67
  exam:basedouble, count = 2, log-likelihood = -4.98
  exam:basefunction, count = 1, log-likelihood = -5.67
  exam:baseint, count = 1, log-likelihood = -5.67
  exam:basenamein, count = 1, log-likelihood = -5.67
  exam:basevirt3, count = 1, log-likelihood = -5.67
  exam:be, count = 96, log-likelihood = -1.11
  exam:because, count = 21, log-likelihood = -2.63
  exam:becomes, count = 1, log-likelihood = -5.67
  exam:been, count = 10, log-likelihood = -3.37
  exam:before, count = 18, log-likelihood = -2.78
  exam:beforehand, count = 1, log-likelihood = -5.67
  exam:beginning, count = 1, log-likelihood = -5.67
  exam:behalf, count = 1, log-likelihood = -5.67
  exam:behave, count = 2, log-likelihood = -4.98
  exam:behavior, count = 2, log-likelihood = -4.98
  exam:being, count = 6, log-likelihood = -3.88
  exam:believe, count = 4, log-likelihood = -4.28
  exam:below, count = 3, log-likelihood = -4.57
  exam:best, count = 2, log-likelihood = -4.98
  exam:better, count = 4, log-likelihood = -4.28
  exam:between, count = 7, log-likelihood = -3.72
  exam:bibberish, count = 1, log-likelihood = -5.67
  exam:big, count = 2, log-likelihood = -4.98
  exam:binary, count = 1, log-likelihood = -5.67
  exam:bird, count = 2, log-likelihood = -4.98
  exam:bit, count = 5, log-likelihood = -4.06
  exam:black, count = 1, log-likelihood = -5.67
  exam:blank, count = 1, log-likelihood = -5.67
  exam:block, count = 1, log-likelihood = -5.67
  exam:blue, count = 2, log-likelihood = -4.98
  exam:bob, count = 1, log-likelihood = -5.67
  exam:bobby, count = 1, log-likelihood = -5.67
  exam:bobchallenge, count = 1, log-likelihood = -5.67
  exam:body, count = 1, log-likelihood = -5.67
  exam:book, count = 2, log-likelihood = -4.98
  exam:bool, count = 2, log-likelihood = -4.98
  exam:boolean, count = 1, log-likelihood = -5.67
  exam:both, count = 10, log-likelihood = -3.37
  exam:bottom, count = 4, log-likelihood = -4.28
  exam:box, count = 1, log-likelihood = -5.67
  exam:bptr, count = 1, log-likelihood = -5.67
  exam:bracket, count = 1, log-likelihood = -5.67
  exam:branches, count = 1, log-likelihood = -5.67
  exam:break, count = 2, log-likelihood = -4.98
  exam:breakdown, count = 1, log-likelihood = -5.67
  exam:bridge, count = 1, log-likelihood = -5.67
  exam:briefly, count = 1, log-likelihood = -5.67
  exam:bring, count = 3, log-likelihood = -4.57
  exam:bs, count = 1, log-likelihood = -5.67
  exam:building, count = 2, log-likelihood = -4.98
  exam:bursley, count = 1, log-likelihood = -5.67
  exam:bus, count = 1, log-likelihood = -5.67
  exam:but, count = 55, log-likelihood = -1.66
  exam:by, count = 29, log-likelihood = -2.3
  exam:bytes, count = 1, log-likelihood = -5.67
  exam:c, count = 12, log-likelihood = -3.18
  exam:c1, count = 1, log-likelihood = -5.67
  exam:calculators, count = 2, log-likelihood = -4.98
  exam:calendar, count = 2, log-likelihood = -4.98
  exam:call, count = 11, log-likelihood = -3.27
  exam:called, count = 10, log-likelihood = -3.37
  exam:calling, count = 4, log-likelihood = -4.28
  exam:calls, count = 4, log-likelihood = -4.28
  exam:came, count = 2, log-likelihood = -4.98
  exam:campus, count = 3, log-likelihood = -4.57
  exam:camron, count = 1, log-likelihood = -5.67
  exam:can, count = 63, log-likelihood = -1.53
  exam:cannot, count = 2, log-likelihood = -4.98
  exam:cant, count = 13, log-likelihood = -3.1
  exam:capacity, count = 1, log-likelihood = -5.67
  exam:case, count = 10, log-likelihood = -3.37
  exam:cases, count = 1, log-likelihood = -5.67
  exam:cassert, count = 1, log-likelihood = -5.67
  exam:castle, count = 1, log-likelihood = -5.67
  exam:catch, count = 10, log-likelihood = -3.37
  exam:catches, count = 2, log-likelihood = -4.98
  exam:catchgoodbyeerror, count = 1, log-likelihood = -5.67
  exam:catieo, count = 1, log-likelihood = -5.67
  exam:caughsomething, count = 1, log-likelihood = -5.67
  exam:caught, count = 6, log-likelihood = -3.88
  exam:cause, count = 2, log-likelihood = -4.98
  exam:causing, count = 1, log-likelihood = -5.67
  exam:certain, count = 3, log-likelihood = -4.57
  exam:challenge, count = 3, log-likelihood = -4.57
  exam:change, count = 7, log-likelihood = -3.72
  exam:changed, count = 3, log-likelihood = -4.57
  exam:changes, count = 3, log-likelihood = -4.57
  exam:changing, count = 2, log-likelihood = -4.98
  exam:char, count = 5, log-likelihood = -4.06
  exam:character, count = 5, log-likelihood = -4.06
  exam:characters, count = 1, log-likelihood = -5.67
  exam:chars, count = 1, log-likelihood = -5.67
  exam:chart, count = 1, log-likelihood = -5.67
  exam:cheat, count = 5, log-likelihood = -4.06
  exam:check, count = 13, log-likelihood = -3.1
  exam:checked, count = 1, log-likelihood = -5.67
  exam:checking, count = 3, log-likelihood = -4.57
  exam:checkpoint, count = 2, log-likelihood = -4.98
  exam:checks, count = 2, log-likelihood = -4.98
  exam:cheers, count = 3, log-likelihood = -4.57
  exam:choice, count = 2, log-likelihood = -4.98
  exam:choose, count = 1, log-likelihood = -5.67
  exam:chose, count = 1, log-likelihood = -5.67
  exam:chrys220, count = 1, log-likelihood = -5.67
  exam:circular, count = 1, log-likelihood = -5.67
  exam:cjnick, count = 1, log-likelihood = -5.67
  exam:cjosepho, count = 1, log-likelihood = -5.67
  exam:clarification, count = 1, log-likelihood = -5.67
  exam:clarify, count = 2, log-likelihood = -4.98
  exam:class, count = 33, log-likelihood = -2.17
  exam:classes, count = 6, log-likelihood = -3.88
  exam:classmates, count = 1, log-likelihood = -5.67
  exam:clause, count = 5, log-likelihood = -4.06
  exam:clauses, count = 1, log-likelihood = -5.67
  exam:clawsize, count = 1, log-likelihood = -5.67
  exam:clear, count = 4, log-likelihood = -4.28
  exam:clearly, count = 1, log-likelihood = -5.67
  exam:closed, count = 2, log-likelihood = -4.98
  exam:closing, count = 1, log-likelihood = -5.67
  exam:clue, count = 1, log-likelihood = -5.67
  exam:co, count = 1, log-likelihood = -5.67
  exam:code, count = 23, log-likelihood = -2.53
  exam:codes, count = 1, log-likelihood = -5.67
  exam:coding, count = 1, log-likelihood = -5.67
  exam:collaborate, count = 1, log-likelihood = -5.67
  exam:collector, count = 1, log-likelihood = -5.67
  exam:collectort, count = 1, log-likelihood = -5.67
  exam:combination, count = 1, log-likelihood = -5.67
  exam:combined, count = 1, log-likelihood = -5.67
  exam:combining, count = 1, log-likelihood = -5.67
  exam:come, count = 4, log-likelihood = -4.28
  exam:comes, count = 1, log-likelihood = -5.67
  exam:commons, count = 1, log-likelihood = -5.67
  exam:commuter, count = 1, log-likelihood = -5.67
  exam:comp, count = 1, log-likelihood = -5.67
  exam:compare, count = 1, log-likelihood = -5.67
  exam:comparison, count = 2, log-likelihood = -4.98
  exam:compile, count = 3, log-likelihood = -4.57
  exam:compiler, count = 5, log-likelihood = -4.06
  exam:compilers, count = 1, log-likelihood = -5.67
  exam:complete, count = 1, log-likelihood = -5.67
  exam:completely, count = 1, log-likelihood = -5.67
  exam:computation, count = 1, log-likelihood = -5.67
  exam:concerned, count = 1, log-likelihood = -5.67
  exam:condition, count = 5, log-likelihood = -4.06
  exam:conditional, count = 2, log-likelihood = -4.98
  exam:conditions, count = 1, log-likelihood = -5.67
  exam:confirm, count = 1, log-likelihood = -5.67
  exam:conflict, count = 2, log-likelihood = -4.98
  exam:conflicts, count = 2, log-likelihood = -4.98
  exam:confused, count = 19, log-likelihood = -2.73
  exam:confusing, count = 1, log-likelihood = -5.67
  exam:confusion, count = 1, log-likelihood = -5.67
  exam:connected, count = 1, log-likelihood = -5.67
  exam:consecutive, count = 1, log-likelihood = -5.67
  exam:consequence, count = 1, log-likelihood = -5.67
  exam:consequences, count = 1, log-likelihood = -5.67
  exam:consider, count = 1, log-likelihood = -5.67
  exam:consideration, count = 1, log-likelihood = -5.67
  exam:considered, count = 2, log-likelihood = -4.98
  exam:consist, count = 1, log-likelihood = -5.67
  exam:const, count = 4, log-likelihood = -4.28
  exam:construction, count = 1, log-likelihood = -5.67
  exam:constructor, count = 6, log-likelihood = -3.88
  exam:constructors, count = 1, log-likelihood = -5.67
  exam:contain, count = 1, log-likelihood = -5.67
  exam:contains, count = 3, log-likelihood = -4.57
  exam:continue, count = 1, log-likelihood = -5.67
  exam:continues, count = 1, log-likelihood = -5.67
  exam:convert, count = 1, log-likelihood = -5.67
  exam:copies, count = 2, log-likelihood = -4.98
  exam:copy, count = 10, log-likelihood = -3.37
  exam:copying, count = 2, log-likelihood = -4.98
  exam:corner, count = 2, log-likelihood = -4.98
  exam:corpse, count = 1, log-likelihood = -5.67
  exam:correct, count = 10, log-likelihood = -3.37
  exam:correctincorrect, count = 1, log-likelihood = -5.67
  exam:corresponding, count = 1, log-likelihood = -5.67
  exam:could, count = 18, log-likelihood = -2.78
  exam:couldnt, count = 6, log-likelihood = -3.88
  exam:couldve, count = 1, log-likelihood = -5.67
  exam:count, count = 2, log-likelihood = -4.98
  exam:counter, count = 2, log-likelihood = -4.98
  exam:counting, count = 1, log-likelihood = -5.67
  exam:countingchange, count = 1, log-likelihood = -5.67
  exam:couple, count = 3, log-likelihood = -4.57
  exam:course, count = 7, log-likelihood = -3.72
  exam:cout, count = 16, log-likelihood = -2.9
  exam:coutcin, count = 1, log-likelihood = -5.67
  exam:cover, count = 3, log-likelihood = -4.57
  exam:coverage, count = 2, log-likelihood = -4.98
  exam:covered, count = 4, log-likelihood = -4.28
  exam:crab, count = 3, log-likelihood = -4.57
  exam:crazy, count = 1, log-likelihood = -5.67
  exam:create, count = 5, log-likelihood = -4.06
  exam:created, count = 3, log-likelihood = -4.57
  exam:creates, count = 1, log-likelihood = -5.67
  exam:creating, count = 3, log-likelihood = -4.57
  exam:credits, count = 1, log-likelihood = -5.67
  exam:criteria, count = 1, log-likelihood = -5.67
  exam:criterion, count = 1, log-likelihood = -5.67
  exam:crustacean, count = 2, log-likelihood = -4.98
  exam:cs, count = 1, log-likelihood = -5.67
  exam:cstring, count = 5, log-likelihood = -4.06
  exam:cstrings, count = 1, log-likelihood = -5.67
  exam:cstyle, count = 3, log-likelihood = -4.57
  exam:ctools, count = 1, log-likelihood = -5.67
  exam:ctor, count = 3, log-likelihood = -4.57
  exam:cumulative, count = 1, log-likelihood = -5.67
  exam:curiosity, count = 2, log-likelihood = -4.98
  exam:curious, count = 3, log-likelihood = -4.57
  exam:current, count = 4, log-likelihood = -4.28
  exam:currentbestfriend, count = 1, log-likelihood = -5.67
  exam:currently, count = 1, log-likelihood = -5.67
  exam:custom, count = 1, log-likelihood = -5.67
  exam:d, count = 6, log-likelihood = -3.88
  exam:data, count = 6, log-likelihood = -3.88
  exam:datum, count = 2, log-likelihood = -4.98
  exam:day, count = 2, log-likelihood = -4.98
  exam:days, count = 2, log-likelihood = -4.98
  exam:dealing, count = 3, log-likelihood = -4.57
  exam:deals, count = 1, log-likelihood = -5.67
  exam:dealt, count = 1, log-likelihood = -5.67
  exam:decide, count = 2, log-likelihood = -4.98
  exam:declaration, count = 3, log-likelihood = -4.57
  exam:declarationdefinition, count = 1, log-likelihood = -5.67
  exam:declare, count = 3, log-likelihood = -4.57
  exam:declared, count = 5, log-likelihood = -4.06
  exam:declaring, count = 2, log-likelihood = -4.98
  exam:decrease, count = 2, log-likelihood = -4.98
  exam:decrement, count = 1, log-likelihood = -5.67
  exam:deducted, count = 1, log-likelihood = -5.67
  exam:deep, count = 1, log-likelihood = -5.67
  exam:default, count = 2, log-likelihood = -4.98
  exam:defend, count = 1, log-likelihood = -5.67
  exam:defense, count = 1, log-likelihood = -5.67
  exam:defined, count = 1, log-likelihood = -5.67
  exam:definitely, count = 1, log-likelihood = -5.67
  exam:definition, count = 6, log-likelihood = -3.88
  exam:delegate, count = 1, log-likelihood = -5.67
  exam:delegates, count = 1, log-likelihood = -5.67
  exam:delete, count = 8, log-likelihood = -3.59
  exam:deleted, count = 4, log-likelihood = -4.28
  exam:deletes, count = 1, log-likelihood = -5.67
  exam:deleting, count = 4, log-likelihood = -4.28
  exam:department, count = 2, log-likelihood = -4.98
  exam:depend, count = 1, log-likelihood = -5.67
  exam:dependent, count = 1, log-likelihood = -5.67
  exam:depending, count = 2, log-likelihood = -4.98
  exam:deptptrstudent, count = 1, log-likelihood = -5.67
  exam:deptptrstudents, count = 1, log-likelihood = -5.67
  exam:deptptrstudentsi, count = 2, log-likelihood = -4.98
  exam:dereference, count = 2, log-likelihood = -4.98
  exam:dereferenced, count = 1, log-likelihood = -5.67
  exam:dereferences, count = 2, log-likelihood = -4.98
  exam:dereferencing, count = 2, log-likelihood = -4.98
  exam:derived, count = 13, log-likelihood = -3.1
  exam:derived1, count = 1, log-likelihood = -5.67
  exam:derived2, count = 1, log-likelihood = -5.67
  exam:derived2s, count = 1, log-likelihood = -5.67
  exam:deriveddouble, count = 1, log-likelihood = -5.67
  exam:deriveddouble987, count = 1, log-likelihood = -5.67
  exam:derivedint, count = 1, log-likelihood = -5.67
  exam:derivedstring, count = 2, log-likelihood = -4.98
  exam:designed, count = 1, log-likelihood = -5.67
  exam:destiny, count = 1, log-likelihood = -5.67
  exam:destructor, count = 5, log-likelihood = -4.06
  exam:detail, count = 2, log-likelihood = -4.98
  exam:details, count = 3, log-likelihood = -4.57
  exam:determine, count = 1, log-likelihood = -5.67
  exam:detour, count = 1, log-likelihood = -5.67
  exam:detours, count = 1, log-likelihood = -5.67
  exam:dev, count = 1, log-likelihood = -5.67
  exam:deviation, count = 1, log-likelihood = -5.67
  exam:devote, count = 1, log-likelihood = -5.67
  exam:did, count = 5, log-likelihood = -4.06
  exam:didnt, count = 2, log-likelihood = -4.98
  exam:difference, count = 12, log-likelihood = -3.18
  exam:different, count = 4, log-likelihood = -4.28
  exam:dimensions, count = 1, log-likelihood = -5.67
  exam:dir, count = 1, log-likelihood = -5.67
  exam:direct, count = 2, log-likelihood = -4.98
  exam:directly, count = 1, log-likelihood = -5.67
  exam:directory, count = 1, log-likelihood = -5.67
  exam:dirfiles, count = 2, log-likelihood = -4.98
  exam:dirfiles0, count = 1, log-likelihood = -5.67
  exam:disallowed, count = 1, log-likelihood = -5.67
  exam:discarded, count = 3, log-likelihood = -4.57
  exam:discover, count = 2, log-likelihood = -4.98
  exam:discuss, count = 2, log-likelihood = -4.98
  exam:discussion, count = 2, log-likelihood = -4.98
  exam:distance, count = 1, log-likelihood = -5.67
  exam:distinct, count = 1, log-likelihood = -5.67
  exam:distinction, count = 1, log-likelihood = -5.67
  exam:do, count = 61, log-likelihood = -1.56
  exam:does, count = 48, log-likelihood = -1.8
  exam:doesnt, count = 13, log-likelihood = -3.1
  exam:doing, count = 3, log-likelihood = -4.57
  exam:done, count = 3, log-likelihood = -4.57
  exam:dont, count = 21, log-likelihood = -2.63
  exam:doset, count = 1, log-likelihood = -5.67
  exam:double, count = 2, log-likelihood = -4.98
  exam:doubles, count = 1, log-likelihood = -5.67
  exam:doublylinkedlistremoveiflessint, count = 1, log-likelihood = -5.67
  exam:dow, count = 1, log-likelihood = -5.67
  exam:dow1005, count = 2, log-likelihood = -4.98
  exam:dow1006, count = 2, log-likelihood = -4.98
  exam:dow1010, count = 2, log-likelihood = -4.98
  exam:dow1013, count = 2, log-likelihood = -4.98
  exam:dow1014, count = 1, log-likelihood = -5.67
  exam:dow1017, count = 2, log-likelihood = -4.98
  exam:dow1018, count = 2, log-likelihood = -4.98
  exam:down, count = 3, log-likelihood = -4.57
  exam:download, count = 1, log-likelihood = -5.67
  exam:drawing, count = 1, log-likelihood = -5.67
  exam:drive, count = 5, log-likelihood = -4.06
  exam:driveexammidterm, count = 1, log-likelihood = -5.67
  exam:drop, count = 1, log-likelihood = -5.67
  exam:dtor, count = 1, log-likelihood = -5.67
  exam:duck, count = 2, log-likelihood = -4.98
  exam:ducks, count = 1, log-likelihood = -5.67
  exam:due, count = 3, log-likelihood = -4.57
  exam:duplicated, count = 1, log-likelihood = -5.67
  exam:during, count = 2, log-likelihood = -4.98
  exam:dynamic, count = 5, log-likelihood = -4.06
  exam:dynamically, count = 4, log-likelihood = -4.28
  exam:e, count = 4, log-likelihood = -4.28
  exam:each, count = 5, log-likelihood = -4.06
  exam:earlier, count = 4, log-likelihood = -4.28
  exam:early, count = 1, log-likelihood = -5.67
  exam:easier, count = 1, log-likelihood = -5.67
  exam:easily, count = 1, log-likelihood = -5.67
  exam:eecs, count = 7, log-likelihood = -3.72
  exam:eecs1003, count = 1, log-likelihood = -5.67
  exam:eecs1005, count = 1, log-likelihood = -5.67
  exam:eecs1200, count = 1, log-likelihood = -5.67
  exam:eecs1303, count = 1, log-likelihood = -5.67
  exam:eecs1500, count = 1, log-likelihood = -5.67
  exam:eecs280examsumichedu, count = 4, log-likelihood = -4.28
  exam:effect, count = 2, log-likelihood = -4.98
  exam:effects, count = 2, log-likelihood = -4.98
  exam:egetptr, count = 1, log-likelihood = -5.67
  exam:either, count = 2, log-likelihood = -4.98
  exam:elaborate, count = 1, log-likelihood = -5.67
  exam:electronics, count = 2, log-likelihood = -4.98
  exam:element, count = 12, log-likelihood = -3.18
  exam:elements, count = 4, log-likelihood = -4.28
  exam:ellerysw, count = 1, log-likelihood = -5.67
  exam:ellish, count = 1, log-likelihood = -5.67
  exam:ello, count = 1, log-likelihood = -5.67
  exam:else, count = 2, log-likelihood = -4.98
  exam:email, count = 4, log-likelihood = -4.28
  exam:emails, count = 2, log-likelihood = -4.98
  exam:empty, count = 7, log-likelihood = -3.72
  exam:encounters, count = 1, log-likelihood = -5.67
  exam:encourage, count = 2, log-likelihood = -4.98
  exam:end, count = 13, log-likelihood = -3.1
  exam:ended, count = 1, log-likelihood = -5.67
  exam:ending, count = 1, log-likelihood = -5.67
  exam:endl, count = 13, log-likelihood = -3.1
  exam:engage, count = 1, log-likelihood = -5.67
  exam:engineering, count = 2, log-likelihood = -4.98
  exam:enough, count = 2, log-likelihood = -4.98
  exam:enrolledregularly, count = 1, log-likelihood = -5.67
  exam:ensure, count = 1, log-likelihood = -5.67
  exam:enter, count = 2, log-likelihood = -4.98
  exam:enters, count = 1, log-likelihood = -5.67
  exam:entire, count = 3, log-likelihood = -4.57
  exam:eod, count = 1, log-likelihood = -5.67
  exam:equal, count = 7, log-likelihood = -3.72
  exam:equality, count = 1, log-likelihood = -5.67
  exam:equivalent, count = 2, log-likelihood = -4.98
  exam:error, count = 5, log-likelihood = -4.06
  exam:errors, count = 4, log-likelihood = -4.28
  exam:especially, count = 1, log-likelihood = -5.67
  exam:essentially, count = 1, log-likelihood = -5.67
  exam:etc, count = 4, log-likelihood = -4.28
  exam:euqal, count = 1, log-likelihood = -5.67
  exam:evaluate, count = 3, log-likelihood = -4.57
  exam:even, count = 11, log-likelihood = -3.27
  exam:eventually, count = 2, log-likelihood = -4.98
  exam:ever, count = 2, log-likelihood = -4.98
  exam:every, count = 1, log-likelihood = -5.67
  exam:everyone, count = 1, log-likelihood = -5.67
  exam:everything, count = 3, log-likelihood = -4.57
  exam:everywhere, count = 1, log-likelihood = -5.67
  exam:ex, count = 2, log-likelihood = -4.98
  exam:exact, count = 2, log-likelihood = -4.98
  exam:exactly, count = 1, log-likelihood = -5.67
  exam:exam, count = 62, log-likelihood = -1.54
  exam:example, count = 15, log-likelihood = -2.96
  exam:examples, count = 1, log-likelihood = -5.67
  exam:exams, count = 13, log-likelihood = -3.1
  exam:except, count = 4, log-likelihood = -4.28
  exam:exception, count = 3, log-likelihood = -4.57
  exam:execute, count = 1, log-likelihood = -5.67
  exam:executed, count = 3, log-likelihood = -4.57
  exam:executes, count = 1, log-likelihood = -5.67
  exam:exist, count = 1, log-likelihood = -5.67
  exam:exists, count = 2, log-likelihood = -4.98
  exam:exit, count = 1, log-likelihood = -5.67
  exam:expect, count = 5, log-likelihood = -4.06
  exam:expected, count = 3, log-likelihood = -4.57
  exam:expecting, count = 1, log-likelihood = -5.67
  exam:experience, count = 1, log-likelihood = -5.67
  exam:explain, count = 14, log-likelihood = -3.03
  exam:explained, count = 1, log-likelihood = -5.67
  exam:explanation, count = 3, log-likelihood = -4.57
  exam:explicit, count = 1, log-likelihood = -5.67
  exam:explicitly, count = 1, log-likelihood = -5.67
  exam:explode, count = 1, log-likelihood = -5.67
  exam:extended, count = 3, log-likelihood = -4.57
  exam:eye, count = 1, log-likelihood = -5.67
  exam:f, count = 1, log-likelihood = -5.67
  exam:f1, count = 1, log-likelihood = -5.67
  exam:f15, count = 2, log-likelihood = -4.98
  exam:f1int, count = 1, log-likelihood = -5.67
  exam:f3, count = 1, log-likelihood = -5.67
  exam:f3intintint, count = 1, log-likelihood = -5.67
  exam:f4int, count = 1, log-likelihood = -5.67
  exam:fail, count = 3, log-likelihood = -4.57
  exam:failure, count = 1, log-likelihood = -5.67
  exam:fall, count = 9, log-likelihood = -3.47
  exam:false, count = 6, log-likelihood = -3.88
  exam:far, count = 1, log-likelihood = -5.67
  exam:fault, count = 1, log-likelihood = -5.67
  exam:faults, count = 1, log-likelihood = -5.67
  exam:feb, count = 1, log-likelihood = -5.67
  exam:feel, count = 2, log-likelihood = -4.98
  exam:feet, count = 2, log-likelihood = -4.98
  exam:few, count = 3, log-likelihood = -4.57
  exam:fewer, count = 1, log-likelihood = -5.67
  exam:field, count = 2, log-likelihood = -4.98
  exam:figure, count = 1, log-likelihood = -5.67
  exam:file, count = 5, log-likelihood = -4.06
  exam:files, count = 2, log-likelihood = -4.98
  exam:fill, count = 1, log-likelihood = -5.67
  exam:filled, count = 5, log-likelihood = -4.06
  exam:filling, count = 1, log-likelihood = -5.67
  exam:final, count = 24, log-likelihood = -2.49
  exam:finally, count = 1, log-likelihood = -5.67
  exam:finals, count = 1, log-likelihood = -5.67
  exam:find, count = 19, log-likelihood = -2.73
  exam:finding, count = 2, log-likelihood = -4.98
  exam:findnotless, count = 1, log-likelihood = -5.67
  exam:fine, count = 2, log-likelihood = -4.98
  exam:finish, count = 1, log-likelihood = -5.67
  exam:finished, count = 1, log-likelihood = -5.67
  exam:first, count = 28, log-likelihood = -2.34
  exam:fits, count = 1, log-likelihood = -5.67
  exam:fix, count = 1, log-likelihood = -5.67
  exam:fixed, count = 1, log-likelihood = -5.67
  exam:flow, count = 1, log-likelihood = -5.67
  exam:focusing, count = 1, log-likelihood = -5.67
  exam:folder, count = 2, log-likelihood = -4.98
  exam:follow, count = 4, log-likelihood = -4.28
  exam:following, count = 11, log-likelihood = -3.27
  exam:foo, count = 4, log-likelihood = -4.28
  exam:foo10, count = 1, log-likelihood = -5.67
  exam:fooc, count = 1, log-likelihood = -5.67
  exam:fooint, count = 1, log-likelihood = -5.67
  exam:for, count = 100, log-likelihood = -1.06
  exam:forduck, count = 1, log-likelihood = -5.67
  exam:forgive, count = 1, log-likelihood = -5.67
  exam:forint, count = 1, log-likelihood = -5.67
  exam:form, count = 4, log-likelihood = -4.28
  exam:forms, count = 1, log-likelihood = -5.67
  exam:fornode, count = 1, log-likelihood = -5.67
  exam:fortypename, count = 1, log-likelihood = -5.67
  exam:forums, count = 2, log-likelihood = -4.98
  exam:found, count = 1, log-likelihood = -5.67
  exam:fptr, count = 1, log-likelihood = -5.67
  exam:frame, count = 1, log-likelihood = -5.67
  exam:frames, count = 1, log-likelihood = -5.67
  exam:freed, count = 1, log-likelihood = -5.67
  exam:frees, count = 1, log-likelihood = -5.67
  exam:friday, count = 3, log-likelihood = -4.57
  exam:friend, count = 1, log-likelihood = -5.67
  exam:friends, count = 2, log-likelihood = -4.98
  exam:friendship, count = 1, log-likelihood = -5.67
  exam:from, count = 18, log-likelihood = -2.78
  exam:front, count = 3, log-likelihood = -4.57
  exam:full, count = 1, log-likelihood = -5.67
  exam:fully, count = 1, log-likelihood = -5.67
  exam:func, count = 2, log-likelihood = -4.98
  exam:funcd, count = 1, log-likelihood = -5.67
  exam:function, count = 40, log-likelihood = -1.98
  exam:functionality, count = 1, log-likelihood = -5.67
  exam:functions, count = 11, log-likelihood = -3.27
  exam:functor, count = 1, log-likelihood = -5.67
  exam:functors, count = 1, log-likelihood = -5.67
  exam:future, count = 1, log-likelihood = -5.67
  exam:g, count = 2, log-likelihood = -4.98
  exam:gabader, count = 1, log-likelihood = -5.67
  exam:galderdash, count = 1, log-likelihood = -5.67
  exam:gaozihao, count = 1, log-likelihood = -5.67
  exam:gap, count = 1, log-likelihood = -5.67
  exam:gave, count = 2, log-likelihood = -4.98
  exam:general, count = 3, log-likelihood = -4.57
  exam:generic, count = 1, log-likelihood = -5.67
  exam:get, count = 14, log-likelihood = -3.03
  exam:gets, count = 3, log-likelihood = -4.57
  exam:getter, count = 1, log-likelihood = -5.67
  exam:getting, count = 1, log-likelihood = -5.67
  exam:ggbl, count = 1, log-likelihood = -5.67
  exam:ggbl1571, count = 1, log-likelihood = -5.67
  exam:ggbl2505, count = 1, log-likelihood = -5.67
  exam:ghosts, count = 2, log-likelihood = -4.98
  exam:gibberish, count = 1, log-likelihood = -5.67
  exam:give, count = 9, log-likelihood = -3.47
  exam:given, count = 8, log-likelihood = -3.59
  exam:gives, count = 2, log-likelihood = -4.98
  exam:glass, count = 1, log-likelihood = -5.67
  exam:glasses, count = 1, log-likelihood = -5.67
  exam:global, count = 1, log-likelihood = -5.67
  exam:globals, count = 1, log-likelihood = -5.67
  exam:glowing, count = 1, log-likelihood = -5.67
  exam:go, count = 10, log-likelihood = -3.37
  exam:going, count = 6, log-likelihood = -3.88
  exam:gonna, count = 1, log-likelihood = -5.67
  exam:good, count = 2, log-likelihood = -4.98
  exam:goodbyeerror, count = 1, log-likelihood = -5.67
  exam:google, count = 6, log-likelihood = -3.88
  exam:got, count = 2, log-likelihood = -4.98
  exam:grade, count = 5, log-likelihood = -4.06
  exam:graded, count = 2, log-likelihood = -4.98
  exam:graders, count = 1, log-likelihood = -5.67
  exam:grades, count = 6, log-likelihood = -3.88
  exam:gradescope, count = 8, log-likelihood = -3.59
  exam:grading, count = 5, log-likelihood = -4.06
  exam:greater, count = 1, log-likelihood = -5.67
  exam:greaterint, count = 1, log-likelihood = -5.67
  exam:greaterthann, count = 1, log-likelihood = -5.67
  exam:greet, count = 1, log-likelihood = -5.67
  exam:growpetal, count = 1, log-likelihood = -5.67
  exam:gsi, count = 1, log-likelihood = -5.67
  exam:guaranteed, count = 1, log-likelihood = -5.67
  exam:guess, count = 3, log-likelihood = -4.57
  exam:guessing, count = 2, log-likelihood = -4.98
  exam:h, count = 1, log-likelihood = -5.67
  exam:had, count = 5, log-likelihood = -4.06
  exam:hand, count = 6, log-likelihood = -3.88
  exam:handwrite, count = 1, log-likelihood = -5.67
  exam:handwritten, count = 2, log-likelihood = -4.98
  exam:hannoi, count = 2, log-likelihood = -4.98
  exam:haodizc, count = 1, log-likelihood = -5.67
  exam:haoliang, count = 1, log-likelihood = -5.67
  exam:happens, count = 5, log-likelihood = -4.06
  exam:happy, count = 2, log-likelihood = -4.98
  exam:hard, count = 1, log-likelihood = -5.67
  exam:has, count = 14, log-likelihood = -3.03
  exam:have, count = 52, log-likelihood = -1.72
  exam:havent, count = 3, log-likelihood = -4.57
  exam:having, count = 4, log-likelihood = -4.28
  exam:he, count = 1, log-likelihood = -5.67
  exam:heap, count = 2, log-likelihood = -4.98
  exam:heard, count = 1, log-likelihood = -5.67
  exam:hearing, count = 1, log-likelihood = -5.67
  exam:hello, count = 9, log-likelihood = -3.47
  exam:help, count = 7, log-likelihood = -3.72
  exam:helper, count = 2, log-likelihood = -4.98
  exam:helpful, count = 3, log-likelihood = -4.57
  exam:helps, count = 1, log-likelihood = -5.67
  exam:here, count = 12, log-likelihood = -3.18
  exam:heroicfunc, count = 1, log-likelihood = -5.67
  exam:hey, count = 3, log-likelihood = -4.57
  exam:hi, count = 12, log-likelihood = -3.18
  exam:higher, count = 1, log-likelihood = -5.67
  exam:hint, count = 1, log-likelihood = -5.67
  exam:hold, count = 1, log-likelihood = -5.67
  exam:holding, count = 2, log-likelihood = -4.98
  exam:holds, count = 1, log-likelihood = -5.67
  exam:honor, count = 4, log-likelihood = -4.28
  exam:hoping, count = 1, log-likelihood = -5.67
  exam:hour, count = 1, log-likelihood = -5.67
  exam:hours, count = 6, log-likelihood = -3.88
  exam:how, count = 37, log-likelihood = -2.06
  exam:however, count = 8, log-likelihood = -3.59
  exam:httpcampusinfoumicheducampusmap, count = 2, log-likelihood = -4.98
  exam:httpscampusinfoumichedufilescampusinfonorthcampusmappdf, count = 1, log-likelihood = -5.67
  exam:httpsdocsgooglecomaumichedudocumentd1px7ski4tgyzbee8solwn2msbeoc1q1gtp8pqzywanvgedituspsharing, count = 1, log-likelihood = -5.67
  exam:httpsdocsgooglecomaumichedudocumentd1sgc3lfvo9dqqldo3btv9gq7chrbc7nmvqyg8d6b1cedituspsharing, count = 1, log-likelihood = -5.67
  exam:hurt, count = 1, log-likelihood = -5.67
  exam:i, count = 100, log-likelihood = -1.06
  exam:id, count = 1, log-likelihood = -5.67
  exam:idea, count = 2, log-likelihood = -4.98
  exam:ideptptrnumstrudents, count = 1, log-likelihood = -5.67
  exam:ie, count = 1, log-likelihood = -5.67
  exam:ieecsdeptnumstudents, count = 1, log-likelihood = -5.67
  exam:if, count = 101, log-likelihood = -1.05
  exam:ifalreadyprintedi, count = 1, log-likelihood = -5.67
  exam:ifelse, count = 1, log-likelihood = -5.67
  exam:ifk, count = 1, log-likelihood = -5.67
  exam:ifstream, count = 1, log-likelihood = -5.67
  exam:ifx5, count = 1, log-likelihood = -5.67
  exam:ill, count = 1, log-likelihood = -5.67
  exam:illegal, count = 1, log-likelihood = -5.67
  exam:im, count = 26, log-likelihood = -2.41
  exam:imagine, count = 1, log-likelihood = -5.67
  exam:immediately, count = 1, log-likelihood = -5.67
  exam:immobile, count = 1, log-likelihood = -5.67
  exam:implement, count = 4, log-likelihood = -4.28
  exam:implementation, count = 6, log-likelihood = -3.88
  exam:implementations, count = 1, log-likelihood = -5.67
  exam:implements, count = 1, log-likelihood = -5.67
  exam:implicitly, count = 1, log-likelihood = -5.67
  exam:implied, count = 1, log-likelihood = -5.67
  exam:important, count = 2, log-likelihood = -4.98
  exam:impossible, count = 1, log-likelihood = -5.67
  exam:impression, count = 2, log-likelihood = -4.98
  exam:in, count = 125, log-likelihood = -0.842
  exam:include, count = 3, log-likelihood = -4.57
  exam:included, count = 2, log-likelihood = -4.98
  exam:including, count = 2, log-likelihood = -4.98
  exam:incorrectly, count = 2, log-likelihood = -4.98
  exam:increment, count = 2, log-likelihood = -4.98
  exam:indeed, count = 2, log-likelihood = -4.98
  exam:independent, count = 1, log-likelihood = -5.67
  exam:index, count = 2, log-likelihood = -4.98
  exam:indicates, count = 1, log-likelihood = -5.67
  exam:indication, count = 1, log-likelihood = -5.67
  exam:individually, count = 1, log-likelihood = -5.67
  exam:infile, count = 2, log-likelihood = -4.98
  exam:infilefail, count = 1, log-likelihood = -5.67
  exam:info, count = 3, log-likelihood = -4.57
  exam:information, count = 5, log-likelihood = -4.06
  exam:infront, count = 1, log-likelihood = -5.67
  exam:inherit, count = 1, log-likelihood = -5.67
  exam:inherited, count = 1, log-likelihood = -5.67
  exam:initialization, count = 2, log-likelihood = -4.98
  exam:initialize, count = 6, log-likelihood = -3.88
  exam:initialized, count = 3, log-likelihood = -4.57
  exam:initializer, count = 2, log-likelihood = -4.98
  exam:initially, count = 1, log-likelihood = -5.67
  exam:initiallyhow, count = 1, log-likelihood = -5.67
  exam:innermost, count = 1, log-likelihood = -5.67
  exam:input, count = 2, log-likelihood = -4.98
  exam:inputex, count = 1, log-likelihood = -5.67
  exam:inputs, count = 1, log-likelihood = -5.67
  exam:insert, count = 1, log-likelihood = -5.67
  exam:inserted, count = 1, log-likelihood = -5.67
  exam:inside, count = 5, log-likelihood = -4.06
  exam:instance, count = 3, log-likelihood = -4.57
  exam:instances, count = 2, log-likelihood = -4.98
  exam:instantiate, count = 1, log-likelihood = -5.67
  exam:instead, count = 19, log-likelihood = -2.73
  exam:instructions, count = 1, log-likelihood = -5.67
  exam:instructors, count = 1, log-likelihood = -5.67
  exam:int, count = 22, log-likelihood = -2.58
  exam:int3, count = 1, log-likelihood = -5.67
  exam:integer, count = 4, log-likelihood = -4.28
  exam:intend, count = 1, log-likelihood = -5.67
  exam:interactive, count = 2, log-likelihood = -4.98
  exam:interchangable, count = 1, log-likelihood = -5.67
  exam:interface, count = 1, log-likelihood = -5.67
  exam:interpreted, count = 2, log-likelihood = -4.98
  exam:into, count = 7, log-likelihood = -3.72
  exam:introduced, count = 1, log-likelihood = -5.67
  exam:ints, count = 3, log-likelihood = -4.57
  exam:invariants, count = 1, log-likelihood = -5.67
  exam:investigate, count = 2, log-likelihood = -4.98
  exam:involve, count = 1, log-likelihood = -5.67
  exam:involved, count = 1, log-likelihood = -5.67
  exam:is, count = 139, log-likelihood = -0.735
  exam:isnt, count = 15, log-likelihood = -2.96
  exam:issue, count = 1, log-likelihood = -5.67
  exam:istream, count = 1, log-likelihood = -5.67
  exam:istreams, count = 1, log-likelihood = -5.67
  exam:istringstream, count = 1, log-likelihood = -5.67
  exam:it, count = 115, log-likelihood = -0.925
  exam:item, count = 1, log-likelihood = -5.67
  exam:items, count = 1, log-likelihood = -5.67
  exam:itemsbegin, count = 1, log-likelihood = -5.67
  exam:iterating, count = 1, log-likelihood = -5.67
  exam:iterator, count = 7, log-likelihood = -3.72
  exam:iteratorinteger, count = 1, log-likelihood = -5.67
  exam:iterators, count = 5, log-likelihood = -4.06
  exam:ith, count = 1, log-likelihood = -5.67
  exam:itll, count = 1, log-likelihood = -5.67
  exam:its, count = 19, log-likelihood = -2.73
  exam:itself, count = 3, log-likelihood = -4.57
  exam:itupdatedistance, count = 2, log-likelihood = -4.98
  exam:ive, count = 1, log-likelihood = -5.67
  exam:j, count = 1, log-likelihood = -5.67
  exam:jbpruitt, count = 2, log-likelihood = -4.98
  exam:jbsteinb, count = 2, log-likelihood = -4.98
  exam:jnowl, count = 1, log-likelihood = -5.67
  exam:jnpete, count = 1, log-likelihood = -5.67
  exam:johnposa, count = 1, log-likelihood = -5.67
  exam:johnwolf, count = 1, log-likelihood = -5.67
  exam:join, count = 1, log-likelihood = -5.67
  exam:joke, count = 1, log-likelihood = -5.67
  exam:junk, count = 2, log-likelihood = -4.98
  exam:just, count = 37, log-likelihood = -2.06
  exam:k, count = 1, log-likelihood = -5.67
  exam:keep, count = 3, log-likelihood = -4.57
  exam:keeps, count = 1, log-likelihood = -5.67
  exam:key, count = 5, log-likelihood = -4.06
  exam:keys, count = 1, log-likelihood = -5.67
  exam:keyword, count = 4, log-likelihood = -4.28
  exam:kind, count = 4, log-likelihood = -4.28
  exam:know, count = 18, log-likelihood = -2.78
  exam:knowing, count = 2, log-likelihood = -4.98
  exam:kris, count = 1, log-likelihood = -5.67
  exam:krkunkel, count = 1, log-likelihood = -5.67
  exam:ksanjay, count = 1, log-likelihood = -5.67
  exam:l, count = 3, log-likelihood = -4.57
  exam:l64pointers, count = 1, log-likelihood = -5.67
  exam:labs, count = 2, log-likelihood = -4.98
  exam:labster, count = 7, log-likelihood = -3.72
  exam:larger, count = 2, log-likelihood = -4.98
  exam:largest, count = 3, log-likelihood = -4.57
  exam:last, count = 18, log-likelihood = -2.78
  exam:lastand, count = 1, log-likelihood = -5.67
  exam:later, count = 2, log-likelihood = -4.98
  exam:lead, count = 1, log-likelihood = -5.67
  exam:leaf, count = 1, log-likelihood = -5.67
  exam:leaked, count = 2, log-likelihood = -4.98
  exam:learn, count = 1, log-likelihood = -5.67
  exam:learned, count = 1, log-likelihood = -5.67
  exam:learning, count = 2, log-likelihood = -4.98
  exam:least, count = 2, log-likelihood = -4.98
  exam:leave, count = 2, log-likelihood = -4.98
  exam:leaving, count = 1, log-likelihood = -5.67
  exam:lecture, count = 23, log-likelihood = -2.53
  exam:lectures, count = 2, log-likelihood = -4.98
  exam:lecturesguest, count = 1, log-likelihood = -5.67
  exam:left, count = 2, log-likelihood = -4.98
  exam:legitimate, count = 1, log-likelihood = -5.67
  exam:len, count = 1, log-likelihood = -5.67
  exam:length, count = 4, log-likelihood = -4.28
  exam:lengthin, count = 1, log-likelihood = -5.67
  exam:less, count = 5, log-likelihood = -4.06
  exam:let, count = 2, log-likelihood = -4.98
  exam:lets, count = 2, log-likelihood = -4.98
  exam:letssize, count = 1, log-likelihood = -5.67
  exam:letter, count = 1, log-likelihood = -5.67
  exam:letters, count = 1, log-likelihood = -5.67
  exam:libptr, count = 1, log-likelihood = -5.67
  exam:library, count = 3, log-likelihood = -4.57
  exam:like, count = 28, log-likelihood = -2.34
  exam:likely, count = 1, log-likelihood = -5.67
  exam:limited, count = 1, log-likelihood = -5.67
  exam:line, count = 10, log-likelihood = -3.37
  exam:lines, count = 3, log-likelihood = -4.57
  exam:link, count = 3, log-likelihood = -4.57
  exam:linked, count = 2, log-likelihood = -4.98
  exam:lipworth, count = 1, log-likelihood = -5.67
  exam:liskov, count = 1, log-likelihood = -5.67
  exam:list, count = 15, log-likelihood = -2.96
  exam:listbegin, count = 1, log-likelihood = -5.67
  exam:listduck, count = 1, log-likelihood = -5.67
  exam:listend, count = 1, log-likelihood = -5.67
  exam:listfirst, count = 1, log-likelihood = -5.67
  exam:listing, count = 1, log-likelihood = -5.67
  exam:listiterator, count = 1, log-likelihood = -5.67
  exam:listmake, count = 2, log-likelihood = -4.98
  exam:listmake3, count = 1, log-likelihood = -5.67
  exam:listmake4, count = 1, log-likelihood = -5.67
  exam:listmaketreeelttree, count = 1, log-likelihood = -5.67
  exam:listmeeting, count = 1, log-likelihood = -5.67
  exam:listmeetingiterator, count = 1, log-likelihood = -5.67
  exam:lists, count = 5, log-likelihood = -4.06
  exam:liststrees, count = 1, log-likelihood = -5.67
  exam:listt, count = 1, log-likelihood = -5.67
  exam:listtiterator, count = 2, log-likelihood = -4.98
  exam:listwhatever, count = 1, log-likelihood = -5.67
  exam:listwhitewalkeriterator, count = 1, log-likelihood = -5.67
  exam:literal, count = 2, log-likelihood = -4.98
  exam:literals, count = 1, log-likelihood = -5.67
  exam:little, count = 3, log-likelihood = -4.57
  exam:liucody, count = 1, log-likelihood = -5.67
  exam:llama, count = 4, log-likelihood = -4.28
  exam:llamai, count = 1, log-likelihood = -5.67
  exam:llamainit, count = 1, log-likelihood = -5.67
  exam:llamas, count = 3, log-likelihood = -4.57
  exam:llamasi, count = 1, log-likelihood = -5.67
  exam:llamasibestfriend, count = 1, log-likelihood = -5.67
  exam:llamasj, count = 1, log-likelihood = -5.67
  exam:llamasjbestfriend, count = 1, log-likelihood = -5.67
  exam:llo, count = 1, log-likelihood = -5.67
  exam:loaddata, count = 1, log-likelihood = -5.67
  exam:lobster, count = 1, log-likelihood = -5.67
  exam:lobsters, count = 1, log-likelihood = -5.67
  exam:local, count = 4, log-likelihood = -4.28
  exam:locals, count = 1, log-likelihood = -5.67
  exam:located, count = 1, log-likelihood = -5.67
  exam:location, count = 4, log-likelihood = -4.28
  exam:locations, count = 1, log-likelihood = -5.67
  exam:long, count = 1, log-likelihood = -5.67
  exam:look, count = 7, log-likelihood = -3.72
  exam:looking, count = 6, log-likelihood = -3.88
  exam:loop, count = 13, log-likelihood = -3.1
  exam:looped, count = 1, log-likelihood = -5.67
  exam:looping, count = 1, log-likelihood = -5.67
  exam:loops, count = 1, log-likelihood = -5.67
  exam:loose, count = 1, log-likelihood = -5.67
  exam:lose, count = 1, log-likelihood = -5.67
  exam:lost, count = 1, log-likelihood = -5.67
  exam:lot, count = 3, log-likelihood = -4.57
  exam:lsp, count = 1, log-likelihood = -5.67
  exam:lucacace, count = 1, log-likelihood = -5.67
  exam:luck, count = 1, log-likelihood = -5.67
  exam:lvalkevi, count = 1, log-likelihood = -5.67
  exam:m, count = 1, log-likelihood = -5.67
  exam:m7kd8m, count = 1, log-likelihood = -5.67
  exam:made, count = 5, log-likelihood = -4.06
  exam:magnifying, count = 1, log-likelihood = -5.67
  exam:main, count = 17, log-likelihood = -2.84
  exam:mainly, count = 1, log-likelihood = -5.67
  exam:make, count = 13, log-likelihood = -3.1
  exam:makefile, count = 1, log-likelihood = -5.67
  exam:makes, count = 1, log-likelihood = -5.67
  exam:making, count = 3, log-likelihood = -4.57
  exam:manual, count = 1, log-likelihood = -5.67
  exam:many, count = 1, log-likelihood = -5.67
  exam:map, count = 2, log-likelihood = -4.98
  exam:marked, count = 1, log-likelihood = -5.67
  exam:material, count = 7, log-likelihood = -3.72
  exam:materials, count = 3, log-likelihood = -4.57
  exam:matter, count = 2, log-likelihood = -4.98
  exam:maximize, count = 3, log-likelihood = -4.57
  exam:may, count = 9, log-likelihood = -3.47
  exam:maybe, count = 2, log-likelihood = -4.98
  exam:me, count = 12, log-likelihood = -3.18
  exam:mean, count = 15, log-likelihood = -2.96
  exam:means, count = 3, log-likelihood = -4.57
  exam:meant, count = 1, log-likelihood = -5.67
  exam:median, count = 1, log-likelihood = -5.67
  exam:meeting, count = 2, log-likelihood = -4.98
  exam:meetings, count = 1, log-likelihood = -5.67
  exam:meetingtimecomparator, count = 1, log-likelihood = -5.67
  exam:meetingtimecomparators, count = 1, log-likelihood = -5.67
  exam:mekeenan, count = 1, log-likelihood = -5.67
  exam:member, count = 9, log-likelihood = -3.47
  exam:members, count = 1, log-likelihood = -5.67
  exam:memories, count = 1, log-likelihood = -5.67
  exam:memorized, count = 1, log-likelihood = -5.67
  exam:memory, count = 6, log-likelihood = -3.88
  exam:menchak, count = 1, log-likelihood = -5.67
  exam:mentioned, count = 1, log-likelihood = -5.67
  exam:message, count = 2, log-likelihood = -4.98
  exam:met, count = 1, log-likelihood = -5.67
  exam:method, count = 1, log-likelihood = -5.67
  exam:methods, count = 1, log-likelihood = -5.67
  exam:michigan, count = 2, log-likelihood = -4.98
  exam:middle, count = 1, log-likelihood = -5.67
  exam:midterm, count = 20, log-likelihood = -2.67
  exam:midterms, count = 1, log-likelihood = -5.67
  exam:might, count = 1, log-likelihood = -5.67
  exam:min, count = 3, log-likelihood = -4.57
  exam:mine, count = 2, log-likelihood = -4.98
  exam:minof3, count = 1, log-likelihood = -5.67
  exam:miravs, count = 1, log-likelihood = -5.67
  exam:missed, count = 1, log-likelihood = -5.67
  exam:missing, count = 5, log-likelihood = -4.06
  exam:mistake, count = 2, log-likelihood = -4.98
  exam:mitay, count = 1, log-likelihood = -5.67
  exam:modification, count = 1, log-likelihood = -5.67
  exam:modifications, count = 1, log-likelihood = -5.67
  exam:modified, count = 3, log-likelihood = -4.57
  exam:modifies, count = 2, log-likelihood = -4.98
  exam:modify, count = 5, log-likelihood = -4.06
  exam:monday, count = 3, log-likelihood = -4.57
  exam:more, count = 6, log-likelihood = -3.88
  exam:most, count = 1, log-likelihood = -5.67
  exam:mostrecentangle, count = 1, log-likelihood = -5.67
  exam:move, count = 1, log-likelihood = -5.67
  exam:moved, count = 1, log-likelihood = -5.67
  exam:movie, count = 1, log-likelihood = -5.67
  exam:movieprint, count = 1, log-likelihood = -5.67
  exam:moviesi, count = 1, log-likelihood = -5.67
  exam:much, count = 5, log-likelihood = -4.06
  exam:multiple, count = 1, log-likelihood = -5.67
  exam:must, count = 5, log-likelihood = -4.06
  exam:my, count = 22, log-likelihood = -2.58
  exam:myclass, count = 1, log-likelihood = -5.67
  exam:mylist, count = 1, log-likelihood = -5.67
  exam:n, count = 1, log-likelihood = -5.67
  exam:naked, count = 1, log-likelihood = -5.67
  exam:name, count = 10, log-likelihood = -3.37
  exam:namein, count = 1, log-likelihood = -5.67
  exam:namely, count = 1, log-likelihood = -5.67
  exam:nameparameters, count = 1, log-likelihood = -5.67
  exam:names, count = 1, log-likelihood = -5.67
  exam:ndamron, count = 1, log-likelihood = -5.67
  exam:necessarily, count = 2, log-likelihood = -4.98
  exam:necessary, count = 4, log-likelihood = -4.28
  exam:neckardt, count = 1, log-likelihood = -5.67
  exam:need, count = 12, log-likelihood = -3.18
  exam:needed, count = 4, log-likelihood = -4.28
  exam:needs, count = 2, log-likelihood = -4.98
  exam:negative, count = 3, log-likelihood = -4.57
  exam:neither, count = 1, log-likelihood = -5.67
  exam:nested, count = 1, log-likelihood = -5.67
  exam:never, count = 5, log-likelihood = -4.06
  exam:new, count = 5, log-likelihood = -4.06
  exam:newcourse, count = 2, log-likelihood = -4.98
  exam:newlist, count = 1, log-likelihood = -5.67
  exam:next, count = 8, log-likelihood = -3.59
  exam:next2, count = 1, log-likelihood = -5.67
  exam:nfidel, count = 1, log-likelihood = -5.67
  exam:nfinelli, count = 1, log-likelihood = -5.67
  exam:nice, count = 2, log-likelihood = -4.98
  exam:ninja, count = 1, log-likelihood = -5.67
  exam:ninjallama, count = 2, log-likelihood = -4.98
  exam:no, count = 15, log-likelihood = -2.96
  exam:node, count = 8, log-likelihood = -3.59
  exam:nodeptr, count = 1, log-likelihood = -5.67
  exam:non, count = 1, log-likelihood = -5.67
  exam:noncoding, count = 1, log-likelihood = -5.67
  exam:nonconst, count = 1, log-likelihood = -5.67
  exam:none, count = 2, log-likelihood = -4.98
  exam:nonnull, count = 1, log-likelihood = -5.67
  exam:nonsorted, count = 1, log-likelihood = -5.67
  exam:nonvirtual, count = 2, log-likelihood = -4.98
  exam:noon, count = 1, log-likelihood = -5.67
  exam:nor, count = 1, log-likelihood = -5.67
  exam:normal, count = 1, log-likelihood = -5.67
  exam:north, count = 3, log-likelihood = -4.57
  exam:northwood, count = 1, log-likelihood = -5.67
  exam:not, count = 69, log-likelihood = -1.44
  exam:notation, count = 1, log-likelihood = -5.67
  exam:note, count = 6, log-likelihood = -3.88
  exam:notecard, count = 1, log-likelihood = -5.67
  exam:notes, count = 4, log-likelihood = -4.28
  exam:noticed, count = 4, log-likelihood = -4.28
  exam:notified, count = 2, log-likelihood = -4.98
  exam:now, count = 6, log-likelihood = -3.88
  exam:null, count = 8, log-likelihood = -3.59
  exam:num, count = 1, log-likelihood = -5.67
  exam:number, count = 5, log-likelihood = -4.06
  exam:numbers, count = 1, log-likelihood = -5.67
  exam:nummovies, count = 1, log-likelihood = -5.67
  exam:numparts, count = 1, log-likelihood = -5.67
  exam:o, count = 1, log-likelihood = -5.67
  exam:obj, count = 1, log-likelihood = -5.67
  exam:object, count = 12, log-likelihood = -3.18
  exam:objects, count = 6, log-likelihood = -3.88
  exam:obscure, count = 2, log-likelihood = -4.98
  exam:obtained, count = 1, log-likelihood = -5.67
  exam:obviously, count = 1, log-likelihood = -5.67
  exam:occasionally, count = 1, log-likelihood = -5.67
  exam:occur, count = 1, log-likelihood = -5.67
  exam:occurred, count = 2, log-likelihood = -4.98
  exam:odd, count = 1, log-likelihood = -5.67
  exam:of, count = 127, log-likelihood = -0.826
  exam:off, count = 1, log-likelihood = -5.67
  exam:office, count = 4, log-likelihood = -4.28
  exam:offset, count = 1, log-likelihood = -5.67
  exam:ok, count = 2, log-likelihood = -4.98
  exam:okay, count = 3, log-likelihood = -4.57
  exam:old, count = 2, log-likelihood = -4.98
  exam:olstein, count = 1, log-likelihood = -5.67
  exam:on, count = 69, log-likelihood = -1.44
  exam:once, count = 3, log-likelihood = -4.57
  exam:one, count = 22, log-likelihood = -2.58
  exam:ones, count = 1, log-likelihood = -5.67
  exam:only, count = 16, log-likelihood = -2.9
  exam:oops, count = 1, log-likelihood = -5.67
  exam:open, count = 4, log-likelihood = -4.28
  exam:opening, count = 1, log-likelihood = -5.67
  exam:operate, count = 2, log-likelihood = -4.98
  exam:operations, count = 1, log-likelihood = -5.67
  exam:operator, count = 11, log-likelihood = -3.27
  exam:opportunity, count = 3, log-likelihood = -4.57
  exam:optimizing, count = 1, log-likelihood = -5.67
  exam:option, count = 3, log-likelihood = -4.57
  exam:optional, count = 1, log-likelihood = -5.67
  exam:or, count = 57, log-likelihood = -1.63
  exam:order, count = 7, log-likelihood = -3.72
  exam:organize, count = 1, log-likelihood = -5.67
  exam:organized, count = 1, log-likelihood = -5.67
  exam:original, count = 1, log-likelihood = -5.67
  exam:originally, count = 1, log-likelihood = -5.67
  exam:ostertyl, count = 1, log-likelihood = -5.67
  exam:ostringstream, count = 1, log-likelihood = -5.67
  exam:otchiu, count = 1, log-likelihood = -5.67
  exam:other, count = 12, log-likelihood = -3.18
  exam:others, count = 2, log-likelihood = -4.98
  exam:otherwise, count = 2, log-likelihood = -4.98
  exam:our, count = 15, log-likelihood = -2.96
  exam:ourselves, count = 1, log-likelihood = -5.67
  exam:out, count = 22, log-likelihood = -2.58
  exam:output, count = 6, log-likelihood = -3.88
  exam:outside, count = 1, log-likelihood = -5.67
  exam:outward, count = 1, log-likelihood = -5.67
  exam:over, count = 11, log-likelihood = -3.27
  exam:overload, count = 1, log-likelihood = -5.67
  exam:overloaded, count = 6, log-likelihood = -3.88
  exam:overloadoverride, count = 1, log-likelihood = -5.67
  exam:override, count = 1, log-likelihood = -5.67
  exam:overriden, count = 1, log-likelihood = -5.67
  exam:overrides, count = 1, log-likelihood = -5.67
  exam:overview, count = 1, log-likelihood = -5.67
  exam:overwriting, count = 1, log-likelihood = -5.67
  exam:own, count = 3, log-likelihood = -4.57
  exam:packin, count = 1, log-likelihood = -5.67
  exam:pages, count = 1, log-likelihood = -5.67
  exam:palisha, count = 1, log-likelihood = -5.67
  exam:paper, count = 3, log-likelihood = -4.57
  exam:parameter, count = 7, log-likelihood = -3.72
  exam:parameters, count = 2, log-likelihood = -4.98
  exam:parent, count = 1, log-likelihood = -5.67
  exam:part, count = 4, log-likelihood = -4.28
  exam:particular, count = 1, log-likelihood = -5.67
  exam:partner, count = 1, log-likelihood = -5.67
  exam:parts, count = 4, log-likelihood = -4.28
  exam:partsi, count = 1, log-likelihood = -5.67
  exam:pass, count = 8, log-likelihood = -3.59
  exam:passed, count = 7, log-likelihood = -3.72
  exam:passing, count = 3, log-likelihood = -4.57
  exam:passive, count = 1, log-likelihood = -5.67
  exam:past, count = 5, log-likelihood = -4.06
  exam:pasted, count = 1, log-likelihood = -5.67
  exam:pedal, count = 1, log-likelihood = -5.67
  exam:performing, count = 1, log-likelihood = -5.67
  exam:permitted, count = 2, log-likelihood = -4.98
  exam:photocopy, count = 1, log-likelihood = -5.67
  exam:piazza, count = 6, log-likelihood = -3.88
  exam:pickup, count = 1, log-likelihood = -5.67
  exam:picture, count = 1, log-likelihood = -5.67
  exam:piece, count = 1, log-likelihood = -5.67
  exam:pierpont, count = 1, log-likelihood = -5.67
  exam:pin, count = 12, log-likelihood = -3.18
  exam:pinch, count = 1, log-likelihood = -5.67
  exam:place, count = 3, log-likelihood = -4.57
  exam:placed, count = 1, log-likelihood = -5.67
  exam:please, count = 13, log-likelihood = -3.1
  exam:plusonefoo, count = 1, log-likelihood = -5.67
  exam:pm, count = 1, log-likelihood = -5.67
  exam:point, count = 9, log-likelihood = -3.47
  exam:pointed, count = 1, log-likelihood = -5.67
  exam:pointer, count = 27, log-likelihood = -2.37
  exam:pointers, count = 13, log-likelihood = -3.1
  exam:pointing, count = 4, log-likelihood = -4.28
  exam:points, count = 8, log-likelihood = -3.59
  exam:policies, count = 2, log-likelihood = -4.98
  exam:polymorphism, count = 1, log-likelihood = -5.67
  exam:poor, count = 1, log-likelihood = -5.67
  exam:pop, count = 1, log-likelihood = -5.67
  exam:popback, count = 1, log-likelihood = -5.67
  exam:popfront, count = 1, log-likelihood = -5.67
  exam:pos, count = 1, log-likelihood = -5.67
  exam:possible, count = 8, log-likelihood = -3.59
  exam:post, count = 5, log-likelihood = -4.06
  exam:postcondition, count = 1, log-likelihood = -5.67
  exam:posted, count = 10, log-likelihood = -3.37
  exam:postfix, count = 1, log-likelihood = -5.67
  exam:potential, count = 1, log-likelihood = -5.67
  exam:potentially, count = 2, log-likelihood = -4.98
  exam:practice, count = 15, log-likelihood = -2.96
  exam:practiced, count = 1, log-likelihood = -5.67
  exam:practices, count = 1, log-likelihood = -5.67
  exam:pre, count = 1, log-likelihood = -5.67
  exam:preallocate, count = 1, log-likelihood = -5.67
  exam:precedence, count = 1, log-likelihood = -5.67
  exam:precondition, count = 2, log-likelihood = -4.98
  exam:preconditions, count = 2, log-likelihood = -4.98
  exam:pred, count = 3, log-likelihood = -4.57
  exam:predint, count = 1, log-likelihood = -5.67
  exam:predx, count = 1, log-likelihood = -5.67
  exam:prefix, count = 1, log-likelihood = -5.67
  exam:prep, count = 1, log-likelihood = -5.67
  exam:prepare, count = 1, log-likelihood = -5.67
  exam:presentations, count = 1, log-likelihood = -5.67
  exam:pretty, count = 1, log-likelihood = -5.67
  exam:prev, count = 1, log-likelihood = -5.67
  exam:previous, count = 6, log-likelihood = -3.88
  exam:principle, count = 1, log-likelihood = -5.67
  exam:print, count = 12, log-likelihood = -3.18
  exam:printdescription, count = 3, log-likelihood = -4.57
  exam:printed, count = 4, log-likelihood = -4.28
  exam:printfriendships, count = 1, log-likelihood = -5.67
  exam:printing, count = 1, log-likelihood = -5.67
  exam:prints, count = 4, log-likelihood = -4.28
  exam:prior, count = 1, log-likelihood = -5.67
  exam:priority, count = 2, log-likelihood = -4.98
  exam:private, count = 6, log-likelihood = -3.88
  exam:probability, count = 1, log-likelihood = -5.67
  exam:problem, count = 21, log-likelihood = -2.63
  exam:problem2, count = 1, log-likelihood = -5.67
  exam:problem4, count = 1, log-likelihood = -5.67
  exam:problems, count = 11, log-likelihood = -3.27
  exam:procedural, count = 1, log-likelihood = -5.67
  exam:procedure, count = 1, log-likelihood = -5.67
  exam:process, count = 1, log-likelihood = -5.67
  exam:professors, count = 1, log-likelihood = -5.67
  exam:program, count = 3, log-likelihood = -4.57
  exam:programming, count = 1, log-likelihood = -5.67
  exam:project, count = 7, log-likelihood = -3.72
  exam:projects, count = 4, log-likelihood = -4.28
  exam:prompted, count = 2, log-likelihood = -4.98
  exam:proper, count = 1, log-likelihood = -5.67
  exam:properly, count = 1, log-likelihood = -5.67
  exam:properties, count = 1, log-likelihood = -5.67
  exam:property, count = 2, log-likelihood = -4.98
  exam:proud, count = 1, log-likelihood = -5.67
  exam:prove, count = 1, log-likelihood = -5.67
  exam:provide, count = 3, log-likelihood = -4.57
  exam:provided, count = 2, log-likelihood = -4.98
  exam:ps, count = 1, log-likelihood = -5.67
  exam:ptr, count = 9, log-likelihood = -3.47
  exam:ptr1, count = 3, log-likelihood = -4.57
  exam:ptr2, count = 3, log-likelihood = -4.57
  exam:public, count = 6, log-likelihood = -3.88
  exam:publishing, count = 1, log-likelihood = -5.67
  exam:pure, count = 2, log-likelihood = -4.98
  exam:purposes, count = 2, log-likelihood = -4.98
  exam:pushback, count = 1, log-likelihood = -5.67
  exam:put, count = 7, log-likelihood = -3.72
  exam:putting, count = 1, log-likelihood = -5.67
  exam:question, count = 37, log-likelihood = -2.06
  exam:questions, count = 14, log-likelihood = -3.03
  exam:quick, count = 1, log-likelihood = -5.67
  exam:quirk, count = 1, log-likelihood = -5.67
  exam:quite, count = 3, log-likelihood = -4.57
  exam:quotes, count = 1, log-likelihood = -5.67
  exam:r, count = 2, log-likelihood = -4.98
  exam:raderm, count = 1, log-likelihood = -5.67
  exam:random, count = 1, log-likelihood = -5.67
  exam:rapakko, count = 1, log-likelihood = -5.67
  exam:rather, count = 5, log-likelihood = -4.06
  exam:reaches, count = 1, log-likelihood = -5.67
  exam:read, count = 1, log-likelihood = -5.67
  exam:readonly, count = 1, log-likelihood = -5.67
  exam:readpack, count = 1, log-likelihood = -5.67
  exam:reads, count = 2, log-likelihood = -4.98
  exam:realize, count = 1, log-likelihood = -5.67
  exam:really, count = 8, log-likelihood = -3.59
  exam:reason, count = 3, log-likelihood = -4.57
  exam:received, count = 2, log-likelihood = -4.98
  exam:receiver, count = 1, log-likelihood = -5.67
  exam:record, count = 1, log-likelihood = -5.67
  exam:recorded, count = 2, log-likelihood = -4.98
  exam:recreate, count = 1, log-likelihood = -5.67
  exam:recursion, count = 3, log-likelihood = -4.57
  exam:recursive, count = 5, log-likelihood = -4.06
  exam:refer, count = 3, log-likelihood = -4.57
  exam:reference, count = 9, log-likelihood = -3.47
  exam:references, count = 3, log-likelihood = -4.57
  exam:referencetoconst, count = 1, log-likelihood = -5.67
  exam:referencing, count = 1, log-likelihood = -5.67
  exam:refers, count = 1, log-likelihood = -5.67
  exam:regardless, count = 2, log-likelihood = -4.98
  exam:regrade, count = 8, log-likelihood = -3.59
  exam:regraded, count = 1, log-likelihood = -5.67
  exam:regrades, count = 2, log-likelihood = -4.98
  exam:regrading, count = 2, log-likelihood = -4.98
  exam:regular, count = 2, log-likelihood = -4.98
  exam:regularly, count = 2, log-likelihood = -4.98
  exam:regulars, count = 1, log-likelihood = -5.67
  exam:related, count = 1, log-likelihood = -5.67
  exam:released, count = 2, log-likelihood = -4.98
  exam:remember, count = 1, log-likelihood = -5.67
  exam:remotely, count = 1, log-likelihood = -5.67
  exam:removeduplicates, count = 1, log-likelihood = -5.67
  exam:removenoden, count = 1, log-likelihood = -5.67
  exam:report, count = 1, log-likelihood = -5.67
  exam:representation, count = 1, log-likelihood = -5.67
  exam:representing, count = 1, log-likelihood = -5.67
  exam:request, count = 6, log-likelihood = -3.88
  exam:requesting, count = 1, log-likelihood = -5.67
  exam:requests, count = 4, log-likelihood = -4.28
  exam:required, count = 5, log-likelihood = -4.06
  exam:requirement, count = 2, log-likelihood = -4.98
  exam:requirements, count = 1, log-likelihood = -5.67
  exam:requires, count = 4, log-likelihood = -4.28
  exam:reserve, count = 1, log-likelihood = -5.67
  exam:respectively, count = 1, log-likelihood = -5.67
  exam:rest, count = 3, log-likelihood = -4.57
  exam:result, count = 6, log-likelihood = -3.88
  exam:results, count = 2, log-likelihood = -4.98
  exam:resume, count = 1, log-likelihood = -5.67
  exam:return, count = 18, log-likelihood = -2.78
  exam:returned, count = 3, log-likelihood = -4.57
  exam:returning, count = 1, log-likelihood = -5.67
  exam:returns, count = 3, log-likelihood = -4.57
  exam:review, count = 19, log-likelihood = -2.73
  exam:reviewing, count = 2, log-likelihood = -4.98
  exam:rid, count = 1, log-likelihood = -5.67
  exam:right, count = 11, log-likelihood = -3.27
  exam:rme, count = 3, log-likelihood = -4.57
  exam:rmes, count = 1, log-likelihood = -5.67
  exam:room, count = 5, log-likelihood = -4.06
  exam:rooms, count = 3, log-likelihood = -4.57
  exam:roughly, count = 1, log-likelihood = -5.67
  exam:route, count = 1, log-likelihood = -5.67
  exam:routes, count = 1, log-likelihood = -5.67
  exam:rule, count = 2, log-likelihood = -4.98
  exam:run, count = 6, log-likelihood = -3.88
  exam:running, count = 2, log-likelihood = -4.98
  exam:runs, count = 1, log-likelihood = -5.67
  exam:s, count = 7, log-likelihood = -3.72
  exam:s1, count = 1, log-likelihood = -5.67
  exam:s2, count = 1, log-likelihood = -5.67
  exam:sad, count = 1, log-likelihood = -5.67
  exam:said, count = 5, log-likelihood = -4.06
  exam:sake, count = 1, log-likelihood = -5.67
  exam:same, count = 15, log-likelihood = -2.96
  exam:satisfy, count = 1, log-likelihood = -5.67
  exam:saturday, count = 5, log-likelihood = -4.06
  exam:saul, count = 1, log-likelihood = -5.67
  exam:say, count = 9, log-likelihood = -3.47
  exam:says, count = 21, log-likelihood = -2.63
  exam:scenario, count = 1, log-likelihood = -5.67
  exam:schedule, count = 1, log-likelihood = -5.67
  exam:scheduleend, count = 1, log-likelihood = -5.67
  exam:scheduleinsertinsertit, count = 1, log-likelihood = -5.67
  exam:scope, count = 5, log-likelihood = -4.06
  exam:scoping, count = 1, log-likelihood = -5.67
  exam:score, count = 4, log-likelihood = -4.28
  exam:search, count = 1, log-likelihood = -5.67
  exam:searching, count = 1, log-likelihood = -5.67
  exam:seating, count = 2, log-likelihood = -4.98
  exam:second, count = 9, log-likelihood = -3.47
  exam:section, count = 3, log-likelihood = -4.57
  exam:see, count = 10, log-likelihood = -3.37
  exam:seem, count = 3, log-likelihood = -4.57
  exam:seems, count = 4, log-likelihood = -4.28
  exam:seen, count = 2, log-likelihood = -4.98
  exam:seg, count = 1, log-likelihood = -5.67
  exam:segfault, count = 1, log-likelihood = -5.67
  exam:segmentation, count = 1, log-likelihood = -5.67
  exam:select, count = 2, log-likelihood = -4.98
  exam:selfcorrect, count = 1, log-likelihood = -5.67
  exam:semantics, count = 1, log-likelihood = -5.67
  exam:semester, count = 1, log-likelihood = -5.67
  exam:semesters, count = 1, log-likelihood = -5.67
  exam:semicolons, count = 1, log-likelihood = -5.67
  exam:sent, count = 2, log-likelihood = -4.98
  exam:sentence, count = 2, log-likelihood = -4.98
  exam:sentences, count = 2, log-likelihood = -4.98
  exam:sentinal, count = 1, log-likelihood = -5.67
  exam:sentinel, count = 2, log-likelihood = -4.98
  exam:separately, count = 1, log-likelihood = -5.67
  exam:sequence, count = 1, log-likelihood = -5.67
  exam:serious, count = 1, log-likelihood = -5.67
  exam:session, count = 5, log-likelihood = -4.06
  exam:sessions, count = 1, log-likelihood = -5.67
  exam:set, count = 6, log-likelihood = -3.88
  exam:setting, count = 1, log-likelihood = -5.67
  exam:several, count = 1, log-likelihood = -5.67
  exam:shall, count = 1, log-likelihood = -5.67
  exam:share, count = 1, log-likelihood = -5.67
  exam:shared, count = 1, log-likelihood = -5.67
  exam:sharing, count = 1, log-likelihood = -5.67
  exam:sharp, count = 1, log-likelihood = -5.67
  exam:sheet, count = 8, log-likelihood = -3.59
  exam:sheets, count = 1, log-likelihood = -5.67
  exam:shortly, count = 1, log-likelihood = -5.67
  exam:should, count = 26, log-likelihood = -2.41
  exam:shouldnt, count = 9, log-likelihood = -3.47
  exam:shown, count = 1, log-likelihood = -5.67
  exam:shows, count = 2, log-likelihood = -4.98
  exam:side, count = 1, log-likelihood = -5.67
  exam:sides, count = 2, log-likelihood = -4.98
  exam:signature, count = 2, log-likelihood = -4.98
  exam:signs, count = 1, log-likelihood = -5.67
  exam:similar, count = 1, log-likelihood = -5.67
  exam:simple, count = 1, log-likelihood = -5.67
  exam:simply, count = 1, log-likelihood = -5.67
  exam:simulate, count = 1, log-likelihood = -5.67
  exam:simulations, count = 1, log-likelihood = -5.67
  exam:since, count = 12, log-likelihood = -3.18
  exam:single, count = 1, log-likelihood = -5.67
  exam:situation, count = 3, log-likelihood = -4.57
  exam:situations, count = 1, log-likelihood = -5.67
  exam:size, count = 6, log-likelihood = -3.88
  exam:sizein, count = 1, log-likelihood = -5.67
  exam:sizeothersize, count = 1, log-likelihood = -5.67
  exam:sizesizein, count = 1, log-likelihood = -5.67
  exam:slide, count = 5, log-likelihood = -4.06
  exam:slides, count = 5, log-likelihood = -4.06
  exam:smaller, count = 2, log-likelihood = -4.98
  exam:smoothly, count = 1, log-likelihood = -5.67
  exam:so, count = 46, log-likelihood = -1.84
  exam:solution, count = 15, log-likelihood = -2.96
  exam:solutions, count = 21, log-likelihood = -2.63
  exam:solve, count = 1, log-likelihood = -5.67
  exam:solving, count = 1, log-likelihood = -5.67
  exam:some, count = 11, log-likelihood = -3.27
  exam:somehow, count = 1, log-likelihood = -5.67
  exam:someone, count = 19, log-likelihood = -2.73
  exam:something, count = 7, log-likelihood = -3.72
  exam:soon, count = 1, log-likelihood = -5.67
  exam:sorry, count = 5, log-likelihood = -4.06
  exam:sort, count = 1, log-likelihood = -5.67
  exam:sorted, count = 2, log-likelihood = -4.98
  exam:sound, count = 1, log-likelihood = -5.67
  exam:space, count = 5, log-likelihood = -4.06
  exam:speak, count = 1, log-likelihood = -5.67
  exam:special, count = 2, log-likelihood = -4.98
  exam:specific, count = 5, log-likelihood = -4.06
  exam:specifically, count = 4, log-likelihood = -4.28
  exam:specified, count = 3, log-likelihood = -4.57
  exam:specify, count = 3, log-likelihood = -4.57
  exam:specs, count = 1, log-likelihood = -5.67
  exam:split, count = 2, log-likelihood = -4.98
  exam:spring, count = 9, log-likelihood = -3.47
  exam:ss, count = 1, log-likelihood = -5.67
  exam:stack, count = 5, log-likelihood = -4.06
  exam:staff, count = 5, log-likelihood = -4.06
  exam:stamps, count = 3, log-likelihood = -4.57
  exam:standard, count = 1, log-likelihood = -5.67
  exam:stars, count = 1, log-likelihood = -5.67
  exam:start, count = 6, log-likelihood = -3.88
  exam:starts, count = 2, log-likelihood = -4.98
  exam:state, count = 2, log-likelihood = -4.98
  exam:stated, count = 3, log-likelihood = -4.57
  exam:statement, count = 10, log-likelihood = -3.37
  exam:statements, count = 1, log-likelihood = -5.67
  exam:states, count = 2, log-likelihood = -4.98
  exam:static, count = 7, log-likelihood = -3.72
  exam:statistics, count = 1, log-likelihood = -5.67
  exam:std, count = 1, log-likelihood = -5.67
  exam:step, count = 2, log-likelihood = -4.98
  exam:still, count = 15, log-likelihood = -2.96
  exam:stop, count = 3, log-likelihood = -4.57
  exam:storage, count = 1, log-likelihood = -5.67
  exam:store, count = 2, log-likelihood = -4.98
  exam:stored, count = 3, log-likelihood = -4.57
  exam:stores, count = 1, log-likelihood = -5.67
  exam:storing, count = 1, log-likelihood = -5.67
  exam:str, count = 3, log-likelihood = -4.57
  exam:str3, count = 1, log-likelihood = -5.67
  exam:str5, count = 1, log-likelihood = -5.67
  exam:str6, count = 1, log-likelihood = -5.67
  exam:strcpy, count = 1, log-likelihood = -5.67
  exam:stream, count = 1, log-likelihood = -5.67
  exam:strengthen, count = 1, log-likelihood = -5.67
  exam:strengthened, count = 1, log-likelihood = -5.67
  exam:strengthening, count = 1, log-likelihood = -5.67
  exam:stretch, count = 1, log-likelihood = -5.67
  exam:strictly, count = 2, log-likelihood = -4.98
  exam:string, count = 13, log-likelihood = -3.1
  exam:string1, count = 1, log-likelihood = -5.67
  exam:string111, count = 1, log-likelihood = -5.67
  exam:string2, count = 1, log-likelihood = -5.67
  exam:string211, count = 1, log-likelihood = -5.67
  exam:stringlengthhelpers, count = 1, log-likelihood = -5.67
  exam:stringnequals, count = 1, log-likelihood = -5.67
  exam:strings, count = 3, log-likelihood = -4.57
  exam:stringstream, count = 1, log-likelihood = -5.67
  exam:strlen, count = 1, log-likelihood = -5.67
  exam:stronger, count = 2, log-likelihood = -4.98
  exam:struct, count = 4, log-likelihood = -4.28
  exam:structname, count = 1, log-likelihood = -5.67
  exam:structs, count = 1, log-likelihood = -5.67
  exam:structure, count = 1, log-likelihood = -5.67
  exam:student, count = 1, log-likelihood = -5.67
  exam:studentaddcourse, count = 1, log-likelihood = -5.67
  exam:studentaddcourseeecsdeptstudentsi, count = 1, log-likelihood = -5.67
  exam:students, count = 5, log-likelihood = -4.06
  exam:studentsin, count = 1, log-likelihood = -5.67
  exam:studentsini, count = 2, log-likelihood = -4.98
  exam:studio, count = 2, log-likelihood = -4.98
  exam:study, count = 3, log-likelihood = -4.57
  exam:studying, count = 4, log-likelihood = -4.28
  exam:style, count = 1, log-likelihood = -5.67
  exam:subclass, count = 1, log-likelihood = -5.67
  exam:subjective, count = 2, log-likelihood = -4.98
  exam:submission, count = 3, log-likelihood = -4.57
  exam:submit, count = 3, log-likelihood = -4.57
  exam:submitted, count = 1, log-likelihood = -5.67
  exam:submitting, count = 1, log-likelihood = -5.67
  exam:subproblems, count = 1, log-likelihood = -5.67
  exam:subquestion, count = 2, log-likelihood = -4.98
  exam:substitution, count = 1, log-likelihood = -5.67
  exam:subtree, count = 1, log-likelihood = -5.67
  exam:subtrees, count = 1, log-likelihood = -5.67
  exam:subtype, count = 2, log-likelihood = -4.98
  exam:success, count = 1, log-likelihood = -5.67
  exam:such, count = 11, log-likelihood = -3.27
  exam:suffice, count = 1, log-likelihood = -5.67
  exam:suggested, count = 1, log-likelihood = -5.67
  exam:super, count = 2, log-likelihood = -4.98
  exam:superllama, count = 3, log-likelihood = -4.57
  exam:superllamaprintdescription, count = 1, log-likelihood = -5.67
  exam:supper, count = 1, log-likelihood = -5.67
  exam:supposed, count = 9, log-likelihood = -3.47
  exam:sure, count = 9, log-likelihood = -3.47
  exam:survey, count = 1, log-likelihood = -5.67
  exam:suspected, count = 1, log-likelihood = -5.67
  exam:syllabus, count = 1, log-likelihood = -5.67
  exam:syntax, count = 5, log-likelihood = -4.06
  exam:t, count = 7, log-likelihood = -3.72
  exam:t1, count = 2, log-likelihood = -4.98
  exam:t2, count = 4, log-likelihood = -4.28
  exam:ta, count = 1, log-likelihood = -5.67
  exam:tail, count = 4, log-likelihood = -4.28
  exam:take, count = 8, log-likelihood = -3.59
  exam:taken, count = 3, log-likelihood = -4.57
  exam:takes, count = 6, log-likelihood = -3.88
  exam:taking, count = 5, log-likelihood = -4.06
  exam:talked, count = 1, log-likelihood = -5.67
  exam:talking, count = 1, log-likelihood = -5.67
  exam:taught, count = 1, log-likelihood = -5.67
  exam:tell, count = 4, log-likelihood = -4.28
  exam:template, count = 3, log-likelihood = -4.57
  exam:templated, count = 1, log-likelihood = -5.67
  exam:templatetypename, count = 1, log-likelihood = -5.67
  exam:temporary, count = 2, log-likelihood = -4.98
  exam:term, count = 1, log-likelihood = -5.67
  exam:terminate, count = 1, log-likelihood = -5.67
  exam:terminated, count = 1, log-likelihood = -5.67
  exam:terminates, count = 1, log-likelihood = -5.67
  exam:termination, count = 1, log-likelihood = -5.67
  exam:test, count = 2, log-likelihood = -4.98
  exam:tested, count = 1, log-likelihood = -5.67
  exam:testing, count = 1, log-likelihood = -5.67
  exam:tests, count = 3, log-likelihood = -4.57
  exam:text, count = 2, log-likelihood = -4.98
  exam:than, count = 12, log-likelihood = -3.18
  exam:thank, count = 2, log-likelihood = -4.98
  exam:thanks, count = 40, log-likelihood = -1.98
  exam:that, count = 92, log-likelihood = -1.15
  exam:thats, count = 5, log-likelihood = -4.06
  exam:the, count = 236, log-likelihood = -0.206
  exam:their, count = 5, log-likelihood = -4.06
  exam:them, count = 18, log-likelihood = -2.78
  exam:then, count = 25, log-likelihood = -2.45
  exam:there, count = 34, log-likelihood = -2.14
  exam:therefore, count = 3, log-likelihood = -4.57
  exam:theres, count = 5, log-likelihood = -4.06
  exam:these, count = 12, log-likelihood = -3.18
  exam:they, count = 13, log-likelihood = -3.1
  exam:theyre, count = 1, log-likelihood = -5.67
  exam:thing, count = 8, log-likelihood = -3.59
  exam:thingmember, count = 1, log-likelihood = -5.67
  exam:things, count = 4, log-likelihood = -4.28
  exam:think, count = 7, log-likelihood = -3.72
  exam:thinking, count = 1, log-likelihood = -5.67
  exam:third, count = 3, log-likelihood = -4.57
  exam:this, count = 103, log-likelihood = -1.04
  exam:thoroughly, count = 1, log-likelihood = -5.67
  exam:those, count = 9, log-likelihood = -3.47
  exam:though, count = 7, log-likelihood = -3.72
  exam:thought, count = 13, log-likelihood = -3.1
  exam:thoughts, count = 1, log-likelihood = -5.67
  exam:thread, count = 1, log-likelihood = -5.67
  exam:three, count = 5, log-likelihood = -4.06
  exam:threshold, count = 2, log-likelihood = -4.98
  exam:thresholdin, count = 1, log-likelihood = -5.67
  exam:thresholdthresholdin, count = 1, log-likelihood = -5.67
  exam:through, count = 12, log-likelihood = -3.18
  exam:throw, count = 6, log-likelihood = -3.88
  exam:throwing, count = 1, log-likelihood = -5.67
  exam:thrown, count = 4, log-likelihood = -4.28
  exam:throws, count = 2, log-likelihood = -4.98
  exam:thursday, count = 2, log-likelihood = -4.98
  exam:thus, count = 2, log-likelihood = -4.98
  exam:time, count = 12, log-likelihood = -3.18
  exam:timer, count = 1, log-likelihood = -5.67
  exam:times, count = 2, log-likelihood = -4.98
  exam:title, count = 3, log-likelihood = -4.57
  exam:to, count = 169, log-likelihood = -0.54
  exam:today, count = 1, log-likelihood = -5.67
  exam:todays, count = 1, log-likelihood = -5.67
  exam:together, count = 3, log-likelihood = -4.57
  exam:told, count = 2, log-likelihood = -4.98
  exam:tomorrow, count = 3, log-likelihood = -4.57
  exam:too, count = 2, log-likelihood = -4.98
  exam:took, count = 3, log-likelihood = -4.57
  exam:top, count = 3, log-likelihood = -4.57
  exam:topic, count = 2, log-likelihood = -4.98
  exam:topics, count = 1, log-likelihood = -5.67
  exam:traversal, count = 1, log-likelihood = -5.67
  exam:treat, count = 1, log-likelihood = -5.67
  exam:treating, count = 1, log-likelihood = -5.67
  exam:tree, count = 4, log-likelihood = -4.28
  exam:treeelt, count = 1, log-likelihood = -5.67
  exam:treeelttree, count = 1, log-likelihood = -5.67
  exam:treefilter, count = 2, log-likelihood = -4.98
  exam:treeisemptytree, count = 1, log-likelihood = -5.67
  exam:trees, count = 1, log-likelihood = -5.67
  exam:tried, count = 3, log-likelihood = -4.57
  exam:trivialpedantic, count = 1, log-likelihood = -5.67
  exam:trouble, count = 5, log-likelihood = -4.06
  exam:true, count = 10, log-likelihood = -3.37
  exam:try, count = 1, log-likelihood = -5.67
  exam:tues, count = 1, log-likelihood = -5.67
  exam:tuesday, count = 1, log-likelihood = -5.67
  exam:turned, count = 1, log-likelihood = -5.67
  exam:tweet, count = 1, log-likelihood = -5.67
  exam:twice, count = 2, log-likelihood = -4.98
  exam:two, count = 10, log-likelihood = -3.37
  exam:type, count = 19, log-likelihood = -2.73
  exam:typed, count = 1, log-likelihood = -5.67
  exam:typename, count = 6, log-likelihood = -3.88
  exam:types, count = 2, log-likelihood = -4.98
  exam:unable, count = 1, log-likelihood = -5.67
  exam:under, count = 5, log-likelihood = -4.06
  exam:underneath, count = 1, log-likelihood = -5.67
  exam:understand, count = 17, log-likelihood = -2.84
  exam:understanding, count = 6, log-likelihood = -3.88
  exam:undesired, count = 1, log-likelihood = -5.67
  exam:unfamiliar, count = 1, log-likelihood = -5.67
  exam:uniqname, count = 2, log-likelihood = -4.98
  exam:uniquename, count = 1, log-likelihood = -5.67
  exam:unless, count = 1, log-likelihood = -5.67
  exam:unlike, count = 2, log-likelihood = -4.98
  exam:unreadable, count = 1, log-likelihood = -5.67
  exam:until, count = 4, log-likelihood = -4.28
  exam:unto, count = 1, log-likelihood = -5.67
  exam:unused, count = 1, log-likelihood = -5.67
  exam:up, count = 11, log-likelihood = -3.27
  exam:update, count = 1, log-likelihood = -5.67
  exam:updates, count = 1, log-likelihood = -5.67
  exam:uploaded, count = 1, log-likelihood = -5.67
  exam:us, count = 10, log-likelihood = -3.37
  exam:use, count = 34, log-likelihood = -2.14
  exam:used, count = 10, log-likelihood = -3.37
  exam:useful, count = 1, log-likelihood = -5.67
  exam:user, count = 2, log-likelihood = -4.98
  exam:uses, count = 4, log-likelihood = -4.28
  exam:using, count = 11, log-likelihood = -3.27
  exam:usually, count = 1, log-likelihood = -5.67
  exam:v, count = 1, log-likelihood = -5.67
  exam:valid, count = 3, log-likelihood = -4.57
  exam:value, count = 18, log-likelihood = -2.78
  exam:values, count = 5, log-likelihood = -4.06
  exam:variable, count = 8, log-likelihood = -3.59
  exam:variables, count = 9, log-likelihood = -3.47
  exam:vec, count = 1, log-likelihood = -5.67
  exam:vector, count = 1, log-likelihood = -5.67
  exam:vectors, count = 1, log-likelihood = -5.67
  exam:vedal, count = 1, log-likelihood = -5.67
  exam:venue, count = 1, log-likelihood = -5.67
  exam:verify, count = 2, log-likelihood = -4.98
  exam:version, count = 3, log-likelihood = -4.57
  exam:very, count = 7, log-likelihood = -3.72
  exam:vidal, count = 4, log-likelihood = -4.28
  exam:vidals, count = 1, log-likelihood = -5.67
  exam:vidal’s, count = 2, log-likelihood = -4.98
  exam:video, count = 1, log-likelihood = -5.67
  exam:view, count = 1, log-likelihood = -5.67
  exam:violate, count = 1, log-likelihood = -5.67
  exam:violation, count = 2, log-likelihood = -4.98
  exam:virtual, count = 9, log-likelihood = -3.47
  exam:visual, count = 2, log-likelihood = -4.98
  exam:void, count = 5, log-likelihood = -4.06
  exam:vs, count = 2, log-likelihood = -4.98
  exam:w, count = 1, log-likelihood = -5.67
  exam:walk, count = 1, log-likelihood = -5.67
  exam:walker, count = 1, log-likelihood = -5.67
  exam:want, count = 9, log-likelihood = -3.47
  exam:wanted, count = 3, log-likelihood = -4.57
  exam:warning, count = 1, log-likelihood = -5.67
  exam:warshipattack, count = 1, log-likelihood = -5.67
  exam:was, count = 38, log-likelihood = -2.03
  exam:wasnt, count = 2, log-likelihood = -4.98
  exam:wat, count = 1, log-likelihood = -5.67
  exam:watching, count = 1, log-likelihood = -5.67
  exam:way, count = 10, log-likelihood = -3.37
  exam:we, count = 109, log-likelihood = -0.979
  exam:weaken, count = 1, log-likelihood = -5.67
  exam:weakened, count = 1, log-likelihood = -5.67
  exam:weakens, count = 1, log-likelihood = -5.67
  exam:weaker, count = 2, log-likelihood = -4.98
  exam:web, count = 1, log-likelihood = -5.67
  exam:week, count = 4, log-likelihood = -4.28
  exam:welcome, count = 2, log-likelihood = -4.98
  exam:well, count = 8, log-likelihood = -3.59
  exam:wellformed, count = 1, log-likelihood = -5.67
  exam:went, count = 2, log-likelihood = -4.98
  exam:were, count = 15, log-likelihood = -2.96
  exam:weve, count = 2, log-likelihood = -4.98
  exam:what, count = 47, log-likelihood = -1.82
  exam:whats, count = 5, log-likelihood = -4.06
  exam:when, count = 46, log-likelihood = -1.84
  exam:whenever, count = 2, log-likelihood = -4.98
  exam:where, count = 17, log-likelihood = -2.84
  exam:whereas, count = 2, log-likelihood = -4.98
  exam:whether, count = 3, log-likelihood = -4.57
  exam:which, count = 15, log-likelihood = -2.96
  exam:while, count = 14, log-likelihood = -3.03
  exam:whiles, count = 1, log-likelihood = -5.67
  exam:white, count = 1, log-likelihood = -5.67
  exam:whitewalker, count = 1, log-likelihood = -5.67
  exam:who, count = 4, log-likelihood = -4.28
  exam:whole, count = 1, log-likelihood = -5.67
  exam:whooping, count = 1, log-likelihood = -5.67
  exam:whoopingllama, count = 1, log-likelihood = -5.67
  exam:whose, count = 1, log-likelihood = -5.67
  exam:why, count = 60, log-likelihood = -1.58
  exam:will, count = 49, log-likelihood = -1.78
  exam:winter, count = 9, log-likelihood = -3.47
  exam:wise, count = 1, log-likelihood = -5.67
  exam:with, count = 38, log-likelihood = -2.03
  exam:within, count = 3, log-likelihood = -4.57
  exam:without, count = 7, log-likelihood = -3.72
  exam:wn15, count = 1, log-likelihood = -5.67
  exam:wonder, count = 1, log-likelihood = -5.67
  exam:wondering, count = 13, log-likelihood = -3.1
  exam:wont, count = 3, log-likelihood = -4.57
  exam:word, count = 2, log-likelihood = -4.98
  exam:work, count = 10, log-likelihood = -3.37
  exam:worked, count = 1, log-likelihood = -5.67
  exam:working, count = 1, log-likelihood = -5.67
  exam:works, count = 4, log-likelihood = -4.28
  exam:worksheet, count = 2, log-likelihood = -4.98
  exam:worksheets, count = 1, log-likelihood = -5.67
  exam:world, count = 1, log-likelihood = -5.67
  exam:worth, count = 2, log-likelihood = -4.98
  exam:would, count = 53, log-likelihood = -1.7
  exam:wouldnt, count = 12, log-likelihood = -3.18
  exam:wouldve, count = 1, log-likelihood = -5.67
  exam:wrap, count = 1, log-likelihood = -5.67
  exam:write, count = 7, log-likelihood = -3.72
  exam:writing, count = 7, log-likelihood = -3.72
  exam:written, count = 7, log-likelihood = -3.72
  exam:wrong, count = 8, log-likelihood = -3.59
  exam:wrote, count = 2, log-likelihood = -4.98
  exam:x, count = 8, log-likelihood = -3.59
  exam:x1, count = 1, log-likelihood = -5.67
  exam:x4, count = 1, log-likelihood = -5.67
  exam:xcode, count = 2, log-likelihood = -4.98
  exam:y, count = 5, log-likelihood = -4.06
  exam:y2, count = 1, log-likelihood = -5.67
  exam:years, count = 1, log-likelihood = -5.67
  exam:yep, count = 1, log-likelihood = -5.67
  exam:yes, count = 1, log-likelihood = -5.67
  exam:yet, count = 4, log-likelihood = -4.28
  exam:you, count = 40, log-likelihood = -1.98
  exam:youll, count = 1, log-likelihood = -5.67
  exam:your, count = 8, log-likelihood = -3.59
  exam:youre, count = 4, log-likelihood = -4.28
  exam:youve, count = 1, log-likelihood = -5.67
  exam:you’d, count = 2, log-likelihood = -4.98
  exam:yplus2, count = 1, log-likelihood = -5.67
  exam:z, count = 2, log-likelihood = -4.98
  exam:zero, count = 2, log-likelihood = -4.98
  exam:zoofront, count = 1, log-likelihood = -5.67
  exam:zoopopfront, count = 1, log-likelihood = -5.67
  exam:zyuanzhe, count = 2, log-likelihood = -4.98
  exam:“shared”, count = 1, log-likelihood = -5.67
  image:0, count = 51, log-likelihood = -2.37
  image:00, count = 4, log-likelihood = -4.91
  image:000, count = 1, log-likelihood = -6.3
  image:01, count = 8, log-likelihood = -4.22
  image:024, count = 1, log-likelihood = -6.3
  image:0255255, count = 1, log-likelihood = -6.3
  image:04, count = 1, log-likelihood = -6.3
  image:0s, count = 2, log-likelihood = -5.61
  image:0x0, count = 1, log-likelihood = -6.3
  image:0x00000000, count = 2, log-likelihood = -5.61
  image:0x00090000, count = 1, log-likelihood = -6.3
  image:0x00092000, count = 2, log-likelihood = -5.61
  image:0x011ecc89, count = 1, log-likelihood = -6.3
  image:0x0120ec99, count = 1, log-likelihood = -6.3
  image:0x401d2f, count = 1, log-likelihood = -6.3
  image:0x401f85, count = 1, log-likelihood = -6.3
  image:0x404a17, count = 1, log-likelihood = -6.3
  image:0x404a3c, count = 1, log-likelihood = -6.3
  image:0x404a61, count = 1, log-likelihood = -6.3
  image:0x40526a, count = 1, log-likelihood = -6.3
  image:0x4c2e253, count = 1, log-likelihood = -6.3
  image:0x4c2e25e, count = 1, log-likelihood = -6.3
  image:0x500000000, count = 1, log-likelihood = -6.3
  image:0x7fff5f922ef00, count = 1, log-likelihood = -6.3
  image:0x7fff5fa17138, count = 1, log-likelihood = -6.3
  image:0x7fff5fa1713c, count = 1, log-likelihood = -6.3
  image:0x7fff5fb0b380, count = 1, log-likelihood = -6.3
  image:0x7fff5fb0b384, count = 1, log-likelihood = -6.3
  image:0x7fff5fb0b604, count = 1, log-likelihood = -6.3
  image:0x7fffff57ff70, count = 1, log-likelihood = -6.3
  image:0x7fffff57ff78, count = 1, log-likelihood = -6.3
  image:0xc0000005, count = 1, log-likelihood = -6.3
  image:0xc00000fd, count = 2, log-likelihood = -5.61
  image:0xffe9526f0, count = 1, log-likelihood = -6.3
  image:0xffea46940, count = 1, log-likelihood = -6.3
  image:0xffed23908, count = 1, log-likelihood = -6.3
  image:0xffee17b50, count = 1, log-likelihood = -6.3
  image:1, count = 42, log-likelihood = -2.56
  image:10, count = 3, log-likelihood = -5.2
  image:100, count = 3, log-likelihood = -5.2
  image:10001004, count = 1, log-likelihood = -6.3
  image:1007, count = 1, log-likelihood = -6.3
  image:101, count = 1, log-likelihood = -6.3
  image:102, count = 2, log-likelihood = -5.61
  image:1024, count = 1, log-likelihood = -6.3
  image:1097, count = 1, log-likelihood = -6.3
  image:11, count = 3, log-likelihood = -5.2
  image:1125000, count = 1, log-likelihood = -6.3
  image:115, count = 1, log-likelihood = -6.3
  image:12, count = 1, log-likelihood = -6.3
  image:1218452, count = 1, log-likelihood = -6.3
  image:12345, count = 2, log-likelihood = -5.61
  image:126, count = 1, log-likelihood = -6.3
  image:127, count = 1, log-likelihood = -6.3
  image:13, count = 1, log-likelihood = -6.3
  image:1380, count = 1, log-likelihood = -6.3
  image:14, count = 2, log-likelihood = -5.61
  image:1470, count = 2, log-likelihood = -5.61
  image:1499904, count = 1, log-likelihood = -6.3
  image:14th, count = 1, log-likelihood = -6.3
  image:15, count = 4, log-likelihood = -4.91
  image:1500012, count = 1, log-likelihood = -6.3
  image:1527, count = 1, log-likelihood = -6.3
  image:16, count = 1, log-likelihood = -6.3
  image:162, count = 1, log-likelihood = -6.3
  image:167, count = 1, log-likelihood = -6.3
  image:168, count = 1, log-likelihood = -6.3
  image:169, count = 1, log-likelihood = -6.3
  image:17, count = 2, log-likelihood = -5.61
  image:170, count = 1, log-likelihood = -6.3
  image:1729, count = 1, log-likelihood = -6.3
  image:174, count = 1, log-likelihood = -6.3
  image:18, count = 2, log-likelihood = -5.61
  image:182596, count = 1, log-likelihood = -6.3
  image:183, count = 2, log-likelihood = -5.61
  image:19, count = 1, log-likelihood = -6.3
  image:191, count = 1, log-likelihood = -6.3
  image:1d, count = 3, log-likelihood = -5.2
  image:1is, count = 1, log-likelihood = -6.3
  image:1s, count = 1, log-likelihood = -6.3
  image:1the, count = 1, log-likelihood = -6.3
  image:1x, count = 1, log-likelihood = -6.3
  image:1x1, count = 2, log-likelihood = -5.61
  image:1x5, count = 1, log-likelihood = -6.3
  image:2, count = 36, log-likelihood = -2.72
  image:2015, count = 1, log-likelihood = -6.3
  image:2030, count = 1, log-likelihood = -6.3
  image:21, count = 2, log-likelihood = -5.61
  image:2147483468, count = 1, log-likelihood = -6.3
  image:2147483648, count = 1, log-likelihood = -6.3
  image:223, count = 1, log-likelihood = -6.3
  image:225max, count = 1, log-likelihood = -6.3
  image:25, count = 1, log-likelihood = -6.3
  image:250, count = 7, log-likelihood = -4.35
  image:250000, count = 2, log-likelihood = -5.61
  image:255, count = 14, log-likelihood = -3.66
  image:25500, count = 1, log-likelihood = -6.3
  image:2618, count = 1, log-likelihood = -6.3
  image:2689, count = 1, log-likelihood = -6.3
  image:2940, count = 1, log-likelihood = -6.3
  image:2997, count = 1, log-likelihood = -6.3
  image:2d, count = 4, log-likelihood = -4.91
  image:2x2, count = 2, log-likelihood = -5.61
  image:2x7, count = 1, log-likelihood = -6.3
  image:3, count = 50, log-likelihood = -2.39
  image:30, count = 4, log-likelihood = -4.91
  image:300, count = 2, log-likelihood = -5.61
  image:30000, count = 1, log-likelihood = -6.3
  image:300x382, count = 2, log-likelihood = -5.61
  image:300x382assertion, count = 1, log-likelihood = -6.3
  image:318, count = 1, log-likelihood = -6.3
  image:3193, count = 1, log-likelihood = -6.3
  image:35, count = 1, log-likelihood = -6.3
  image:382, count = 1, log-likelihood = -6.3
  image:392016, count = 1, log-likelihood = -6.3
  image:3do, count = 1, log-likelihood = -6.3
  image:3rd, count = 4, log-likelihood = -4.91
  image:3x3, count = 1, log-likelihood = -6.3
  image:3x4, count = 1, log-likelihood = -6.3
  image:3x5, count = 4, log-likelihood = -4.91
  image:4, count = 25, log-likelihood = -3.08
  image:40, count = 2, log-likelihood = -5.61
  image:400, count = 6, log-likelihood = -4.51
  image:4088, count = 1, log-likelihood = -6.3
  image:4159, count = 1, log-likelihood = -6.3
  image:42, count = 1, log-likelihood = -6.3
  image:430pm, count = 1, log-likelihood = -6.3
  image:44, count = 1, log-likelihood = -6.3
  image:4467, count = 1, log-likelihood = -6.3
  image:46365, count = 1, log-likelihood = -6.3
  image:4663, count = 1, log-likelihood = -6.3
  image:47, count = 1, log-likelihood = -6.3
  image:4can, count = 1, log-likelihood = -6.3
  image:4x4, count = 1, log-likelihood = -6.3
  image:4x5, count = 3, log-likelihood = -5.2
  image:5, count = 23, log-likelihood = -3.16
  image:50, count = 1, log-likelihood = -6.3
  image:500, count = 1, log-likelihood = -6.3
  image:500504, count = 1, log-likelihood = -6.3
  image:500x500, count = 2, log-likelihood = -5.61
  image:50x35, count = 1, log-likelihood = -6.3
  image:50x45, count = 1, log-likelihood = -6.3
  image:51, count = 2, log-likelihood = -5.61
  image:513, count = 1, log-likelihood = -6.3
  image:51c, count = 1, log-likelihood = -6.3
  image:55, count = 1, log-likelihood = -6.3
  image:550, count = 1, log-likelihood = -6.3
  image:5555, count = 1, log-likelihood = -6.3
  image:5th, count = 1, log-likelihood = -6.3
  image:5x3, count = 3, log-likelihood = -5.2
  image:5x4, count = 1, log-likelihood = -6.3
  image:5x5, count = 3, log-likelihood = -5.2
  image:6, count = 7, log-likelihood = -4.35
  image:60, count = 1, log-likelihood = -6.3
  image:60000, count = 2, log-likelihood = -5.61
  image:6236, count = 1, log-likelihood = -6.3
  image:63, count = 1, log-likelihood = -6.3
  image:67, count = 1, log-likelihood = -6.3
  image:7, count = 7, log-likelihood = -4.35
  image:70, count = 1, log-likelihood = -6.3
  image:70x35, count = 2, log-likelihood = -5.61
  image:75, count = 1, log-likelihood = -6.3
  image:77, count = 1, log-likelihood = -6.3
  image:78, count = 4, log-likelihood = -4.91
  image:8, count = 9, log-likelihood = -4.1
  image:830pm, count = 1, log-likelihood = -6.3
  image:86, count = 1, log-likelihood = -6.3
  image:88, count = 1, log-likelihood = -6.3
  image:9, count = 2, log-likelihood = -5.61
  image:90, count = 1, log-likelihood = -6.3
  image:904, count = 1, log-likelihood = -6.3
  image:960, count = 1, log-likelihood = -6.3
  image:99, count = 1, log-likelihood = -6.3
  image:a, count = 278, log-likelihood = -0.671
  image:aattempt, count = 1, log-likelihood = -6.3
  image:able, count = 18, log-likelihood = -3.41
  image:about, count = 42, log-likelihood = -2.56
  image:above, count = 7, log-likelihood = -4.35
  image:absolutely, count = 1, log-likelihood = -6.3
  image:acceptable, count = 3, log-likelihood = -5.2
  image:access, count = 26, log-likelihood = -3.04
  image:accessing, count = 5, log-likelihood = -4.69
  image:accidentally, count = 2, log-likelihood = -5.61
  image:according, count = 3, log-likelihood = -5.2
  image:account, count = 2, log-likelihood = -5.61
  image:acquire, count = 1, log-likelihood = -6.3
  image:act, count = 1, log-likelihood = -6.3
  image:actual, count = 11, log-likelihood = -3.9
  image:actually, count = 8, log-likelihood = -4.22
  image:add, count = 8, log-likelihood = -4.22
  image:added, count = 1, log-likelihood = -6.3
  image:adding, count = 2, log-likelihood = -5.61
  image:addition, count = 1, log-likelihood = -6.3
  image:additional, count = 1, log-likelihood = -6.3
  image:address, count = 14, log-likelihood = -3.66
  image:addresses, count = 4, log-likelihood = -4.91
  image:adds, count = 1, log-likelihood = -6.3
  image:adequately, count = 1, log-likelihood = -6.3
  image:adhere, count = 1, log-likelihood = -6.3
  image:adjust, count = 2, log-likelihood = -5.61
  image:advance, count = 4, log-likelihood = -4.91
  image:advice, count = 3, log-likelihood = -5.2
  image:affect, count = 2, log-likelihood = -5.61
  image:after, count = 33, log-likelihood = -2.8
  image:afterwards, count = 1, log-likelihood = -6.3
  image:again, count = 5, log-likelihood = -4.69
  image:against, count = 7, log-likelihood = -4.35
  image:aiming, count = 1, log-likelihood = -6.3
  image:algorithm, count = 3, log-likelihood = -5.2
  image:all, count = 74, log-likelihood = -1.99
  image:alli, count = 1, log-likelihood = -6.3
  image:allocating, count = 1, log-likelihood = -6.3
  image:allow, count = 1, log-likelihood = -6.3
  image:allowed, count = 19, log-likelihood = -3.35
  image:allows, count = 1, log-likelihood = -6.3
  image:almost, count = 2, log-likelihood = -5.61
  image:alone, count = 1, log-likelihood = -6.3
  image:along, count = 3, log-likelihood = -5.2
  image:already, count = 16, log-likelihood = -3.53
  image:alright, count = 3, log-likelihood = -5.2
  image:also, count = 27, log-likelihood = -3
  image:alter, count = 1, log-likelihood = -6.3
  image:although, count = 1, log-likelihood = -6.3
  image:always, count = 14, log-likelihood = -3.66
  image:am, count = 83, log-likelihood = -1.88
  image:amil, count = 1, log-likelihood = -6.3
  image:amount, count = 3, log-likelihood = -5.2
  image:an, count = 102, log-likelihood = -1.67
  image:analogs, count = 1, log-likelihood = -6.3
  image:and, count = 269, log-likelihood = -0.704
  image:announcement, count = 3, log-likelihood = -5.2
  image:another, count = 16, log-likelihood = -3.53
  image:answer, count = 3, log-likelihood = -5.2
  image:answers, count = 2, log-likelihood = -5.61
  image:any, count = 84, log-likelihood = -1.87
  image:anybody, count = 1, log-likelihood = -6.3
  image:anymore, count = 1, log-likelihood = -6.3
  image:anyone, count = 27, log-likelihood = -3
  image:anything, count = 10, log-likelihood = -4
  image:anyways, count = 1, log-likelihood = -6.3
  image:anywhere, count = 3, log-likelihood = -5.2
  image:apart, count = 1, log-likelihood = -6.3
  image:appear, count = 2, log-likelihood = -5.61
  image:appeared, count = 2, log-likelihood = -5.61
  image:appears, count = 5, log-likelihood = -4.69
  image:appease, count = 1, log-likelihood = -6.3
  image:applicable, count = 1, log-likelihood = -6.3
  image:appreciate, count = 2, log-likelihood = -5.61
  image:appreciated, count = 11, log-likelihood = -3.9
  image:approach, count = 2, log-likelihood = -5.61
  image:appropriate, count = 5, log-likelihood = -4.69
  image:architecture, count = 1, log-likelihood = -6.3
  image:are, count = 121, log-likelihood = -1.5
  image:arent, count = 2, log-likelihood = -5.61
  image:argc, count = 4, log-likelihood = -4.91
  image:argument, count = 8, log-likelihood = -4.22
  image:arguments, count = 14, log-likelihood = -3.66
  image:argv, count = 5, log-likelihood = -4.69
  image:argv0, count = 1, log-likelihood = -6.3
  image:arithmetic, count = 2, log-likelihood = -5.61
  image:around, count = 5, log-likelihood = -4.69
  image:arr, count = 1, log-likelihood = -6.3
  image:arr3size, count = 1, log-likelihood = -6.3
  image:array, count = 41, log-likelihood = -2.59
  image:array500, count = 1, log-likelihood = -6.3
  image:arrayi, count = 1, log-likelihood = -6.3
  image:arrays, count = 7, log-likelihood = -4.35
  image:arraysize, count = 1, log-likelihood = -6.3
  image:arrayslike, count = 1, log-likelihood = -6.3
  image:arrow, count = 2, log-likelihood = -5.61
  image:arrows, count = 1, log-likelihood = -6.3
  image:as, count = 102, log-likelihood = -1.67
  image:ask, count = 2, log-likelihood = -5.61
  image:asked, count = 2, log-likelihood = -5.61
  image:asking, count = 1, log-likelihood = -6.3
  image:assert, count = 21, log-likelihood = -3.25
  image:assert0, count = 1, log-likelihood = -6.3
  image:assertactual, count = 1, log-likelihood = -6.3
  image:asserted, count = 1, log-likelihood = -6.3
  image:asserting, count = 1, log-likelihood = -6.3
  image:assertion, count = 6, log-likelihood = -4.51
  image:assertions, count = 1, log-likelihood = -6.3
  image:assertive, count = 1, log-likelihood = -6.3
  image:assertm, count = 1, log-likelihood = -6.3
  image:assertmat, count = 1, log-likelihood = -6.3
  image:assertmatrixatmat, count = 1, log-likelihood = -6.3
  image:assertmatrixrowmat, count = 1, log-likelihood = -6.3
  image:assertpixelequalimagegetpixelimg, count = 1, log-likelihood = -6.3
  image:asserts, count = 5, log-likelihood = -4.69
  image:assign, count = 8, log-likelihood = -4.22
  image:assigned, count = 1, log-likelihood = -6.3
  image:assigning, count = 4, log-likelihood = -4.91
  image:assignment, count = 3, log-likelihood = -5.2
  image:assigns, count = 1, log-likelihood = -6.3
  image:associated, count = 1, log-likelihood = -6.3
  image:assume, count = 12, log-likelihood = -3.81
  image:assumed, count = 1, log-likelihood = -6.3
  image:assuming, count = 5, log-likelihood = -4.69
  image:at, count = 51, log-likelihood = -2.37
  image:atoi, count = 1, log-likelihood = -6.3
  image:attack, count = 1, log-likelihood = -6.3
  image:attempt, count = 5, log-likelihood = -4.69
  image:attempting, count = 1, log-likelihood = -6.3
  image:attention, count = 1, log-likelihood = -6.3
  image:auto, count = 2, log-likelihood = -5.61
  image:autofills, count = 1, log-likelihood = -6.3
  image:autograder, count = 58, log-likelihood = -2.24
  image:automatically, count = 1, log-likelihood = -6.3
  image:aux, count = 2, log-likelihood = -5.61
  image:auxiliary, count = 3, log-likelihood = -5.2
  image:auximg, count = 1, log-likelihood = -6.3
  image:avail, count = 1, log-likelihood = -6.3
  image:available, count = 1, log-likelihood = -6.3
  image:avoid, count = 1, log-likelihood = -6.3
  image:awards, count = 1, log-likelihood = -6.3
  image:away, count = 1, log-likelihood = -6.3
  image:awesome, count = 1, log-likelihood = -6.3
  image:back, count = 7, log-likelihood = -4.35
  image:bad, count = 4, log-likelihood = -4.91
  image:base, count = 2, log-likelihood = -5.61
  image:based, count = 3, log-likelihood = -5.2
  image:bash42, count = 2, log-likelihood = -5.61
  image:basic, count = 1, log-likelihood = -6.3
  image:basically, count = 4, log-likelihood = -4.91
  image:be, count = 166, log-likelihood = -1.19
  image:because, count = 46, log-likelihood = -2.47
  image:become, count = 2, log-likelihood = -5.61
  image:becomes, count = 2, log-likelihood = -5.61
  image:been, count = 21, log-likelihood = -3.25
  image:before, count = 25, log-likelihood = -3.08
  image:beginbmatrix, count = 1, log-likelihood = -6.3
  image:beginning, count = 2, log-likelihood = -5.61
  image:begins, count = 1, log-likelihood = -6.3
  image:behave, count = 1, log-likelihood = -6.3
  image:behaved, count = 1, log-likelihood = -6.3
  image:behavior, count = 2, log-likelihood = -5.61
  image:behind, count = 1, log-likelihood = -6.3
  image:being, count = 15, log-likelihood = -3.59
  image:believe, count = 6, log-likelihood = -4.51
  image:below, count = 6, log-likelihood = -4.51
  image:besides, count = 2, log-likelihood = -5.61
  image:better, count = 4, log-likelihood = -4.91
  image:between, count = 14, log-likelihood = -3.66
  image:beyond, count = 1, log-likelihood = -6.3
  image:big, count = 2, log-likelihood = -5.61
  image:bit, count = 5, log-likelihood = -4.69
  image:black, count = 1, log-likelihood = -6.3
  image:blank, count = 3, log-likelihood = -5.2
  image:blue, count = 11, log-likelihood = -3.9
  image:bluechannel, count = 7, log-likelihood = -4.35
  image:boarders, count = 1, log-likelihood = -6.3
  image:body, count = 2, log-likelihood = -5.61
  image:border, count = 6, log-likelihood = -4.51
  image:borders, count = 1, log-likelihood = -6.3
  image:both, count = 16, log-likelihood = -3.53
  image:bothering, count = 1, log-likelihood = -6.3
  image:bottom, count = 7, log-likelihood = -4.35
  image:boundary, count = 2, log-likelihood = -5.61
  image:bounds, count = 3, log-likelihood = -5.2
  image:bracket, count = 1, log-likelihood = -6.3
  image:brackets, count = 2, log-likelihood = -5.61
  image:branches, count = 2, log-likelihood = -5.61
  image:break, count = 2, log-likelihood = -5.61
  image:breaking, count = 1, log-likelihood = -6.3
  image:breakpoint, count = 3, log-likelihood = -5.2
  image:breaks, count = 1, log-likelihood = -6.3
  image:browser, count = 2, log-likelihood = -5.61
  image:bruh, count = 1, log-likelihood = -6.3
  image:bug, count = 3, log-likelihood = -5.2
  image:buggy, count = 1, log-likelihood = -6.3
  image:bugs, count = 2, log-likelihood = -5.61
  image:building, count = 1, log-likelihood = -6.3
  image:builds, count = 1, log-likelihood = -6.3
  image:bulk, count = 1, log-likelihood = -6.3
  image:bunch, count = 4, log-likelihood = -4.91
  image:but, count = 166, log-likelihood = -1.19
  image:button, count = 3, log-likelihood = -5.2
  image:by, count = 50, log-likelihood = -2.39
  image:c, count = 9, log-likelihood = -4.1
  image:c1, count = 1, log-likelihood = -6.3
  image:c10, count = 1, log-likelihood = -6.3
  image:c99, count = 2, log-likelihood = -5.61
  image:caen, count = 23, log-likelihood = -3.16
  image:calculate, count = 3, log-likelihood = -5.2
  image:calculates, count = 1, log-likelihood = -6.3
  image:calculation, count = 1, log-likelihood = -6.3
  image:call, count = 23, log-likelihood = -3.16
  image:called, count = 4, log-likelihood = -4.91
  image:calling, count = 6, log-likelihood = -4.51
  image:calls, count = 7, log-likelihood = -4.35
  image:came, count = 1, log-likelihood = -6.3
  image:campus, count = 1, log-likelihood = -6.3
  image:can, count = 79, log-likelihood = -1.93
  image:cannot, count = 17, log-likelihood = -3.47
  image:cant, count = 24, log-likelihood = -3.12
  image:capture, count = 1, log-likelihood = -6.3
  image:cardcpp, count = 1, log-likelihood = -6.3
  image:cards, count = 1, log-likelihood = -6.3
  image:cardsh, count = 1, log-likelihood = -6.3
  image:care, count = 2, log-likelihood = -5.61
  image:carve, count = 18, log-likelihood = -3.41
  image:carved, count = 1, log-likelihood = -6.3
  image:carvedimgcorrect, count = 1, log-likelihood = -6.3
  image:carves, count = 1, log-likelihood = -6.3
  image:carving, count = 4, log-likelihood = -4.91
  image:case, count = 45, log-likelihood = -2.49
  image:cases, count = 35, log-likelihood = -2.74
  image:casting, count = 1, log-likelihood = -6.3
  image:catch, count = 1, log-likelihood = -6.3
  image:cause, count = 10, log-likelihood = -4
  image:causes, count = 4, log-likelihood = -4.91
  image:causing, count = 7, log-likelihood = -4.35
  image:cdecl, count = 1, log-likelihood = -6.3
  image:center, count = 1, log-likelihood = -6.3
  image:central, count = 1, log-likelihood = -6.3
  image:certain, count = 2, log-likelihood = -5.61
  image:chance, count = 4, log-likelihood = -4.91
  image:chanel, count = 1, log-likelihood = -6.3
  image:change, count = 16, log-likelihood = -3.53
  image:changed, count = 10, log-likelihood = -4
  image:changes, count = 1, log-likelihood = -6.3
  image:changing, count = 3, log-likelihood = -5.2
  image:channel, count = 7, log-likelihood = -4.35
  image:channels, count = 11, log-likelihood = -3.9
  image:char, count = 1, log-likelihood = -6.3
  image:character, count = 1, log-likelihood = -6.3
  image:chars, count = 1, log-likelihood = -6.3
  image:check, count = 26, log-likelihood = -3.04
  image:checked, count = 9, log-likelihood = -4.1
  image:checker, count = 3, log-likelihood = -5.2
  image:checking, count = 4, log-likelihood = -4.91
  image:checkpoint, count = 12, log-likelihood = -3.81
  image:checks, count = 5, log-likelihood = -4.69
  image:choice, count = 1, log-likelihood = -6.3
  image:circumstances, count = 1, log-likelihood = -6.3
  image:circumventing, count = 1, log-likelihood = -6.3
  image:claims, count = 1, log-likelihood = -6.3
  image:clang, count = 1, log-likelihood = -6.3
  image:clarification, count = 4, log-likelihood = -4.91
  image:clarifications, count = 3, log-likelihood = -5.2
  image:clarify, count = 4, log-likelihood = -4.91
  image:class, count = 3, log-likelihood = -5.2
  image:classif, count = 1, log-likelihood = -6.3
  image:clause, count = 6, log-likelihood = -4.51
  image:clauses, count = 5, log-likelihood = -4.69
  image:clean, count = 1, log-likelihood = -6.3
  image:clear, count = 3, log-likelihood = -5.2
  image:click, count = 1, log-likelihood = -6.3
  image:clickable, count = 1, log-likelihood = -6.3
  image:clicked, count = 2, log-likelihood = -5.61
  image:clicking, count = 1, log-likelihood = -6.3
  image:close, count = 1, log-likelihood = -6.3
  image:closed, count = 1, log-likelihood = -6.3
  image:closes, count = 1, log-likelihood = -6.3
  image:cmath, count = 1, log-likelihood = -6.3
  image:cmathfmod, count = 1, log-likelihood = -6.3
  image:cmdb, count = 1, log-likelihood = -6.3
  image:code, count = 88, log-likelihood = -1.82
  image:codeprint, count = 1, log-likelihood = -6.3
  image:coding, count = 2, log-likelihood = -5.61
  image:col, count = 1, log-likelihood = -6.3
  image:collect2, count = 1, log-likelihood = -6.3
  image:color, count = 7, log-likelihood = -4.35
  image:colorchannel, count = 2, log-likelihood = -5.61
  image:colorchannels, count = 1, log-likelihood = -6.3
  image:column, count = 31, log-likelihood = -2.86
  image:column0, count = 1, log-likelihood = -6.3
  image:columnend, count = 4, log-likelihood = -4.91
  image:columns, count = 5, log-likelihood = -4.69
  image:columnstart, count = 3, log-likelihood = -5.2
  image:com, count = 1, log-likelihood = -6.3
  image:combination, count = 3, log-likelihood = -5.2
  image:combinations, count = 1, log-likelihood = -6.3
  image:come, count = 6, log-likelihood = -4.51
  image:comes, count = 2, log-likelihood = -5.61
  image:coming, count = 4, log-likelihood = -4.91
  image:command, count = 25, log-likelihood = -3.08
  image:commandline, count = 1, log-likelihood = -6.3
  image:commands, count = 1, log-likelihood = -6.3
  image:comment, count = 4, log-likelihood = -4.91
  image:commented, count = 3, log-likelihood = -5.2
  image:commenting, count = 2, log-likelihood = -5.61
  image:commentingout, count = 1, log-likelihood = -6.3
  image:comments, count = 6, log-likelihood = -4.51
  image:common, count = 3, log-likelihood = -5.2
  image:compare, count = 6, log-likelihood = -4.51
  image:compared, count = 1, log-likelihood = -6.3
  image:comparing, count = 1, log-likelihood = -6.3
  image:compatible, count = 1, log-likelihood = -6.3
  image:compilation, count = 4, log-likelihood = -4.91
  image:compile, count = 17, log-likelihood = -3.47
  image:compiled, count = 3, log-likelihood = -5.2
  image:compiler, count = 9, log-likelihood = -4.1
  image:compiles, count = 4, log-likelihood = -4.91
  image:compiletime, count = 1, log-likelihood = -6.3
  image:compiling, count = 3, log-likelihood = -5.2
  image:complete, count = 2, log-likelihood = -5.61
  image:completed, count = 1, log-likelihood = -6.3
  image:completely, count = 3, log-likelihood = -5.2
  image:complier, count = 2, log-likelihood = -5.61
  image:components, count = 1, log-likelihood = -6.3
  image:composed, count = 1, log-likelihood = -6.3
  image:comprehensive, count = 1, log-likelihood = -6.3
  image:computation, count = 1, log-likelihood = -6.3
  image:compute, count = 9, log-likelihood = -4.1
  image:computeenergy, count = 2, log-likelihood = -5.61
  image:computeenergymatrix, count = 5, log-likelihood = -4.69
  image:computeenergymatriximage, count = 1, log-likelihood = -6.3
  image:computer, count = 8, log-likelihood = -4.22
  image:computers, count = 1, log-likelihood = -6.3
  image:computeverticalcostmatrix, count = 1, log-likelihood = -6.3
  image:concerned, count = 2, log-likelihood = -5.61
  image:condition, count = 2, log-likelihood = -5.61
  image:conditional, count = 2, log-likelihood = -5.61
  image:conditions, count = 3, log-likelihood = -5.2
  image:configure, count = 1, log-likelihood = -6.3
  image:confirm, count = 3, log-likelihood = -5.2
  image:confirmation, count = 2, log-likelihood = -5.61
  image:confirms, count = 1, log-likelihood = -6.3
  image:conflicting, count = 1, log-likelihood = -6.3
  image:confused, count = 29, log-likelihood = -2.93
  image:confusing, count = 1, log-likelihood = -6.3
  image:confusion, count = 1, log-likelihood = -6.3
  image:connect, count = 3, log-likelihood = -5.2
  image:connection, count = 2, log-likelihood = -5.61
  image:consider, count = 3, log-likelihood = -5.2
  image:considered, count = 5, log-likelihood = -4.69
  image:considering, count = 2, log-likelihood = -5.61
  image:consistent, count = 2, log-likelihood = -5.61
  image:console, count = 2, log-likelihood = -5.61
  image:const, count = 26, log-likelihood = -3.04
  image:const250000, count = 1, log-likelihood = -6.3
  image:constant, count = 7, log-likelihood = -4.35
  image:constantly, count = 1, log-likelihood = -6.3
  image:constcast, count = 1, log-likelihood = -6.3
  image:constfn5, count = 1, log-likelihood = -6.3
  image:constitute, count = 1, log-likelihood = -6.3
  image:constraints, count = 1, log-likelihood = -6.3
  image:constructor, count = 2, log-likelihood = -5.61
  image:constructors, count = 1, log-likelihood = -6.3
  image:contain, count = 3, log-likelihood = -5.2
  image:contains, count = 10, log-likelihood = -4
  image:contentaware, count = 1, log-likelihood = -6.3
  image:contents, count = 4, log-likelihood = -4.91
  image:context, count = 3, log-likelihood = -5.2
  image:contexts, count = 1, log-likelihood = -6.3
  image:continue, count = 1, log-likelihood = -6.3
  image:contradicts, count = 1, log-likelihood = -6.3
  image:control, count = 1, log-likelihood = -6.3
  image:conversion, count = 2, log-likelihood = -5.61
  image:convert, count = 7, log-likelihood = -4.35
  image:converted, count = 1, log-likelihood = -6.3
  image:converting, count = 2, log-likelihood = -5.61
  image:converts, count = 1, log-likelihood = -6.3
  image:copied, count = 2, log-likelihood = -5.61
  image:copies, count = 1, log-likelihood = -6.3
  image:copy, count = 14, log-likelihood = -3.66
  image:copying, count = 3, log-likelihood = -5.2
  image:core, count = 1, log-likelihood = -6.3
  image:corner, count = 1, log-likelihood = -6.3
  image:correct, count = 41, log-likelihood = -2.59
  image:corrections, count = 2, log-likelihood = -5.61
  image:correctly, count = 13, log-likelihood = -3.73
  image:correctness, count = 2, log-likelihood = -5.61
  image:corrects, count = 1, log-likelihood = -6.3
  image:corresponding, count = 3, log-likelihood = -5.2
  image:corresponds, count = 1, log-likelihood = -6.3
  image:cost, count = 15, log-likelihood = -3.59
  image:cost5, count = 1, log-likelihood = -6.3
  image:costheight, count = 1, log-likelihood = -6.3
  image:costr, count = 1, log-likelihood = -6.3
  image:costr1, count = 1, log-likelihood = -6.3
  image:could, count = 44, log-likelihood = -2.51
  image:couldnt, count = 2, log-likelihood = -5.61
  image:count, count = 1, log-likelihood = -6.3
  image:counted, count = 2, log-likelihood = -5.61
  image:couple, count = 4, log-likelihood = -4.91
  image:coupled, count = 1, log-likelihood = -6.3
  image:course, count = 4, log-likelihood = -4.91
  image:cout, count = 11, log-likelihood = -3.9
  image:couts, count = 1, log-likelihood = -6.3
  image:cpp, count = 8, log-likelihood = -4.22
  image:crabster, count = 20, log-likelihood = -3.3
  image:crabsterppm, count = 1, log-likelihood = -6.3
  image:crabsters, count = 1, log-likelihood = -6.3
  image:cracking, count = 1, log-likelihood = -6.3
  image:crashes, count = 1, log-likelihood = -6.3
  image:create, count = 27, log-likelihood = -3
  image:created, count = 8, log-likelihood = -4.22
  image:creates, count = 1, log-likelihood = -6.3
  image:creating, count = 6, log-likelihood = -4.51
  image:credits, count = 2, log-likelihood = -5.61
  image:cstring, count = 2, log-likelihood = -5.61
  image:cstrings, count = 2, log-likelihood = -5.61
  image:ctools, count = 1, log-likelihood = -6.3
  image:curious, count = 1, log-likelihood = -6.3
  image:current, count = 3, log-likelihood = -5.2
  image:currently, count = 4, log-likelihood = -4.91
  image:custom, count = 2, log-likelihood = -5.61
  image:cut, count = 2, log-likelihood = -5.61
  image:cygwin, count = 3, log-likelihood = -5.2
  image:cywin, count = 2, log-likelihood = -5.61
  image:data, count = 33, log-likelihood = -2.8
  image:datacolumn, count = 1, log-likelihood = -6.3
  image:dataindex, count = 1, log-likelihood = -6.3
  image:datamaxmatrixwidth, count = 4, log-likelihood = -4.91
  image:date, count = 1, log-likelihood = -6.3
  image:dawg, count = 1, log-likelihood = -6.3
  image:day, count = 1, log-likelihood = -6.3
  image:deadline, count = 5, log-likelihood = -4.69
  image:deal, count = 2, log-likelihood = -5.61
  image:dealing, count = 1, log-likelihood = -6.3
  image:debating, count = 1, log-likelihood = -6.3
  image:debug, count = 11, log-likelihood = -3.9
  image:debugged, count = 1, log-likelihood = -6.3
  image:debugger, count = 2, log-likelihood = -5.61
  image:debugging, count = 5, log-likelihood = -4.69
  image:debuginfoinstall, count = 1, log-likelihood = -6.3
  image:debuginfos, count = 1, log-likelihood = -6.3
  image:declaration, count = 4, log-likelihood = -4.91
  image:declarations, count = 1, log-likelihood = -6.3
  image:declare, count = 7, log-likelihood = -4.35
  image:declared, count = 10, log-likelihood = -4
  image:declaring, count = 3, log-likelihood = -5.2
  image:deconstruct, count = 1, log-likelihood = -6.3
  image:dedicated, count = 1, log-likelihood = -6.3
  image:default, count = 7, log-likelihood = -4.35
  image:deference, count = 1, log-likelihood = -6.3
  image:define, count = 1, log-likelihood = -6.3
  image:defined, count = 4, log-likelihood = -4.91
  image:definitely, count = 1, log-likelihood = -6.3
  image:definition, count = 1, log-likelihood = -6.3
  image:definitions, count = 1, log-likelihood = -6.3
  image:degrees, count = 1, log-likelihood = -6.3
  image:delete, count = 3, log-likelihood = -5.2
  image:deleted, count = 1, log-likelihood = -6.3
  image:dependent, count = 1, log-likelihood = -6.3
  image:depending, count = 1, log-likelihood = -6.3
  image:dereference, count = 1, log-likelihood = -6.3
  image:dereferencing, count = 1, log-likelihood = -6.3
  image:describes, count = 1, log-likelihood = -6.3
  image:description, count = 2, log-likelihood = -5.61
  image:desired, count = 8, log-likelihood = -4.22
  image:desktop, count = 1, log-likelihood = -6.3
  image:detail, count = 1, log-likelihood = -6.3
  image:details, count = 1, log-likelihood = -6.3
  image:determine, count = 5, log-likelihood = -4.69
  image:determining, count = 1, log-likelihood = -6.3
  image:detrimental, count = 1, log-likelihood = -6.3
  image:develop, count = 1, log-likelihood = -6.3
  image:dglibcxxusec99, count = 2, log-likelihood = -5.61
  image:diagram, count = 1, log-likelihood = -6.3
  image:did, count = 18, log-likelihood = -3.41
  image:didnt, count = 12, log-likelihood = -3.81
  image:diff, count = 5, log-likelihood = -4.69
  image:diffchecker, count = 2, log-likelihood = -5.61
  image:diffcheckered, count = 1, log-likelihood = -6.3
  image:differ, count = 1, log-likelihood = -6.3
  image:difference, count = 11, log-likelihood = -3.9
  image:differences, count = 3, log-likelihood = -5.2
  image:different, count = 19, log-likelihood = -3.35
  image:differing, count = 1, log-likelihood = -6.3
  image:difficult, count = 1, log-likelihood = -6.3
  image:dimension, count = 2, log-likelihood = -5.61
  image:dimensions, count = 12, log-likelihood = -3.81
  image:direction, count = 2, log-likelihood = -5.61
  image:directly, count = 9, log-likelihood = -4.1
  image:directory, count = 9, log-likelihood = -4.1
  image:directs, count = 1, log-likelihood = -6.3
  image:discussion, count = 1, log-likelihood = -6.3
  image:display, count = 3, log-likelihood = -5.2
  image:disrespectful, count = 1, log-likelihood = -6.3
  image:disrespecting, count = 2, log-likelihood = -5.61
  image:distance, count = 1, log-likelihood = -6.3
  image:divide, count = 4, log-likelihood = -4.91
  image:do, count = 136, log-likelihood = -1.39
  image:doc, count = 1, log-likelihood = -6.3
  image:document, count = 1, log-likelihood = -6.3
  image:does, count = 62, log-likelihood = -2.17
  image:doesnt, count = 15, log-likelihood = -3.59
  image:dog, count = 20, log-likelihood = -3.3
  image:dog4x5correctppm, count = 1, log-likelihood = -6.3
  image:dogcostcorrecttxt, count = 1, log-likelihood = -6.3
  image:dogoutppm, count = 2, log-likelihood = -5.61
  image:dogppm, count = 6, log-likelihood = -4.51
  image:dogs, count = 2, log-likelihood = -5.61
  image:dogseamcorrect, count = 1, log-likelihood = -6.3
  image:dogsppm, count = 1, log-likelihood = -6.3
  image:dogtestppm, count = 1, log-likelihood = -6.3
  image:doing, count = 25, log-likelihood = -3.08
  image:done, count = 4, log-likelihood = -4.91
  image:dont, count = 48, log-likelihood = -2.43
  image:dos, count = 1, log-likelihood = -6.3
  image:dos2unix, count = 1, log-likelihood = -6.3
  image:dot, count = 3, log-likelihood = -5.2
  image:double, count = 3, log-likelihood = -5.2
  image:doublecheck, count = 1, log-likelihood = -6.3
  image:down, count = 3, log-likelihood = -5.2
  image:download, count = 4, log-likelihood = -4.91
  image:downloaded, count = 1, log-likelihood = -6.3
  image:downloading, count = 1, log-likelihood = -6.3
  image:drive, count = 1, log-likelihood = -6.3
  image:driver, count = 3, log-likelihood = -5.2
  image:due, count = 3, log-likelihood = -5.2
  image:during, count = 3, log-likelihood = -5.2
  image:each, count = 32, log-likelihood = -2.83
  image:eachother, count = 1, log-likelihood = -6.3
  image:earlier, count = 2, log-likelihood = -5.61
  image:easier, count = 2, log-likelihood = -5.61
  image:easily, count = 1, log-likelihood = -6.3
  image:east, count = 2, log-likelihood = -5.61
  image:easy, count = 3, log-likelihood = -5.2
  image:edge, count = 3, log-likelihood = -5.2
  image:edit, count = 1, log-likelihood = -6.3
  image:editor, count = 1, log-likelihood = -6.3
  image:eecs280, count = 1, log-likelihood = -6.3
  image:effect, count = 1, log-likelihood = -6.3
  image:effects, count = 2, log-likelihood = -5.61
  image:efficiency, count = 3, log-likelihood = -5.2
  image:efficient, count = 2, log-likelihood = -5.61
  image:eg, count = 2, log-likelihood = -5.61
  image:either, count = 6, log-likelihood = -4.51
  image:element, count = 29, log-likelihood = -2.93
  image:elementredgreenblue, count = 1, log-likelihood = -6.3
  image:elements, count = 11, log-likelihood = -3.9
  image:else, count = 16, log-likelihood = -3.53
  image:email, count = 3, log-likelihood = -5.2
  image:emails, count = 1, log-likelihood = -6.3
  image:embedded, count = 1, log-likelihood = -6.3
  image:emit, count = 1, log-likelihood = -6.3
  image:empty, count = 4, log-likelihood = -4.91
  image:enabled, count = 1, log-likelihood = -6.3
  image:enact, count = 1, log-likelihood = -6.3
  image:encounter, count = 2, log-likelihood = -5.61
  image:encountered, count = 3, log-likelihood = -5.2
  image:encountering, count = 1, log-likelihood = -6.3
  image:encouraged, count = 1, log-likelihood = -6.3
  image:end, count = 9, log-likelihood = -4.1
  image:endbmatrix, count = 1, log-likelihood = -6.3
  image:ended, count = 2, log-likelihood = -5.61
  image:ending, count = 1, log-likelihood = -6.3
  image:endl, count = 6, log-likelihood = -4.51
  image:ends, count = 1, log-likelihood = -6.3
  image:energy, count = 11, log-likelihood = -3.9
  image:energyh, count = 1, log-likelihood = -6.3
  image:energyr, count = 1, log-likelihood = -6.3
  image:energyw, count = 1, log-likelihood = -6.3
  image:enough, count = 2, log-likelihood = -5.61
  image:ensure, count = 2, log-likelihood = -5.61
  image:enter, count = 2, log-likelihood = -5.61
  image:enters, count = 1, log-likelihood = -6.3
  image:entire, count = 3, log-likelihood = -5.2
  image:entirely, count = 1, log-likelihood = -6.3
  image:environment, count = 3, log-likelihood = -5.2
  image:equal, count = 9, log-likelihood = -4.1
  image:equality, count = 1, log-likelihood = -6.3
  image:equals, count = 1, log-likelihood = -6.3
  image:equivalent, count = 1, log-likelihood = -6.3
  image:error, count = 81, log-likelihood = -1.9
  image:errors, count = 14, log-likelihood = -3.66
  image:especially, count = 1, log-likelihood = -6.3
  image:essentially, count = 4, log-likelihood = -4.91
  image:etc, count = 3, log-likelihood = -5.2
  image:even, count = 29, log-likelihood = -2.93
  image:eventually, count = 2, log-likelihood = -5.61
  image:every, count = 14, log-likelihood = -3.66
  image:everything, count = 14, log-likelihood = -3.66
  image:everytime, count = 1, log-likelihood = -6.3
  image:exact, count = 4, log-likelihood = -4.91
  image:exactly, count = 12, log-likelihood = -3.81
  image:example, count = 33, log-likelihood = -2.8
  image:excbadaccess, count = 1, log-likelihood = -6.3
  image:exceed, count = 1, log-likelihood = -6.3
  image:exceeded, count = 2, log-likelihood = -5.61
  image:except, count = 7, log-likelihood = -4.35
  image:exception, count = 2, log-likelihood = -5.61
  image:excess, count = 1, log-likelihood = -6.3
  image:excluded, count = 1, log-likelihood = -6.3
  image:excluding, count = 1, log-likelihood = -6.3
  image:exclusive, count = 3, log-likelihood = -5.2
  image:exclusively, count = 1, log-likelihood = -6.3
  image:exe, count = 1, log-likelihood = -6.3
  image:executable, count = 2, log-likelihood = -5.61
  image:execute, count = 1, log-likelihood = -6.3
  image:executed, count = 1, log-likelihood = -6.3
  image:execution, count = 2, log-likelihood = -5.61
  image:exhaustive, count = 1, log-likelihood = -6.3
  image:exist, count = 1, log-likelihood = -6.3
  image:existing, count = 1, log-likelihood = -6.3
  image:exists, count = 1, log-likelihood = -6.3
  image:exit, count = 4, log-likelihood = -4.91
  image:exited, count = 1, log-likelihood = -6.3
  image:exitexitfailure, count = 1, log-likelihood = -6.3
  image:expect, count = 1, log-likelihood = -6.3
  image:expected, count = 3, log-likelihood = -5.2
  image:expensive, count = 1, log-likelihood = -6.3
  image:experiencing, count = 2, log-likelihood = -5.61
  image:explain, count = 1, log-likelihood = -6.3
  image:explains, count = 2, log-likelihood = -5.61
  image:explicitly, count = 1, log-likelihood = -6.3
  image:expression, count = 3, log-likelihood = -5.2
  image:extension, count = 1, log-likelihood = -6.3
  image:extensively, count = 1, log-likelihood = -6.3
  image:external, count = 1, log-likelihood = -6.3
  image:extra, count = 8, log-likelihood = -4.22
  image:extract, count = 1, log-likelihood = -6.3
  image:extreme, count = 1, log-likelihood = -6.3
  image:extremely, count = 2, log-likelihood = -5.61
  image:f3, count = 1, log-likelihood = -6.3
  image:fact, count = 1, log-likelihood = -6.3
  image:fail, count = 10, log-likelihood = -4
  image:failed, count = 10, log-likelihood = -4
  image:failing, count = 18, log-likelihood = -3.41
  image:failling, count = 1, log-likelihood = -6.3
  image:fails, count = 14, log-likelihood = -3.66
  image:fairly, count = 1, log-likelihood = -6.3
  image:fall, count = 2, log-likelihood = -5.61
  image:false, count = 1, log-likelihood = -6.3
  image:familiar, count = 1, log-likelihood = -6.3
  image:faq, count = 1, log-likelihood = -6.3
  image:faqs, count = 1, log-likelihood = -6.3
  image:far, count = 5, log-likelihood = -4.69
  image:faster, count = 1, log-likelihood = -6.3
  image:fatal, count = 1, log-likelihood = -6.3
  image:fault, count = 17, log-likelihood = -3.47
  image:faulty, count = 1, log-likelihood = -6.3
  image:feature, count = 2, log-likelihood = -5.61
  image:february, count = 1, log-likelihood = -6.3
  image:feedback, count = 4, log-likelihood = -4.91
  image:feel, count = 3, log-likelihood = -5.2
  image:feeling, count = 1, log-likelihood = -6.3
  image:feels, count = 1, log-likelihood = -6.3
  image:few, count = 5, log-likelihood = -4.69
  image:figure, count = 5, log-likelihood = -4.69
  image:figured, count = 1, log-likelihood = -6.3
  image:figuring, count = 4, log-likelihood = -4.91
  image:file, count = 63, log-likelihood = -2.16
  image:filename, count = 2, log-likelihood = -5.61
  image:filenames, count = 1, log-likelihood = -6.3
  image:files, count = 37, log-likelihood = -2.69
  image:filestream, count = 1, log-likelihood = -6.3
  image:fill, count = 13, log-likelihood = -3.73
  image:filled, count = 5, log-likelihood = -4.69
  image:filles, count = 1, log-likelihood = -6.3
  image:filling, count = 3, log-likelihood = -5.2
  image:fills, count = 4, log-likelihood = -4.91
  image:final, count = 8, log-likelihood = -4.22
  image:find, count = 30, log-likelihood = -2.9
  image:finder, count = 1, log-likelihood = -6.3
  image:finding, count = 2, log-likelihood = -5.61
  image:findminimalverticalseam, count = 6, log-likelihood = -4.51
  image:findminimalverticalseamcost, count = 1, log-likelihood = -6.3
  image:fine, count = 19, log-likelihood = -3.35
  image:finish, count = 3, log-likelihood = -5.2
  image:finished, count = 5, log-likelihood = -4.69
  image:finishes, count = 2, log-likelihood = -5.61
  image:finishing, count = 1, log-likelihood = -6.3
  image:firefox, count = 1, log-likelihood = -6.3
  image:first, count = 51, log-likelihood = -2.37
  image:firstelt, count = 1, log-likelihood = -6.3
  image:fix, count = 14, log-likelihood = -3.66
  image:fixed, count = 3, log-likelihood = -5.2
  image:flag, count = 3, log-likelihood = -5.2
  image:fmessagelength0, count = 1, log-likelihood = -6.3
  image:fmod, count = 1, log-likelihood = -6.3
  image:fnint, count = 1, log-likelihood = -6.3
  image:folder, count = 3, log-likelihood = -5.2
  image:follow, count = 4, log-likelihood = -4.91
  image:followed, count = 2, log-likelihood = -5.61
  image:following, count = 20, log-likelihood = -3.3
  image:follows, count = 3, log-likelihood = -5.2
  image:for, count = 236, log-likelihood = -0.835
  image:forbidden, count = 1, log-likelihood = -6.3
  image:forbids, count = 4, log-likelihood = -4.91
  image:forever, count = 1, log-likelihood = -6.3
  image:forget, count = 1, log-likelihood = -6.3
  image:forgot, count = 2, log-likelihood = -5.61
  image:forint, count = 1, log-likelihood = -6.3
  image:form, count = 1, log-likelihood = -6.3
  image:format, count = 8, log-likelihood = -4.22
  image:fort, count = 1, log-likelihood = -6.3
  image:forward, count = 1, log-likelihood = -6.3
  image:found, count = 12, log-likelihood = -3.81
  image:four, count = 1, log-likelihood = -6.3
  image:fourth, count = 1, log-likelihood = -6.3
  image:fpermissive, count = 1, log-likelihood = -6.3
  image:frame, count = 1, log-likelihood = -6.3
  image:free, count = 4, log-likelihood = -4.91
  image:freeze, count = 1, log-likelihood = -6.3
  image:freezes, count = 2, log-likelihood = -5.61
  image:freezing, count = 1, log-likelihood = -6.3
  image:fresh, count = 1, log-likelihood = -6.3
  image:friend, count = 1, log-likelihood = -6.3
  image:friends, count = 1, log-likelihood = -6.3
  image:from, count = 56, log-likelihood = -2.27
  image:frustrated, count = 1, log-likelihood = -6.3
  image:fstream, count = 2, log-likelihood = -5.61
  image:full, count = 7, log-likelihood = -4.35
  image:fully, count = 1, log-likelihood = -6.3
  image:function, count = 146, log-likelihood = -1.32
  image:functional, count = 1, log-likelihood = -6.3
  image:functions, count = 69, log-likelihood = -2.06
  image:functionsomehow, count = 1, log-likelihood = -6.3
  image:functionstest, count = 1, log-likelihood = -6.3
  image:functionthe, count = 1, log-likelihood = -6.3
  image:furthermore, count = 1, log-likelihood = -6.3
  image:future, count = 2, log-likelihood = -5.61
  image:g, count = 11, log-likelihood = -3.9
  image:g3, count = 1, log-likelihood = -6.3
  image:gave, count = 4, log-likelihood = -4.91
  image:gdb, count = 3, log-likelihood = -5.2
  image:general, count = 1, log-likelihood = -6.3
  image:generally, count = 2, log-likelihood = -5.61
  image:generates, count = 1, log-likelihood = -6.3
  image:get, count = 65, log-likelihood = -2.12
  image:getheight, count = 1, log-likelihood = -6.3
  image:getpixel, count = 2, log-likelihood = -5.61
  image:gets, count = 4, log-likelihood = -4.91
  image:getter, count = 1, log-likelihood = -6.3
  image:getting, count = 38, log-likelihood = -2.66
  image:getwidth, count = 1, log-likelihood = -6.3
  image:gimp, count = 1, log-likelihood = -6.3
  image:give, count = 6, log-likelihood = -4.51
  image:given, count = 29, log-likelihood = -2.93
  image:gives, count = 12, log-likelihood = -3.81
  image:giving, count = 7, log-likelihood = -4.35
  image:glibc217106el721x8664, count = 1, log-likelihood = -6.3
  image:go, count = 20, log-likelihood = -3.3
  image:going, count = 16, log-likelihood = -3.53
  image:gone, count = 3, log-likelihood = -5.2
  image:good, count = 1, log-likelihood = -6.3
  image:google, count = 1, log-likelihood = -6.3
  image:googling, count = 1, log-likelihood = -6.3
  image:got, count = 15, log-likelihood = -3.59
  image:gotten, count = 2, log-likelihood = -5.61
  image:grade, count = 4, log-likelihood = -4.91
  image:graded, count = 3, log-likelihood = -5.2
  image:grader, count = 2, log-likelihood = -5.61
  image:graph, count = 1, log-likelihood = -6.3
  image:gray, count = 1, log-likelihood = -6.3
  image:grayscale, count = 2, log-likelihood = -5.61
  image:great, count = 1, log-likelihood = -6.3
  image:greater, count = 4, log-likelihood = -4.91
  image:greatly, count = 4, log-likelihood = -4.91
  image:green, count = 12, log-likelihood = -3.81
  image:greenchannel, count = 7, log-likelihood = -4.35
  image:greenteal, count = 1, log-likelihood = -6.3
  image:grey, count = 1, log-likelihood = -6.3
  image:grid, count = 1, log-likelihood = -6.3
  image:group, count = 1, log-likelihood = -6.3
  image:guaranteed, count = 1, log-likelihood = -6.3
  image:guess, count = 1, log-likelihood = -6.3
  image:guessing, count = 1, log-likelihood = -6.3
  image:guidelines, count = 1, log-likelihood = -6.3
  image:guys, count = 1, log-likelihood = -6.3
  image:h, count = 5, log-likelihood = -4.69
  image:had, count = 13, log-likelihood = -3.73
  image:half, count = 1, log-likelihood = -6.3
  image:halfway, count = 1, log-likelihood = -6.3
  image:hand, count = 1, log-likelihood = -6.3
  image:handle, count = 4, log-likelihood = -4.91
  image:hang, count = 1, log-likelihood = -6.3
  image:happen, count = 9, log-likelihood = -4.1
  image:happened, count = 3, log-likelihood = -5.2
  image:happening, count = 15, log-likelihood = -3.59
  image:happens, count = 5, log-likelihood = -4.69
  image:hard, count = 3, log-likelihood = -5.2
  image:hardcoded, count = 1, log-likelihood = -6.3
  image:has, count = 47, log-likelihood = -2.45
  image:hasnt, count = 1, log-likelihood = -6.3
  image:have, count = 139, log-likelihood = -1.36
  image:havent, count = 6, log-likelihood = -4.51
  image:having, count = 23, log-likelihood = -3.16
  image:header, count = 4, log-likelihood = -4.91
  image:height, count = 47, log-likelihood = -2.45
  image:heights, count = 1, log-likelihood = -6.3
  image:heightwidth, count = 1, log-likelihood = -6.3
  image:held, count = 1, log-likelihood = -6.3
  image:hello, count = 11, log-likelihood = -3.9
  image:help, count = 19, log-likelihood = -3.35
  image:helper, count = 3, log-likelihood = -5.2
  image:helps, count = 2, log-likelihood = -5.61
  image:hence, count = 1, log-likelihood = -6.3
  image:here, count = 22, log-likelihood = -3.21
  image:heres, count = 2, log-likelihood = -5.61
  image:hey, count = 6, log-likelihood = -4.51
  image:hi, count = 10, log-likelihood = -4
  image:highest, count = 1, log-likelihood = -6.3
  image:him, count = 1, log-likelihood = -6.3
  image:hint, count = 3, log-likelihood = -5.2
  image:hold, count = 4, log-likelihood = -4.91
  image:holding, count = 1, log-likelihood = -6.3
  image:holds, count = 1, log-likelihood = -6.3
  image:honestly, count = 1, log-likelihood = -6.3
  image:honor, count = 1, log-likelihood = -6.3
  image:hope, count = 2, log-likelihood = -5.61
  image:horse, count = 6, log-likelihood = -4.51
  image:horsecostcorrecttxt, count = 1, log-likelihood = -6.3
  image:horseppm, count = 1, log-likelihood = -6.3
  image:horses, count = 17, log-likelihood = -3.47
  image:horses400x250ppm, count = 4, log-likelihood = -4.91
  image:horsesppm, count = 6, log-likelihood = -4.51
  image:hour, count = 2, log-likelihood = -5.61
  image:hours, count = 4, log-likelihood = -4.91
  image:how, count = 127, log-likelihood = -1.45
  image:however, count = 42, log-likelihood = -2.56
  image:httpscygwincommlcygwin201510msg00430html, count = 1, log-likelihood = -6.3
  image:httpstackoverflowcomquestions18919647declaringanarrayusingconstinteger, count = 1, log-likelihood = -6.3
  image:httpswwwyoutubecomwatchv6ncijxtlugc, count = 1, log-likelihood = -6.3
  image:huge, count = 1, log-likelihood = -6.3
  image:humm, count = 1, log-likelihood = -6.3
  image:i, count = 344, log-likelihood = -0.458
  image:id, count = 1, log-likelihood = -6.3
  image:idea, count = 20, log-likelihood = -3.3
  image:ideas, count = 13, log-likelihood = -3.73
  image:identical, count = 3, log-likelihood = -5.2
  image:ie, count = 7, log-likelihood = -4.35
  image:if, count = 121, log-likelihood = -1.5
  image:ifstream, count = 2, log-likelihood = -5.61
  image:ifx0, count = 1, log-likelihood = -6.3
  image:ignore, count = 4, log-likelihood = -4.91
  image:ignored, count = 1, log-likelihood = -6.3
  image:ill, count = 1, log-likelihood = -6.3
  image:illegal, count = 1, log-likelihood = -6.3
  image:im, count = 96, log-likelihood = -1.73
  image:image, count = 100, log-likelihood = -1.69
  image:imagecpp, count = 19, log-likelihood = -3.35
  image:imagecpp160, count = 1, log-likelihood = -6.3
  image:imagecpp165, count = 1, log-likelihood = -6.3
  image:imagecpp166, count = 1, log-likelihood = -6.3
  image:imagecpp167, count = 1, log-likelihood = -6.3
  image:imageequalcarvedimg, count = 1, log-likelihood = -6.3
  image:imagefill, count = 2, log-likelihood = -5.61
  image:imagegetpixel, count = 3, log-likelihood = -5.2
  image:imagegetpixelconst, count = 1, log-likelihood = -6.3
  image:imagegetpixelimage, count = 1, log-likelihood = -6.3
  image:imageh, count = 4, log-likelihood = -4.91
  image:imageheight, count = 3, log-likelihood = -5.2
  image:imageheightimg, count = 4, log-likelihood = -4.91
  image:imageinit, count = 36, log-likelihood = -2.72
  image:imageinitimage, count = 8, log-likelihood = -4.22
  image:imageinitimg, count = 3, log-likelihood = -5.2
  image:imageinitmatcrabsterppm, count = 1, log-likelihood = -6.3
  image:imageprint, count = 13, log-likelihood = -3.73
  image:imagepublictest, count = 4, log-likelihood = -4.91
  image:imagepublictestcpp, count = 1, log-likelihood = -6.3
  image:imagepublictests, count = 1, log-likelihood = -6.3
  image:images, count = 14, log-likelihood = -3.66
  image:imagesetpixel, count = 4, log-likelihood = -4.91
  image:imagesetpixelaux, count = 1, log-likelihood = -6.3
  image:imagesetpixelimg, count = 2, log-likelihood = -5.61
  image:imagetest, count = 1, log-likelihood = -6.3
  image:imagetestcpp, count = 1, log-likelihood = -6.3
  image:imagetests, count = 2, log-likelihood = -5.61
  image:imagetestscpp, count = 5, log-likelihood = -4.69
  image:imagetestsexe, count = 1, log-likelihood = -6.3
  image:imagewidth, count = 1, log-likelihood = -6.3
  image:imagewidthimg, count = 3, log-likelihood = -5.2
  image:imagewidthsomeimg, count = 1, log-likelihood = -6.3
  image:img, count = 23, log-likelihood = -3.16
  image:img2, count = 1, log-likelihood = -6.3
  image:imgcpp, count = 1, log-likelihood = -6.3
  image:imgh, count = 1, log-likelihood = -6.3
  image:imgheight, count = 1, log-likelihood = -6.3
  image:imgie, count = 1, log-likelihood = -6.3
  image:imginit, count = 2, log-likelihood = -5.61
  image:imginitimg, count = 1, log-likelihood = -6.3
  image:imgredchannel, count = 5, log-likelihood = -4.69
  image:imgredchanneldata, count = 2, log-likelihood = -5.61
  image:imgwidth, count = 1, log-likelihood = -6.3
  image:immediately, count = 3, log-likelihood = -5.2
  image:implement, count = 10, log-likelihood = -4
  image:implementation, count = 6, log-likelihood = -4.51
  image:implementations, count = 2, log-likelihood = -5.61
  image:implemented, count = 12, log-likelihood = -3.81
  image:implementing, count = 2, log-likelihood = -5.61
  image:imply, count = 1, log-likelihood = -6.3
  image:imprecision, count = 1, log-likelihood = -6.3
  image:improvements, count = 1, log-likelihood = -6.3
  image:in, count = 281, log-likelihood = -0.661
  image:incentive, count = 1, log-likelihood = -6.3
  image:include, count = 14, log-likelihood = -3.66
  image:included, count = 13, log-likelihood = -3.73
  image:includesstream, count = 1, log-likelihood = -6.3
  image:including, count = 4, log-likelihood = -4.91
  image:inclusions, count = 1, log-likelihood = -6.3
  image:inclusive, count = 3, log-likelihood = -5.2
  image:incomplete, count = 1, log-likelihood = -6.3
  image:incorporate, count = 1, log-likelihood = -6.3
  image:incorrect, count = 3, log-likelihood = -5.2
  image:incorrectly, count = 2, log-likelihood = -5.61
  image:increase, count = 2, log-likelihood = -5.61
  image:increased, count = 3, log-likelihood = -5.2
  image:increment, count = 1, log-likelihood = -6.3
  image:indentations, count = 1, log-likelihood = -6.3
  image:index, count = 9, log-likelihood = -4.1
  image:indexed, count = 1, log-likelihood = -6.3
  image:indexes, count = 1, log-likelihood = -6.3
  image:indexing, count = 1, log-likelihood = -6.3
  image:indicate, count = 4, log-likelihood = -4.91
  image:indicates, count = 1, log-likelihood = -6.3
  image:indicating, count = 1, log-likelihood = -6.3
  image:individual, count = 4, log-likelihood = -4.91
  image:inefficiencies, count = 1, log-likelihood = -6.3
  image:inefficiency, count = 3, log-likelihood = -5.2
  image:infilename, count = 2, log-likelihood = -5.61
  image:info, count = 2, log-likelihood = -5.61
  image:information, count = 5, log-likelihood = -4.69
  image:init, count = 8, log-likelihood = -4.22
  image:initial, count = 1, log-likelihood = -6.3
  image:initialization, count = 4, log-likelihood = -4.91
  image:initialize, count = 33, log-likelihood = -2.8
  image:initialized, count = 16, log-likelihood = -3.53
  image:initializedreset, count = 1, log-likelihood = -6.3
  image:initializer, count = 1, log-likelihood = -6.3
  image:initializes, count = 1, log-likelihood = -6.3
  image:initializing, count = 11, log-likelihood = -3.9
  image:initiated, count = 1, log-likelihood = -6.3
  image:input, count = 17, log-likelihood = -3.47
  image:inputargv1, count = 1, log-likelihood = -6.3
  image:inputoutput, count = 1, log-likelihood = -6.3
  image:inputs, count = 1, log-likelihood = -6.3
  image:inputted, count = 3, log-likelihood = -5.2
  image:inside, count = 10, log-likelihood = -4
  image:insight, count = 2, log-likelihood = -5.61
  image:instance, count = 1, log-likelihood = -6.3
  image:instantiate, count = 1, log-likelihood = -6.3
  image:instead, count = 14, log-likelihood = -3.66
  image:instruction, count = 1, log-likelihood = -6.3
  image:instructor, count = 2, log-likelihood = -5.61
  image:instructors, count = 1, log-likelihood = -6.3
  image:int, count = 41, log-likelihood = -2.59
  image:integer, count = 3, log-likelihood = -5.2
  image:integers, count = 2, log-likelihood = -5.61
  image:integral, count = 1, log-likelihood = -6.3
  image:intended, count = 1, log-likelihood = -6.3
  image:intensities, count = 2, log-likelihood = -5.61
  image:interaction, count = 1, log-likelihood = -6.3
  image:interesting, count = 1, log-likelihood = -6.3
  image:interface, count = 13, log-likelihood = -3.73
  image:interpret, count = 2, log-likelihood = -5.61
  image:interpretation, count = 1, log-likelihood = -6.3
  image:interpreted, count = 2, log-likelihood = -5.61
  image:interpreting, count = 1, log-likelihood = -6.3
  image:intint, count = 1, log-likelihood = -6.3
  image:into, count = 38, log-likelihood = -2.66
  image:ints, count = 5, log-likelihood = -4.69
  image:intu2019, count = 1, log-likelihood = -6.3
  image:invalid, count = 6, log-likelihood = -4.51
  image:invocation, count = 1, log-likelihood = -6.3
  image:is, count = 289, log-likelihood = -0.633
  image:isnt, count = 13, log-likelihood = -3.73
  image:iso, count = 4, log-likelihood = -4.91
  image:issue, count = 18, log-likelihood = -3.41
  image:issues, count = 7, log-likelihood = -4.35
  image:istream, count = 5, log-likelihood = -4.69
  image:istringstream, count = 1, log-likelihood = -6.3
  image:istringstreamostringstream, count = 1, log-likelihood = -6.3
  image:it, count = 248, log-likelihood = -0.786
  image:iterate, count = 1, log-likelihood = -6.3
  image:iterates, count = 1, log-likelihood = -6.3
  image:iteration, count = 2, log-likelihood = -5.61
  image:its, count = 36, log-likelihood = -2.72
  image:itself, count = 6, log-likelihood = -4.51
  image:ive, count = 20, log-likelihood = -3.3
  image:j, count = 1, log-likelihood = -6.3
  image:jpg, count = 1, log-likelihood = -6.3
  image:junk, count = 3, log-likelihood = -5.2
  image:just, count = 78, log-likelihood = -1.94
  image:keep, count = 16, log-likelihood = -3.53
  image:keeps, count = 2, log-likelihood = -5.61
  image:kept, count = 2, log-likelihood = -5.61
  image:kernel, count = 1, log-likelihood = -6.3
  image:kind, count = 3, log-likelihood = -5.2
  image:kinda, count = 1, log-likelihood = -6.3
  image:know, count = 55, log-likelihood = -2.29
  image:knows, count = 3, log-likelihood = -5.2
  image:lab, count = 1, log-likelihood = -6.3
  image:lab1, count = 1, log-likelihood = -6.3
  image:labster, count = 4, log-likelihood = -4.91
  image:landmark, count = 1, log-likelihood = -6.3
  image:laptop, count = 2, log-likelihood = -5.61
  image:large, count = 2, log-likelihood = -5.61
  image:larger, count = 3, log-likelihood = -5.2
  image:largest, count = 2, log-likelihood = -5.61
  image:last, count = 16, log-likelihood = -3.53
  image:lastly, count = 1, log-likelihood = -6.3
  image:later, count = 2, log-likelihood = -5.61
  image:latest, count = 2, log-likelihood = -5.61
  image:ld, count = 2, log-likelihood = -5.61
  image:lead, count = 1, log-likelihood = -6.3
  image:leads, count = 1, log-likelihood = -6.3
  image:least, count = 1, log-likelihood = -6.3
  image:leave, count = 3, log-likelihood = -5.2
  image:leaving, count = 2, log-likelihood = -5.61
  image:lecture, count = 1, log-likelihood = -6.3
  image:left, count = 12, log-likelihood = -3.81
  image:leftmost, count = 1, log-likelihood = -6.3
  image:legal, count = 1, log-likelihood = -6.3
  image:length, count = 10, log-likelihood = -4
  image:leq, count = 1, log-likelihood = -6.3
  image:less, count = 7, log-likelihood = -4.35
  image:let, count = 2, log-likelihood = -5.61
  image:lets, count = 1, log-likelihood = -6.3
  image:letter, count = 1, log-likelihood = -6.3
  image:letting, count = 2, log-likelihood = -5.61
  image:libgcc4854el7x8664, count = 1, log-likelihood = -6.3
  image:libraries, count = 2, log-likelihood = -5.61
  image:library, count = 3, log-likelihood = -5.2
  image:libstdc4854el7x8664, count = 1, log-likelihood = -6.3
  image:lies, count = 3, log-likelihood = -5.2
  image:light, count = 1, log-likelihood = -6.3
  image:like, count = 39, log-likelihood = -2.64
  image:likeit, count = 1, log-likelihood = -6.3
  image:likely, count = 1, log-likelihood = -6.3
  image:limit, count = 7, log-likelihood = -4.35
  image:line, count = 32, log-likelihood = -2.83
  image:lines, count = 3, log-likelihood = -5.2
  image:lineterminal, count = 1, log-likelihood = -6.3
  image:link, count = 10, log-likelihood = -4
  image:linker, count = 3, log-likelihood = -5.2
  image:linux, count = 9, log-likelihood = -4.1
  image:list, count = 1, log-likelihood = -6.3
  image:listed, count = 1, log-likelihood = -6.3
  image:literally, count = 1, log-likelihood = -6.3
  image:little, count = 4, log-likelihood = -4.91
  image:live, count = 1, log-likelihood = -6.3
  image:lnk2019, count = 1, log-likelihood = -6.3
  image:loadimage, count = 1, log-likelihood = -6.3
  image:loadimages, count = 1, log-likelihood = -6.3
  image:locally, count = 4, log-likelihood = -4.91
  image:location, count = 3, log-likelihood = -5.2
  image:logged, count = 2, log-likelihood = -5.61
  image:logic, count = 4, log-likelihood = -4.91
  image:logical, count = 1, log-likelihood = -6.3
  image:long, count = 6, log-likelihood = -4.51
  image:longer, count = 3, log-likelihood = -5.2
  image:longs, count = 1, log-likelihood = -6.3
  image:look, count = 7, log-likelihood = -4.35
  image:looked, count = 5, log-likelihood = -4.69
  image:looking, count = 8, log-likelihood = -4.22
  image:looks, count = 5, log-likelihood = -4.69
  image:loop, count = 10, log-likelihood = -4
  image:looping, count = 1, log-likelihood = -6.3
  image:loops, count = 4, log-likelihood = -4.91
  image:lose, count = 1, log-likelihood = -6.3
  image:lost, count = 1, log-likelihood = -6.3
  image:lot, count = 2, log-likelihood = -5.61
  image:lowest, count = 1, log-likelihood = -6.3
  image:luck, count = 1, log-likelihood = -6.3
  image:lvalue, count = 2, log-likelihood = -5.61
  image:m, count = 1, log-likelihood = -6.3
  image:mac, count = 3, log-likelihood = -5.2
  image:machine, count = 2, log-likelihood = -5.61
  image:made, count = 8, log-likelihood = -4.22
  image:main, count = 9, log-likelihood = -4.1
  image:mainly, count = 1, log-likelihood = -6.3
  image:make, count = 43, log-likelihood = -2.54
  image:makefile, count = 8, log-likelihood = -4.22
  image:makes, count = 7, log-likelihood = -4.35
  image:making, count = 5, log-likelihood = -4.69
  image:managed, count = 1, log-likelihood = -6.3
  image:manually, count = 3, log-likelihood = -5.2
  image:many, count = 8, log-likelihood = -4.22
  image:mark, count = 1, log-likelihood = -6.3
  image:massive, count = 2, log-likelihood = -5.61
  image:mat, count = 33, log-likelihood = -2.8
  image:match, count = 4, log-likelihood = -4.91
  image:matches, count = 1, log-likelihood = -6.3
  image:matching, count = 4, log-likelihood = -4.91
  image:matcopy, count = 1, log-likelihood = -6.3
  image:matcopy0, count = 1, log-likelihood = -6.3
  image:matdata, count = 3, log-likelihood = -5.2
  image:matdatai, count = 2, log-likelihood = -5.61
  image:materials, count = 1, log-likelihood = -6.3
  image:matlabmathematical, count = 1, log-likelihood = -6.3
  image:matnorm, count = 1, log-likelihood = -6.3
  image:matrice, count = 1, log-likelihood = -6.3
  image:matrices, count = 16, log-likelihood = -3.53
  image:matricesimages, count = 1, log-likelihood = -6.3
  image:matrix, count = 126, log-likelihood = -1.46
  image:matrixat, count = 33, log-likelihood = -2.8
  image:matrixatconst, count = 2, log-likelihood = -5.61
  image:matrixatimg, count = 1, log-likelihood = -6.3
  image:matrixatimg2, count = 1, log-likelihood = -6.3
  image:matrixatmat, count = 4, log-likelihood = -4.91
  image:matrixatmatrix, count = 4, log-likelihood = -4.91
  image:matrixattmat, count = 1, log-likelihood = -6.3
  image:matrixcolumn, count = 3, log-likelihood = -5.2
  image:matrixcolumnofminvalueinrow, count = 4, log-likelihood = -4.91
  image:matrixcolumnofminvalueinrowmat, count = 1, log-likelihood = -6.3
  image:matrixcopyconst, count = 1, log-likelihood = -6.3
  image:matrixcpp, count = 15, log-likelihood = -3.59
  image:matrixcpp9010, count = 1, log-likelihood = -6.3
  image:matrixdata, count = 1, log-likelihood = -6.3
  image:matrixes, count = 1, log-likelihood = -6.3
  image:matrixfill, count = 8, log-likelihood = -4.22
  image:matrixfillborder, count = 3, log-likelihood = -5.2
  image:matrixfillmat, count = 2, log-likelihood = -5.61
  image:matrixfillor, count = 1, log-likelihood = -6.3
  image:matrixh, count = 6, log-likelihood = -4.51
  image:matrixheight, count = 3, log-likelihood = -5.2
  image:matrixheightcost, count = 2, log-likelihood = -5.61
  image:matrixheightenergy, count = 1, log-likelihood = -6.3
  image:matrixheightimg, count = 1, log-likelihood = -6.3
  image:matrixheightmat, count = 2, log-likelihood = -5.61
  image:matrixheightmatrix, count = 1, log-likelihood = -6.3
  image:matriximage, count = 1, log-likelihood = -6.3
  image:matriximages, count = 1, log-likelihood = -6.3
  image:matrixinit, count = 11, log-likelihood = -3.9
  image:matrixinitmat, count = 1, log-likelihood = -6.3
  image:matrixinitmatrix, count = 3, log-likelihood = -5.2
  image:matrixinitstruct, count = 1, log-likelihood = -6.3
  image:matrixinityaxpaumatrixhhz, count = 1, log-likelihood = -6.3
  image:matrixmax, count = 1, log-likelihood = -6.3
  image:matrixmaxconst, count = 1, log-likelihood = -6.3
  image:matrixminvalueinrow, count = 2, log-likelihood = -5.61
  image:matrixnormalize, count = 12, log-likelihood = -3.81
  image:matrixnormalizeand, count = 1, log-likelihood = -6.3
  image:matrixprint, count = 8, log-likelihood = -4.22
  image:matrixprintcopy, count = 1, log-likelihood = -6.3
  image:matrixprintimgredchannel, count = 1, log-likelihood = -6.3
  image:matrixprintmat, count = 1, log-likelihood = -6.3
  image:matrixpublic, count = 2, log-likelihood = -5.61
  image:matrixpublictest, count = 3, log-likelihood = -5.2
  image:matrixpublictestcpp, count = 1, log-likelihood = -6.3
  image:matrixpublictestdcc9c6o, count = 1, log-likelihood = -6.3
  image:matrixpublictests, count = 1, log-likelihood = -6.3
  image:matrixrow, count = 9, log-likelihood = -4.1
  image:matrixrowconst, count = 1, log-likelihood = -6.3
  image:matrixs, count = 1, log-likelihood = -6.3
  image:matrixtest, count = 1, log-likelihood = -6.3
  image:matrixtestcpp, count = 2, log-likelihood = -5.61
  image:matrixtests, count = 3, log-likelihood = -5.2
  image:matrixtestscpp, count = 7, log-likelihood = -4.35
  image:matrixtestsexe, count = 6, log-likelihood = -4.51
  image:matrixwidth, count = 5, log-likelihood = -4.69
  image:matrixwidthenergy, count = 1, log-likelihood = -6.3
  image:matrixwidthimg, count = 1, log-likelihood = -6.3
  image:matrixwidthmat, count = 4, log-likelihood = -4.91
  image:matrixwidthmatrix, count = 1, log-likelihood = -6.3
  image:mats, count = 1, log-likelihood = -6.3
  image:matter, count = 4, log-likelihood = -4.91
  image:matwidth, count = 2, log-likelihood = -5.61
  image:max, count = 9, log-likelihood = -4.1
  image:maximum, count = 5, log-likelihood = -4.69
  image:maxintensity, count = 5, log-likelihood = -4.69
  image:maxmatrixheight, count = 5, log-likelihood = -4.69
  image:maxmatrixwidth, count = 2, log-likelihood = -5.61
  image:may, count = 7, log-likelihood = -4.35
  image:maybe, count = 1, log-likelihood = -6.3
  image:mb, count = 1, log-likelihood = -6.3
  image:me, count = 45, log-likelihood = -2.49
  image:mean, count = 27, log-likelihood = -3
  image:meaning, count = 2, log-likelihood = -5.61
  image:meaninglessly, count = 1, log-likelihood = -6.3
  image:means, count = 10, log-likelihood = -4
  image:meant, count = 2, log-likelihood = -5.61
  image:meanyone, count = 1, log-likelihood = -6.3
  image:meet, count = 1, log-likelihood = -6.3
  image:member, count = 4, log-likelihood = -4.91
  image:members, count = 4, log-likelihood = -4.91
  image:memcpyglibc214, count = 1, log-likelihood = -6.3
  image:memeory, count = 1, log-likelihood = -6.3
  image:memory, count = 10, log-likelihood = -4
  image:mention, count = 1, log-likelihood = -6.3
  image:mentioned, count = 5, log-likelihood = -4.69
  image:mentioning, count = 1, log-likelihood = -6.3
  image:mess, count = 1, log-likelihood = -6.3
  image:message, count = 16, log-likelihood = -3.53
  image:messages, count = 1, log-likelihood = -6.3
  image:messes, count = 1, log-likelihood = -6.3
  image:met, count = 2, log-likelihood = -5.61
  image:method, count = 2, log-likelihood = -5.61
  image:methods, count = 1, log-likelihood = -6.3
  image:mfile, count = 2, log-likelihood = -5.61
  image:mfprocessingtestsd, count = 1, log-likelihood = -6.3
  image:middle, count = 4, log-likelihood = -4.91
  image:might, count = 12, log-likelihood = -3.81
  image:min, count = 3, log-likelihood = -5.2
  image:mincostr1, count = 1, log-likelihood = -6.3
  image:mine, count = 1, log-likelihood = -6.3
  image:minimal, count = 3, log-likelihood = -5.2
  image:minimalcost, count = 1, log-likelihood = -6.3
  image:minimalverticalseam, count = 1, log-likelihood = -6.3
  image:minimum, count = 4, log-likelihood = -4.91
  image:minute, count = 5, log-likelihood = -4.69
  image:minutes, count = 10, log-likelihood = -4
  image:minvalueinrow, count = 1, log-likelihood = -6.3
  image:misled, count = 1, log-likelihood = -6.3
  image:missing, count = 8, log-likelihood = -4.22
  image:mistaken, count = 1, log-likelihood = -6.3
  image:mistakes, count = 1, log-likelihood = -6.3
  image:misunderstanding, count = 1, log-likelihood = -6.3
  image:miswrote, count = 1, log-likelihood = -6.3
  image:mlsantizumichedu, count = 1, log-likelihood = -6.3
  image:mmd, count = 1, log-likelihood = -6.3
  image:modifies, count = 2, log-likelihood = -5.61
  image:modify, count = 6, log-likelihood = -4.51
  image:module, count = 2, log-likelihood = -5.61
  image:moment, count = 2, log-likelihood = -5.61
  image:more, count = 10, log-likelihood = -4
  image:morning, count = 1, log-likelihood = -6.3
  image:most, count = 4, log-likelihood = -4.91
  image:mostly, count = 1, log-likelihood = -6.3
  image:move, count = 4, log-likelihood = -4.91
  image:mp, count = 1, log-likelihood = -6.3
  image:mtprocessingtestsd, count = 1, log-likelihood = -6.3
  image:much, count = 19, log-likelihood = -3.35
  image:multiple, count = 4, log-likelihood = -4.91
  image:multiplies, count = 1, log-likelihood = -6.3
  image:multiplying, count = 1, log-likelihood = -6.3
  image:must, count = 7, log-likelihood = -4.35
  image:mwireless, count = 1, log-likelihood = -6.3
  image:my, count = 163, log-likelihood = -1.21
  image:myself, count = 1, log-likelihood = -6.3
  image:n, count = 2, log-likelihood = -5.61
  image:name, count = 6, log-likelihood = -4.51
  image:named, count = 2, log-likelihood = -5.61
  image:namespace, count = 5, log-likelihood = -4.69
  image:natively, count = 1, log-likelihood = -6.3
  image:navigate, count = 1, log-likelihood = -6.3
  image:near, count = 1, log-likelihood = -6.3
  image:nearest, count = 1, log-likelihood = -6.3
  image:nearly, count = 1, log-likelihood = -6.3
  image:necessarily, count = 2, log-likelihood = -5.61
  image:necessary, count = 3, log-likelihood = -5.2
  image:necessity, count = 1, log-likelihood = -6.3
  image:need, count = 47, log-likelihood = -2.45
  image:needed, count = 5, log-likelihood = -4.69
  image:needs, count = 3, log-likelihood = -5.2
  image:negative, count = 4, log-likelihood = -4.91
  image:negativevalued, count = 1, log-likelihood = -6.3
  image:neither, count = 3, log-likelihood = -5.2
  image:nested, count = 3, log-likelihood = -5.2
  image:nesw, count = 1, log-likelihood = -6.3
  image:network, count = 1, log-likelihood = -6.3
  image:never, count = 8, log-likelihood = -4.22
  image:new, count = 22, log-likelihood = -3.21
  image:newline, count = 1, log-likelihood = -6.3
  image:newwidth, count = 2, log-likelihood = -5.61
  image:next, count = 8, log-likelihood = -4.22
  image:night, count = 2, log-likelihood = -5.61
  image:no, count = 49, log-likelihood = -2.41
  image:non, count = 1, log-likelihood = -6.3
  image:none, count = 1, log-likelihood = -6.3
  image:nonempty, count = 1, log-likelihood = -6.3
  image:nonnegative, count = 1, log-likelihood = -6.3
  image:nonpointer, count = 2, log-likelihood = -5.61
  image:nonvalid, count = 1, log-likelihood = -6.3
  image:nor, count = 1, log-likelihood = -6.3
  image:normal, count = 5, log-likelihood = -4.69
  image:normalization, count = 1, log-likelihood = -6.3
  image:normalize, count = 14, log-likelihood = -3.66
  image:normalized, count = 9, log-likelihood = -4.1
  image:north, count = 3, log-likelihood = -5.2
  image:northeastern, count = 1, log-likelihood = -6.3
  image:not, count = 142, log-likelihood = -1.34
  image:note, count = 2, log-likelihood = -5.61
  image:nothing, count = 6, log-likelihood = -4.51
  image:notice, count = 3, log-likelihood = -5.2
  image:noticed, count = 2, log-likelihood = -5.61
  image:now, count = 22, log-likelihood = -3.21
  image:nowhere, count = 1, log-likelihood = -6.3
  image:null, count = 1, log-likelihood = -6.3
  image:number, count = 7, log-likelihood = -4.35
  image:numbers, count = 5, log-likelihood = -4.69
  image:numerous, count = 1, log-likelihood = -6.3
  image:numsizes1, count = 1, log-likelihood = -6.3
  image:o, count = 1, log-likelihood = -6.3
  image:o0, count = 1, log-likelihood = -6.3
  image:o1, count = 1, log-likelihood = -6.3
  image:obeying, count = 1, log-likelihood = -6.3
  image:object, count = 2, log-likelihood = -5.61
  image:objects, count = 1, log-likelihood = -6.3
  image:obligated, count = 1, log-likelihood = -6.3
  image:obtain, count = 3, log-likelihood = -5.2
  image:obvious, count = 1, log-likelihood = -6.3
  image:occur, count = 1, log-likelihood = -6.3
  image:occured, count = 1, log-likelihood = -6.3
  image:occurred, count = 1, log-likelihood = -6.3
  image:occurrence, count = 1, log-likelihood = -6.3
  image:occurring, count = 1, log-likelihood = -6.3
  image:occurs, count = 3, log-likelihood = -5.2
  image:odd, count = 1, log-likelihood = -6.3
  image:of, count = 228, log-likelihood = -0.87
  image:off, count = 5, log-likelihood = -4.69
  image:office, count = 1, log-likelihood = -6.3
  image:ofstream, count = 1, log-likelihood = -6.3
  image:often, count = 2, log-likelihood = -5.61
  image:ok, count = 6, log-likelihood = -4.51
  image:okay, count = 8, log-likelihood = -4.22
  image:old, count = 3, log-likelihood = -5.2
  image:on, count = 116, log-likelihood = -1.55
  image:once, count = 3, log-likelihood = -5.2
  image:one, count = 61, log-likelihood = -2.19
  image:ones, count = 5, log-likelihood = -4.69
  image:online, count = 3, log-likelihood = -5.2
  image:only, count = 41, log-likelihood = -2.59
  image:onto, count = 1, log-likelihood = -6.3
  image:onward, count = 1, log-likelihood = -6.3
  image:open, count = 12, log-likelihood = -3.81
  image:opened, count = 3, log-likelihood = -5.2
  image:opening, count = 2, log-likelihood = -5.61
  image:operand, count = 2, log-likelihood = -5.61
  image:operates, count = 1, log-likelihood = -6.3
  image:operating, count = 1, log-likelihood = -6.3
  image:operations, count = 1, log-likelihood = -6.3
  image:operator, count = 5, log-likelihood = -4.69
  image:opportunity, count = 1, log-likelihood = -6.3
  image:optimalyou, count = 1, log-likelihood = -6.3
  image:optimize, count = 1, log-likelihood = -6.3
  image:option, count = 2, log-likelihood = -5.61
  image:optional, count = 1, log-likelihood = -6.3
  image:or, count = 128, log-likelihood = -1.45
  image:order, count = 19, log-likelihood = -3.35
  image:orgi, count = 1, log-likelihood = -6.3
  image:orig, count = 1, log-likelihood = -6.3
  image:original, count = 12, log-likelihood = -3.81
  image:originally, count = 2, log-likelihood = -5.61
  image:os, count = 1, log-likelihood = -6.3
  image:ostream, count = 5, log-likelihood = -4.69
  image:ostringstream, count = 1, log-likelihood = -6.3
  image:other, count = 36, log-likelihood = -2.72
  image:others, count = 2, log-likelihood = -5.61
  image:ouput, count = 2, log-likelihood = -5.61
  image:our, count = 43, log-likelihood = -2.54
  image:out, count = 33, log-likelihood = -2.8
  image:outfilename, count = 1, log-likelihood = -6.3
  image:output, count = 28, log-likelihood = -2.97
  image:outputcorrect, count = 1, log-likelihood = -6.3
  image:outputfile, count = 1, log-likelihood = -6.3
  image:outputs, count = 2, log-likelihood = -5.61
  image:outputting, count = 1, log-likelihood = -6.3
  image:outside, count = 4, log-likelihood = -4.91
  image:outsideoffile, count = 1, log-likelihood = -6.3
  image:over, count = 2, log-likelihood = -5.61
  image:overcome, count = 1, log-likelihood = -6.3
  image:overflow, count = 3, log-likelihood = -5.2
  image:overnight, count = 1, log-likelihood = -6.3
  image:overwrites, count = 1, log-likelihood = -6.3
  image:own, count = 10, log-likelihood = -4
  image:p3, count = 7, log-likelihood = -4.35
  image:p3plain, count = 1, log-likelihood = -6.3
  image:pack, count = 1, log-likelihood = -6.3
  image:page, count = 4, log-likelihood = -4.91
  image:pair, count = 1, log-likelihood = -6.3
  image:paramerter, count = 1, log-likelihood = -6.3
  image:parameter, count = 10, log-likelihood = -4
  image:parameters, count = 9, log-likelihood = -4.1
  image:part, count = 5, log-likelihood = -4.69
  image:particular, count = 3, log-likelihood = -5.2
  image:particularly, count = 2, log-likelihood = -5.61
  image:partner, count = 16, log-likelihood = -3.53
  image:partners, count = 2, log-likelihood = -5.61
  image:partnership, count = 1, log-likelihood = -6.3
  image:pass, count = 32, log-likelihood = -2.83
  image:passed, count = 33, log-likelihood = -2.8
  image:passes, count = 8, log-likelihood = -4.22
  image:passing, count = 17, log-likelihood = -3.47
  image:past, count = 3, log-likelihood = -5.2
  image:paste, count = 3, log-likelihood = -5.2
  image:pdf, count = 2, log-likelihood = -5.61
  image:pedantic, count = 1, log-likelihood = -6.3
  image:pending, count = 1, log-likelihood = -6.3
  image:people, count = 5, log-likelihood = -4.69
  image:perfectly, count = 3, log-likelihood = -5.2
  image:perform, count = 1, log-likelihood = -6.3
  image:perhaps, count = 1, log-likelihood = -6.3
  image:person, count = 3, log-likelihood = -5.2
  image:pg, count = 1, log-likelihood = -6.3
  image:pg3, count = 1, log-likelihood = -6.3
  image:photo, count = 1, log-likelihood = -6.3
  image:phrase, count = 1, log-likelihood = -6.3
  image:piazza, count = 8, log-likelihood = -4.22
  image:piazzapostpdf, count = 1, log-likelihood = -6.3
  image:pick, count = 2, log-likelihood = -5.61
  image:picture, count = 6, log-likelihood = -4.51
  image:piece, count = 1, log-likelihood = -6.3
  image:pin, count = 2, log-likelihood = -5.61
  image:pinpoint, count = 1, log-likelihood = -6.3
  image:pixel, count = 32, log-likelihood = -2.83
  image:pixelequal, count = 1, log-likelihood = -6.3
  image:pixelinit, count = 1, log-likelihood = -6.3
  image:pixels, count = 18, log-likelihood = -3.41
  image:place, count = 2, log-likelihood = -5.61
  image:plain, count = 1, log-likelihood = -6.3
  image:planing, count = 1, log-likelihood = -6.3
  image:planning, count = 1, log-likelihood = -6.3
  image:play, count = 1, log-likelihood = -6.3
  image:please, count = 9, log-likelihood = -4.1
  image:point, count = 15, log-likelihood = -3.59
  image:pointed, count = 2, log-likelihood = -5.61
  image:pointer, count = 31, log-likelihood = -2.86
  image:pointers, count = 6, log-likelihood = -4.51
  image:pointing, count = 2, log-likelihood = -5.61
  image:points, count = 18, log-likelihood = -3.41
  image:poorly, count = 1, log-likelihood = -6.3
  image:portion, count = 2, log-likelihood = -5.61
  image:position, count = 2, log-likelihood = -5.61
  image:positive, count = 2, log-likelihood = -5.61
  image:possibilities, count = 1, log-likelihood = -6.3
  image:possible, count = 12, log-likelihood = -3.81
  image:possibly, count = 2, log-likelihood = -5.61
  image:post, count = 5, log-likelihood = -4.69
  image:posted, count = 1, log-likelihood = -6.3
  image:posts, count = 6, log-likelihood = -4.51
  image:potential, count = 1, log-likelihood = -6.3
  image:potentially, count = 1, log-likelihood = -6.3
  image:ppm, count = 27, log-likelihood = -3
  image:practice, count = 2, log-likelihood = -5.61
  image:prefix, count = 4, log-likelihood = -4.91
  image:prefixerror, count = 1, log-likelihood = -6.3
  image:present, count = 1, log-likelihood = -6.3
  image:pretty, count = 9, log-likelihood = -4.1
  image:previous, count = 4, log-likelihood = -4.91
  image:previously, count = 3, log-likelihood = -5.2
  image:print, count = 19, log-likelihood = -3.35
  image:printed, count = 6, log-likelihood = -4.51
  image:printing, count = 8, log-likelihood = -4.22
  image:prints, count = 3, log-likelihood = -5.2
  image:prior, count = 1, log-likelihood = -6.3
  image:private, count = 1, log-likelihood = -6.3
  image:probably, count = 3, log-likelihood = -5.2
  image:problem, count = 34, log-likelihood = -2.77
  image:problems, count = 6, log-likelihood = -4.51
  image:procedure, count = 1, log-likelihood = -6.3
  image:process, count = 5, log-likelihood = -4.69
  image:processed, count = 1, log-likelihood = -6.3
  image:processing, count = 9, log-likelihood = -4.1
  image:processingcpp, count = 21, log-likelihood = -3.25
  image:processingcpp108, count = 1, log-likelihood = -6.3
  image:processingcpp21718, count = 1, log-likelihood = -6.3
  image:processingh, count = 1, log-likelihood = -6.3
  image:processinghorses, count = 1, log-likelihood = -6.3
  image:processingpubliccrabster, count = 2, log-likelihood = -5.61
  image:processingpublicdog, count = 1, log-likelihood = -6.3
  image:processingpublichorse, count = 3, log-likelihood = -5.2
  image:processingtest, count = 2, log-likelihood = -5.61
  image:processingtestcpp, count = 3, log-likelihood = -5.2
  image:processingtests, count = 4, log-likelihood = -4.91
  image:processingtestscpp, count = 23, log-likelihood = -3.16
  image:processingtestscpp17138, count = 1, log-likelihood = -6.3
  image:processingtestscpp34, count = 1, log-likelihood = -6.3
  image:processingtestscpp48, count = 1, log-likelihood = -6.3
  image:processingtestscpp60, count = 1, log-likelihood = -6.3
  image:processingtestsexe, count = 4, log-likelihood = -4.91
  image:processingtestso, count = 1, log-likelihood = -6.3
  image:produce, count = 3, log-likelihood = -5.2
  image:produced, count = 1, log-likelihood = -6.3
  image:produces, count = 2, log-likelihood = -5.61
  image:producing, count = 1, log-likelihood = -6.3
  image:professor, count = 1, log-likelihood = -6.3
  image:program, count = 31, log-likelihood = -2.86
  image:programs, count = 3, log-likelihood = -5.2
  image:progressing, count = 1, log-likelihood = -6.3
  image:proj, count = 2, log-likelihood = -5.61
  image:project, count = 34, log-likelihood = -2.77
  image:project3, count = 2, log-likelihood = -5.61
  image:project3exe, count = 2, log-likelihood = -5.61
  image:projects, count = 1, log-likelihood = -6.3
  image:proper, count = 1, log-likelihood = -6.3
  image:properly, count = 6, log-likelihood = -4.51
  image:protect, count = 1, log-likelihood = -6.3
  image:provide, count = 4, log-likelihood = -4.91
  image:provided, count = 11, log-likelihood = -3.9
  image:provides, count = 1, log-likelihood = -6.3
  image:ptr, count = 9, log-likelihood = -4.1
  image:ptr1, count = 1, log-likelihood = -6.3
  image:ptr2, count = 1, log-likelihood = -6.3
  image:ptr2ptr1, count = 1, log-likelihood = -6.3
  image:public, count = 20, log-likelihood = -3.3
  image:publictest, count = 2, log-likelihood = -5.61
  image:purpose, count = 2, log-likelihood = -5.61
  image:pushed, count = 1, log-likelihood = -6.3
  image:put, count = 15, log-likelihood = -3.59
  image:putting, count = 3, log-likelihood = -5.2
  image:putty, count = 5, log-likelihood = -4.69
  image:quesion, count = 1, log-likelihood = -6.3
  image:question, count = 6, log-likelihood = -4.51
  image:questions, count = 3, log-likelihood = -5.2
  image:queued, count = 4, log-likelihood = -4.91
  image:quick, count = 1, log-likelihood = -6.3
  image:quicker, count = 1, log-likelihood = -6.3
  image:quickly, count = 2, log-likelihood = -5.61
  image:quite, count = 5, log-likelihood = -4.69
  image:r, count = 6, log-likelihood = -4.51
  image:ramifications, count = 1, log-likelihood = -6.3
  image:ran, count = 9, log-likelihood = -4.1
  image:random, count = 1, log-likelihood = -6.3
  image:range, count = 1, log-likelihood = -6.3
  image:rank, count = 1, log-likelihood = -6.3
  image:rather, count = 9, log-likelihood = -4.1
  image:rbg, count = 1, log-likelihood = -6.3
  image:rc, count = 1, log-likelihood = -6.3
  image:reaches, count = 1, log-likelihood = -6.3
  image:read, count = 14, log-likelihood = -3.66
  image:reading, count = 7, log-likelihood = -4.35
  image:readpack, count = 1, log-likelihood = -6.3
  image:real, count = 1, log-likelihood = -6.3
  image:realize, count = 1, log-likelihood = -6.3
  image:realized, count = 7, log-likelihood = -4.35
  image:really, count = 14, log-likelihood = -3.66
  image:reamains, count = 1, log-likelihood = -6.3
  image:reason, count = 16, log-likelihood = -3.53
  image:reasonable, count = 2, log-likelihood = -5.61
  image:reasons, count = 2, log-likelihood = -5.61
  image:receive, count = 3, log-likelihood = -5.2
  image:received, count = 6, log-likelihood = -4.51
  image:receiving, count = 1, log-likelihood = -6.3
  image:recently, count = 1, log-likelihood = -6.3
  image:recognizing, count = 1, log-likelihood = -6.3
  image:recommended, count = 1, log-likelihood = -6.3
  image:recommends, count = 1, log-likelihood = -6.3
  image:recomplied, count = 1, log-likelihood = -6.3
  image:recursion, count = 2, log-likelihood = -5.61
  image:recursive, count = 1, log-likelihood = -6.3
  image:red, count = 14, log-likelihood = -3.66
  image:redchannel, count = 11, log-likelihood = -3.9
  image:redownload, count = 2, log-likelihood = -5.61
  image:redownloaded, count = 1, log-likelihood = -6.3
  image:redownloading, count = 2, log-likelihood = -5.61
  image:reduced, count = 1, log-likelihood = -6.3
  image:reduces, count = 1, log-likelihood = -6.3
  image:redundant, count = 2, log-likelihood = -5.61
  image:refer, count = 1, log-likelihood = -6.3
  image:reference, count = 3, log-likelihood = -5.2
  image:referenced, count = 2, log-likelihood = -5.61
  image:refers, count = 1, log-likelihood = -6.3
  image:regarding, count = 1, log-likelihood = -6.3
  image:regardless, count = 2, log-likelihood = -5.61
  image:region, count = 1, log-likelihood = -6.3
  image:register, count = 2, log-likelihood = -5.61
  image:registered, count = 2, log-likelihood = -5.61
  image:registration, count = 2, log-likelihood = -5.61
  image:reinitialized, count = 1, log-likelihood = -6.3
  image:reinitializing, count = 1, log-likelihood = -6.3
  image:relate, count = 1, log-likelihood = -6.3
  image:related, count = 3, log-likelihood = -5.2
  image:relation, count = 1, log-likelihood = -6.3
  image:relationship, count = 1, log-likelihood = -6.3
  image:released, count = 3, log-likelihood = -5.2
  image:relocation, count = 1, log-likelihood = -6.3
  image:remain, count = 1, log-likelihood = -6.3
  image:remains, count = 1, log-likelihood = -6.3
  image:remember, count = 2, log-likelihood = -5.61
  image:remote, count = 1, log-likelihood = -6.3
  image:remove, count = 11, log-likelihood = -3.9
  image:removed, count = 5, log-likelihood = -4.69
  image:removes, count = 1, log-likelihood = -6.3
  image:removeseam, count = 1, log-likelihood = -6.3
  image:removevertical, count = 1, log-likelihood = -6.3
  image:removeverticalseam, count = 6, log-likelihood = -4.51
  image:removeverticalseamimage, count = 1, log-likelihood = -6.3
  image:removing, count = 2, log-likelihood = -5.61
  image:reopen, count = 1, log-likelihood = -6.3
  image:repeat, count = 1, log-likelihood = -6.3
  image:repetitive, count = 1, log-likelihood = -6.3
  image:replaced, count = 1, log-likelihood = -6.3
  image:represent, count = 1, log-likelihood = -6.3
  image:representation, count = 1, log-likelihood = -6.3
  image:representative, count = 1, log-likelihood = -6.3
  image:represented, count = 2, log-likelihood = -5.61
  image:representing, count = 1, log-likelihood = -6.3
  image:requested, count = 1, log-likelihood = -6.3
  image:require, count = 2, log-likelihood = -5.61
  image:required, count = 10, log-likelihood = -4
  image:requirement, count = 4, log-likelihood = -4.91
  image:requirements, count = 2, log-likelihood = -5.61
  image:requires, count = 18, log-likelihood = -3.41
  image:reread, count = 1, log-likelihood = -6.3
  image:rerunning, count = 1, log-likelihood = -6.3
  image:reset, count = 2, log-likelihood = -5.61
  image:resetting, count = 1, log-likelihood = -6.3
  image:resize, count = 13, log-likelihood = -3.73
  image:resizecheck, count = 1, log-likelihood = -6.3
  image:resizecompilationcheck, count = 2, log-likelihood = -5.61
  image:resizecompilationcheck00, count = 1, log-likelihood = -6.3
  image:resizecpp, count = 21, log-likelihood = -3.25
  image:resizecpp620, count = 1, log-likelihood = -6.3
  image:resized, count = 1, log-likelihood = -6.3
  image:resizedog4x5public, count = 3, log-likelihood = -5.2
  image:resizeexe, count = 13, log-likelihood = -3.73
  image:resizing, count = 2, log-likelihood = -5.61
  image:resolution, count = 1, log-likelihood = -6.3
  image:resolve, count = 1, log-likelihood = -6.3
  image:resources, count = 1, log-likelihood = -6.3
  image:respect, count = 3, log-likelihood = -5.2
  image:respecting, count = 3, log-likelihood = -5.2
  image:respective, count = 1, log-likelihood = -6.3
  image:respectively, count = 1, log-likelihood = -6.3
  image:response, count = 1, log-likelihood = -6.3
  image:rest, count = 2, log-likelihood = -5.61
  image:restarted, count = 1, log-likelihood = -6.3
  image:restriction, count = 1, log-likelihood = -6.3
  image:resubmit, count = 3, log-likelihood = -5.2
  image:resubmitting, count = 1, log-likelihood = -6.3
  image:result, count = 6, log-likelihood = -4.51
  image:resulting, count = 1, log-likelihood = -6.3
  image:results, count = 3, log-likelihood = -5.2
  image:retrieve, count = 2, log-likelihood = -5.61
  image:return, count = 17, log-likelihood = -3.47
  image:returned, count = 4, log-likelihood = -4.91
  image:returning, count = 4, log-likelihood = -4.91
  image:returns, count = 8, log-likelihood = -4.22
  image:reused, count = 1, log-likelihood = -6.3
  image:reveresed, count = 1, log-likelihood = -6.3
  image:revert, count = 1, log-likelihood = -6.3
  image:review, count = 6, log-likelihood = -4.51
  image:reviewed, count = 1, log-likelihood = -6.3
  image:reviews, count = 2, log-likelihood = -5.61
  image:rgb, count = 7, log-likelihood = -4.35
  image:right, count = 38, log-likelihood = -2.66
  image:rme, count = 17, log-likelihood = -3.47
  image:rmes, count = 2, log-likelihood = -5.61
  image:rotate, count = 7, log-likelihood = -4.35
  image:rotateleft, count = 2, log-likelihood = -5.61
  image:roughly, count = 1, log-likelihood = -6.3
  image:round, count = 1, log-likelihood = -6.3
  image:roundoff, count = 1, log-likelihood = -6.3
  image:row, count = 38, log-likelihood = -2.66
  image:row0, count = 1, log-likelihood = -6.3
  image:row1, count = 1, log-likelihood = -6.3
  image:rowcolumn, count = 2, log-likelihood = -5.61
  image:rows, count = 5, log-likelihood = -4.69
  image:rule, count = 4, log-likelihood = -4.91
  image:rules, count = 3, log-likelihood = -5.2
  image:run, count = 66, log-likelihood = -2.11
  image:running, count = 21, log-likelihood = -3.25
  image:runs, count = 9, log-likelihood = -4.1
  image:runtime, count = 1, log-likelihood = -6.3
  image:s, count = 4, log-likelihood = -4.91
  image:safe, count = 2, log-likelihood = -5.61
  image:safely, count = 1, log-likelihood = -6.3
  image:said, count = 3, log-likelihood = -5.2
  image:sake, count = 1, log-likelihood = -6.3
  image:same, count = 48, log-likelihood = -2.43
  image:sample, count = 1, log-likelihood = -6.3
  image:satisfies, count = 2, log-likelihood = -5.61
  image:satisfy, count = 2, log-likelihood = -5.61
  image:saul, count = 5, log-likelihood = -4.69
  image:save, count = 3, log-likelihood = -5.2
  image:saved, count = 3, log-likelihood = -5.2
  image:saw, count = 3, log-likelihood = -5.2
  image:say, count = 6, log-likelihood = -4.51
  image:saying, count = 14, log-likelihood = -3.66
  image:says, count = 36, log-likelihood = -2.72
  image:scale, count = 1, log-likelihood = -6.3
  image:scan, count = 1, log-likelihood = -6.3
  image:scope, count = 6, log-likelihood = -4.51
  image:score, count = 5, log-likelihood = -4.69
  image:scp, count = 1, log-likelihood = -6.3
  image:screen, count = 2, log-likelihood = -5.61
  image:screenshot, count = 1, log-likelihood = -6.3
  image:screenshot20160308at42938pmpng, count = 1, log-likelihood = -6.3
  image:screnshots, count = 1, log-likelihood = -6.3
  image:sdiff, count = 1, log-likelihood = -6.3
  image:seam, count = 49, log-likelihood = -2.41
  image:seam0, count = 1, log-likelihood = -6.3
  image:seamcarve, count = 5, log-likelihood = -4.69
  image:seamcarveheight, count = 3, log-likelihood = -5.2
  image:seamcarvehorizontal, count = 1, log-likelihood = -6.3
  image:seamcarvewidth, count = 8, log-likelihood = -4.22
  image:seamcostheight, count = 1, log-likelihood = -6.3
  image:seamheight, count = 1, log-likelihood = -6.3
  image:seampass, count = 1, log-likelihood = -6.3
  image:seamr, count = 1, log-likelihood = -6.3
  image:seamsize, count = 2, log-likelihood = -5.61
  image:seamwidthcarve, count = 1, log-likelihood = -6.3
  image:searched, count = 3, log-likelihood = -5.2
  image:searching, count = 2, log-likelihood = -5.61
  image:second, count = 19, log-likelihood = -3.35
  image:seconds, count = 6, log-likelihood = -4.51
  image:secret, count = 1, log-likelihood = -6.3
  image:section, count = 1, log-likelihood = -6.3
  image:secured, count = 1, log-likelihood = -6.3
  image:see, count = 23, log-likelihood = -3.16
  image:seeing, count = 1, log-likelihood = -6.3
  image:seem, count = 8, log-likelihood = -4.22
  image:seems, count = 18, log-likelihood = -3.41
  image:seen, count = 2, log-likelihood = -5.61
  image:seg, count = 3, log-likelihood = -5.2
  image:segfault, count = 3, log-likelihood = -5.2
  image:segfaults, count = 3, log-likelihood = -5.2
  image:segmentation, count = 16, log-likelihood = -3.53
  image:selfie, count = 1, log-likelihood = -6.3
  image:send, count = 3, log-likelihood = -5.2
  image:sending, count = 1, log-likelihood = -6.3
  image:sense, count = 6, log-likelihood = -4.51
  image:sensible, count = 1, log-likelihood = -6.3
  image:sent, count = 6, log-likelihood = -4.51
  image:sentence, count = 1, log-likelihood = -6.3
  image:separate, count = 8, log-likelihood = -4.22
  image:separately, count = 4, log-likelihood = -4.91
  image:sequence, count = 1, log-likelihood = -6.3
  image:serve, count = 1, log-likelihood = -6.3
  image:session, count = 1, log-likelihood = -6.3
  image:set, count = 16, log-likelihood = -3.53
  image:setpixel, count = 4, log-likelihood = -4.91
  image:setting, count = 5, log-likelihood = -4.69
  image:several, count = 2, log-likelihood = -5.61
  image:severity, count = 1, log-likelihood = -6.3
  image:sftp, count = 1, log-likelihood = -6.3
  image:shall, count = 1, log-likelihood = -6.3
  image:share, count = 2, log-likelihood = -5.61
  image:shed, count = 1, log-likelihood = -6.3
  image:sheet, count = 3, log-likelihood = -5.2
  image:shift, count = 1, log-likelihood = -6.3
  image:shifted, count = 1, log-likelihood = -6.3
  image:shocked, count = 1, log-likelihood = -6.3
  image:should, count = 86, log-likelihood = -1.84
  image:shouldnt, count = 5, log-likelihood = -4.69
  image:show, count = 2, log-likelihood = -5.61
  image:showed, count = 1, log-likelihood = -6.3
  image:showing, count = 2, log-likelihood = -5.61
  image:shown, count = 2, log-likelihood = -5.61
  image:shows, count = 6, log-likelihood = -4.51
  image:side, count = 1, log-likelihood = -6.3
  image:sign, count = 1, log-likelihood = -6.3
  image:signal, count = 1, log-likelihood = -6.3
  image:sigsegv, count = 1, log-likelihood = -6.3
  image:silly, count = 1, log-likelihood = -6.3
  image:similar, count = 3, log-likelihood = -5.2
  image:similarly, count = 1, log-likelihood = -6.3
  image:simple, count = 2, log-likelihood = -5.61
  image:simpler, count = 1, log-likelihood = -6.3
  image:simplifying, count = 1, log-likelihood = -6.3
  image:simply, count = 4, log-likelihood = -4.91
  image:simulate, count = 1, log-likelihood = -6.3
  image:since, count = 28, log-likelihood = -2.97
  image:single, count = 6, log-likelihood = -4.51
  image:sit, count = 1, log-likelihood = -6.3
  image:site, count = 1, log-likelihood = -6.3
  image:situation, count = 1, log-likelihood = -6.3
  image:six, count = 1, log-likelihood = -6.3
  image:size, count = 31, log-likelihood = -2.86
  image:sizes0x7fffffffe1d0, count = 1, log-likelihood = -6.3
  image:skip, count = 2, log-likelihood = -5.61
  image:slow, count = 4, log-likelihood = -4.91
  image:small, count = 2, log-likelihood = -5.61
  image:smaller, count = 6, log-likelihood = -4.51
  image:smallest, count = 1, log-likelihood = -6.3
  image:smoothly, count = 1, log-likelihood = -6.3
  image:snake, count = 1, log-likelihood = -6.3
  image:so, count = 114, log-likelihood = -1.56
  image:soam, count = 1, log-likelihood = -6.3
  image:solely, count = 2, log-likelihood = -5.61
  image:solid, count = 1, log-likelihood = -6.3
  image:solution, count = 1, log-likelihood = -6.3
  image:solutions, count = 1, log-likelihood = -6.3
  image:solve, count = 1, log-likelihood = -6.3
  image:some, count = 37, log-likelihood = -2.69
  image:somehow, count = 2, log-likelihood = -5.61
  image:someone, count = 8, log-likelihood = -4.22
  image:something, count = 25, log-likelihood = -3.08
  image:sometime, count = 1, log-likelihood = -6.3
  image:sometimes, count = 1, log-likelihood = -6.3
  image:somewhat, count = 1, log-likelihood = -6.3
  image:somewhere, count = 2, log-likelihood = -5.61
  image:soon, count = 2, log-likelihood = -5.61
  image:sorry, count = 2, log-likelihood = -5.61
  image:sort, count = 3, log-likelihood = -5.2
  image:sorts, count = 1, log-likelihood = -6.3
  image:sound, count = 2, log-likelihood = -5.61
  image:sounds, count = 1, log-likelihood = -6.3
  image:source, count = 2, log-likelihood = -5.61
  image:south, count = 2, log-likelihood = -5.61
  image:spaces, count = 2, log-likelihood = -5.61
  image:spacing, count = 1, log-likelihood = -6.3
  image:speak, count = 1, log-likelihood = -6.3
  image:spec, count = 22, log-likelihood = -3.21
  image:specific, count = 6, log-likelihood = -4.51
  image:specifically, count = 11, log-likelihood = -3.9
  image:specification, count = 5, log-likelihood = -4.69
  image:specifications, count = 2, log-likelihood = -5.61
  image:specified, count = 4, log-likelihood = -4.91
  image:specifies, count = 2, log-likelihood = -5.61
  image:specs, count = 10, log-likelihood = -4
  image:spelling, count = 1, log-likelihood = -6.3
  image:spending, count = 1, log-likelihood = -6.3
  image:spent, count = 1, log-likelihood = -6.3
  image:spits, count = 1, log-likelihood = -6.3
  image:spot, count = 1, log-likelihood = -6.3
  image:spots, count = 1, log-likelihood = -6.3
  image:spring, count = 2, log-likelihood = -5.61
  image:sq, count = 1, log-likelihood = -6.3
  image:squareddifference, count = 2, log-likelihood = -5.61
  image:ss, count = 1, log-likelihood = -6.3
  image:ssoutput, count = 2, log-likelihood = -5.61
  image:sstream, count = 1, log-likelihood = -6.3
  image:stack, count = 16, log-likelihood = -3.53
  image:staff, count = 2, log-likelihood = -5.61
  image:standard, count = 3, log-likelihood = -5.2
  image:start, count = 9, log-likelihood = -4.1
  image:started, count = 2, log-likelihood = -5.61
  image:starter, count = 6, log-likelihood = -4.51
  image:starting, count = 1, log-likelihood = -6.3
  image:starts, count = 1, log-likelihood = -6.3
  image:stated, count = 2, log-likelihood = -5.61
  image:statement, count = 10, log-likelihood = -4
  image:statements, count = 6, log-likelihood = -4.51
  image:states, count = 2, log-likelihood = -5.61
  image:static, count = 7, log-likelihood = -4.35
  image:staticcast, count = 1, log-likelihood = -6.3
  image:stating, count = 1, log-likelihood = -6.3
  image:status, count = 2, log-likelihood = -5.61
  image:staying, count = 1, log-likelihood = -6.3
  image:std, count = 6, log-likelihood = -4.51
  image:stdistream, count = 5, log-likelihood = -4.69
  image:stdostream, count = 1, log-likelihood = -6.3
  image:stdstring, count = 1, log-likelihood = -6.3
  image:step, count = 3, log-likelihood = -5.2
  image:stepped, count = 1, log-likelihood = -6.3
  image:stepping, count = 1, log-likelihood = -6.3
  image:steps, count = 2, log-likelihood = -5.61
  image:still, count = 41, log-likelihood = -2.59
  image:stoi, count = 1, log-likelihood = -6.3
  image:stop, count = 8, log-likelihood = -4.22
  image:stopped, count = 1, log-likelihood = -6.3
  image:store, count = 4, log-likelihood = -4.91
  image:stored, count = 4, log-likelihood = -4.91
  image:strange, count = 6, log-likelihood = -4.51
  image:strcmp, count = 1, log-likelihood = -6.3
  image:stream, count = 5, log-likelihood = -4.69
  image:streams, count = 2, log-likelihood = -5.61
  image:stressboundary, count = 1, log-likelihood = -6.3
  image:string, count = 13, log-likelihood = -3.73
  image:strings, count = 3, log-likelihood = -5.2
  image:stringstream, count = 4, log-likelihood = -4.91
  image:stringstreams, count = 1, log-likelihood = -6.3
  image:struct, count = 10, log-likelihood = -4
  image:structs, count = 5, log-likelihood = -4.69
  image:structure, count = 3, log-likelihood = -5.2
  image:struggling, count = 2, log-likelihood = -5.61
  image:stuck, count = 2, log-likelihood = -5.61
  image:students, count = 3, log-likelihood = -5.2
  image:studio, count = 9, log-likelihood = -4.1
  image:studios, count = 2, log-likelihood = -5.61
  image:stuff, count = 1, log-likelihood = -6.3
  image:style, count = 8, log-likelihood = -4.22
  image:styling, count = 1, log-likelihood = -6.3
  image:subdirectory, count = 1, log-likelihood = -6.3
  image:sublime, count = 3, log-likelihood = -5.2
  image:submission, count = 10, log-likelihood = -4
  image:submit, count = 14, log-likelihood = -3.66
  image:submitted, count = 8, log-likelihood = -4.22
  image:submitting, count = 4, log-likelihood = -4.91
  image:subtract, count = 1, log-likelihood = -6.3
  image:subtracting, count = 1, log-likelihood = -6.3
  image:success, count = 1, log-likelihood = -6.3
  image:successfully, count = 2, log-likelihood = -5.61
  image:such, count = 12, log-likelihood = -3.81
  image:sudden, count = 1, log-likelihood = -6.3
  image:suddenly, count = 1, log-likelihood = -6.3
  image:sufficient, count = 3, log-likelihood = -5.2
  image:sufficiently, count = 1, log-likelihood = -6.3
  image:suggest, count = 2, log-likelihood = -5.61
  image:suggestion, count = 1, log-likelihood = -6.3
  image:suggestions, count = 11, log-likelihood = -3.9
  image:suggestionsfixs, count = 1, log-likelihood = -6.3
  image:suit, count = 1, log-likelihood = -6.3
  image:suite, count = 1, log-likelihood = -6.3
  image:supplied, count = 1, log-likelihood = -6.3
  image:supported, count = 1, log-likelihood = -6.3
  image:suppose, count = 5, log-likelihood = -4.69
  image:supposed, count = 32, log-likelihood = -2.83
  image:sure, count = 49, log-likelihood = -2.41
  image:symbol, count = 2, log-likelihood = -5.61
  image:symbols, count = 2, log-likelihood = -5.61
  image:syntax, count = 2, log-likelihood = -5.61
  image:system, count = 2, log-likelihood = -5.61
  image:take, count = 16, log-likelihood = -3.53
  image:taken, count = 1, log-likelihood = -6.3
  image:takes, count = 16, log-likelihood = -3.53
  image:taking, count = 3, log-likelihood = -5.2
  image:talking, count = 1, log-likelihood = -6.3
  image:tanks, count = 1, log-likelihood = -6.3
  image:target, count = 3, log-likelihood = -5.2
  image:taught, count = 1, log-likelihood = -6.3
  image:technically, count = 1, log-likelihood = -6.3
  image:tedious, count = 1, log-likelihood = -6.3
  image:tell, count = 2, log-likelihood = -5.61
  image:telling, count = 5, log-likelihood = -4.69
  image:tells, count = 2, log-likelihood = -5.61
  image:temp, count = 2, log-likelihood = -5.61
  image:temporary, count = 1, log-likelihood = -6.3
  image:tempted, count = 1, log-likelihood = -6.3
  image:terminal, count = 30, log-likelihood = -2.9
  image:terminated, count = 3, log-likelihood = -5.2
  image:terms, count = 2, log-likelihood = -5.61
  image:test, count = 141, log-likelihood = -1.35
  image:testall, count = 3, log-likelihood = -5.2
  image:testallprefixdog, count = 1, log-likelihood = -6.3
  image:testallstdstring, count = 1, log-likelihood = -6.3
  image:testatvoid, count = 1, log-likelihood = -6.3
  image:testatyaxxz, count = 1, log-likelihood = -6.3
  image:testcost, count = 1, log-likelihood = -6.3
  image:tested, count = 9, log-likelihood = -4.1
  image:testexample, count = 1, log-likelihood = -6.3
  image:testfailbasic, count = 1, log-likelihood = -6.3
  image:testfillbasic, count = 2, log-likelihood = -5.61
  image:testing, count = 35, log-likelihood = -2.74
  image:testinitbasic, count = 1, log-likelihood = -6.3
  image:testprintbasic, count = 3, log-likelihood = -5.2
  image:testrotate, count = 2, log-likelihood = -5.61
  image:testrotateconst, count = 2, log-likelihood = -5.61
  image:testrotateimgerror, count = 1, log-likelihood = -6.3
  image:tests, count = 44, log-likelihood = -2.51
  image:testseamcarveconst, count = 1, log-likelihood = -6.3
  image:text, count = 1, log-likelihood = -6.3
  image:text0x20, count = 1, log-likelihood = -6.3
  image:than, count = 23, log-likelihood = -3.16
  image:thank, count = 17, log-likelihood = -3.47
  image:thanks, count = 77, log-likelihood = -1.96
  image:that, count = 228, log-likelihood = -0.87
  image:thats, count = 7, log-likelihood = -4.35
  image:the, count = 469, log-likelihood = -0.148
  image:their, count = 2, log-likelihood = -5.61
  image:them, count = 25, log-likelihood = -3.08
  image:themselves, count = 2, log-likelihood = -5.61
  image:then, count = 42, log-likelihood = -2.56
  image:theoretically, count = 1, log-likelihood = -6.3
  image:there, count = 64, log-likelihood = -2.14
  image:therefore, count = 4, log-likelihood = -4.91
  image:theres, count = 5, log-likelihood = -4.69
  image:these, count = 19, log-likelihood = -3.35
  image:they, count = 23, log-likelihood = -3.16
  image:theyre, count = 5, log-likelihood = -4.69
  image:theythose, count = 1, log-likelihood = -6.3
  image:thing, count = 6, log-likelihood = -4.51
  image:things, count = 9, log-likelihood = -4.1
  image:think, count = 19, log-likelihood = -3.35
  image:thinking, count = 2, log-likelihood = -5.61
  image:thinks, count = 3, log-likelihood = -5.2
  image:third, count = 9, log-likelihood = -4.1
  image:thirty, count = 1, log-likelihood = -6.3
  image:this, count = 211, log-likelihood = -0.947
  image:thisdont, count = 1, log-likelihood = -6.3
  image:thoroughly, count = 1, log-likelihood = -6.3
  image:those, count = 7, log-likelihood = -4.35
  image:though, count = 13, log-likelihood = -3.73
  image:thought, count = 9, log-likelihood = -4.1
  image:thoughts, count = 4, log-likelihood = -4.91
  image:thread, count = 1, log-likelihood = -6.3
  image:thread1, count = 1, log-likelihood = -6.3
  image:three, count = 13, log-likelihood = -3.73
  image:through, count = 34, log-likelihood = -2.77
  image:throughout, count = 2, log-likelihood = -5.61
  image:throw, count = 1, log-likelihood = -6.3
  image:throwing, count = 2, log-likelihood = -5.61
  image:thrown, count = 2, log-likelihood = -5.61
  image:throws, count = 2, log-likelihood = -5.61
  image:thru, count = 1, log-likelihood = -6.3
  image:thursday, count = 1, log-likelihood = -6.3
  image:thus, count = 2, log-likelihood = -5.61
  image:thx, count = 2, log-likelihood = -5.61
  image:tidbit, count = 1, log-likelihood = -6.3
  image:time, count = 20, log-likelihood = -3.3
  image:times, count = 5, log-likelihood = -4.69
  image:tips, count = 3, log-likelihood = -5.2
  image:title, count = 4, log-likelihood = -4.91
  image:to, count = 394, log-likelihood = -0.323
  image:today, count = 2, log-likelihood = -5.61
  image:together, count = 1, log-likelihood = -6.3
  image:told, count = 3, log-likelihood = -5.2
  image:tomorrow, count = 1, log-likelihood = -6.3
  image:tonight, count = 1, log-likelihood = -6.3
  image:too, count = 8, log-likelihood = -4.22
  image:took, count = 2, log-likelihood = -5.61
  image:top, count = 10, log-likelihood = -4
  image:tossing, count = 1, log-likelihood = -6.3
  image:tostring, count = 2, log-likelihood = -5.61
  image:tostringerror, count = 1, log-likelihood = -6.3
  image:tostringnewwidth, count = 1, log-likelihood = -6.3
  image:total, count = 5, log-likelihood = -4.69
  image:totally, count = 2, log-likelihood = -5.61
  image:touch, count = 1, log-likelihood = -6.3
  image:touched, count = 1, log-likelihood = -6.3
  image:towards, count = 1, log-likelihood = -6.3
  image:toyviewer, count = 1, log-likelihood = -6.3
  image:track, count = 1, log-likelihood = -6.3
  image:transverse, count = 1, log-likelihood = -6.3
  image:traversal, count = 2, log-likelihood = -5.61
  image:traverse, count = 1, log-likelihood = -6.3
  image:traversed, count = 1, log-likelihood = -6.3
  image:treat, count = 1, log-likelihood = -6.3
  image:tricky, count = 1, log-likelihood = -6.3
  image:tried, count = 32, log-likelihood = -2.83
  image:tries, count = 3, log-likelihood = -5.2
  image:triple, count = 1, log-likelihood = -6.3
  image:trouble, count = 11, log-likelihood = -3.9
  image:troubles, count = 1, log-likelihood = -6.3
  image:true, count = 3, log-likelihood = -5.2
  image:trust, count = 1, log-likelihood = -6.3
  image:try, count = 26, log-likelihood = -3.04
  image:trying, count = 39, log-likelihood = -2.64
  image:tudio, count = 1, log-likelihood = -6.3
  image:turn, count = 1, log-likelihood = -6.3
  image:turned, count = 1, log-likelihood = -6.3
  image:turning, count = 2, log-likelihood = -5.61
  image:turns, count = 3, log-likelihood = -5.2
  image:tutorial, count = 1, log-likelihood = -6.3
  image:twice, count = 1, log-likelihood = -6.3
  image:two, count = 21, log-likelihood = -3.25
  image:txt, count = 3, log-likelihood = -5.2
  image:type, count = 14, log-likelihood = -3.66
  image:types, count = 2, log-likelihood = -5.61
  image:typing, count = 2, log-likelihood = -5.61
  image:u2018tostringu2019, count = 1, log-likelihood = -6.3
  image:u2018void, count = 1, log-likelihood = -6.3
  image:ulimit, count = 4, log-likelihood = -4.91
  image:unable, count = 5, log-likelihood = -4.69
  image:unavailable, count = 1, log-likelihood = -6.3
  image:undeclared, count = 1, log-likelihood = -6.3
  image:undefined, count = 3, log-likelihood = -5.2
  image:under, count = 6, log-likelihood = -4.51
  image:understand, count = 25, log-likelihood = -3.08
  image:understandable, count = 1, log-likelihood = -6.3
  image:understanding, count = 6, log-likelihood = -4.51
  image:uneasy, count = 1, log-likelihood = -6.3
  image:unexpected, count = 2, log-likelihood = -5.61
  image:unhandled, count = 2, log-likelihood = -5.61
  image:uniqnames, count = 1, log-likelihood = -6.3
  image:unique, count = 1, log-likelihood = -6.3
  image:uniqueness, count = 1, log-likelihood = -6.3
  image:unit, count = 1, log-likelihood = -6.3
  image:unix, count = 1, log-likelihood = -6.3
  image:unnecessary, count = 1, log-likelihood = -6.3
  image:unorganized, count = 1, log-likelihood = -6.3
  image:unpredictable, count = 1, log-likelihood = -6.3
  image:unreasonable, count = 1, log-likelihood = -6.3
  image:unrecognized, count = 1, log-likelihood = -6.3
  image:unresolved, count = 1, log-likelihood = -6.3
  image:unsure, count = 1, log-likelihood = -6.3
  image:until, count = 6, log-likelihood = -4.51
  image:untouched, count = 1, log-likelihood = -6.3
  image:up, count = 24, log-likelihood = -3.12
  image:update, count = 3, log-likelihood = -5.2
  image:uphold, count = 1, log-likelihood = -6.3
  image:uploaded, count = 1, log-likelihood = -6.3
  image:upon, count = 1, log-likelihood = -6.3
  image:upper, count = 1, log-likelihood = -6.3
  image:us, count = 24, log-likelihood = -3.12
  image:usable, count = 1, log-likelihood = -6.3
  image:usage, count = 2, log-likelihood = -5.61
  image:uscrabsterppm, count = 1, log-likelihood = -6.3
  image:use, count = 79, log-likelihood = -1.93
  image:used, count = 26, log-likelihood = -3.04
  image:useful, count = 2, log-likelihood = -5.61
  image:user, count = 1, log-likelihood = -6.3
  image:uses, count = 4, log-likelihood = -4.91
  image:using, count = 71, log-likelihood = -2.04
  image:usrbinld, count = 1, log-likelihood = -6.3
  image:usrlib64valgrindvgpreloadmemcheckamd64linuxso, count = 1, log-likelihood = -6.3
  image:usrlibdebugusrlibx8664linuxgnucrt1odebuginfo, count = 1, log-likelihood = -6.3
  image:usrlibdebugusrlibx8664linuxgnucrt1odebugline, count = 1, log-likelihood = -6.3
  image:usrlibgccx8664linuxgnu48x8664linuxgnucrt1o, count = 1, log-likelihood = -6.3
  image:usual, count = 1, log-likelihood = -6.3
  image:usually, count = 2, log-likelihood = -5.61
  image:utilizing, count = 1, log-likelihood = -6.3
  image:v, count = 1, log-likelihood = -6.3
  image:valgrind, count = 1, log-likelihood = -6.3
  image:valid, count = 8, log-likelihood = -4.22
  image:value, count = 42, log-likelihood = -2.56
  image:values, count = 38, log-likelihood = -2.66
  image:variable, count = 21, log-likelihood = -3.25
  image:variableptr, count = 1, log-likelihood = -6.3
  image:variables, count = 3, log-likelihood = -5.2
  image:various, count = 3, log-likelihood = -5.2
  image:varying, count = 1, log-likelihood = -6.3
  image:verified, count = 1, log-likelihood = -6.3
  image:verify, count = 1, log-likelihood = -6.3
  image:version, count = 2, log-likelihood = -5.61
  image:versions, count = 2, log-likelihood = -5.61
  image:vertical, count = 7, log-likelihood = -4.35
  image:very, count = 19, log-likelihood = -3.35
  image:via, count = 3, log-likelihood = -5.2
  image:video, count = 1, log-likelihood = -6.3
  image:viewed, count = 1, log-likelihood = -6.3
  image:violate, count = 1, log-likelihood = -6.3
  image:violated, count = 2, log-likelihood = -5.61
  image:violation, count = 1, log-likelihood = -6.3
  image:visible, count = 1, log-likelihood = -6.3
  image:visual, count = 13, log-likelihood = -3.73
  image:visually, count = 1, log-likelihood = -6.3
  image:visualstudio, count = 1, log-likelihood = -6.3
  image:void, count = 15, log-likelihood = -3.59
  image:vs, count = 1, log-likelihood = -6.3
  image:w, count = 2, log-likelihood = -5.61
  image:wait, count = 1, log-likelihood = -6.3
  image:waited, count = 1, log-likelihood = -6.3
  image:wall, count = 3, log-likelihood = -5.2
  image:wallit, count = 1, log-likelihood = -6.3
  image:want, count = 13, log-likelihood = -3.73
  image:wanted, count = 6, log-likelihood = -4.51
  image:warning, count = 1, log-likelihood = -6.3
  image:was, count = 45, log-likelihood = -2.49
  image:wasnt, count = 3, log-likelihood = -5.2
  image:way, count = 42, log-likelihood = -2.56
  image:ways, count = 1, log-likelihood = -6.3
  image:we, count = 192, log-likelihood = -1.04
  image:web, count = 1, log-likelihood = -6.3
  image:website, count = 1, log-likelihood = -6.3
  image:wed, count = 1, log-likelihood = -6.3
  image:wednesday, count = 1, log-likelihood = -6.3
  image:week, count = 1, log-likelihood = -6.3
  image:weird, count = 5, log-likelihood = -4.69
  image:well, count = 17, log-likelihood = -3.47
  image:went, count = 3, log-likelihood = -5.2
  image:were, count = 21, log-likelihood = -3.25
  image:werent, count = 2, log-likelihood = -5.61
  image:werror, count = 1, log-likelihood = -6.3
  image:werrorvla, count = 2, log-likelihood = -5.61
  image:werrorwvlaextension, count = 1, log-likelihood = -6.3
  image:west, count = 2, log-likelihood = -5.61
  image:wether, count = 1, log-likelihood = -6.3
  image:weve, count = 1, log-likelihood = -6.3
  image:what, count = 113, log-likelihood = -1.57
  image:whatever, count = 2, log-likelihood = -5.61
  image:whats, count = 12, log-likelihood = -3.81
  image:when, count = 153, log-likelihood = -1.27
  image:whenever, count = 4, log-likelihood = -4.91
  image:where, count = 39, log-likelihood = -2.64
  image:wherever, count = 1, log-likelihood = -6.3
  image:wherewhat, count = 1, log-likelihood = -6.3
  image:whether, count = 5, log-likelihood = -4.69
  image:which, count = 34, log-likelihood = -2.77
  image:while, count = 17, log-likelihood = -3.47
  image:whiles, count = 1, log-likelihood = -6.3
  image:white, count = 1, log-likelihood = -6.3
  image:whitespace, count = 2, log-likelihood = -5.61
  image:who, count = 1, log-likelihood = -6.3
  image:whole, count = 5, log-likelihood = -4.69
  image:why, count = 59, log-likelihood = -2.22
  image:wid, count = 1, log-likelihood = -6.3
  image:width, count = 50, log-likelihood = -2.39
  image:width1, count = 1, log-likelihood = -6.3
  image:width1c, count = 1, log-likelihood = -6.3
  image:widthheight, count = 2, log-likelihood = -5.61
  image:widthlength, count = 1, log-likelihood = -6.3
  image:widths, count = 1, log-likelihood = -6.3
  image:wifi, count = 1, log-likelihood = -6.3
  image:will, count = 49, log-likelihood = -2.41
  image:willing, count = 1, log-likelihood = -6.3
  image:window, count = 1, log-likelihood = -6.3
  image:windows, count = 1, log-likelihood = -6.3
  image:wired, count = 1, log-likelihood = -6.3
  image:with, count = 116, log-likelihood = -1.55
  image:within, count = 12, log-likelihood = -3.81
  image:without, count = 23, log-likelihood = -3.16
  image:wlstack60000000, count = 1, log-likelihood = -6.3
  image:wondered, count = 1, log-likelihood = -6.3
  image:wondering, count = 7, log-likelihood = -4.35
  image:wont, count = 9, log-likelihood = -4.1
  image:work, count = 28, log-likelihood = -2.97
  image:workaround, count = 1, log-likelihood = -6.3
  image:worked, count = 8, log-likelihood = -4.22
  image:working, count = 15, log-likelihood = -3.59
  image:works, count = 17, log-likelihood = -3.47
  image:worry, count = 1, log-likelihood = -6.3
  image:worrying, count = 1, log-likelihood = -6.3
  image:would, count = 74, log-likelihood = -1.99
  image:wouldnt, count = 6, log-likelihood = -4.51
  image:write, count = 28, log-likelihood = -2.97
  image:writes, count = 1, log-likelihood = -6.3
  image:writing, count = 10, log-likelihood = -4
  image:written, count = 2, log-likelihood = -5.61
  image:wrong, count = 30, log-likelihood = -2.9
  image:wrongly, count = 1, log-likelihood = -6.3
  image:wrote, count = 5, log-likelihood = -4.69
  image:x, count = 13, log-likelihood = -3.73
  image:x8664, count = 1, log-likelihood = -6.3
  image:xcode, count = 14, log-likelihood = -3.66
  image:xcodes, count = 1, log-likelihood = -6.3
  image:ya, count = 1, log-likelihood = -6.3
  image:yall, count = 1, log-likelihood = -6.3
  image:yeah, count = 1, log-likelihood = -6.3
  image:year, count = 1, log-likelihood = -6.3
  image:yes, count = 1, log-likelihood = -6.3
  image:yesterday, count = 2, log-likelihood = -5.61
  image:yet, count = 13, log-likelihood = -3.73
  image:yo, count = 2, log-likelihood = -5.61
  image:you, count = 45, log-likelihood = -2.49
  image:your, count = 10, log-likelihood = -4
  image:youtube, count = 1, log-likelihood = -6.3
  image:youve, count = 2, log-likelihood = -5.61
  image:zero, count = 5, log-likelihood = -4.69
  image:zeroes, count = 3, log-likelihood = -5.2
  image:zeros, count = 2, log-likelihood = -5.61
  image:­g, count = 1, log-likelihood = -6.3
  image:­o, count = 1, log-likelihood = -6.3
  image:‘, count = 4, log-likelihood = -4.91
  image:‘seam’, count = 2, log-likelihood = -5.61
  image:’, count = 4, log-likelihood = -4.91
  recursion:0, count = 21, log-likelihood = -2.75
  recursion:00, count = 1, log-likelihood = -5.79
  recursion:01, count = 1, log-likelihood = -5.79
  recursion:04, count = 1, log-likelihood = -5.79
  recursion:067, count = 1, log-likelihood = -5.79
  recursion:0recursivelistqaeabv0z, count = 1, log-likelihood = -5.79
  recursion:0th, count = 2, log-likelihood = -5.1
  recursion:1, count = 24, log-likelihood = -2.61
  recursion:10, count = 3, log-likelihood = -4.69
  recursion:11, count = 4, log-likelihood = -4.41
  recursion:1134903107, count = 1, log-likelihood = -5.79
  recursion:12, count = 2, log-likelihood = -5.1
  recursion:1234, count = 2, log-likelihood = -5.1
  recursion:12345, count = 1, log-likelihood = -5.79
  recursion:13, count = 1, log-likelihood = -5.79
  recursion:1323752223, count = 1, log-likelihood = -5.79
  recursion:14, count = 1, log-likelihood = -5.79
  recursion:15, count = 1, log-likelihood = -5.79
  recursion:17, count = 1, log-likelihood = -5.79
  recursion:183, count = 1, log-likelihood = -5.79
  recursion:1836311903, count = 1, log-likelihood = -5.79
  recursion:1binarytreeqaexz, count = 1, log-likelihood = -5.79
  recursion:1cuserslogandocumentsvisual, count = 1, log-likelihood = -5.79
  recursion:1p2obj, count = 1, log-likelihood = -5.79
  recursion:1p2testsobj, count = 1, log-likelihood = -5.79
  recursion:1recursivelistqaexz, count = 1, log-likelihood = -5.79
  recursion:2, count = 35, log-likelihood = -2.24
  recursion:2015projectsproject2debugproject2exe, count = 1, log-likelihood = -5.79
  recursion:2016, count = 1, log-likelihood = -5.79
  recursion:21, count = 1, log-likelihood = -5.79
  recursion:231, count = 1, log-likelihood = -5.79
  recursion:232, count = 1, log-likelihood = -5.79
  recursion:25, count = 1, log-likelihood = -5.79
  recursion:280, count = 1, log-likelihood = -5.79
  recursion:2971215073, count = 1, log-likelihood = -5.79
  recursion:3, count = 20, log-likelihood = -2.8
  recursion:31, count = 1, log-likelihood = -5.79
  recursion:321, count = 1, log-likelihood = -5.79
  recursion:32bit, count = 1, log-likelihood = -5.79
  recursion:4, count = 12, log-likelihood = -3.31
  recursion:40, count = 1, log-likelihood = -5.79
  recursion:45500, count = 1, log-likelihood = -5.79
  recursion:46, count = 1, log-likelihood = -5.79
  recursion:4recursivelistqaeaav0abv0z, count = 1, log-likelihood = -5.79
  recursion:5, count = 15, log-likelihood = -3.08
  recursion:6, count = 4, log-likelihood = -4.41
  recursion:603, count = 1, log-likelihood = -5.79
  recursion:67, count = 1, log-likelihood = -5.79
  recursion:7, count = 4, log-likelihood = -4.41
  recursion:8, count = 3, log-likelihood = -4.69
  recursion:800, count = 1, log-likelihood = -5.79
  recursion:8pm, count = 1, log-likelihood = -5.79
  recursion:9, count = 5, log-likelihood = -4.18
  recursion:a, count = 141, log-likelihood = -0.844
  recursion:able, count = 4, log-likelihood = -4.41
  recursion:about, count = 22, log-likelihood = -2.7
  recursion:above, count = 4, log-likelihood = -4.41
  recursion:absolutely, count = 1, log-likelihood = -5.79
  recursion:acceptable, count = 3, log-likelihood = -4.69
  recursion:accepted, count = 1, log-likelihood = -5.79
  recursion:accepts, count = 1, log-likelihood = -5.79
  recursion:access, count = 6, log-likelihood = -4
  recursion:accessed, count = 1, log-likelihood = -5.79
  recursion:accessible, count = 2, log-likelihood = -5.1
  recursion:accessing, count = 1, log-likelihood = -5.79
  recursion:according, count = 1, log-likelihood = -5.79
  recursion:account, count = 3, log-likelihood = -4.69
  recursion:accumulate, count = 19, log-likelihood = -2.85
  recursion:accumulated, count = 1, log-likelihood = -5.79
  recursion:accumulatelist, count = 1, log-likelihood = -5.79
  recursion:accumulatelistrestlist, count = 1, log-likelihood = -5.79
  recursion:accumulationvar, count = 1, log-likelihood = -5.79
  recursion:actaully, count = 1, log-likelihood = -5.79
  recursion:actual, count = 3, log-likelihood = -4.69
  recursion:actually, count = 5, log-likelihood = -4.18
  recursion:add, count = 10, log-likelihood = -3.49
  recursion:added, count = 2, log-likelihood = -5.1
  recursion:addition, count = 2, log-likelihood = -5.1
  recursion:additional, count = 3, log-likelihood = -4.69
  recursion:addmultiply, count = 1, log-likelihood = -5.79
  recursion:address, count = 1, log-likelihood = -5.79
  recursion:advance, count = 4, log-likelihood = -4.41
  recursion:advice, count = 2, log-likelihood = -5.1
  recursion:after, count = 9, log-likelihood = -3.6
  recursion:again, count = 2, log-likelihood = -5.1
  recursion:ago, count = 2, log-likelihood = -5.1
  recursion:aka, count = 1, log-likelihood = -5.79
  recursion:algorithm, count = 3, log-likelihood = -4.69
  recursion:all, count = 32, log-likelihood = -2.33
  recursion:allow, count = 4, log-likelihood = -4.41
  recursion:allowed, count = 27, log-likelihood = -2.5
  recursion:allows, count = 1, log-likelihood = -5.79
  recursion:already, count = 13, log-likelihood = -3.23
  recursion:also, count = 19, log-likelihood = -2.85
  recursion:although, count = 1, log-likelihood = -5.79
  recursion:always, count = 4, log-likelihood = -4.41
  recursion:am, count = 42, log-likelihood = -2.06
  recursion:amir, count = 1, log-likelihood = -5.79
  recursion:among, count = 1, log-likelihood = -5.79
  recursion:amount, count = 1, log-likelihood = -5.79
  recursion:an, count = 66, log-likelihood = -1.6
  recursion:and, count = 140, log-likelihood = -0.851
  recursion:announcement, count = 1, log-likelihood = -5.79
  recursion:another, count = 10, log-likelihood = -3.49
  recursion:answer, count = 2, log-likelihood = -5.1
  recursion:answering, count = 1, log-likelihood = -5.79
  recursion:answers, count = 2, log-likelihood = -5.1
  recursion:any, count = 43, log-likelihood = -2.03
  recursion:anymore, count = 1, log-likelihood = -5.79
  recursion:anyone, count = 19, log-likelihood = -2.85
  recursion:anything, count = 6, log-likelihood = -4
  recursion:anyway, count = 1, log-likelihood = -5.79
  recursion:anywhere, count = 2, log-likelihood = -5.1
  recursion:appear, count = 1, log-likelihood = -5.79
  recursion:appears, count = 2, log-likelihood = -5.1
  recursion:append, count = 8, log-likelihood = -3.71
  recursion:appending, count = 2, log-likelihood = -5.1
  recursion:appendlistt, count = 1, log-likelihood = -5.79
  recursion:applications, count = 1, log-likelihood = -5.79
  recursion:apply, count = 2, log-likelihood = -5.1
  recursion:appreciate, count = 1, log-likelihood = -5.79
  recursion:appreciated, count = 5, log-likelihood = -4.18
  recursion:appropriate, count = 1, log-likelihood = -5.79
  recursion:architecture, count = 2, log-likelihood = -5.1
  recursion:are, count = 80, log-likelihood = -1.41
  recursion:area, count = 1, log-likelihood = -5.79
  recursion:arent, count = 3, log-likelihood = -4.69
  recursion:argument, count = 4, log-likelihood = -4.41
  recursion:arguments, count = 4, log-likelihood = -4.41
  recursion:around, count = 1, log-likelihood = -5.79
  recursion:array, count = 13, log-likelihood = -3.23
  recursion:arrays, count = 4, log-likelihood = -4.41
  recursion:arraytolist, count = 1, log-likelihood = -5.79
  recursion:arraytolisttestarray, count = 1, log-likelihood = -5.79
  recursion:arri, count = 1, log-likelihood = -5.79
  recursion:as, count = 44, log-likelihood = -2.01
  recursion:asap, count = 1, log-likelihood = -5.79
  recursion:ask, count = 2, log-likelihood = -5.1
  recursion:asked, count = 3, log-likelihood = -4.69
  recursion:aspect, count = 1, log-likelihood = -5.79
  recursion:assert, count = 6, log-likelihood = -4
  recursion:assert15, count = 1, log-likelihood = -5.79
  recursion:assertfalse, count = 2, log-likelihood = -5.1
  recursion:assertion, count = 2, log-likelihood = -5.1
  recursion:assign, count = 2, log-likelihood = -5.1
  recursion:assigned, count = 2, log-likelihood = -5.1
  recursion:assignment, count = 2, log-likelihood = -5.1
  recursion:associative, count = 2, log-likelihood = -5.1
  recursion:assume, count = 12, log-likelihood = -3.31
  recursion:assumed, count = 1, log-likelihood = -5.79
  recursion:assumer, count = 1, log-likelihood = -5.79
  recursion:assuming, count = 2, log-likelihood = -5.1
  recursion:at, count = 20, log-likelihood = -2.8
  recursion:attached, count = 1, log-likelihood = -5.79
  recursion:attempts, count = 1, log-likelihood = -5.79
  recursion:attention, count = 1, log-likelihood = -5.79
  recursion:attribute, count = 1, log-likelihood = -5.79
  recursion:auto, count = 2, log-likelihood = -5.1
  recursion:autograder, count = 16, log-likelihood = -3.02
  recursion:autograders, count = 1, log-likelihood = -5.79
  recursion:available, count = 1, log-likelihood = -5.79
  recursion:avoid, count = 3, log-likelihood = -4.69
  recursion:aware, count = 1, log-likelihood = -5.79
  recursion:away, count = 1, log-likelihood = -5.79
  recursion:back, count = 9, log-likelihood = -3.6
  recursion:bad, count = 3, log-likelihood = -4.69
  recursion:badcode, count = 1, log-likelihood = -5.79
  recursion:bar, count = 1, log-likelihood = -5.79
  recursion:base, count = 8, log-likelihood = -3.71
  recursion:basecase, count = 1, log-likelihood = -5.79
  recursion:based, count = 1, log-likelihood = -5.79
  recursion:bash42, count = 3, log-likelihood = -4.69
  recursion:basic, count = 1, log-likelihood = -5.79
  recursion:basically, count = 3, log-likelihood = -4.69
  recursion:be, count = 84, log-likelihood = -1.36
  recursion:because, count = 31, log-likelihood = -2.36
  recursion:becomes, count = 1, log-likelihood = -5.79
  recursion:bee, count = 1, log-likelihood = -5.79
  recursion:been, count = 10, log-likelihood = -3.49
  recursion:before, count = 9, log-likelihood = -3.6
  recursion:beginning, count = 4, log-likelihood = -4.41
  recursion:begins, count = 1, log-likelihood = -5.79
  recursion:being, count = 9, log-likelihood = -3.6
  recursion:believe, count = 3, log-likelihood = -4.69
  recursion:below, count = 1, log-likelihood = -5.79
  recursion:besides, count = 3, log-likelihood = -4.69
  recursion:best, count = 1, log-likelihood = -5.79
  recursion:better, count = 4, log-likelihood = -4.41
  recursion:between, count = 4, log-likelihood = -4.41
  recursion:big, count = 1, log-likelihood = -5.79
  recursion:bigger, count = 1, log-likelihood = -5.79
  recursion:binary, count = 4, log-likelihood = -4.41
  recursion:binarytreebinarytreevoid, count = 1, log-likelihood = -5.79
  recursion:binarytreecpp, count = 4, log-likelihood = -4.41
  recursion:binarytreedeletetreestruct, count = 1, log-likelihood = -5.79
  recursion:binarytreeh, count = 1, log-likelihood = -5.79
  recursion:binarytreenode, count = 1, log-likelihood = -5.79
  recursion:bit, count = 1, log-likelihood = -5.79
  recursion:blank, count = 1, log-likelihood = -5.79
  recursion:body, count = 2, log-likelihood = -5.1
  recursion:boil, count = 1, log-likelihood = -5.79
  recursion:bool, count = 7, log-likelihood = -3.85
  recursion:bools, count = 2, log-likelihood = -5.1
  recursion:both, count = 11, log-likelihood = -3.4
  recursion:bottom, count = 1, log-likelihood = -5.79
  recursion:bounded, count = 2, log-likelihood = -5.1
  recursion:box, count = 1, log-likelihood = -5.79
  recursion:boxes, count = 1, log-likelihood = -5.79
  recursion:bracket, count = 1, log-likelihood = -5.79
  recursion:branch, count = 3, log-likelihood = -4.69
  recursion:branches, count = 2, log-likelihood = -5.1
  recursion:british, count = 1, log-likelihood = -5.79
  recursion:brutally, count = 1, log-likelihood = -5.79
  recursion:bug, count = 4, log-likelihood = -4.41
  recursion:build, count = 1, log-likelihood = -5.79
  recursion:building, count = 1, log-likelihood = -5.79
  recursion:bunch, count = 2, log-likelihood = -5.1
  recursion:but, count = 77, log-likelihood = -1.45
  recursion:by, count = 23, log-likelihood = -2.66
  recursion:c, count = 2, log-likelihood = -5.1
  recursion:caen, count = 4, log-likelihood = -4.41
  recursion:cafe, count = 1, log-likelihood = -5.79
  recursion:calculates, count = 1, log-likelihood = -5.79
  recursion:call, count = 28, log-likelihood = -2.46
  recursion:called, count = 7, log-likelihood = -3.85
  recursion:calling, count = 7, log-likelihood = -3.85
  recursion:calls, count = 8, log-likelihood = -3.71
  recursion:came, count = 1, log-likelihood = -5.79
  recursion:campus, count = 1, log-likelihood = -5.79
  recursion:can, count = 77, log-likelihood = -1.45
  recursion:cannot, count = 10, log-likelihood = -3.49
  recursion:cant, count = 13, log-likelihood = -3.23
  recursion:capacity, count = 4, log-likelihood = -4.41
  recursion:carcass, count = 1, log-likelihood = -5.79
  recursion:care, count = 1, log-likelihood = -5.79
  recursion:careful, count = 1, log-likelihood = -5.79
  recursion:case, count = 17, log-likelihood = -2.96
  recursion:cases, count = 19, log-likelihood = -2.85
  recursion:cassert, count = 1, log-likelihood = -5.79
  recursion:catch, count = 1, log-likelihood = -5.79
  recursion:cause, count = 2, log-likelihood = -5.1
  recursion:causing, count = 1, log-likelihood = -5.79
  recursion:cdecl, count = 1, log-likelihood = -5.79
  recursion:certain, count = 4, log-likelihood = -4.41
  recursion:certainly, count = 1, log-likelihood = -5.79
  recursion:change, count = 4, log-likelihood = -4.41
  recursion:check, count = 6, log-likelihood = -4
  recursion:checked, count = 3, log-likelihood = -4.69
  recursion:checking, count = 2, log-likelihood = -5.1
  recursion:choose, count = 2, log-likelihood = -5.1
  recursion:circled, count = 1, log-likelihood = -5.79
  recursion:cjglover, count = 1, log-likelihood = -5.79
  recursion:claim, count = 1, log-likelihood = -5.79
  recursion:clang, count = 2, log-likelihood = -5.1
  recursion:clarification, count = 1, log-likelihood = -5.79
  recursion:clarify, count = 4, log-likelihood = -4.41
  recursion:class, count = 2, log-likelihood = -5.1
  recursion:classmate, count = 1, log-likelihood = -5.79
  recursion:clause, count = 3, log-likelihood = -4.69
  recursion:clear, count = 3, log-likelihood = -4.69
  recursion:clearly, count = 2, log-likelihood = -5.1
  recursion:click, count = 1, log-likelihood = -5.79
  recursion:closest, count = 1, log-likelihood = -5.79
  recursion:clue, count = 1, log-likelihood = -5.79
  recursion:clues, count = 1, log-likelihood = -5.79
  recursion:cluttering, count = 1, log-likelihood = -5.79
  recursion:code, count = 48, log-likelihood = -1.92
  recursion:coded, count = 1, log-likelihood = -5.79
  recursion:codes, count = 1, log-likelihood = -5.79
  recursion:coinchange, count = 1, log-likelihood = -5.79
  recursion:coins, count = 1, log-likelihood = -5.79
  recursion:collaborate, count = 1, log-likelihood = -5.79
  recursion:collect2, count = 2, log-likelihood = -5.1
  recursion:column, count = 1, log-likelihood = -5.79
  recursion:combination, count = 1, log-likelihood = -5.79
  recursion:combinations, count = 1, log-likelihood = -5.79
  recursion:combine, count = 1, log-likelihood = -5.79
  recursion:come, count = 2, log-likelihood = -5.1
  recursion:comes, count = 3, log-likelihood = -4.69
  recursion:command, count = 8, log-likelihood = -3.71
  recursion:comment, count = 2, log-likelihood = -5.1
  recursion:commented, count = 1, log-likelihood = -5.79
  recursion:commenting, count = 1, log-likelihood = -5.79
  recursion:comments, count = 2, log-likelihood = -5.1
  recursion:common, count = 1, log-likelihood = -5.79
  recursion:compare, count = 3, log-likelihood = -4.69
  recursion:compares, count = 1, log-likelihood = -5.79
  recursion:comparing, count = 2, log-likelihood = -5.1
  recursion:compilation, count = 1, log-likelihood = -5.79
  recursion:compile, count = 12, log-likelihood = -3.31
  recursion:compiler, count = 1, log-likelihood = -5.79
  recursion:compiling, count = 4, log-likelihood = -4.41
  recursion:completed, count = 2, log-likelihood = -5.1
  recursion:completely, count = 1, log-likelihood = -5.79
  recursion:complex, count = 1, log-likelihood = -5.79
  recursion:complied, count = 1, log-likelihood = -5.79
  recursion:complies, count = 1, log-likelihood = -5.79
  recursion:comprising, count = 1, log-likelihood = -5.79
  recursion:computations, count = 1, log-likelihood = -5.79
  recursion:compute, count = 1, log-likelihood = -5.79
  recursion:computerphile, count = 1, log-likelihood = -5.79
  recursion:concern, count = 1, log-likelihood = -5.79
  recursion:concerned, count = 1, log-likelihood = -5.79
  recursion:condition, count = 1, log-likelihood = -5.79
  recursion:configuration, count = 1, log-likelihood = -5.79
  recursion:confirm, count = 1, log-likelihood = -5.79
  recursion:confused, count = 17, log-likelihood = -2.96
  recursion:confusing, count = 1, log-likelihood = -5.79
  recursion:connect, count = 1, log-likelihood = -5.79
  recursion:consider, count = 1, log-likelihood = -5.79
  recursion:considered, count = 7, log-likelihood = -3.85
  recursion:consistent, count = 1, log-likelihood = -5.79
  recursion:consisting, count = 1, log-likelihood = -5.79
  recursion:console, count = 1, log-likelihood = -5.79
  recursion:const, count = 7, log-likelihood = -3.85
  recursion:contact, count = 1, log-likelihood = -5.79
  recursion:contain, count = 3, log-likelihood = -4.69
  recursion:contained, count = 2, log-likelihood = -5.1
  recursion:containing, count = 4, log-likelihood = -4.41
  recursion:contains, count = 3, log-likelihood = -4.69
  recursion:contents, count = 1, log-likelihood = -5.79
  recursion:continue, count = 2, log-likelihood = -5.1
  recursion:contribute, count = 1, log-likelihood = -5.79
  recursion:control, count = 2, log-likelihood = -5.1
  recursion:conversion, count = 1, log-likelihood = -5.79
  recursion:convert, count = 2, log-likelihood = -5.1
  recursion:copy, count = 5, log-likelihood = -4.18
  recursion:correct, count = 17, log-likelihood = -2.96
  recursion:correctly, count = 4, log-likelihood = -4.41
  recursion:could, count = 23, log-likelihood = -2.66
  recursion:couldnt, count = 3, log-likelihood = -4.69
  recursion:count, count = 2, log-likelihood = -5.1
  recursion:countchange, count = 3, log-likelihood = -4.69
  recursion:couple, count = 1, log-likelihood = -5.79
  recursion:cout, count = 4, log-likelihood = -4.41
  recursion:covered, count = 1, log-likelihood = -5.79
  recursion:cpp, count = 1, log-likelihood = -5.79
  recursion:crashed, count = 1, log-likelihood = -5.79
  recursion:create, count = 11, log-likelihood = -3.4
  recursion:created, count = 4, log-likelihood = -4.41
  recursion:creates, count = 2, log-likelihood = -5.1
  recursion:creating, count = 2, log-likelihood = -5.1
  recursion:creation, count = 1, log-likelihood = -5.79
  recursion:cross, count = 1, log-likelihood = -5.79
  recursion:ctools, count = 3, log-likelihood = -4.69
  recursion:current, count = 1, log-likelihood = -5.79
  recursion:currently, count = 4, log-likelihood = -4.41
  recursion:data, count = 3, log-likelihood = -4.69
  recursion:datatypes, count = 1, log-likelihood = -5.79
  recursion:db, count = 1, log-likelihood = -5.79
  recursion:deadline, count = 3, log-likelihood = -4.69
  recursion:deal, count = 1, log-likelihood = -5.79
  recursion:debug, count = 3, log-likelihood = -4.69
  recursion:debugger, count = 1, log-likelihood = -5.79
  recursion:decimal, count = 1, log-likelihood = -5.79
  recursion:declaration, count = 1, log-likelihood = -5.79
  recursion:declarations, count = 1, log-likelihood = -5.79
  recursion:declare, count = 3, log-likelihood = -4.69
  recursion:declared, count = 3, log-likelihood = -4.69
  recursion:declares, count = 1, log-likelihood = -5.79
  recursion:declaring, count = 2, log-likelihood = -5.1
  recursion:deducted, count = 1, log-likelihood = -5.79
  recursion:default, count = 1, log-likelihood = -5.79
  recursion:define, count = 3, log-likelihood = -4.69
  recursion:defined, count = 3, log-likelihood = -4.69
  recursion:defining, count = 1, log-likelihood = -5.79
  recursion:definitely, count = 1, log-likelihood = -5.79
  recursion:definition, count = 3, log-likelihood = -4.69
  recursion:delete, count = 1, log-likelihood = -5.79
  recursion:deletetreebinarytreeaaexpaunode1z, count = 1, log-likelihood = -5.79
  recursion:denied, count = 1, log-likelihood = -5.79
  recursion:depend, count = 1, log-likelihood = -5.79
  recursion:depends, count = 1, log-likelihood = -5.79
  recursion:deposited, count = 1, log-likelihood = -5.79
  recursion:describe, count = 1, log-likelihood = -5.79
  recursion:description, count = 1, log-likelihood = -5.79
  recursion:details, count = 1, log-likelihood = -5.79
  recursion:determine, count = 3, log-likelihood = -4.69
  recursion:developing, count = 1, log-likelihood = -5.79
  recursion:did, count = 8, log-likelihood = -3.71
  recursion:didnt, count = 6, log-likelihood = -4
  recursion:diff, count = 1, log-likelihood = -5.79
  recursion:diffcheckercom, count = 1, log-likelihood = -5.79
  recursion:difference, count = 1, log-likelihood = -5.79
  recursion:different, count = 5, log-likelihood = -4.18
  recursion:difficulty, count = 1, log-likelihood = -5.79
  recursion:direction, count = 1, log-likelihood = -5.79
  recursion:directly, count = 2, log-likelihood = -5.1
  recursion:directory, count = 4, log-likelihood = -4.41
  recursion:disappear, count = 1, log-likelihood = -5.79
  recursion:discarded, count = 1, log-likelihood = -5.79
  recursion:discretion, count = 1, log-likelihood = -5.79
  recursion:divided, count = 1, log-likelihood = -5.79
  recursion:do, count = 80, log-likelihood = -1.41
  recursion:docs, count = 1, log-likelihood = -5.79
  recursion:documentation, count = 1, log-likelihood = -5.79
  recursion:documents, count = 1, log-likelihood = -5.79
  recursion:does, count = 42, log-likelihood = -2.06
  recursion:doesnt, count = 9, log-likelihood = -3.6
  recursion:doing, count = 11, log-likelihood = -3.4
  recursion:done, count = 3, log-likelihood = -4.69
  recursion:dont, count = 20, log-likelihood = -2.8
  recursion:double, count = 2, log-likelihood = -5.1
  recursion:doubles, count = 1, log-likelihood = -5.79
  recursion:down, count = 4, log-likelihood = -4.41
  recursion:downloaded, count = 1, log-likelihood = -5.79
  recursion:due, count = 1, log-likelihood = -5.79
  recursion:during, count = 4, log-likelihood = -4.41
  recursion:each, count = 18, log-likelihood = -2.9
  recursion:earlier, count = 2, log-likelihood = -5.1
  recursion:easier, count = 2, log-likelihood = -5.1
  recursion:easily, count = 1, log-likelihood = -5.79
  recursion:easy, count = 3, log-likelihood = -4.69
  recursion:edit, count = 2, log-likelihood = -5.1
  recursion:editor, count = 1, log-likelihood = -5.79
  recursion:eecs, count = 3, log-likelihood = -4.69
  recursion:eecs281, count = 1, log-likelihood = -5.79
  recursion:effects, count = 5, log-likelihood = -4.18
  recursion:efficient, count = 2, log-likelihood = -5.1
  recursion:efficiently, count = 1, log-likelihood = -5.79
  recursion:eg, count = 3, log-likelihood = -4.69
  recursion:either, count = 1, log-likelihood = -5.79
  recursion:element, count = 20, log-likelihood = -2.8
  recursion:elements, count = 7, log-likelihood = -3.85
  recursion:else, count = 7, log-likelihood = -3.85
  recursion:elt, count = 4, log-likelihood = -4.41
  recursion:email, count = 6, log-likelihood = -4
  recursion:empty, count = 27, log-likelihood = -2.5
  recursion:encounter, count = 1, log-likelihood = -5.79
  recursion:encountering, count = 1, log-likelihood = -5.79
  recursion:end, count = 8, log-likelihood = -3.71
  recursion:ended, count = 1, log-likelihood = -5.79
  recursion:enjoy, count = 1, log-likelihood = -5.79
  recursion:enter, count = 1, log-likelihood = -5.79
  recursion:entire, count = 2, log-likelihood = -5.1
  recursion:entirety, count = 1, log-likelihood = -5.79
  recursion:equal, count = 4, log-likelihood = -4.41
  recursion:equals, count = 1, log-likelihood = -5.79
  recursion:equivalent, count = 1, log-likelihood = -5.79
  recursion:equivalents, count = 1, log-likelihood = -5.79
  recursion:error, count = 40, log-likelihood = -2.1
  recursion:errors, count = 6, log-likelihood = -4
  recursion:especially, count = 2, log-likelihood = -5.1
  recursion:est, count = 1, log-likelihood = -5.79
  recursion:estimate, count = 1, log-likelihood = -5.79
  recursion:etc, count = 2, log-likelihood = -5.1
  recursion:evaluate, count = 1, log-likelihood = -5.79
  recursion:evaluated, count = 1, log-likelihood = -5.79
  recursion:even, count = 8, log-likelihood = -3.71
  recursion:ever, count = 1, log-likelihood = -5.79
  recursion:every, count = 6, log-likelihood = -4
  recursion:everything, count = 3, log-likelihood = -4.69
  recursion:everythingespecially, count = 1, log-likelihood = -5.79
  recursion:ex, count = 3, log-likelihood = -4.69
  recursion:exact, count = 4, log-likelihood = -4.41
  recursion:exactly, count = 6, log-likelihood = -4
  recursion:example, count = 24, log-likelihood = -2.61
  recursion:examples, count = 2, log-likelihood = -5.1
  recursion:exampletree, count = 1, log-likelihood = -5.79
  recursion:exception, count = 2, log-likelihood = -5.1
  recursion:excluded, count = 1, log-likelihood = -5.79
  recursion:executed, count = 1, log-likelihood = -5.79
  recursion:exit, count = 4, log-likelihood = -4.41
  recursion:expected, count = 4, log-likelihood = -4.41
  recursion:experiencing, count = 2, log-likelihood = -5.1
  recursion:explain, count = 2, log-likelihood = -5.1
  recursion:explained, count = 1, log-likelihood = -5.79
  recursion:explanation, count = 1, log-likelihood = -5.79
  recursion:explanations, count = 1, log-likelihood = -5.79
  recursion:explicit, count = 1, log-likelihood = -5.79
  recursion:explicitly, count = 1, log-likelihood = -5.79
  recursion:express, count = 1, log-likelihood = -5.79
  recursion:extend, count = 1, log-likelihood = -5.79
  recursion:extension, count = 1, log-likelihood = -5.79
  recursion:extensive, count = 1, log-likelihood = -5.79
  recursion:external, count = 1, log-likelihood = -5.79
  recursion:externals, count = 1, log-likelihood = -5.79
  recursion:extra, count = 1, log-likelihood = -5.79
  recursion:extract, count = 1, log-likelihood = -5.79
  recursion:extremely, count = 1, log-likelihood = -5.79
  recursion:f46f45, count = 1, log-likelihood = -5.79
  recursion:f47, count = 1, log-likelihood = -5.79
  recursion:fact, count = 1, log-likelihood = -5.79
  recursion:factorial, count = 1, log-likelihood = -5.79
  recursion:fail, count = 2, log-likelihood = -5.1
  recursion:failed, count = 6, log-likelihood = -4
  recursion:failing, count = 2, log-likelihood = -5.1
  recursion:fails, count = 1, log-likelihood = -5.79
  recursion:fairly, count = 2, log-likelihood = -5.1
  recursion:false, count = 3, log-likelihood = -4.69
  recursion:faqs, count = 1, log-likelihood = -5.79
  recursion:far, count = 3, log-likelihood = -4.69
  recursion:farthest, count = 1, log-likelihood = -5.79
  recursion:fatal, count = 1, log-likelihood = -5.79
  recursion:february, count = 1, log-likelihood = -5.79
  recursion:feel, count = 3, log-likelihood = -4.69
  recursion:feels, count = 1, log-likelihood = -5.79
  recursion:felt, count = 1, log-likelihood = -5.79
  recursion:few, count = 3, log-likelihood = -4.69
  recursion:fhelper, count = 1, log-likelihood = -5.79
  recursion:fhelperx, count = 1, log-likelihood = -5.79
  recursion:fib, count = 5, log-likelihood = -4.18
  recursion:fib0, count = 1, log-likelihood = -5.79
  recursion:fib1, count = 1, log-likelihood = -5.79
  recursion:fib3, count = 1, log-likelihood = -5.79
  recursion:fibint, count = 1, log-likelihood = -5.79
  recursion:fibn, count = 1, log-likelihood = -5.79
  recursion:fibn1, count = 1, log-likelihood = -5.79
  recursion:fibonacci, count = 4, log-likelihood = -4.41
  recursion:fibtail, count = 8, log-likelihood = -3.71
  recursion:fibtest, count = 1, log-likelihood = -5.79
  recursion:figure, count = 3, log-likelihood = -4.69
  recursion:file, count = 23, log-likelihood = -2.66
  recursion:files, count = 17, log-likelihood = -2.96
  recursion:fill, count = 3, log-likelihood = -4.69
  recursion:filled, count = 1, log-likelihood = -5.79
  recursion:fillintheblanks, count = 1, log-likelihood = -5.79
  recursion:filter, count = 8, log-likelihood = -3.71
  recursion:filterbool, count = 1, log-likelihood = -5.79
  recursion:filtered, count = 1, log-likelihood = -5.79
  recursion:filtereven, count = 5, log-likelihood = -4.18
  recursion:filterevenhelperlistt, count = 1, log-likelihood = -5.79
  recursion:filterevenodd, count = 1, log-likelihood = -5.79
  recursion:filterlistt, count = 2, log-likelihood = -5.1
  recursion:filterodd, count = 7, log-likelihood = -3.85
  recursion:filterrecursivelist, count = 2, log-likelihood = -5.1
  recursion:filtertest, count = 1, log-likelihood = -5.79
  recursion:filtertestcpp, count = 2, log-likelihood = -5.1
  recursion:filtertestcpptextstartup0x172, count = 1, log-likelihood = -5.79
  recursion:final, count = 3, log-likelihood = -4.69
  recursion:finally, count = 1, log-likelihood = -5.79
  recursion:find, count = 15, log-likelihood = -3.08
  recursion:finding, count = 2, log-likelihood = -5.1
  recursion:fine, count = 7, log-likelihood = -3.85
  recursion:finish, count = 1, log-likelihood = -5.79
  recursion:finished, count = 4, log-likelihood = -4.41
  recursion:first, count = 20, log-likelihood = -2.8
  recursion:fits, count = 1, log-likelihood = -5.79
  recursion:fix, count = 8, log-likelihood = -3.71
  recursion:fixed, count = 1, log-likelihood = -5.79
  recursion:flag, count = 1, log-likelihood = -5.79
  recursion:floor, count = 1, log-likelihood = -5.79
  recursion:fn, count = 8, log-likelihood = -3.71
  recursion:fnidentity, count = 1, log-likelihood = -5.79
  recursion:fnint, count = 3, log-likelihood = -4.69
  recursion:fnlistfirstlist, count = 1, log-likelihood = -5.79
  recursion:fnx, count = 1, log-likelihood = -5.79
  recursion:folder, count = 3, log-likelihood = -4.69
  recursion:follow, count = 2, log-likelihood = -5.1
  recursion:followed, count = 2, log-likelihood = -5.1
  recursion:following, count = 7, log-likelihood = -3.85
  recursion:foo, count = 1, log-likelihood = -5.79
  recursion:foohelperbar, count = 1, log-likelihood = -5.79
  recursion:foohelperint, count = 1, log-likelihood = -5.79
  recursion:fooint, count = 2, log-likelihood = -5.1
  recursion:foox, count = 1, log-likelihood = -5.79
  recursion:foox1, count = 1, log-likelihood = -5.79
  recursion:foox1y, count = 1, log-likelihood = -5.79
  recursion:fooxy1, count = 1, log-likelihood = -5.79
  recursion:for, count = 152, log-likelihood = -0.769
  recursion:forbidden, count = 1, log-likelihood = -5.79
  recursion:forgot, count = 4, log-likelihood = -4.41
  recursion:foriteration, count = 1, log-likelihood = -5.79
  recursion:form, count = 3, log-likelihood = -4.69
  recursion:formula, count = 1, log-likelihood = -5.79
  recursion:forward, count = 1, log-likelihood = -5.79
  recursion:found, count = 7, log-likelihood = -3.85
  recursion:four, count = 1, log-likelihood = -5.79
  recursion:fpermissive, count = 1, log-likelihood = -5.79
  recursion:frames, count = 2, log-likelihood = -5.1
  recursion:free, count = 3, log-likelihood = -4.69
  recursion:french, count = 1, log-likelihood = -5.79
  recursion:friday, count = 1, log-likelihood = -5.79
  recursion:friend, count = 2, log-likelihood = -5.1
  recursion:from, count = 25, log-likelihood = -2.57
  recursion:front, count = 3, log-likelihood = -4.69
  recursion:fuctions, count = 1, log-likelihood = -5.79
  recursion:function, count = 130, log-likelihood = -0.925
  recursion:functionality, count = 1, log-likelihood = -5.79
  recursion:functions, count = 84, log-likelihood = -1.36
  recursion:functionsfn, count = 1, log-likelihood = -5.79
  recursion:functionsincluding, count = 1, log-likelihood = -5.79
  recursion:functionslike, count = 1, log-likelihood = -5.79
  recursion:fundamentally, count = 1, log-likelihood = -5.79
  recursion:further, count = 1, log-likelihood = -5.79
  recursion:fx, count = 1, log-likelihood = -5.79
  recursion:g, count = 7, log-likelihood = -3.85
  recursion:gain, count = 1, log-likelihood = -5.79
  recursion:gave, count = 1, log-likelihood = -5.79
  recursion:gdrive, count = 1, log-likelihood = -5.79
  recursion:generalization, count = 1, log-likelihood = -5.79
  recursion:generally, count = 1, log-likelihood = -5.79
  recursion:generated, count = 1, log-likelihood = -5.79
  recursion:get, count = 29, log-likelihood = -2.43
  recursion:getting, count = 20, log-likelihood = -2.8
  recursion:ghelper, count = 1, log-likelihood = -5.79
  recursion:girl, count = 1, log-likelihood = -5.79
  recursion:github, count = 2, log-likelihood = -5.1
  recursion:give, count = 4, log-likelihood = -4.41
  recursion:given, count = 14, log-likelihood = -3.15
  recursion:gives, count = 5, log-likelihood = -4.18
  recursion:giving, count = 3, log-likelihood = -4.69
  recursion:global, count = 1, log-likelihood = -5.79
  recursion:go, count = 10, log-likelihood = -3.49
  recursion:goes, count = 1, log-likelihood = -5.79
  recursion:going, count = 8, log-likelihood = -3.71
  recursion:gone, count = 1, log-likelihood = -5.79
  recursion:good, count = 3, log-likelihood = -4.69
  recursion:goodcode, count = 1, log-likelihood = -5.79
  recursion:google, count = 1, log-likelihood = -5.79
  recursion:got, count = 5, log-likelihood = -4.18
  recursion:grade, count = 5, log-likelihood = -4.18
  recursion:gradebook, count = 1, log-likelihood = -5.79
  recursion:graded, count = 5, log-likelihood = -4.18
  recursion:grader, count = 2, log-likelihood = -5.1
  recursion:grades, count = 3, log-likelihood = -4.69
  recursion:grading, count = 5, log-likelihood = -4.18
  recursion:granted, count = 1, log-likelihood = -5.79
  recursion:grape, count = 1, log-likelihood = -5.79
  recursion:grasp, count = 1, log-likelihood = -5.79
  recursion:great, count = 2, log-likelihood = -5.1
  recursion:greater, count = 2, log-likelihood = -5.1
  recursion:greatest, count = 1, log-likelihood = -5.79
  recursion:greatly, count = 2, log-likelihood = -5.1
  recursion:group, count = 1, log-likelihood = -5.79
  recursion:gsi, count = 1, log-likelihood = -5.79
  recursion:guaranteed, count = 1, log-likelihood = -5.79
  recursion:guess, count = 1, log-likelihood = -5.79
  recursion:guide, count = 1, log-likelihood = -5.79
  recursion:guidelines, count = 3, log-likelihood = -4.69
  recursion:gx, count = 1, log-likelihood = -5.79
  recursion:h, count = 2, log-likelihood = -5.1
  recursion:had, count = 8, log-likelihood = -3.71
  recursion:hand, count = 2, log-likelihood = -5.1
  recursion:handled, count = 1, log-likelihood = -5.79
  recursion:handling, count = 1, log-likelihood = -5.79
  recursion:happen, count = 1, log-likelihood = -5.79
  recursion:happened, count = 1, log-likelihood = -5.79
  recursion:happening, count = 2, log-likelihood = -5.1
  recursion:happens, count = 5, log-likelihood = -4.18
  recursion:hard, count = 3, log-likelihood = -4.69
  recursion:has, count = 16, log-likelihood = -3.02
  recursion:have, count = 65, log-likelihood = -1.62
  recursion:havent, count = 1, log-likelihood = -5.79
  recursion:having, count = 14, log-likelihood = -3.15
  recursion:he, count = 2, log-likelihood = -5.1
  recursion:header, count = 1, log-likelihood = -5.79
  recursion:heard, count = 3, log-likelihood = -4.69
  recursion:hearing, count = 1, log-likelihood = -5.79
  recursion:hell, count = 1, log-likelihood = -5.79
  recursion:hello, count = 3, log-likelihood = -4.69
  recursion:help, count = 9, log-likelihood = -3.6
  recursion:helper, count = 49, log-likelihood = -1.9
  recursion:helpercpp, count = 1, log-likelihood = -5.79
  recursion:helpers, count = 1, log-likelihood = -5.79
  recursion:helpful, count = 1, log-likelihood = -5.79
  recursion:helping, count = 1, log-likelihood = -5.79
  recursion:her, count = 1, log-likelihood = -5.79
  recursion:here, count = 10, log-likelihood = -3.49
  recursion:hey, count = 2, log-likelihood = -5.1
  recursion:hi, count = 6, log-likelihood = -4
  recursion:hidden, count = 1, log-likelihood = -5.79
  recursion:higher, count = 1, log-likelihood = -5.79
  recursion:highest, count = 3, log-likelihood = -4.69
  recursion:highlighted, count = 2, log-likelihood = -5.1
  recursion:hint, count = 2, log-likelihood = -5.1
  recursion:hints, count = 3, log-likelihood = -4.69
  recursion:his, count = 3, log-likelihood = -4.69
  recursion:honor, count = 2, log-likelihood = -5.1
  recursion:hopefully, count = 1, log-likelihood = -5.79
  recursion:hour, count = 1, log-likelihood = -5.79
  recursion:hours, count = 4, log-likelihood = -4.41
  recursion:how, count = 41, log-likelihood = -2.08
  recursion:however, count = 19, log-likelihood = -2.85
  recursion:httpclass1eecsumichedu, count = 1, log-likelihood = -5.79
  recursion:httpsclass1eecsumicheducallbackmodeselectnextreason, count = 1, log-likelihood = -5.79
  recursion:httpsdrivegooglecomaumichedufiled0b61plkcmluejvlzoz2zqulp2a00viewuspsharing, count = 1, log-likelihood = -5.79
  recursion:httpswwwyoutubecomwatchvmv9nexx1vhc, count = 1, log-likelihood = -5.79
  recursion:hypothetically, count = 2, log-likelihood = -5.1
  recursion:i, count = 182, log-likelihood = -0.589
  recursion:id, count = 1, log-likelihood = -5.79
  recursion:idea, count = 2, log-likelihood = -5.1
  recursion:ideas, count = 1, log-likelihood = -5.79
  recursion:identical, count = 1, log-likelihood = -5.79
  recursion:identically, count = 1, log-likelihood = -5.79
  recursion:identifier, count = 1, log-likelihood = -5.79
  recursion:identify, count = 1, log-likelihood = -5.79
  recursion:identifying, count = 1, log-likelihood = -5.79
  recursion:identities, count = 2, log-likelihood = -5.1
  recursion:identity, count = 10, log-likelihood = -3.49
  recursion:ie, count = 3, log-likelihood = -4.69
  recursion:if, count = 85, log-likelihood = -1.35
  recursion:ignore, count = 2, log-likelihood = -5.1
  recursion:ill, count = 2, log-likelihood = -5.1
  recursion:illegal, count = 1, log-likelihood = -5.79
  recursion:illustrating, count = 1, log-likelihood = -5.79
  recursion:im, count = 37, log-likelihood = -2.18
  recursion:immediately, count = 1, log-likelihood = -5.79
  recursion:impact, count = 1, log-likelihood = -5.79
  recursion:impatient, count = 1, log-likelihood = -5.79
  recursion:implement, count = 7, log-likelihood = -3.85
  recursion:implementation, count = 2, log-likelihood = -5.1
  recursion:implementations, count = 4, log-likelihood = -4.41
  recursion:implemented, count = 4, log-likelihood = -4.41
  recursion:implementing, count = 5, log-likelihood = -4.18
  recursion:implentation, count = 1, log-likelihood = -5.79
  recursion:impression, count = 1, log-likelihood = -5.79
  recursion:improper, count = 1, log-likelihood = -5.79
  recursion:in, count = 155, log-likelihood = -0.75
  recursion:include, count = 14, log-likelihood = -3.15
  recursion:includecassert, count = 1, log-likelihood = -5.79
  recursion:included, count = 5, log-likelihood = -4.18
  recursion:includeiostream, count = 1, log-likelihood = -5.79
  recursion:including, count = 1, log-likelihood = -5.79
  recursion:incorrect, count = 2, log-likelihood = -5.1
  recursion:incorrectly, count = 1, log-likelihood = -5.79
  recursion:independently, count = 1, log-likelihood = -5.79
  recursion:index, count = 1, log-likelihood = -5.79
  recursion:indexed, count = 1, log-likelihood = -5.79
  recursion:indicate, count = 2, log-likelihood = -5.1
  recursion:individual, count = 1, log-likelihood = -5.79
  recursion:individually, count = 1, log-likelihood = -5.79
  recursion:inget, count = 1, log-likelihood = -5.79
  recursion:initial, count = 2, log-likelihood = -5.1
  recursion:initialize, count = 3, log-likelihood = -4.69
  recursion:input, count = 2, log-likelihood = -5.1
  recursion:inputed, count = 1, log-likelihood = -5.79
  recursion:insert, count = 3, log-likelihood = -4.69
  recursion:inside, count = 10, log-likelihood = -3.49
  recursion:instance, count = 2, log-likelihood = -5.1
  recursion:instead, count = 9, log-likelihood = -3.6
  recursion:instructors, count = 1, log-likelihood = -5.79
  recursion:int, count = 25, log-likelihood = -2.57
  recursion:integer, count = 6, log-likelihood = -4
  recursion:integers, count = 5, log-likelihood = -4.18
  recursion:intended, count = 2, log-likelihood = -5.1
  recursion:intermediate, count = 1, log-likelihood = -5.79
  recursion:into, count = 18, log-likelihood = -2.9
  recursion:ints, count = 3, log-likelihood = -4.69
  recursion:invalid, count = 3, log-likelihood = -4.69
  recursion:invocation, count = 3, log-likelihood = -4.69
  recursion:involve, count = 1, log-likelihood = -5.79
  recursion:iostream, count = 4, log-likelihood = -4.41
  recursion:is, count = 159, log-likelihood = -0.724
  recursion:isnt, count = 8, log-likelihood = -3.71
  recursion:issue, count = 9, log-likelihood = -3.6
  recursion:issues, count = 1, log-likelihood = -5.79
  recursion:it, count = 136, log-likelihood = -0.88
  recursion:item, count = 2, log-likelihood = -5.1
  recursion:items, count = 6, log-likelihood = -4
  recursion:itemvalues, count = 4, log-likelihood = -4.41
  recursion:itemvalues1, count = 1, log-likelihood = -5.79
  recursion:itemweights, count = 2, log-likelihood = -5.1
  recursion:iterate, count = 1, log-likelihood = -5.79
  recursion:iteration, count = 2, log-likelihood = -5.1
  recursion:iterations, count = 1, log-likelihood = -5.79
  recursion:itll, count = 1, log-likelihood = -5.79
  recursion:its, count = 20, log-likelihood = -2.8
  recursion:itself, count = 4, log-likelihood = -4.41
  recursion:ive, count = 5, log-likelihood = -4.18
  recursion:james, count = 1, log-likelihood = -5.79
  recursion:jumping, count = 1, log-likelihood = -5.79
  recursion:just, count = 47, log-likelihood = -1.94
  recursion:k, count = 1, log-likelihood = -5.79
  recursion:keep, count = 13, log-likelihood = -3.23
  recursion:keeps, count = 5, log-likelihood = -4.18
  recursion:keyword, count = 1, log-likelihood = -5.79
  recursion:kind, count = 3, log-likelihood = -4.69
  recursion:knapsack, count = 5, log-likelihood = -4.18
  recursion:know, count = 29, log-likelihood = -2.43
  recursion:knowing, count = 1, log-likelihood = -5.79
  recursion:label, count = 1, log-likelihood = -5.79
  recursion:labster, count = 10, log-likelihood = -3.49
  recursion:larger, count = 1, log-likelihood = -5.79
  recursion:last, count = 6, log-likelihood = -4
  recursion:later, count = 1, log-likelihood = -5.79
  recursion:ld, count = 4, log-likelihood = -4.41
  recursion:least, count = 4, log-likelihood = -4.41
  recursion:leave, count = 1, log-likelihood = -5.79
  recursion:lecture, count = 3, log-likelihood = -4.69
  recursion:left, count = 9, log-likelihood = -3.6
  recursion:lefter, count = 1, log-likelihood = -5.79
  recursion:leftmost, count = 1, log-likelihood = -5.79
  recursion:lefttree, count = 1, log-likelihood = -5.79
  recursion:length, count = 1, log-likelihood = -5.79
  recursion:less, count = 3, log-likelihood = -4.69
  recursion:lest, count = 1, log-likelihood = -5.79
  recursion:let, count = 4, log-likelihood = -4.41
  recursion:lets, count = 1, log-likelihood = -5.79
  recursion:level, count = 1, log-likelihood = -5.79
  recursion:libcabidylib, count = 1, log-likelihood = -5.79
  recursion:libraries, count = 3, log-likelihood = -4.69
  recursion:library, count = 4, log-likelihood = -4.41
  recursion:lie, count = 1, log-likelihood = -5.79
  recursion:lieu, count = 1, log-likelihood = -5.79
  recursion:light, count = 1, log-likelihood = -5.79
  recursion:like, count = 25, log-likelihood = -2.57
  recursion:limit, count = 1, log-likelihood = -5.79
  recursion:limits, count = 1, log-likelihood = -5.79
  recursion:line, count = 7, log-likelihood = -3.85
  recursion:lines, count = 1, log-likelihood = -5.79
  recursion:link, count = 2, log-likelihood = -5.1
  recursion:linked, count = 1, log-likelihood = -5.79
  recursion:linker, count = 2, log-likelihood = -5.1
  recursion:links, count = 1, log-likelihood = -5.79
  recursion:list, count = 57, log-likelihood = -1.75
  recursion:lista, count = 3, log-likelihood = -4.69
  recursion:listb, count = 2, log-likelihood = -5.1
  recursion:listc, count = 1, log-likelihood = -5.79
  recursion:listcontains, count = 4, log-likelihood = -4.41
  recursion:listcontainsclass, count = 1, log-likelihood = -5.79
  recursion:listcontainsyanvrecursivelisthz, count = 1, log-likelihood = -5.79
  recursion:listed, count = 1, log-likelihood = -5.79
  recursion:listequal, count = 3, log-likelihood = -4.69
  recursion:listexception, count = 1, log-likelihood = -5.79
  recursion:listextreme, count = 1, log-likelihood = -5.79
  recursion:listextremehelp, count = 1, log-likelihood = -5.79
  recursion:listfirst, count = 3, log-likelihood = -4.69
  recursion:listfirstclass, count = 1, log-likelihood = -5.79
  recursion:listfirstlist, count = 1, log-likelihood = -5.79
  recursion:listfirstrecursivelist, count = 1, log-likelihood = -5.79
  recursion:listfirstyahabvrecursivelistz, count = 1, log-likelihood = -5.79
  recursion:listinsert4, count = 1, log-likelihood = -5.79
  recursion:listinsertlistt, count = 1, log-likelihood = -5.79
  recursion:listisempty, count = 1, log-likelihood = -5.79
  recursion:listisemptyclass, count = 1, log-likelihood = -5.79
  recursion:listisemptyrecursivelist, count = 1, log-likelihood = -5.79
  recursion:listisemptyyanabvrecursivelistz, count = 1, log-likelihood = -5.79
  recursion:listmake, count = 7, log-likelihood = -3.85
  recursion:listmake1, count = 1, log-likelihood = -5.79
  recursion:listmake2, count = 1, log-likelihood = -5.79
  recursion:listmake3, count = 1, log-likelihood = -5.79
  recursion:listmake4, count = 2, log-likelihood = -5.1
  recursion:listmake5, count = 1, log-likelihood = -5.79
  recursion:listmakeint, count = 3, log-likelihood = -4.69
  recursion:listmakeintclass, count = 1, log-likelihood = -5.79
  recursion:listmaketreeelttreelist, count = 1, log-likelihood = -5.79
  recursion:listmakevoid, count = 1, log-likelihood = -5.79
  recursion:listmakeyaavrecursivelisthabv1z, count = 1, log-likelihood = -5.79
  recursion:listmakeyaavrecursivelistxz, count = 1, log-likelihood = -5.79
  recursion:listrest, count = 3, log-likelihood = -4.69
  recursion:listrestclass, count = 1, log-likelihood = -5.79
  recursion:listrestrecursivelist, count = 1, log-likelihood = -5.79
  recursion:listrestyaavrecursivelistabv1z, count = 1, log-likelihood = -5.79
  recursion:lists, count = 20, log-likelihood = -2.8
  recursion:listsize, count = 1, log-likelihood = -5.79
  recursion:listt, count = 14, log-likelihood = -3.15
  recursion:listtree, count = 1, log-likelihood = -5.79
  recursion:little, count = 5, log-likelihood = -4.18
  recursion:lnk1120, count = 1, log-likelihood = -5.79
  recursion:lnk2001, count = 1, log-likelihood = -5.79
  recursion:lnk2019, count = 1, log-likelihood = -5.79
  recursion:logged, count = 1, log-likelihood = -5.79
  recursion:long, count = 5, log-likelihood = -4.18
  recursion:longer, count = 2, log-likelihood = -5.1
  recursion:look, count = 2, log-likelihood = -5.1
  recursion:looking, count = 5, log-likelihood = -4.18
  recursion:looks, count = 3, log-likelihood = -4.69
  recursion:loop, count = 5, log-likelihood = -4.18
  recursion:loops, count = 2, log-likelihood = -5.1
  recursion:loose, count = 1, log-likelihood = -5.79
  recursion:lose, count = 1, log-likelihood = -5.79
  recursion:lost, count = 3, log-likelihood = -4.69
  recursion:lot, count = 4, log-likelihood = -4.41
  recursion:lounge, count = 1, log-likelihood = -5.79
  recursion:love, count = 1, log-likelihood = -5.79
  recursion:lower, count = 1, log-likelihood = -5.79
  recursion:lowest, count = 1, log-likelihood = -5.79
  recursion:ls, count = 1, log-likelihood = -5.79
  recursion:m, count = 1, log-likelihood = -5.79
  recursion:made, count = 5, log-likelihood = -4.18
  recursion:main, count = 7, log-likelihood = -3.85
  recursion:maintain, count = 1, log-likelihood = -5.79
  recursion:make, count = 40, log-likelihood = -2.1
  recursion:makefile, count = 5, log-likelihood = -4.18
  recursion:makes, count = 2, log-likelihood = -5.1
  recursion:making, count = 6, log-likelihood = -4
  recursion:many, count = 4, log-likelihood = -4.41
  recursion:mark, count = 1, log-likelihood = -5.79
  recursion:marked, count = 2, log-likelihood = -5.1
  recursion:match, count = 1, log-likelihood = -5.79
  recursion:matdata, count = 1, log-likelihood = -5.79
  recursion:materials, count = 1, log-likelihood = -5.79
  recursion:mathematical, count = 1, log-likelihood = -5.79
  recursion:matter, count = 1, log-likelihood = -5.79
  recursion:max, count = 3, log-likelihood = -4.69
  recursion:maximum, count = 2, log-likelihood = -5.1
  recursion:maxint, count = 1, log-likelihood = -5.79
  recursion:maxvale, count = 1, log-likelihood = -5.79
  recursion:maxvalue, count = 13, log-likelihood = -3.23
  recursion:maxvalueint, count = 1, log-likelihood = -5.79
  recursion:maxvaluetest, count = 2, log-likelihood = -5.1
  recursion:maxvaluetestcpp, count = 3, log-likelihood = -4.69
  recursion:maxvaluetestcpptextstartup0x76, count = 1, log-likelihood = -5.79
  recursion:may, count = 5, log-likelihood = -4.18
  recursion:me, count = 29, log-likelihood = -2.43
  recursion:mean, count = 14, log-likelihood = -3.15
  recursion:meaning, count = 3, log-likelihood = -4.69
  recursion:means, count = 8, log-likelihood = -3.71
  recursion:meant, count = 2, log-likelihood = -5.1
  recursion:memory, count = 1, log-likelihood = -5.79
  recursion:mention, count = 1, log-likelihood = -5.79
  recursion:mentioned, count = 2, log-likelihood = -5.1
  recursion:mess, count = 1, log-likelihood = -5.79
  recursion:message, count = 8, log-likelihood = -3.71
  recursion:messages, count = 3, log-likelihood = -4.69
  recursion:messed, count = 1, log-likelihood = -5.79
  recursion:middle, count = 1, log-likelihood = -5.79
  recursion:might, count = 3, log-likelihood = -4.69
  recursion:mine, count = 1, log-likelihood = -5.79
  recursion:minutes, count = 3, log-likelihood = -4.69
  recursion:missed, count = 1, log-likelihood = -5.79
  recursion:missing, count = 2, log-likelihood = -5.1
  recursion:mistakes, count = 1, log-likelihood = -5.79
  recursion:model, count = 1, log-likelihood = -5.79
  recursion:modification, count = 1, log-likelihood = -5.79
  recursion:modifying, count = 1, log-likelihood = -5.79
  recursion:moment, count = 1, log-likelihood = -5.79
  recursion:more, count = 14, log-likelihood = -3.15
  recursion:most, count = 1, log-likelihood = -5.79
  recursion:move, count = 1, log-likelihood = -5.79
  recursion:moving, count = 1, log-likelihood = -5.79
  recursion:much, count = 5, log-likelihood = -4.18
  recursion:multiple, count = 6, log-likelihood = -4
  recursion:multiplication, count = 2, log-likelihood = -5.1
  recursion:multiplicative, count = 1, log-likelihood = -5.79
  recursion:multiply, count = 3, log-likelihood = -4.69
  recursion:must, count = 11, log-likelihood = -3.4
  recursion:my, count = 79, log-likelihood = -1.42
  recursion:myself, count = 1, log-likelihood = -5.79
  recursion:n, count = 9, log-likelihood = -3.6
  recursion:n6, count = 1, log-likelihood = -5.79
  recursion:name, count = 4, log-likelihood = -4.41
  recursion:named, count = 1, log-likelihood = -5.79
  recursion:namely, count = 1, log-likelihood = -5.79
  recursion:namespace, count = 1, log-likelihood = -5.79
  recursion:nano, count = 1, log-likelihood = -5.79
  recursion:nearly, count = 1, log-likelihood = -5.79
  recursion:necessarily, count = 3, log-likelihood = -4.69
  recursion:necessary, count = 4, log-likelihood = -4.41
  recursion:need, count = 35, log-likelihood = -2.24
  recursion:needed, count = 1, log-likelihood = -5.79
  recursion:needs, count = 1, log-likelihood = -5.79
  recursion:negative, count = 2, log-likelihood = -5.1
  recursion:never, count = 2, log-likelihood = -5.1
  recursion:new, count = 11, log-likelihood = -3.4
  recursion:next, count = 4, log-likelihood = -4.41
  recursion:night, count = 1, log-likelihood = -5.79
  recursion:no, count = 12, log-likelihood = -3.31
  recursion:node, count = 2, log-likelihood = -5.1
  recursion:nodes, count = 1, log-likelihood = -5.79
  recursion:none, count = 1, log-likelihood = -5.79
  recursion:nontail, count = 2, log-likelihood = -5.1
  recursion:nonvoid, count = 2, log-likelihood = -5.1
  recursion:normal, count = 1, log-likelihood = -5.79
  recursion:north, count = 1, log-likelihood = -5.79
  recursion:not, count = 69, log-likelihood = -1.56
  recursion:note, count = 1, log-likelihood = -5.79
  recursion:nothing, count = 3, log-likelihood = -4.69
  recursion:notice, count = 2, log-likelihood = -5.1
  recursion:noticeable, count = 1, log-likelihood = -5.79
  recursion:noticed, count = 3, log-likelihood = -4.69
  recursion:now, count = 3, log-likelihood = -4.69
  recursion:ns, count = 1, log-likelihood = -5.79
  recursion:num, count = 1, log-likelihood = -5.79
  recursion:number, count = 10, log-likelihood = -3.49
  recursion:numbers, count = 8, log-likelihood = -3.71
  recursion:numcoins, count = 1, log-likelihood = -5.79
  recursion:numerical, count = 1, log-likelihood = -5.79
  recursion:numitems, count = 2, log-likelihood = -5.1
  recursion:numpartitions, count = 6, log-likelihood = -4
  recursion:o, count = 6, log-likelihood = -4
  recursion:o1, count = 1, log-likelihood = -5.79
  recursion:o2, count = 4, log-likelihood = -4.41
  recursion:object, count = 1, log-likelihood = -5.79
  recursion:obtain, count = 1, log-likelihood = -5.79
  recursion:obvious, count = 1, log-likelihood = -5.79
  recursion:occurring, count = 1, log-likelihood = -5.79
  recursion:occurs, count = 1, log-likelihood = -5.79
  recursion:odd, count = 2, log-likelihood = -5.1
  recursion:of, count = 128, log-likelihood = -0.941
  recursion:off, count = 3, log-likelihood = -4.69
  recursion:offer, count = 1, log-likelihood = -5.79
  recursion:office, count = 1, log-likelihood = -5.79
  recursion:official, count = 1, log-likelihood = -5.79
  recursion:ok, count = 3, log-likelihood = -4.69
  recursion:okay, count = 5, log-likelihood = -4.18
  recursion:old, count = 2, log-likelihood = -5.1
  recursion:on, count = 42, log-likelihood = -2.06
  recursion:once, count = 5, log-likelihood = -4.18
  recursion:one, count = 41, log-likelihood = -2.08
  recursion:ones, count = 2, log-likelihood = -5.1
  recursion:online, count = 1, log-likelihood = -5.79
  recursion:only, count = 26, log-likelihood = -2.53
  recursion:onto, count = 2, log-likelihood = -5.1
  recursion:open, count = 3, log-likelihood = -4.69
  recursion:operation, count = 1, log-likelihood = -5.79
  recursion:operator, count = 2, log-likelihood = -5.1
  recursion:or, count = 91, log-likelihood = -1.28
  recursion:order, count = 8, log-likelihood = -3.71
  recursion:original, count = 4, log-likelihood = -4.41
  recursion:other, count = 26, log-likelihood = -2.53
  recursion:others, count = 1, log-likelihood = -5.79
  recursion:our, count = 34, log-likelihood = -2.27
  recursion:out, count = 21, log-likelihood = -2.75
  recursion:output, count = 9, log-likelihood = -3.6
  recursion:outputs, count = 3, log-likelihood = -4.69
  recursion:outputted, count = 1, log-likelihood = -5.79
  recursion:outputting, count = 1, log-likelihood = -5.79
  recursion:outside, count = 2, log-likelihood = -5.1
  recursion:over, count = 2, log-likelihood = -5.1
  recursion:overloaded, count = 1, log-likelihood = -5.79
  recursion:overthinking, count = 1, log-likelihood = -5.79
  recursion:overwritten, count = 1, log-likelihood = -5.79
  recursion:own, count = 6, log-likelihood = -4
  recursion:p2, count = 4, log-likelihood = -4.41
  recursion:p2cpp, count = 34, log-likelihood = -2.27
  recursion:p2cpp2731, count = 1, log-likelihood = -5.79
  recursion:p2cpptext0x98, count = 1, log-likelihood = -5.79
  recursion:p2cpptext0xa7, count = 1, log-likelihood = -5.79
  recursion:p2cpptext0xb1, count = 1, log-likelihood = -5.79
  recursion:p2cpptext0xbe, count = 1, log-likelihood = -5.79
  recursion:p2cpptext0xcb, count = 1, log-likelihood = -5.79
  recursion:p2h, count = 11, log-likelihood = -3.4
  recursion:p2h8215, count = 1, log-likelihood = -5.79
  recursion:p2test, count = 1, log-likelihood = -5.79
  recursion:p2testcpp, count = 1, log-likelihood = -5.79
  recursion:p2tests, count = 7, log-likelihood = -3.85
  recursion:p2tests586f0eo, count = 1, log-likelihood = -5.79
  recursion:p2testscpp, count = 15, log-likelihood = -3.08
  recursion:p2testscpp40730, count = 1, log-likelihood = -5.79
  recursion:p2testscpptext0x21, count = 1, log-likelihood = -5.79
  recursion:p2testscpptext0x3f, count = 1, log-likelihood = -5.79
  recursion:p2testscpptext0x52, count = 1, log-likelihood = -5.79
  recursion:p2testscpptext0x5e, count = 1, log-likelihood = -5.79
  recursion:p2testscpptext0x6f, count = 1, log-likelihood = -5.79
  recursion:p2testso, count = 1, log-likelihood = -5.79
  recursion:page, count = 2, log-likelihood = -5.1
  recursion:painful, count = 1, log-likelihood = -5.79
  recursion:parameter, count = 8, log-likelihood = -3.71
  recursion:parameters, count = 4, log-likelihood = -4.41
  recursion:part, count = 3, log-likelihood = -4.69
  recursion:particular, count = 4, log-likelihood = -4.41
  recursion:partition, count = 5, log-likelihood = -4.18
  recursion:partitions, count = 2, log-likelihood = -5.1
  recursion:partner, count = 15, log-likelihood = -3.08
  recursion:partners, count = 7, log-likelihood = -3.85
  recursion:parts, count = 1, log-likelihood = -5.79
  recursion:pass, count = 10, log-likelihood = -3.49
  recursion:passed, count = 6, log-likelihood = -4
  recursion:passedthe, count = 1, log-likelihood = -5.79
  recursion:passes, count = 3, log-likelihood = -4.69
  recursion:passing, count = 3, log-likelihood = -4.69
  recursion:password, count = 1, log-likelihood = -5.79
  recursion:past, count = 1, log-likelihood = -5.79
  recursion:paste, count = 2, log-likelihood = -5.1
  recursion:pasted, count = 1, log-likelihood = -5.79
  recursion:pasting, count = 1, log-likelihood = -5.79
  recursion:pattern, count = 1, log-likelihood = -5.79
  recursion:pause, count = 1, log-likelihood = -5.79
  recursion:pay, count = 1, log-likelihood = -5.79
  recursion:pdf, count = 1, log-likelihood = -5.79
  recursion:peak, count = 1, log-likelihood = -5.79
  recursion:pedantic, count = 5, log-likelihood = -4.18
  recursion:peer, count = 1, log-likelihood = -5.79
  recursion:pending, count = 1, log-likelihood = -5.79
  recursion:people, count = 3, log-likelihood = -4.69
  recursion:perfectly, count = 2, log-likelihood = -5.1
  recursion:perhaps, count = 1, log-likelihood = -5.79
  recursion:permission, count = 1, log-likelihood = -5.79
  recursion:person, count = 2, log-likelihood = -5.1
  recursion:piazza, count = 4, log-likelihood = -4.41
  recursion:picture, count = 2, log-likelihood = -5.1
  recursion:pin, count = 1, log-likelihood = -5.79
  recursion:place, count = 1, log-likelihood = -5.79
  recursion:placeholder, count = 1, log-likelihood = -5.79
  recursion:please, count = 7, log-likelihood = -3.85
  recursion:plug, count = 1, log-likelihood = -5.79
  recursion:pm, count = 1, log-likelihood = -5.79
  recursion:point, count = 3, log-likelihood = -4.69
  recursion:pointer, count = 6, log-likelihood = -4
  recursion:pointers, count = 3, log-likelihood = -4.69
  recursion:points, count = 7, log-likelihood = -3.85
  recursion:popback, count = 1, log-likelihood = -5.79
  recursion:pose, count = 1, log-likelihood = -5.79
  recursion:position, count = 2, log-likelihood = -5.1
  recursion:possibility, count = 1, log-likelihood = -5.79
  recursion:possible, count = 5, log-likelihood = -4.18
  recursion:possibly, count = 2, log-likelihood = -5.1
  recursion:possiible, count = 1, log-likelihood = -5.79
  recursion:post, count = 4, log-likelihood = -4.41
  recursion:posted, count = 2, log-likelihood = -5.1
  recursion:posting, count = 1, log-likelihood = -5.79
  recursion:posts, count = 1, log-likelihood = -5.79
  recursion:practice, count = 2, log-likelihood = -5.1
  recursion:predeclared, count = 1, log-likelihood = -5.79
  recursion:prefer, count = 1, log-likelihood = -5.79
  recursion:preferably, count = 1, log-likelihood = -5.79
  recursion:pretty, count = 5, log-likelihood = -4.18
  recursion:previous, count = 2, log-likelihood = -5.1
  recursion:previously, count = 2, log-likelihood = -5.1
  recursion:print, count = 7, log-likelihood = -3.85
  recursion:printing, count = 2, log-likelihood = -5.1
  recursion:prints, count = 2, log-likelihood = -5.1
  recursion:private, count = 1, log-likelihood = -5.79
  recursion:probably, count = 2, log-likelihood = -5.1
  recursion:problem, count = 14, log-likelihood = -3.15
  recursion:problems, count = 1, log-likelihood = -5.79
  recursion:procedure, count = 1, log-likelihood = -5.79
  recursion:proceed, count = 1, log-likelihood = -5.79
  recursion:process, count = 2, log-likelihood = -5.1
  recursion:processed, count = 1, log-likelihood = -5.79
  recursion:produce, count = 1, log-likelihood = -5.79
  recursion:product, count = 8, log-likelihood = -3.71
  recursion:professor, count = 1, log-likelihood = -5.79
  recursion:professors, count = 1, log-likelihood = -5.79
  recursion:program, count = 9, log-likelihood = -3.6
  recursion:programs, count = 1, log-likelihood = -5.79
  recursion:project, count = 31, log-likelihood = -2.36
  recursion:project2, count = 3, log-likelihood = -4.69
  recursion:projects, count = 4, log-likelihood = -4.41
  recursion:proper, count = 1, log-likelihood = -5.79
  recursion:properly, count = 4, log-likelihood = -4.41
  recursion:prototype, count = 1, log-likelihood = -5.79
  recursion:prototypes, count = 1, log-likelihood = -5.79
  recursion:provided, count = 6, log-likelihood = -4
  recursion:public, count = 3, log-likelihood = -4.69
  recursion:publicly, count = 1, log-likelihood = -5.79
  recursion:purpose, count = 3, log-likelihood = -4.69
  recursion:pushback, count = 1, log-likelihood = -5.79
  recursion:pushfront, count = 1, log-likelihood = -5.79
  recursion:put, count = 7, log-likelihood = -3.85
  recursion:putty, count = 1, log-likelihood = -5.79
  recursion:python, count = 1, log-likelihood = -5.79
  recursion:question, count = 3, log-likelihood = -4.69
  recursion:questions, count = 2, log-likelihood = -5.1
  recursion:queued, count = 5, log-likelihood = -4.18
  recursion:quite, count = 3, log-likelihood = -4.69
  recursion:ran, count = 3, log-likelihood = -4.69
  recursion:rather, count = 3, log-likelihood = -4.69
  recursion:ratios, count = 1, log-likelihood = -5.79
  recursion:reach, count = 1, log-likelihood = -5.79
  recursion:reaches, count = 2, log-likelihood = -5.1
  recursion:read, count = 7, log-likelihood = -3.85
  recursion:reading, count = 1, log-likelihood = -5.79
  recursion:realize, count = 1, log-likelihood = -5.79
  recursion:realized, count = 4, log-likelihood = -4.41
  recursion:realizing, count = 1, log-likelihood = -5.79
  recursion:really, count = 6, log-likelihood = -4
  recursion:reason, count = 1, log-likelihood = -5.79
  recursion:receive, count = 1, log-likelihood = -5.79
  recursion:receiving, count = 1, log-likelihood = -5.79
  recursion:rechecked, count = 1, log-likelihood = -5.79
  recursion:recognize, count = 1, log-likelihood = -5.79
  recursion:record, count = 1, log-likelihood = -5.79
  recursion:recoursive, count = 1, log-likelihood = -5.79
  recursion:recreate, count = 1, log-likelihood = -5.79
  recursion:recur, count = 2, log-likelihood = -5.1
  recursion:recursion, count = 13, log-likelihood = -3.23
  recursion:recursionlisth, count = 1, log-likelihood = -5.79
  recursion:recursive, count = 34, log-likelihood = -2.27
  recursion:recursivecpp, count = 5, log-likelihood = -4.18
  recursion:recursiveh, count = 5, log-likelihood = -4.18
  recursion:recursivelist, count = 6, log-likelihood = -4
  recursion:recursivelistcpp, count = 5, log-likelihood = -4.18
  recursion:recursivelisth, count = 1, log-likelihood = -5.79
  recursion:recursivelistint, count = 2, log-likelihood = -5.1
  recursion:recursivelistoperatorclass, count = 1, log-likelihood = -5.79
  recursion:recursivelistoperatorrecursivelist, count = 1, log-likelihood = -5.79
  recursion:recursivelistrecursiveli, count = 1, log-likelihood = -5.79
  recursion:recursivelistrecursivelistclass, count = 1, log-likelihood = -5.79
  recursion:recursivelistrecursivelistrecursivelist, count = 1, log-likelihood = -5.79
  recursion:recursivelistrecursivelistvoid, count = 1, log-likelihood = -5.79
  recursion:recursively, count = 4, log-likelihood = -4.41
  recursion:redirects, count = 1, log-likelihood = -5.79
  recursion:redo, count = 1, log-likelihood = -5.79
  recursion:reduce, count = 1, log-likelihood = -5.79
  recursion:reduced, count = 1, log-likelihood = -5.79
  recursion:redundant, count = 1, log-likelihood = -5.79
  recursion:refer, count = 1, log-likelihood = -5.79
  recursion:reference, count = 11, log-likelihood = -3.4
  recursion:referenced, count = 4, log-likelihood = -4.41
  recursion:references, count = 2, log-likelihood = -5.1
  recursion:referring, count = 3, log-likelihood = -4.69
  recursion:refers, count = 2, log-likelihood = -5.1
  recursion:reflect, count = 1, log-likelihood = -5.79
  recursion:refuses, count = 1, log-likelihood = -5.79
  recursion:register, count = 1, log-likelihood = -5.79
  recursion:regrade, count = 1, log-likelihood = -5.79
  recursion:regular, count = 2, log-likelihood = -5.1
  recursion:relate, count = 1, log-likelihood = -5.79
  recursion:related, count = 2, log-likelihood = -5.1
  recursion:released, count = 1, log-likelihood = -5.79
  recursion:remaining, count = 1, log-likelihood = -5.79
  recursion:remains, count = 2, log-likelihood = -5.1
  recursion:remember, count = 3, log-likelihood = -4.69
  recursion:remotely, count = 1, log-likelihood = -5.79
  recursion:remove, count = 1, log-likelihood = -5.79
  recursion:rems, count = 1, log-likelihood = -5.79
  recursion:repeat, count = 1, log-likelihood = -5.79
  recursion:repeatedly, count = 2, log-likelihood = -5.1
  recursion:repetitive, count = 1, log-likelihood = -5.79
  recursion:replace, count = 1, log-likelihood = -5.79
  recursion:repositories, count = 1, log-likelihood = -5.79
  recursion:representing, count = 1, log-likelihood = -5.79
  recursion:requests, count = 1, log-likelihood = -5.79
  recursion:require, count = 8, log-likelihood = -3.71
  recursion:required, count = 5, log-likelihood = -4.18
  recursion:requirement, count = 1, log-likelihood = -5.79
  recursion:requirements, count = 4, log-likelihood = -4.41
  recursion:requires, count = 7, log-likelihood = -3.85
  recursion:reset, count = 1, log-likelihood = -5.79
  recursion:resolved, count = 1, log-likelihood = -5.79
  recursion:resource, count = 1, log-likelihood = -5.79
  recursion:respectful, count = 1, log-likelihood = -5.79
  recursion:respective, count = 1, log-likelihood = -5.79
  recursion:responsible, count = 1, log-likelihood = -5.79
  recursion:restate, count = 1, log-likelihood = -5.79
  recursion:restricted, count = 1, log-likelihood = -5.79
  recursion:restrictions, count = 1, log-likelihood = -5.79
  recursion:resubmit, count = 2, log-likelihood = -5.1
  recursion:resubmitting, count = 1, log-likelihood = -5.79
  recursion:result, count = 3, log-likelihood = -4.69
  recursion:resulting, count = 1, log-likelihood = -5.79
  recursion:results, count = 4, log-likelihood = -4.41
  recursion:return, count = 30, log-likelihood = -2.39
  recursion:returned, count = 6, log-likelihood = -4
  recursion:returning, count = 2, log-likelihood = -5.1
  recursion:returns, count = 12, log-likelihood = -3.31
  recursion:reverse, count = 8, log-likelihood = -3.71
  recursion:reversed, count = 1, log-likelihood = -5.79
  recursion:reversefirst, count = 1, log-likelihood = -5.79
  recursion:reversehrecursivelist, count = 1, log-likelihood = -5.79
  recursion:reverselistt, count = 1, log-likelihood = -5.79
  recursion:review, count = 17, log-likelihood = -2.96
  recursion:reviewed, count = 1, log-likelihood = -5.79
  recursion:reviews, count = 1, log-likelihood = -5.79
  recursion:rewriting, count = 1, log-likelihood = -5.79
  recursion:rewrote, count = 1, log-likelihood = -5.79
  recursion:rid, count = 2, log-likelihood = -5.1
  recursion:right, count = 17, log-likelihood = -2.96
  recursion:rightest, count = 1, log-likelihood = -5.79
  recursion:righttree, count = 1, log-likelihood = -5.79
  recursion:rme, count = 13, log-likelihood = -3.23
  recursion:rmes, count = 5, log-likelihood = -4.18
  recursion:run, count = 22, log-likelihood = -2.7
  recursion:running, count = 3, log-likelihood = -4.69
  recursion:runs, count = 2, log-likelihood = -5.1
  recursion:safe, count = 3, log-likelihood = -4.69
  recursion:said, count = 3, log-likelihood = -4.69
  recursion:same, count = 20, log-likelihood = -2.8
  recursion:satisfied, count = 1, log-likelihood = -5.79
  recursion:satisfy, count = 1, log-likelihood = -5.79
  recursion:saul, count = 1, log-likelihood = -5.79
  recursion:save, count = 1, log-likelihood = -5.79
  recursion:saved, count = 3, log-likelihood = -4.69
  recursion:saw, count = 4, log-likelihood = -4.41
  recursion:say, count = 5, log-likelihood = -4.18
  recursion:saying, count = 8, log-likelihood = -3.71
  recursion:says, count = 20, log-likelihood = -2.8
  recursion:scheduled, count = 1, log-likelihood = -5.79
  recursion:scope, count = 2, log-likelihood = -5.1
  recursion:score, count = 2, log-likelihood = -5.1
  recursion:sdiff, count = 1, log-likelihood = -5.79
  recursion:searching, count = 1, log-likelihood = -5.79
  recursion:second, count = 5, log-likelihood = -4.18
  recursion:section, count = 2, log-likelihood = -5.1
  recursion:see, count = 12, log-likelihood = -3.31
  recursion:seed, count = 1, log-likelihood = -5.79
  recursion:seeing, count = 2, log-likelihood = -5.1
  recursion:seem, count = 7, log-likelihood = -3.85
  recursion:seems, count = 7, log-likelihood = -3.85
  recursion:seen, count = 1, log-likelihood = -5.79
  recursion:selfie, count = 1, log-likelihood = -5.79
  recursion:send, count = 1, log-likelihood = -5.79
  recursion:sense, count = 1, log-likelihood = -5.79
  recursion:sent, count = 1, log-likelihood = -5.79
  recursion:separate, count = 3, log-likelihood = -4.69
  recursion:separately, count = 1, log-likelihood = -5.79
  recursion:sequence, count = 2, log-likelihood = -5.1
  recursion:sequential, count = 1, log-likelihood = -5.79
  recursion:set, count = 3, log-likelihood = -4.69
  recursion:several, count = 1, log-likelihood = -5.79
  recursion:share, count = 1, log-likelihood = -5.79
  recursion:she, count = 1, log-likelihood = -5.79
  recursion:shed, count = 1, log-likelihood = -5.79
  recursion:sheet, count = 5, log-likelihood = -4.18
  recursion:shirt, count = 1, log-likelihood = -5.79
  recursion:should, count = 38, log-likelihood = -2.16
  recursion:shouldnt, count = 4, log-likelihood = -4.41
  recursion:show, count = 2, log-likelihood = -5.1
  recursion:showed, count = 3, log-likelihood = -4.69
  recursion:showing, count = 1, log-likelihood = -5.79
  recursion:shown, count = 1, log-likelihood = -5.79
  recursion:shows, count = 1, log-likelihood = -5.79
  recursion:side, count = 2, log-likelihood = -5.1
  recursion:similar, count = 6, log-likelihood = -4
  recursion:simple, count = 6, log-likelihood = -4
  recursion:simpletest, count = 3, log-likelihood = -4.69
  recursion:simpletestcpp, count = 2, log-likelihood = -5.1
  recursion:simplifying, count = 1, log-likelihood = -5.79
  recursion:simply, count = 7, log-likelihood = -3.85
  recursion:simulate, count = 1, log-likelihood = -5.79
  recursion:simulation, count = 1, log-likelihood = -5.79
  recursion:since, count = 11, log-likelihood = -3.4
  recursion:single, count = 1, log-likelihood = -5.79
  recursion:situation, count = 1, log-likelihood = -5.79
  recursion:size, count = 6, log-likelihood = -4
  recursion:skipped, count = 1, log-likelihood = -5.79
  recursion:slightly, count = 3, log-likelihood = -4.69
  recursion:small, count = 2, log-likelihood = -5.1
  recursion:so, count = 44, log-likelihood = -2.01
  recursion:sofar, count = 3, log-likelihood = -4.69
  recursion:solely, count = 1, log-likelihood = -5.79
  recursion:solution, count = 1, log-likelihood = -5.79
  recursion:solutions, count = 1, log-likelihood = -5.79
  recursion:solve, count = 2, log-likelihood = -5.1
  recursion:solves, count = 1, log-likelihood = -5.79
  recursion:solving, count = 1, log-likelihood = -5.79
  recursion:some, count = 15, log-likelihood = -3.08
  recursion:somebody, count = 1, log-likelihood = -5.79
  recursion:somehow, count = 1, log-likelihood = -5.79
  recursion:someone, count = 5, log-likelihood = -4.18
  recursion:something, count = 17, log-likelihood = -2.96
  recursion:somewhere, count = 1, log-likelihood = -5.79
  recursion:soon, count = 1, log-likelihood = -5.79
  recursion:sorry, count = 1, log-likelihood = -5.79
  recursion:sort, count = 1, log-likelihood = -5.79
  recursion:sorted, count = 6, log-likelihood = -4
  recursion:sounds, count = 1, log-likelihood = -5.79
  recursion:source, count = 2, log-likelihood = -5.1
  recursion:spacing, count = 1, log-likelihood = -5.79
  recursion:spec, count = 5, log-likelihood = -4.18
  recursion:specfically, count = 1, log-likelihood = -5.79
  recursion:specific, count = 2, log-likelihood = -5.1
  recursion:specifically, count = 4, log-likelihood = -4.41
  recursion:specification, count = 2, log-likelihood = -5.1
  recursion:specifications, count = 1, log-likelihood = -5.79
  recursion:specified, count = 2, log-likelihood = -5.1
  recursion:specify, count = 2, log-likelihood = -5.1
  recursion:spending, count = 1, log-likelihood = -5.79
  recursion:split, count = 1, log-likelihood = -5.79
  recursion:spot, count = 1, log-likelihood = -5.79
  recursion:ssh, count = 1, log-likelihood = -5.79
  recursion:sshing, count = 1, log-likelihood = -5.79
  recursion:stack, count = 2, log-likelihood = -5.1
  recursion:stacks, count = 1, log-likelihood = -5.79
  recursion:stage, count = 1, log-likelihood = -5.79
  recursion:standard, count = 2, log-likelihood = -5.1
  recursion:start, count = 3, log-likelihood = -4.69
  recursion:started, count = 4, log-likelihood = -4.41
  recursion:starter, count = 2, log-likelihood = -5.1
  recursion:starterfunction, count = 1, log-likelihood = -5.79
  recursion:state, count = 2, log-likelihood = -5.1
  recursion:statement, count = 4, log-likelihood = -4.41
  recursion:statements, count = 1, log-likelihood = -5.79
  recursion:states, count = 3, log-likelihood = -4.69
  recursion:static, count = 5, log-likelihood = -4.18
  recursion:status, count = 4, log-likelihood = -4.41
  recursion:std, count = 1, log-likelihood = -5.79
  recursion:stdc11, count = 5, log-likelihood = -4.18
  recursion:stepinto, count = 1, log-likelihood = -5.79
  recursion:steps, count = 1, log-likelihood = -5.79
  recursion:sth, count = 1, log-likelihood = -5.79
  recursion:still, count = 20, log-likelihood = -2.8
  recursion:stop, count = 2, log-likelihood = -5.1
  recursion:store, count = 2, log-likelihood = -5.1
  recursion:storing, count = 2, log-likelihood = -5.1
  recursion:stress, count = 1, log-likelihood = -5.79
  recursion:strictly, count = 1, log-likelihood = -5.79
  recursion:string, count = 1, log-likelihood = -5.79
  recursion:structure, count = 2, log-likelihood = -5.1
  recursion:stub, count = 1, log-likelihood = -5.79
  recursion:stubbed, count = 1, log-likelihood = -5.79
  recursion:stubs, count = 2, log-likelihood = -5.1
  recursion:stuck, count = 2, log-likelihood = -5.1
  recursion:studio, count = 5, log-likelihood = -4.18
  recursion:studios, count = 1, log-likelihood = -5.79
  recursion:style, count = 12, log-likelihood = -3.31
  recursion:sub, count = 2, log-likelihood = -5.1
  recursion:sublime, count = 1, log-likelihood = -5.79
  recursion:submission, count = 5, log-likelihood = -4.18
  recursion:submissions, count = 1, log-likelihood = -5.79
  recursion:submit, count = 8, log-likelihood = -3.71
  recursion:submitted, count = 6, log-likelihood = -4
  recursion:submitting, count = 2, log-likelihood = -5.1
  recursion:subset, count = 2, log-likelihood = -5.1
  recursion:subtree, count = 3, log-likelihood = -4.69
  recursion:subtrees, count = 1, log-likelihood = -5.79
  recursion:succeeded, count = 1, log-likelihood = -5.79
  recursion:success, count = 1, log-likelihood = -5.79
  recursion:such, count = 7, log-likelihood = -3.85
  recursion:suggestions, count = 4, log-likelihood = -4.41
  recursion:suite, count = 1, log-likelihood = -5.79
  recursion:sum, count = 15, log-likelihood = -3.08
  recursion:sumdouble, count = 1, log-likelihood = -5.79
  recursion:sumhelper, count = 1, log-likelihood = -5.79
  recursion:sumlist, count = 1, log-likelihood = -5.79
  recursion:sumlistt, count = 1, log-likelihood = -5.79
  recursion:sumrecursivelist, count = 1, log-likelihood = -5.79
  recursion:sunday, count = 1, log-likelihood = -5.79
  recursion:supported, count = 1, log-likelihood = -5.79
  recursion:suppose, count = 1, log-likelihood = -5.79
  recursion:supposed, count = 15, log-likelihood = -3.08
  recursion:sure, count = 12, log-likelihood = -3.31
  recursion:switching, count = 1, log-likelihood = -5.79
  recursion:symbol, count = 1, log-likelihood = -5.79
  recursion:symbols, count = 2, log-likelihood = -5.1
  recursion:syntax, count = 3, log-likelihood = -4.69
  recursion:t, count = 1, log-likelihood = -5.79
  recursion:tail, count = 24, log-likelihood = -2.61
  recursion:tailrecursive, count = 2, log-likelihood = -5.1
  recursion:take, count = 5, log-likelihood = -4.18
  recursion:taken, count = 3, log-likelihood = -4.69
  recursion:takes, count = 5, log-likelihood = -4.18
  recursion:taking, count = 2, log-likelihood = -5.1
  recursion:team, count = 1, log-likelihood = -5.79
  recursion:technically, count = 3, log-likelihood = -4.69
  recursion:tedious, count = 1, log-likelihood = -5.79
  recursion:tell, count = 1, log-likelihood = -5.79
  recursion:temporary, count = 1, log-likelihood = -5.79
  recursion:term, count = 1, log-likelihood = -5.79
  recursion:terminal, count = 8, log-likelihood = -3.71
  recursion:terminate, count = 1, log-likelihood = -5.79
  recursion:terminated, count = 1, log-likelihood = -5.79
  recursion:terminating, count = 1, log-likelihood = -5.79
  recursion:terms, count = 3, log-likelihood = -4.69
  recursion:terribly, count = 1, log-likelihood = -5.79
  recursion:test, count = 55, log-likelihood = -1.79
  recursion:testarray, count = 1, log-likelihood = -5.79
  recursion:testcase, count = 1, log-likelihood = -5.79
  recursion:testcontainsfalsevoid, count = 1, log-likelihood = -5.79
  recursion:testcontainsfalseyaxxz, count = 1, log-likelihood = -5.79
  recursion:tested, count = 4, log-likelihood = -4.41
  recursion:testfib, count = 1, log-likelihood = -5.79
  recursion:testfibs, count = 1, log-likelihood = -5.79
  recursion:testfilter, count = 1, log-likelihood = -5.79
  recursion:testhelperh, count = 1, log-likelihood = -5.79
  recursion:testhelperscpp, count = 5, log-likelihood = -4.18
  recursion:testhelpersh, count = 1, log-likelihood = -5.79
  recursion:testing, count = 11, log-likelihood = -3.4
  recursion:tests, count = 12, log-likelihood = -3.31
  recursion:testsum, count = 1, log-likelihood = -5.79
  recursion:testsum1, count = 1, log-likelihood = -5.79
  recursion:testsum2, count = 1, log-likelihood = -5.79
  recursion:testsum3, count = 1, log-likelihood = -5.79
  recursion:testsumbasic, count = 4, log-likelihood = -4.41
  recursion:text, count = 1, log-likelihood = -5.79
  recursion:than, count = 11, log-likelihood = -3.4
  recursion:thank, count = 11, log-likelihood = -3.4
  recursion:thanks, count = 35, log-likelihood = -2.24
  recursion:that, count = 105, log-likelihood = -1.14
  recursion:thats, count = 2, log-likelihood = -5.1
  recursion:the, count = 233, log-likelihood = -0.342
  recursion:their, count = 3, log-likelihood = -4.69
  recursion:them, count = 17, log-likelihood = -2.96
  recursion:themselves, count = 2, log-likelihood = -5.1
  recursion:then, count = 16, log-likelihood = -3.02
  recursion:there, count = 39, log-likelihood = -2.13
  recursion:therefore, count = 1, log-likelihood = -5.79
  recursion:theres, count = 1, log-likelihood = -5.79
  recursion:these, count = 17, log-likelihood = -2.96
  recursion:they, count = 17, log-likelihood = -2.96
  recursion:theyre, count = 1, log-likelihood = -5.79
  recursion:thing, count = 4, log-likelihood = -4.41
  recursion:things, count = 1, log-likelihood = -5.79
  recursion:think, count = 3, log-likelihood = -4.69
  recursion:this, count = 114, log-likelihood = -1.06
  recursion:thiscall, count = 1, log-likelihood = -5.79
  recursion:thnaks, count = 1, log-likelihood = -5.79
  recursion:thoroughly, count = 1, log-likelihood = -5.79
  recursion:those, count = 8, log-likelihood = -3.71
  recursion:though, count = 6, log-likelihood = -4
  recursion:thought, count = 4, log-likelihood = -4.41
  recursion:three, count = 1, log-likelihood = -5.79
  recursion:through, count = 14, log-likelihood = -3.15
  recursion:throwback, count = 1, log-likelihood = -5.79
  recursion:throwing, count = 1, log-likelihood = -5.79
  recursion:thrown, count = 1, log-likelihood = -5.79
  recursion:throws, count = 1, log-likelihood = -5.79
  recursion:thx, count = 1, log-likelihood = -5.79
  recursion:time, count = 7, log-likelihood = -3.85
  recursion:times, count = 5, log-likelihood = -4.18
  recursion:tips, count = 2, log-likelihood = -5.1
  recursion:title, count = 1, log-likelihood = -5.79
  recursion:tmpccbdzod5o, count = 1, log-likelihood = -5.79
  recursion:tmpccqr9h1io, count = 1, log-likelihood = -5.79
  recursion:tmpccvmzbhdo, count = 1, log-likelihood = -5.79
  recursion:to, count = 227, log-likelihood = -0.368
  recursion:today, count = 1, log-likelihood = -5.79
  recursion:together, count = 2, log-likelihood = -5.1
  recursion:told, count = 3, log-likelihood = -4.69
  recursion:too, count = 3, log-likelihood = -4.69
  recursion:top, count = 8, log-likelihood = -3.71
  recursion:topics, count = 1, log-likelihood = -5.79
  recursion:total, count = 3, log-likelihood = -4.69
  recursion:totally, count = 1, log-likelihood = -5.79
  recursion:touched, count = 1, log-likelihood = -5.79
  recursion:track, count = 2, log-likelihood = -5.1
  recursion:tracking, count = 1, log-likelihood = -5.79
  recursion:traversal, count = 10, log-likelihood = -3.49
  recursion:traverse, count = 1, log-likelihood = -5.79
  recursion:traversing, count = 1, log-likelihood = -5.79
  recursion:tree, count = 37, log-likelihood = -2.18
  recursion:tree1, count = 1, log-likelihood = -5.79
  recursion:treecontains, count = 5, log-likelihood = -4.18
  recursion:treecontainstest, count = 1, log-likelihood = -5.79
  recursion:treecontainstestcpp, count = 2, log-likelihood = -5.1
  recursion:treecontainstreet, count = 1, log-likelihood = -5.79
  recursion:treeequal, count = 2, log-likelihood = -5.1
  recursion:treeexception, count = 2, log-likelihood = -5.1
  recursion:treeleft, count = 3, log-likelihood = -4.69
  recursion:treemake, count = 1, log-likelihood = -5.79
  recursion:treemake1, count = 1, log-likelihood = -5.79
  recursion:treemake2, count = 1, log-likelihood = -5.79
  recursion:treemakeint, count = 1, log-likelihood = -5.79
  recursion:treerecursive, count = 1, log-likelihood = -5.79
  recursion:treeright, count = 3, log-likelihood = -4.69
  recursion:trees, count = 8, log-likelihood = -3.71
  recursion:treesum, count = 3, log-likelihood = -4.69
  recursion:treet, count = 2, log-likelihood = -5.1
  recursion:treethe, count = 1, log-likelihood = -5.79
  recursion:tried, count = 7, log-likelihood = -3.85
  recursion:trouble, count = 8, log-likelihood = -3.71
  recursion:true, count = 6, log-likelihood = -4
  recursion:try, count = 15, log-likelihood = -3.08
  recursion:trying, count = 19, log-likelihood = -2.85
  recursion:tuesday, count = 1, log-likelihood = -5.79
  recursion:turn, count = 3, log-likelihood = -4.69
  recursion:two, count = 21, log-likelihood = -2.75
  recursion:type, count = 4, log-likelihood = -4.41
  recursion:typed, count = 2, log-likelihood = -5.1
  recursion:typedef, count = 1, log-likelihood = -5.79
  recursion:types, count = 1, log-likelihood = -5.79
  recursion:typically, count = 1, log-likelihood = -5.79
  recursion:typing, count = 1, log-likelihood = -5.79
  recursion:ugli, count = 1, log-likelihood = -5.79
  recursion:ultimately, count = 2, log-likelihood = -5.1
  recursion:umich, count = 1, log-likelihood = -5.79
  recursion:unable, count = 2, log-likelihood = -5.1
  recursion:uncaught, count = 1, log-likelihood = -5.79
  recursion:undefined, count = 10, log-likelihood = -3.49
  recursion:under, count = 3, log-likelihood = -4.69
  recursion:understand, count = 13, log-likelihood = -3.23
  recursion:understanding, count = 3, log-likelihood = -4.69
  recursion:undo, count = 1, log-likelihood = -5.79
  recursion:unfinished, count = 1, log-likelihood = -5.79
  recursion:uniqname, count = 1, log-likelihood = -5.79
  recursion:unique, count = 1, log-likelihood = -5.79
  recursion:unit, count = 1, log-likelihood = -5.79
  recursion:unless, count = 1, log-likelihood = -5.79
  recursion:unnecessary, count = 1, log-likelihood = -5.79
  recursion:unresolved, count = 1, log-likelihood = -5.79
  recursion:unsigned, count = 1, log-likelihood = -5.79
  recursion:unsure, count = 3, log-likelihood = -4.69
  recursion:until, count = 5, log-likelihood = -4.18
  recursion:unused, count = 1, log-likelihood = -5.79
  recursion:unwanted, count = 1, log-likelihood = -5.79
  recursion:up, count = 14, log-likelihood = -3.15
  recursion:upon, count = 1, log-likelihood = -5.79
  recursion:uptodate, count = 1, log-likelihood = -5.79
  recursion:us, count = 10, log-likelihood = -3.49
  recursion:usage, count = 1, log-likelihood = -5.79
  recursion:use, count = 60, log-likelihood = -1.7
  recursion:used, count = 8, log-likelihood = -3.71
  recursion:useful, count = 1, log-likelihood = -5.79
  recursion:uses, count = 1, log-likelihood = -5.79
  recursion:using, count = 30, log-likelihood = -2.39
  recursion:usually, count = 1, log-likelihood = -5.79
  recursion:v, count = 2, log-likelihood = -5.1
  recursion:valid, count = 1, log-likelihood = -5.79
  recursion:value, count = 16, log-likelihood = -3.02
  recursion:values, count = 15, log-likelihood = -3.08
  recursion:variable, count = 6, log-likelihood = -4
  recursion:variables, count = 4, log-likelihood = -4.41
  recursion:various, count = 1, log-likelihood = -5.79
  recursion:vector, count = 2, log-likelihood = -5.1
  recursion:verified, count = 1, log-likelihood = -5.79
  recursion:verify, count = 1, log-likelihood = -5.79
  recursion:version, count = 1, log-likelihood = -5.79
  recursion:very, count = 4, log-likelihood = -4.41
  recursion:video, count = 1, log-likelihood = -5.79
  recursion:videos, count = 1, log-likelihood = -5.79
  recursion:vine, count = 1, log-likelihood = -5.79
  recursion:violate, count = 1, log-likelihood = -5.79
  recursion:violates, count = 1, log-likelihood = -5.79
  recursion:visual, count = 5, log-likelihood = -4.18
  recursion:vmware, count = 1, log-likelihood = -5.79
  recursion:void, count = 5, log-likelihood = -4.18
  recursion:vs, count = 1, log-likelihood = -5.79
  recursion:w, count = 1, log-likelihood = -5.79
  recursion:wait, count = 1, log-likelihood = -5.79
  recursion:wall, count = 5, log-likelihood = -4.18
  recursion:want, count = 13, log-likelihood = -3.23
  recursion:wanted, count = 5, log-likelihood = -4.18
  recursion:warned, count = 1, log-likelihood = -5.79
  recursion:was, count = 35, log-likelihood = -2.24
  recursion:wasnt, count = 1, log-likelihood = -5.79
  recursion:way, count = 10, log-likelihood = -3.49
  recursion:ways, count = 4, log-likelihood = -4.41
  recursion:waythanks, count = 1, log-likelihood = -5.79
  recursion:we, count = 111, log-likelihood = -1.08
  recursion:wearing, count = 1, log-likelihood = -5.79
  recursion:wed, count = 1, log-likelihood = -5.79
  recursion:week, count = 1, log-likelihood = -5.79
  recursion:weekendi, count = 1, log-likelihood = -5.79
  recursion:weight, count = 1, log-likelihood = -5.79
  recursion:weights, count = 2, log-likelihood = -5.1
  recursion:weird, count = 3, log-likelihood = -4.69
  recursion:well, count = 3, log-likelihood = -4.69
  recursion:wellformed, count = 4, log-likelihood = -4.41
  recursion:went, count = 2, log-likelihood = -5.1
  recursion:were, count = 13, log-likelihood = -3.23
  recursion:werent, count = 1, log-likelihood = -5.79
  recursion:werror, count = 6, log-likelihood = -4
  recursion:werrorreturntype, count = 2, log-likelihood = -5.1
  recursion:werrorunusedfunction, count = 1, log-likelihood = -5.79
  recursion:what, count = 62, log-likelihood = -1.67
  recursion:whats, count = 4, log-likelihood = -4.41
  recursion:when, count = 63, log-likelihood = -1.65
  recursion:whenever, count = 4, log-likelihood = -4.41
  recursion:where, count = 10, log-likelihood = -3.49
  recursion:whether, count = 2, log-likelihood = -5.1
  recursion:which, count = 20, log-likelihood = -2.8
  recursion:while, count = 9, log-likelihood = -3.6
  recursion:whitespace, count = 1, log-likelihood = -5.79
  recursion:who, count = 1, log-likelihood = -5.79
  recursion:whole, count = 6, log-likelihood = -4
  recursion:why, count = 12, log-likelihood = -3.31
  recursion:whyhow, count = 1, log-likelihood = -5.79
  recursion:wikipedia, count = 1, log-likelihood = -5.79
  recursion:will, count = 26, log-likelihood = -2.53
  recursion:win32, count = 1, log-likelihood = -5.79
  recursion:with, count = 42, log-likelihood = -2.06
  recursion:within, count = 6, log-likelihood = -4
  recursion:without, count = 6, log-likelihood = -4
  recursion:wondering, count = 11, log-likelihood = -3.4
  recursion:wont, count = 4, log-likelihood = -4.41
  recursion:words, count = 3, log-likelihood = -4.69
  recursion:work, count = 12, log-likelihood = -3.31
  recursion:working, count = 9, log-likelihood = -3.6
  recursion:works, count = 5, log-likelihood = -4.18
  recursion:worksheet, count = 1, log-likelihood = -5.79
  recursion:world, count = 1, log-likelihood = -5.79
  recursion:worried, count = 1, log-likelihood = -5.79
  recursion:worry, count = 1, log-likelihood = -5.79
  recursion:worth, count = 1, log-likelihood = -5.79
  recursion:would, count = 53, log-likelihood = -1.82
  recursion:write, count = 28, log-likelihood = -2.46
  recursion:writing, count = 6, log-likelihood = -4
  recursion:written, count = 9, log-likelihood = -3.6
  recursion:writting, count = 1, log-likelihood = -5.79
  recursion:wrong, count = 11, log-likelihood = -3.4
  recursion:wrote, count = 8, log-likelihood = -3.71
  recursion:x, count = 4, log-likelihood = -4.41
  recursion:x1, count = 1, log-likelihood = -5.79
  recursion:x8664, count = 2, log-likelihood = -5.1
  recursion:xcode, count = 5, log-likelihood = -4.18
  recursion:y, count = 1, log-likelihood = -5.79
  recursion:y1, count = 1, log-likelihood = -5.79
  recursion:yea, count = 1, log-likelihood = -5.79
  recursion:yes, count = 2, log-likelihood = -5.1
  recursion:yet, count = 2, log-likelihood = -5.1
  recursion:yo, count = 1, log-likelihood = -5.79
  recursion:you, count = 43, log-likelihood = -2.03
  recursion:youd, count = 1, log-likelihood = -5.79
  recursion:your, count = 5, log-likelihood = -4.18
  recursion:youre, count = 1, log-likelihood = -5.79
  recursion:zero, count = 2, log-likelihood = -5.1
  recursion:‘, count = 3, log-likelihood = -4.69
  recursion:’, count = 3, log-likelihood = -4.69
  statistics:0, count = 13, log-likelihood = -3.15
  statistics:0001, count = 1, log-likelihood = -5.71
  statistics:01, count = 1, log-likelihood = -5.71
  statistics:012, count = 1, log-likelihood = -5.71
  statistics:02, count = 1, log-likelihood = -5.71
  statistics:025, count = 1, log-likelihood = -5.71
  statistics:0255075100, count = 1, log-likelihood = -5.71
  statistics:050, count = 1, log-likelihood = -5.71
  statistics:075, count = 1, log-likelihood = -5.71
  statistics:0th, count = 3, log-likelihood = -4.61
  statistics:0what, count = 1, log-likelihood = -5.71
  statistics:1, count = 36, log-likelihood = -2.13
  statistics:10, count = 6, log-likelihood = -3.92
  statistics:1000001, count = 1, log-likelihood = -5.71
  statistics:1000002, count = 1, log-likelihood = -5.71
  statistics:100th, count = 2, log-likelihood = -5.02
  statistics:101, count = 5, log-likelihood = -4.1
  statistics:11, count = 1, log-likelihood = -5.71
  statistics:111122335, count = 1, log-likelihood = -5.71
  statistics:12, count = 2, log-likelihood = -5.02
  statistics:125, count = 1, log-likelihood = -5.71
  statistics:1258, count = 1, log-likelihood = -5.71
  statistics:126, count = 1, log-likelihood = -5.71
  statistics:135681, count = 1, log-likelihood = -5.71
  statistics:14, count = 2, log-likelihood = -5.02
  statistics:14142, count = 1, log-likelihood = -5.71
  statistics:158114, count = 2, log-likelihood = -5.02
  statistics:159, count = 1, log-likelihood = -5.71
  statistics:183, count = 7, log-likelihood = -3.76
  statistics:1956826, count = 1, log-likelihood = -5.71
  statistics:195683, count = 1, log-likelihood = -5.71
  statistics:1c13, count = 1, log-likelihood = -5.71
  statistics:1d, count = 1, log-likelihood = -5.71
  statistics:1s, count = 1, log-likelihood = -5.71
  statistics:1statsobj, count = 1, log-likelihood = -5.71
  statistics:1use, count = 1, log-likelihood = -5.71
  statistics:2, count = 11, log-likelihood = -3.31
  statistics:20, count = 1, log-likelihood = -5.71
  statistics:2016, count = 1, log-likelihood = -5.71
  statistics:22, count = 2, log-likelihood = -5.02
  statistics:25, count = 1, log-likelihood = -5.71
  statistics:25689, count = 1, log-likelihood = -5.71
  statistics:25th, count = 4, log-likelihood = -4.32
  statistics:280, count = 7, log-likelihood = -3.76
  statistics:280project, count = 1, log-likelihood = -5.71
  statistics:280x, count = 1, log-likelihood = -5.71
  statistics:2d, count = 1, log-likelihood = -5.71
  statistics:2s, count = 1, log-likelihood = -5.71
  statistics:3, count = 5, log-likelihood = -4.1
  statistics:3009, count = 1, log-likelihood = -5.71
  statistics:32, count = 1, log-likelihood = -5.71
  statistics:33, count = 1, log-likelihood = -5.71
  statistics:35, count = 1, log-likelihood = -5.71
  statistics:3rd, count = 1, log-likelihood = -5.71
  statistics:4, count = 6, log-likelihood = -3.92
  statistics:44, count = 3, log-likelihood = -4.61
  statistics:45, count = 1, log-likelihood = -5.71
  statistics:5, count = 8, log-likelihood = -3.63
  statistics:50, count = 1, log-likelihood = -5.71
  statistics:50th, count = 2, log-likelihood = -5.02
  statistics:51, count = 1, log-likelihood = -5.71
  statistics:5th, count = 1, log-likelihood = -5.71
  statistics:6, count = 12, log-likelihood = -3.23
  statistics:61, count = 1, log-likelihood = -5.71
  statistics:678910, count = 4, log-likelihood = -4.32
  statistics:7, count = 5, log-likelihood = -4.1
  statistics:725, count = 1, log-likelihood = -5.71
  statistics:75th, count = 2, log-likelihood = -5.02
  statistics:7a10, count = 1, log-likelihood = -5.71
  statistics:8, count = 7, log-likelihood = -3.76
  statistics:82, count = 2, log-likelihood = -5.02
  statistics:8pm, count = 1, log-likelihood = -5.71
  statistics:9, count = 5, log-likelihood = -4.1
  statistics:912, count = 1, log-likelihood = -5.71
  statistics:993, count = 1, log-likelihood = -5.71
  statistics:9a10, count = 1, log-likelihood = -5.71
  statistics:a, count = 127, log-likelihood = -0.866
  statistics:able, count = 10, log-likelihood = -3.41
  statistics:about, count = 20, log-likelihood = -2.71
  statistics:above, count = 3, log-likelihood = -4.61
  statistics:absdouble, count = 1, log-likelihood = -5.71
  statistics:absexpectedvalue, count = 1, log-likelihood = -5.71
  statistics:access, count = 7, log-likelihood = -3.76
  statistics:accessing, count = 1, log-likelihood = -5.71
  statistics:according, count = 2, log-likelihood = -5.02
  statistics:account, count = 5, log-likelihood = -4.1
  statistics:accumulate, count = 1, log-likelihood = -5.71
  statistics:accuracy, count = 1, log-likelihood = -5.71
  statistics:achieve, count = 1, log-likelihood = -5.71
  statistics:actual, count = 4, log-likelihood = -4.32
  statistics:actually, count = 3, log-likelihood = -4.61
  statistics:add, count = 7, log-likelihood = -3.76
  statistics:added, count = 3, log-likelihood = -4.61
  statistics:adding, count = 3, log-likelihood = -4.61
  statistics:additional, count = 1, log-likelihood = -5.71
  statistics:address, count = 1, log-likelihood = -5.71
  statistics:adds, count = 1, log-likelihood = -5.71
  statistics:addsubtract, count = 1, log-likelihood = -5.71
  statistics:advance, count = 2, log-likelihood = -5.02
  statistics:advantage, count = 1, log-likelihood = -5.71
  statistics:advice, count = 2, log-likelihood = -5.02
  statistics:affect, count = 2, log-likelihood = -5.02
  statistics:after, count = 10, log-likelihood = -3.41
  statistics:afterwards, count = 1, log-likelihood = -5.71
  statistics:again, count = 2, log-likelihood = -5.02
  statistics:aggregate, count = 1, log-likelihood = -5.71
  statistics:algorithm, count = 1, log-likelihood = -5.71
  statistics:align, count = 1, log-likelihood = -5.71
  statistics:all, count = 25, log-likelihood = -2.49
  statistics:alloc, count = 1, log-likelihood = -5.71
  statistics:allocallocatortype, count = 1, log-likelihood = -5.71
  statistics:allocation, count = 1, log-likelihood = -5.71
  statistics:allocatortype, count = 1, log-likelihood = -5.71
  statistics:allocmdefaultappendstdvectortp, count = 1, log-likelihood = -5.71
  statistics:allocmdefaultinitializestdvectortp, count = 1, log-likelihood = -5.71
  statistics:allocresizestdvectortp, count = 1, log-likelihood = -5.71
  statistics:allocsize, count = 1, log-likelihood = -5.71
  statistics:allocsizetype, count = 1, log-likelihood = -5.71
  statistics:allocvectorstdvectortp, count = 1, log-likelihood = -5.71
  statistics:allow, count = 1, log-likelihood = -5.71
  statistics:allowed, count = 19, log-likelihood = -2.77
  statistics:alongside, count = 1, log-likelihood = -5.71
  statistics:already, count = 8, log-likelihood = -3.63
  statistics:also, count = 14, log-likelihood = -3.07
  statistics:alter, count = 1, log-likelihood = -5.71
  statistics:alternatives, count = 1, log-likelihood = -5.71
  statistics:although, count = 1, log-likelihood = -5.71
  statistics:always, count = 5, log-likelihood = -4.1
  statistics:am, count = 48, log-likelihood = -1.84
  statistics:ambiguous, count = 2, log-likelihood = -5.02
  statistics:an, count = 45, log-likelihood = -1.9
  statistics:and, count = 139, log-likelihood = -0.776
  statistics:andor, count = 1, log-likelihood = -5.71
  statistics:announcement, count = 2, log-likelihood = -5.02
  statistics:another, count = 7, log-likelihood = -3.76
  statistics:answer, count = 6, log-likelihood = -3.92
  statistics:answers, count = 1, log-likelihood = -5.71
  statistics:any, count = 41, log-likelihood = -2
  statistics:anybody, count = 1, log-likelihood = -5.71
  statistics:anyone, count = 7, log-likelihood = -3.76
  statistics:anything, count = 6, log-likelihood = -3.92
  statistics:anyways, count = 1, log-likelihood = -5.71
  statistics:anywhere, count = 1, log-likelihood = -5.71
  statistics:appears, count = 2, log-likelihood = -5.02
  statistics:append, count = 1, log-likelihood = -5.71
  statistics:appendix, count = 1, log-likelihood = -5.71
  statistics:apple, count = 1, log-likelihood = -5.71
  statistics:apply, count = 1, log-likelihood = -5.71
  statistics:appreciated, count = 2, log-likelihood = -5.02
  statistics:approach, count = 2, log-likelihood = -5.02
  statistics:arbitrary, count = 1, log-likelihood = -5.71
  statistics:architecture, count = 1, log-likelihood = -5.71
  statistics:archive, count = 1, log-likelihood = -5.71
  statistics:are, count = 65, log-likelihood = -1.54
  statistics:areas, count = 1, log-likelihood = -5.71
  statistics:arent, count = 2, log-likelihood = -5.02
  statistics:argument, count = 2, log-likelihood = -5.02
  statistics:arguments, count = 2, log-likelihood = -5.02
  statistics:around, count = 3, log-likelihood = -4.61
  statistics:array, count = 2, log-likelihood = -5.02
  statistics:arrays, count = 1, log-likelihood = -5.71
  statistics:as, count = 56, log-likelihood = -1.69
  statistics:ask, count = 2, log-likelihood = -5.02
  statistics:asked, count = 2, log-likelihood = -5.02
  statistics:asking, count = 3, log-likelihood = -4.61
  statistics:asks, count = 1, log-likelihood = -5.71
  statistics:assembler, count = 1, log-likelihood = -5.71
  statistics:assert, count = 12, log-likelihood = -3.23
  statistics:assertcount, count = 1, log-likelihood = -5.71
  statistics:assertexpected, count = 1, log-likelihood = -5.71
  statistics:assertion, count = 1, log-likelihood = -5.71
  statistics:asserts, count = 2, log-likelihood = -5.02
  statistics:assertstdevdata, count = 1, log-likelihood = -5.71
  statistics:assertsumdata, count = 2, log-likelihood = -5.02
  statistics:assertsummarizedata, count = 2, log-likelihood = -5.02
  statistics:assign, count = 2, log-likelihood = -5.02
  statistics:assignment, count = 1, log-likelihood = -5.71
  statistics:assume, count = 4, log-likelihood = -4.32
  statistics:assuming, count = 2, log-likelihood = -5.02
  statistics:assumption, count = 1, log-likelihood = -5.71
  statistics:assure, count = 1, log-likelihood = -5.71
  statistics:at, count = 17, log-likelihood = -2.88
  statistics:attached, count = 1, log-likelihood = -5.71
  statistics:attempt, count = 4, log-likelihood = -4.32
  statistics:attempting, count = 2, log-likelihood = -5.02
  statistics:attention, count = 1, log-likelihood = -5.71
  statistics:auto, count = 4, log-likelihood = -4.32
  statistics:autograder, count = 41, log-likelihood = -2
  statistics:autograders, count = 1, log-likelihood = -5.71
  statistics:autograding, count = 1, log-likelihood = -5.71
  statistics:avoid, count = 3, log-likelihood = -4.61
  statistics:avoided, count = 1, log-likelihood = -5.71
  statistics:b, count = 2, log-likelihood = -5.02
  statistics:back, count = 2, log-likelihood = -5.02
  statistics:bad, count = 3, log-likelihood = -4.61
  statistics:base, count = 1, log-likelihood = -5.71
  statistics:based, count = 1, log-likelihood = -5.71
  statistics:basement, count = 1, log-likelihood = -5.71
  statistics:bash42, count = 5, log-likelihood = -4.1
  statistics:bashrc, count = 1, log-likelihood = -5.71
  statistics:basically, count = 3, log-likelihood = -4.61
  statistics:basis, count = 1, log-likelihood = -5.71
  statistics:bbb, count = 1, log-likelihood = -5.71
  statistics:be, count = 67, log-likelihood = -1.51
  statistics:because, count = 18, log-likelihood = -2.82
  statistics:become, count = 1, log-likelihood = -5.71
  statistics:been, count = 12, log-likelihood = -3.23
  statistics:before, count = 12, log-likelihood = -3.23
  statistics:beginning, count = 2, log-likelihood = -5.02
  statistics:begins, count = 2, log-likelihood = -5.02
  statistics:being, count = 7, log-likelihood = -3.76
  statistics:believe, count = 1, log-likelihood = -5.71
  statistics:below, count = 4, log-likelihood = -4.32
  statistics:best, count = 2, log-likelihood = -5.02
  statistics:better, count = 6, log-likelihood = -3.92
  statistics:between, count = 10, log-likelihood = -3.41
  statistics:beyond, count = 1, log-likelihood = -5.71
  statistics:big, count = 1, log-likelihood = -5.71
  statistics:binary, count = 1, log-likelihood = -5.71
  statistics:binsh, count = 1, log-likelihood = -5.71
  statistics:bit, count = 4, log-likelihood = -4.32
  statistics:black, count = 1, log-likelihood = -5.71
  statistics:blah, count = 1, log-likelihood = -5.71
  statistics:block, count = 1, log-likelihood = -5.71
  statistics:both, count = 6, log-likelihood = -3.92
  statistics:bounds, count = 1, log-likelihood = -5.71
  statistics:box, count = 1, log-likelihood = -5.71
  statistics:brackets, count = 1, log-likelihood = -5.71
  statistics:break, count = 2, log-likelihood = -5.02
  statistics:breakpoint, count = 1, log-likelihood = -5.71
  statistics:btw, count = 1, log-likelihood = -5.71
  statistics:bug, count = 2, log-likelihood = -5.02
  statistics:bugs, count = 1, log-likelihood = -5.71
  statistics:bugslike, count = 1, log-likelihood = -5.71
  statistics:building, count = 1, log-likelihood = -5.71
  statistics:bunch, count = 3, log-likelihood = -4.61
  statistics:but, count = 76, log-likelihood = -1.38
  statistics:by, count = 23, log-likelihood = -2.57
  statistics:bzip2, count = 1, log-likelihood = -5.71
  statistics:c, count = 3, log-likelihood = -4.61
  statistics:c11, count = 1, log-likelihood = -5.71
  statistics:caen, count = 25, log-likelihood = -2.49
  statistics:calculate, count = 4, log-likelihood = -4.32
  statistics:calculated, count = 2, log-likelihood = -5.02
  statistics:calculating, count = 3, log-likelihood = -4.61
  statistics:calculation, count = 1, log-likelihood = -5.71
  statistics:calculations, count = 1, log-likelihood = -5.71
  statistics:calendar, count = 2, log-likelihood = -5.02
  statistics:call, count = 13, log-likelihood = -3.15
  statistics:called, count = 8, log-likelihood = -3.63
  statistics:calling, count = 5, log-likelihood = -4.1
  statistics:callpass, count = 1, log-likelihood = -5.71
  statistics:calls, count = 1, log-likelihood = -5.71
  statistics:campus, count = 1, log-likelihood = -5.71
  statistics:can, count = 52, log-likelihood = -1.76
  statistics:candidate, count = 1, log-likelihood = -5.71
  statistics:cane, count = 1, log-likelihood = -5.71
  statistics:cannot, count = 13, log-likelihood = -3.15
  statistics:cant, count = 15, log-likelihood = -3
  statistics:care, count = 1, log-likelihood = -5.71
  statistics:carry, count = 1, log-likelihood = -5.71
  statistics:case, count = 14, log-likelihood = -3.07
  statistics:cases, count = 18, log-likelihood = -2.82
  statistics:cassert, count = 1, log-likelihood = -5.71
  statistics:cast, count = 1, log-likelihood = -5.71
  statistics:casting, count = 1, log-likelihood = -5.71
  statistics:cause, count = 2, log-likelihood = -5.02
  statistics:causes, count = 2, log-likelihood = -5.02
  statistics:causing, count = 1, log-likelihood = -5.71
  statistics:cc1plus, count = 1, log-likelihood = -5.71
  statistics:cd, count = 2, log-likelihood = -5.02
  statistics:cdecl, count = 1, log-likelihood = -5.71
  statistics:cean, count = 1, log-likelihood = -5.71
  statistics:certain, count = 3, log-likelihood = -4.61
  statistics:change, count = 7, log-likelihood = -3.76
  statistics:changed, count = 1, log-likelihood = -5.71
  statistics:changes, count = 2, log-likelihood = -5.02
  statistics:changing, count = 1, log-likelihood = -5.71
  statistics:characters, count = 2, log-likelihood = -5.02
  statistics:chars, count = 1, log-likelihood = -5.71
  statistics:cheating, count = 1, log-likelihood = -5.71
  statistics:check, count = 11, log-likelihood = -3.31
  statistics:checked, count = 5, log-likelihood = -4.1
  statistics:checker, count = 4, log-likelihood = -4.32
  statistics:checking, count = 3, log-likelihood = -4.61
  statistics:clang, count = 2, log-likelihood = -5.02
  statistics:clarification, count = 2, log-likelihood = -5.02
  statistics:clarified, count = 1, log-likelihood = -5.71
  statistics:clarify, count = 5, log-likelihood = -4.1
  statistics:class, count = 5, log-likelihood = -4.1
  statistics:classeswinter, count = 1, log-likelihood = -5.71
  statistics:clause, count = 3, log-likelihood = -4.61
  statistics:clauses, count = 4, log-likelihood = -4.32
  statistics:clean, count = 2, log-likelihood = -5.02
  statistics:clear, count = 4, log-likelihood = -4.32
  statistics:clearly, count = 1, log-likelihood = -5.71
  statistics:click, count = 1, log-likelihood = -5.71
  statistics:close, count = 2, log-likelihood = -5.02
  statistics:closest, count = 1, log-likelihood = -5.71
  statistics:clues, count = 1, log-likelihood = -5.71
  statistics:clutter, count = 1, log-likelihood = -5.71
  statistics:cmath, count = 3, log-likelihood = -4.61
  statistics:code, count = 53, log-likelihood = -1.74
  statistics:coded, count = 1, log-likelihood = -5.71
  statistics:codes, count = 2, log-likelihood = -5.02
  statistics:coding, count = 2, log-likelihood = -5.02
  statistics:collect2, count = 2, log-likelihood = -5.02
  statistics:column, count = 9, log-likelihood = -3.51
  statistics:columns, count = 3, log-likelihood = -4.61
  statistics:combine, count = 1, log-likelihood = -5.71
  statistics:comes, count = 1, log-likelihood = -5.71
  statistics:comfortable, count = 1, log-likelihood = -5.71
  statistics:coming, count = 4, log-likelihood = -4.32
  statistics:command, count = 11, log-likelihood = -3.31
  statistics:commands, count = 2, log-likelihood = -5.02
  statistics:comment, count = 4, log-likelihood = -4.32
  statistics:commented, count = 1, log-likelihood = -5.71
  statistics:comments, count = 5, log-likelihood = -4.1
  statistics:compare, count = 5, log-likelihood = -4.1
  statistics:compared, count = 2, log-likelihood = -5.02
  statistics:comparing, count = 2, log-likelihood = -5.02
  statistics:comparison, count = 2, log-likelihood = -5.02
  statistics:compilation, count = 5, log-likelihood = -4.1
  statistics:compile, count = 19, log-likelihood = -2.77
  statistics:compiled, count = 6, log-likelihood = -3.92
  statistics:compiler, count = 2, log-likelihood = -5.02
  statistics:compiles, count = 6, log-likelihood = -3.92
  statistics:compiling, count = 4, log-likelihood = -4.32
  statistics:completely, count = 2, log-likelihood = -5.02
  statistics:completes, count = 1, log-likelihood = -5.71
  statistics:complex, count = 1, log-likelihood = -5.71
  statistics:complicated, count = 1, log-likelihood = -5.71
  statistics:complied, count = 1, log-likelihood = -5.71
  statistics:components, count = 1, log-likelihood = -5.71
  statistics:compute, count = 1, log-likelihood = -5.71
  statistics:computer, count = 8, log-likelihood = -3.63
  statistics:computers, count = 3, log-likelihood = -4.61
  statistics:computes, count = 1, log-likelihood = -5.71
  statistics:computing, count = 1, log-likelihood = -5.71
  statistics:concerned, count = 1, log-likelihood = -5.71
  statistics:concerning, count = 1, log-likelihood = -5.71
  statistics:confirm, count = 1, log-likelihood = -5.71
  statistics:confirmation, count = 1, log-likelihood = -5.71
  statistics:confused, count = 17, log-likelihood = -2.88
  statistics:confusing, count = 1, log-likelihood = -5.71
  statistics:confusion, count = 1, log-likelihood = -5.71
  statistics:considered, count = 2, log-likelihood = -5.02
  statistics:consist, count = 1, log-likelihood = -5.71
  statistics:consistent, count = 1, log-likelihood = -5.71
  statistics:const, count = 1, log-likelihood = -5.71
  statistics:constants, count = 1, log-likelihood = -5.71
  statistics:construction, count = 1, log-likelihood = -5.71
  statistics:contain, count = 1, log-likelihood = -5.71
  statistics:contained, count = 2, log-likelihood = -5.02
  statistics:contains, count = 5, log-likelihood = -4.1
  statistics:continue, count = 1, log-likelihood = -5.71
  statistics:control, count = 2, log-likelihood = -5.02
  statistics:copy, count = 1, log-likelihood = -5.71
  statistics:copying, count = 1, log-likelihood = -5.71
  statistics:core, count = 1, log-likelihood = -5.71
  statistics:correct, count = 19, log-likelihood = -2.77
  statistics:correctly, count = 9, log-likelihood = -3.51
  statistics:correspond, count = 3, log-likelihood = -4.61
  statistics:could, count = 18, log-likelihood = -2.82
  statistics:couldnt, count = 3, log-likelihood = -4.61
  statistics:couldve, count = 1, log-likelihood = -5.71
  statistics:count, count = 7, log-likelihood = -3.76
  statistics:count5, count = 1, log-likelihood = -5.71
  statistics:countstdvectordouble, count = 1, log-likelihood = -5.71
  statistics:course, count = 4, log-likelihood = -4.32
  statistics:cout, count = 12, log-likelihood = -3.23
  statistics:cout0th, count = 1, log-likelihood = -5.71
  statistics:cpp, count = 6, log-likelihood = -3.92
  statistics:crash, count = 3, log-likelihood = -4.61
  statistics:crashed, count = 2, log-likelihood = -5.02
  statistics:crashes, count = 1, log-likelihood = -5.71
  statistics:create, count = 11, log-likelihood = -3.31
  statistics:created, count = 3, log-likelihood = -4.61
  statistics:creating, count = 1, log-likelihood = -5.71
  statistics:crucial, count = 1, log-likelihood = -5.71
  statistics:curious, count = 2, log-likelihood = -5.02
  statistics:current, count = 1, log-likelihood = -5.71
  statistics:currently, count = 2, log-likelihood = -5.02
  statistics:cusersdocumentsum, count = 1, log-likelihood = -5.71
  statistics:cygwin, count = 2, log-likelihood = -5.02
  statistics:cygwins, count = 1, log-likelihood = -5.71
  statistics:data, count = 31, log-likelihood = -2.28
  statistics:data1, count = 1, log-likelihood = -5.71
  statistics:data2, count = 1, log-likelihood = -5.71
  statistics:date, count = 1, log-likelihood = -5.71
  statistics:deadline, count = 1, log-likelihood = -5.71
  statistics:debug, count = 2, log-likelihood = -5.02
  statistics:debugging, count = 1, log-likelihood = -5.71
  statistics:decimal, count = 3, log-likelihood = -4.61
  statistics:decimals, count = 1, log-likelihood = -5.71
  statistics:declaration, count = 3, log-likelihood = -4.61
  statistics:declarations, count = 2, log-likelihood = -5.02
  statistics:declare, count = 4, log-likelihood = -4.32
  statistics:declared, count = 6, log-likelihood = -3.92
  statistics:declaring, count = 1, log-likelihood = -5.71
  statistics:deduct, count = 1, log-likelihood = -5.71
  statistics:define, count = 1, log-likelihood = -5.71
  statistics:defined, count = 4, log-likelihood = -4.32
  statistics:definition, count = 6, log-likelihood = -3.92
  statistics:definitions, count = 2, log-likelihood = -5.02
  statistics:delay, count = 1, log-likelihood = -5.71
  statistics:delete, count = 1, log-likelihood = -5.71
  statistics:deleted, count = 1, log-likelihood = -5.71
  statistics:delimited, count = 4, log-likelihood = -4.32
  statistics:demonstrated, count = 1, log-likelihood = -5.71
  statistics:denote, count = 1, log-likelihood = -5.71
  statistics:depending, count = 1, log-likelihood = -5.71
  statistics:depends, count = 1, log-likelihood = -5.71
  statistics:deriveddata, count = 1, log-likelihood = -5.71
  statistics:described, count = 1, log-likelihood = -5.71
  statistics:description, count = 4, log-likelihood = -4.32
  statistics:descriptively, count = 1, log-likelihood = -5.71
  statistics:desktop, count = 2, log-likelihood = -5.02
  statistics:detailed, count = 1, log-likelihood = -5.71
  statistics:determine, count = 1, log-likelihood = -5.71
  statistics:develop, count = 1, log-likelihood = -5.71
  statistics:deviation, count = 7, log-likelihood = -3.76
  statistics:device, count = 1, log-likelihood = -5.71
  statistics:did, count = 14, log-likelihood = -3.07
  statistics:didnt, count = 8, log-likelihood = -3.63
  statistics:diff, count = 8, log-likelihood = -3.63
  statistics:differ, count = 2, log-likelihood = -5.02
  statistics:difference, count = 10, log-likelihood = -3.41
  statistics:differences, count = 3, log-likelihood = -4.61
  statistics:differencesproblems, count = 1, log-likelihood = -5.71
  statistics:different, count = 11, log-likelihood = -3.31
  statistics:differentiate, count = 1, log-likelihood = -5.71
  statistics:diffexe, count = 1, log-likelihood = -5.71
  statistics:dimensional, count = 1, log-likelihood = -5.71
  statistics:directives, count = 1, log-likelihood = -5.71
  statistics:directly, count = 1, log-likelihood = -5.71
  statistics:directory, count = 11, log-likelihood = -3.31
  statistics:discards, count = 1, log-likelihood = -5.71
  statistics:discussion, count = 2, log-likelihood = -5.02
  statistics:display, count = 1, log-likelihood = -5.71
  statistics:divide, count = 1, log-likelihood = -5.71
  statistics:do, count = 65, log-likelihood = -1.54
  statistics:documentation, count = 1, log-likelihood = -5.71
  statistics:does, count = 30, log-likelihood = -2.31
  statistics:doesnt, count = 11, log-likelihood = -3.31
  statistics:doing, count = 18, log-likelihood = -2.82
  statistics:done, count = 7, log-likelihood = -3.76
  statistics:dont, count = 15, log-likelihood = -3
  statistics:double, count = 12, log-likelihood = -3.23
  statistics:doubles, count = 8, log-likelihood = -3.63
  statistics:down, count = 4, log-likelihood = -4.32
  statistics:download, count = 4, log-likelihood = -4.32
  statistics:downloaded, count = 8, log-likelihood = -3.63
  statistics:downloading, count = 4, log-likelihood = -4.32
  statistics:downloads, count = 1, log-likelihood = -5.71
  statistics:drive, count = 5, log-likelihood = -4.1
  statistics:driver, count = 2, log-likelihood = -5.02
  statistics:due, count = 1, log-likelihood = -5.71
  statistics:duplicate, count = 2, log-likelihood = -5.02
  statistics:during, count = 2, log-likelihood = -5.02
  statistics:dxvix, count = 1, log-likelihood = -5.71
  statistics:each, count = 13, log-likelihood = -3.15
  statistics:earlier, count = 1, log-likelihood = -5.71
  statistics:easier, count = 2, log-likelihood = -5.02
  statistics:easily, count = 1, log-likelihood = -5.71
  statistics:easy, count = 2, log-likelihood = -5.02
  statistics:echo, count = 1, log-likelihood = -5.71
  statistics:edit, count = 1, log-likelihood = -5.71
  statistics:edited, count = 1, log-likelihood = -5.71
  statistics:editing, count = 1, log-likelihood = -5.71
  statistics:editor, count = 1, log-likelihood = -5.71
  statistics:editors, count = 1, log-likelihood = -5.71
  statistics:eecs, count = 9, log-likelihood = -3.51
  statistics:eecs280, count = 2, log-likelihood = -5.02
  statistics:effects, count = 2, log-likelihood = -5.02
  statistics:eg, count = 1, log-likelihood = -5.71
  statistics:either, count = 3, log-likelihood = -4.61
  statistics:element, count = 8, log-likelihood = -3.63
  statistics:elements, count = 6, log-likelihood = -3.92
  statistics:else, count = 7, log-likelihood = -3.76
  statistics:emacs, count = 1, log-likelihood = -5.71
  statistics:email, count = 3, log-likelihood = -4.61
  statistics:embarrassed, count = 1, log-likelihood = -5.71
  statistics:empty, count = 5, log-likelihood = -4.1
  statistics:end, count = 7, log-likelihood = -3.76
  statistics:endl, count = 1, log-likelihood = -5.71
  statistics:engineering, count = 1, log-likelihood = -5.71
  statistics:engr, count = 2, log-likelihood = -5.02
  statistics:enough, count = 1, log-likelihood = -5.71
  statistics:enrolled, count = 1, log-likelihood = -5.71
  statistics:ensure, count = 1, log-likelihood = -5.71
  statistics:enter, count = 4, log-likelihood = -4.32
  statistics:entered, count = 2, log-likelihood = -5.02
  statistics:entirely, count = 1, log-likelihood = -5.71
  statistics:environment, count = 4, log-likelihood = -4.32
  statistics:epsilon, count = 1, log-likelihood = -5.71
  statistics:equal, count = 8, log-likelihood = -3.63
  statistics:equation, count = 4, log-likelihood = -4.32
  statistics:equivalent, count = 1, log-likelihood = -5.71
  statistics:error, count = 54, log-likelihood = -1.72
  statistics:errors, count = 17, log-likelihood = -2.88
  statistics:essentially, count = 1, log-likelihood = -5.71
  statistics:established, count = 1, log-likelihood = -5.71
  statistics:etc, count = 8, log-likelihood = -3.63
  statistics:even, count = 9, log-likelihood = -3.51
  statistics:ever, count = 1, log-likelihood = -5.71
  statistics:every, count = 8, log-likelihood = -3.63
  statistics:everything, count = 7, log-likelihood = -3.76
  statistics:everytime, count = 1, log-likelihood = -5.71
  statistics:ex, count = 2, log-likelihood = -5.02
  statistics:exact, count = 4, log-likelihood = -4.32
  statistics:exactly, count = 12, log-likelihood = -3.23
  statistics:example, count = 25, log-likelihood = -2.49
  statistics:examples, count = 2, log-likelihood = -5.02
  statistics:excel, count = 7, log-likelihood = -3.76
  statistics:exceltsv, count = 4, log-likelihood = -4.32
  statistics:except, count = 1, log-likelihood = -5.71
  statistics:excluding, count = 1, log-likelihood = -5.71
  statistics:execute, count = 1, log-likelihood = -5.71
  statistics:exist, count = 1, log-likelihood = -5.71
  statistics:existing, count = 2, log-likelihood = -5.02
  statistics:exit, count = 7, log-likelihood = -3.76
  statistics:expected, count = 3, log-likelihood = -4.61
  statistics:expects, count = 2, log-likelihood = -5.02
  statistics:experienced, count = 1, log-likelihood = -5.71
  statistics:explain, count = 5, log-likelihood = -4.1
  statistics:explained, count = 1, log-likelihood = -5.71
  statistics:explicit, count = 1, log-likelihood = -5.71
  statistics:exporting, count = 1, log-likelihood = -5.71
  statistics:expose, count = 1, log-likelihood = -5.71
  statistics:expression, count = 2, log-likelihood = -5.02
  statistics:expressions, count = 1, log-likelihood = -5.71
  statistics:external, count = 1, log-likelihood = -5.71
  statistics:extra, count = 5, log-likelihood = -4.1
  statistics:extract, count = 3, log-likelihood = -4.61
  statistics:extractcolumn, count = 8, log-likelihood = -3.63
  statistics:extractcolumns, count = 1, log-likelihood = -5.71
  statistics:extracting, count = 1, log-likelihood = -5.71
  statistics:extremely, count = 1, log-likelihood = -5.71
  statistics:fail, count = 2, log-likelihood = -5.02
  statistics:failed, count = 7, log-likelihood = -3.76
  statistics:fails, count = 3, log-likelihood = -4.61
  statistics:fair, count = 1, log-likelihood = -5.71
  statistics:familiar, count = 1, log-likelihood = -5.71
  statistics:faqs, count = 1, log-likelihood = -5.71
  statistics:far, count = 1, log-likelihood = -5.71
  statistics:fatal, count = 1, log-likelihood = -5.71
  statistics:fault, count = 3, log-likelihood = -4.61
  statistics:feedback, count = 2, log-likelihood = -5.02
  statistics:feel, count = 1, log-likelihood = -5.71
  statistics:few, count = 4, log-likelihood = -4.32
  statistics:figure, count = 6, log-likelihood = -3.92
  statistics:figured, count = 2, log-likelihood = -5.02
  statistics:figuring, count = 1, log-likelihood = -5.71
  statistics:file, count = 56, log-likelihood = -1.69
  statistics:filedirectory, count = 1, log-likelihood = -5.71
  statistics:filename, count = 6, log-likelihood = -3.92
  statistics:files, count = 35, log-likelihood = -2.16
  statistics:filesadd, count = 1, log-likelihood = -5.71
  statistics:fill, count = 2, log-likelihood = -5.02
  statistics:final, count = 5, log-likelihood = -4.1
  statistics:finali0, count = 1, log-likelihood = -5.71
  statistics:finally, count = 1, log-likelihood = -5.71
  statistics:find, count = 23, log-likelihood = -2.57
  statistics:finding, count = 2, log-likelihood = -5.02
  statistics:finds, count = 1, log-likelihood = -5.71
  statistics:fine, count = 5, log-likelihood = -4.1
  statistics:finish, count = 1, log-likelihood = -5.71
  statistics:finished, count = 4, log-likelihood = -4.32
  statistics:finishing, count = 1, log-likelihood = -5.71
  statistics:first, count = 8, log-likelihood = -3.63
  statistics:five, count = 1, log-likelihood = -5.71
  statistics:fix, count = 12, log-likelihood = -3.23
  statistics:fixed, count = 4, log-likelihood = -4.32
  statistics:flags, count = 1, log-likelihood = -5.71
  statistics:folder, count = 12, log-likelihood = -3.23
  statistics:folders, count = 1, log-likelihood = -5.71
  statistics:followed, count = 1, log-likelihood = -5.71
  statistics:following, count = 13, log-likelihood = -3.15
  statistics:for, count = 126, log-likelihood = -0.874
  statistics:forgot, count = 1, log-likelihood = -5.71
  statistics:form, count = 3, log-likelihood = -4.61
  statistics:format, count = 8, log-likelihood = -3.63
  statistics:formula, count = 3, log-likelihood = -4.61
  statistics:formulas, count = 1, log-likelihood = -5.71
  statistics:found, count = 7, log-likelihood = -3.76
  statistics:four, count = 1, log-likelihood = -5.71
  statistics:frequency, count = 5, log-likelihood = -4.1
  statistics:fresh, count = 1, log-likelihood = -5.71
  statistics:friday, count = 1, log-likelihood = -5.71
  statistics:from, count = 40, log-likelihood = -2.02
  statistics:fstream, count = 5, log-likelihood = -4.1
  statistics:full, count = 4, log-likelihood = -4.32
  statistics:fully, count = 1, log-likelihood = -5.71
  statistics:function, count = 99, log-likelihood = -1.12
  statistics:functionand, count = 1, log-likelihood = -5.71
  statistics:functionlike, count = 1, log-likelihood = -5.71
  statistics:functions, count = 37, log-likelihood = -2.1
  statistics:functionstyle, count = 1, log-likelihood = -5.71
  statistics:further, count = 2, log-likelihood = -5.02
  statistics:g, count = 13, log-likelihood = -3.15
  statistics:game, count = 1, log-likelihood = -5.71
  statistics:gathered, count = 1, log-likelihood = -5.71
  statistics:gave, count = 3, log-likelihood = -4.61
  statistics:gdb, count = 2, log-likelihood = -5.02
  statistics:generated, count = 1, log-likelihood = -5.71
  statistics:get, count = 37, log-likelihood = -2.1
  statistics:getting, count = 17, log-likelihood = -2.88
  statistics:give, count = 4, log-likelihood = -4.32
  statistics:given, count = 22, log-likelihood = -2.62
  statistics:givenvalue, count = 1, log-likelihood = -5.71
  statistics:gives, count = 5, log-likelihood = -4.1
  statistics:giving, count = 1, log-likelihood = -5.71
  statistics:glitch, count = 1, log-likelihood = -5.71
  statistics:global, count = 1, log-likelihood = -5.71
  statistics:go, count = 14, log-likelihood = -3.07
  statistics:going, count = 9, log-likelihood = -3.51
  statistics:gone, count = 2, log-likelihood = -5.02
  statistics:gonna, count = 1, log-likelihood = -5.71
  statistics:good, count = 5, log-likelihood = -4.1
  statistics:google, count = 5, log-likelihood = -4.1
  statistics:got, count = 14, log-likelihood = -3.07
  statistics:gotten, count = 1, log-likelihood = -5.71
  statistics:grade, count = 3, log-likelihood = -4.61
  statistics:graded, count = 3, log-likelihood = -4.61
  statistics:grader, count = 4, log-likelihood = -4.32
  statistics:grades, count = 1, log-likelihood = -5.71
  statistics:grading, count = 3, log-likelihood = -4.61
  statistics:great, count = 1, log-likelihood = -5.71
  statistics:greatest, count = 1, log-likelihood = -5.71
  statistics:group, count = 2, log-likelihood = -5.02
  statistics:gsi, count = 1, log-likelihood = -5.71
  statistics:guaranteed, count = 1, log-likelihood = -5.71
  statistics:guess, count = 1, log-likelihood = -5.71
  statistics:guessing, count = 2, log-likelihood = -5.02
  statistics:guide, count = 3, log-likelihood = -4.61
  statistics:guideline, count = 3, log-likelihood = -4.61
  statistics:guidelines, count = 1, log-likelihood = -5.71
  statistics:guys, count = 1, log-likelihood = -5.71
  statistics:h, count = 1, log-likelihood = -5.71
  statistics:had, count = 5, log-likelihood = -4.1
  statistics:hadnt, count = 1, log-likelihood = -5.71
  statistics:hand, count = 2, log-likelihood = -5.02
  statistics:happen, count = 1, log-likelihood = -5.71
  statistics:happening, count = 3, log-likelihood = -4.61
  statistics:hard, count = 1, log-likelihood = -5.71
  statistics:has, count = 15, log-likelihood = -3
  statistics:have, count = 68, log-likelihood = -1.49
  statistics:havent, count = 3, log-likelihood = -4.61
  statistics:having, count = 5, log-likelihood = -4.1
  statistics:header, count = 5, log-likelihood = -4.1
  statistics:headers, count = 1, log-likelihood = -5.71
  statistics:held, count = 1, log-likelihood = -5.71
  statistics:hello, count = 8, log-likelihood = -3.63
  statistics:help, count = 11, log-likelihood = -3.31
  statistics:helper, count = 4, log-likelihood = -4.32
  statistics:helpful, count = 1, log-likelihood = -5.71
  statistics:helps, count = 1, log-likelihood = -5.71
  statistics:here, count = 14, log-likelihood = -3.07
  statistics:hi, count = 12, log-likelihood = -3.23
  statistics:highest, count = 1, log-likelihood = -5.71
  statistics:highlight, count = 1, log-likelihood = -5.71
  statistics:hint, count = 2, log-likelihood = -5.02
  statistics:hints, count = 2, log-likelihood = -5.02
  statistics:history, count = 1, log-likelihood = -5.71
  statistics:hit, count = 1, log-likelihood = -5.71
  statistics:home, count = 1, log-likelihood = -5.71
  statistics:homeajglasseecs280project1statscpp104, count = 1, log-likelihood = -5.71
  statistics:homeajglasseecs280project1statscpp25, count = 1, log-likelihood = -5.71
  statistics:honor, count = 1, log-likelihood = -5.71
  statistics:hotline, count = 1, log-likelihood = -5.71
  statistics:hours, count = 9, log-likelihood = -3.51
  statistics:how, count = 63, log-likelihood = -1.57
  statistics:however, count = 28, log-likelihood = -2.38
  statistics:httpclass1eecsumichedu, count = 1, log-likelihood = -5.71
  statistics:httpwwwicpsrumicheduicpsrwebicpsrstudies30103q30103, count = 1, log-likelihood = -5.71
  statistics:i, count = 206, log-likelihood = -0.383
  statistics:icpsr, count = 1, log-likelihood = -5.71
  statistics:icpsr3010330103descriptioncitationpdf, count = 1, log-likelihood = -5.71
  statistics:icpsr3010330103manifesttxt, count = 1, log-likelihood = -5.71
  statistics:icpsr3010330103relatedliteraturetxt, count = 1, log-likelihood = -5.71
  statistics:icpsr30103ds0001301030001codebookpdf, count = 1, log-likelihood = -5.71
  statistics:icpsr30103ds0001301030001datatsv, count = 1, log-likelihood = -5.71
  statistics:icpsr30103ds0001301030001questionnairepdf, count = 1, log-likelihood = -5.71
  statistics:icpsr30103ds000130103­0001­datatsv, count = 1, log-likelihood = -5.71
  statistics:icpsr30103termsofusehtml, count = 1, log-likelihood = -5.71
  statistics:id, count = 2, log-likelihood = -5.02
  statistics:idea, count = 8, log-likelihood = -3.63
  statistics:ideas, count = 6, log-likelihood = -3.92
  statistics:identical, count = 1, log-likelihood = -5.71
  statistics:ie, count = 4, log-likelihood = -4.32
  statistics:if, count = 60, log-likelihood = -1.62
  statistics:ifstream, count = 2, log-likelihood = -5.02
  statistics:ignore, count = 1, log-likelihood = -5.71
  statistics:ignoretrailingspace, count = 1, log-likelihood = -5.71
  statistics:illegal, count = 1, log-likelihood = -5.71
  statistics:illustrates, count = 1, log-likelihood = -5.71
  statistics:im, count = 47, log-likelihood = -1.86
  statistics:implement, count = 3, log-likelihood = -4.61
  statistics:implementation, count = 1, log-likelihood = -5.71
  statistics:implemented, count = 3, log-likelihood = -4.61
  statistics:implementing, count = 1, log-likelihood = -5.71
  statistics:import, count = 2, log-likelihood = -5.02
  statistics:importance, count = 1, log-likelihood = -5.71
  statistics:important, count = 1, log-likelihood = -5.71
  statistics:importantly, count = 1, log-likelihood = -5.71
  statistics:improve, count = 1, log-likelihood = -5.71
  statistics:in, count = 160, log-likelihood = -0.635
  statistics:inbox, count = 1, log-likelihood = -5.71
  statistics:include, count = 16, log-likelihood = -2.94
  statistics:included, count = 6, log-likelihood = -3.92
  statistics:includes, count = 1, log-likelihood = -5.71
  statistics:includestatscpp, count = 1, log-likelihood = -5.71
  statistics:including, count = 4, log-likelihood = -4.32
  statistics:incomplete, count = 2, log-likelihood = -5.02
  statistics:inconsistency, count = 1, log-likelihood = -5.71
  statistics:incorrect, count = 5, log-likelihood = -4.1
  statistics:incorrectly, count = 1, log-likelihood = -5.71
  statistics:increments, count = 1, log-likelihood = -5.71
  statistics:index, count = 1, log-likelihood = -5.71
  statistics:indexing, count = 1, log-likelihood = -5.71
  statistics:indicated, count = 1, log-likelihood = -5.71
  statistics:ined, count = 1, log-likelihood = -5.71
  statistics:information, count = 5, log-likelihood = -4.1
  statistics:initial, count = 1, log-likelihood = -5.71
  statistics:initialize, count = 3, log-likelihood = -4.61
  statistics:initializer, count = 1, log-likelihood = -5.71
  statistics:initializing, count = 1, log-likelihood = -5.71
  statistics:initially, count = 1, log-likelihood = -5.71
  statistics:initialvector, count = 1, log-likelihood = -5.71
  statistics:inner, count = 2, log-likelihood = -5.02
  statistics:input, count = 11, log-likelihood = -3.31
  statistics:inputs, count = 6, log-likelihood = -3.92
  statistics:inside, count = 7, log-likelihood = -3.76
  statistics:install, count = 1, log-likelihood = -5.71
  statistics:instantiation, count = 1, log-likelihood = -5.71
  statistics:instantly, count = 1, log-likelihood = -5.71
  statistics:instead, count = 7, log-likelihood = -3.76
  statistics:int, count = 8, log-likelihood = -3.63
  statistics:integer, count = 4, log-likelihood = -4.32
  statistics:integers, count = 2, log-likelihood = -5.02
  statistics:intended, count = 1, log-likelihood = -5.71
  statistics:internal, count = 1, log-likelihood = -5.71
  statistics:into, count = 19, log-likelihood = -2.77
  statistics:intvectorimpl, count = 1, log-likelihood = -5.71
  statistics:intvsize, count = 1, log-likelihood = -5.71
  statistics:invocation, count = 5, log-likelihood = -4.1
  statistics:iomanip, count = 1, log-likelihood = -5.71
  statistics:ion, count = 1, log-likelihood = -5.71
  statistics:iostream, count = 2, log-likelihood = -5.02
  statistics:is, count = 146, log-likelihood = -0.727
  statistics:isnt, count = 4, log-likelihood = -4.32
  statistics:issue, count = 6, log-likelihood = -3.92
  statistics:issues, count = 3, log-likelihood = -4.61
  statistics:it, count = 128, log-likelihood = -0.858
  statistics:item, count = 1, log-likelihood = -5.71
  statistics:iterate, count = 1, log-likelihood = -5.71
  statistics:its, count = 12, log-likelihood = -3.23
  statistics:ive, count = 15, log-likelihood = -3
  statistics:j, count = 2, log-likelihood = -5.02
  statistics:just, count = 41, log-likelihood = -2
  statistics:keep, count = 6, log-likelihood = -3.92
  statistics:keeps, count = 2, log-likelihood = -5.02
  statistics:kept, count = 1, log-likelihood = -5.71
  statistics:key, count = 1, log-likelihood = -5.71
  statistics:keyword, count = 1, log-likelihood = -5.71
  statistics:kind, count = 4, log-likelihood = -4.32
  statistics:knew, count = 1, log-likelihood = -5.71
  statistics:know, count = 21, log-likelihood = -2.67
  statistics:known, count = 1, log-likelihood = -5.71
  statistics:kompare, count = 1, log-likelihood = -5.71
  statistics:lab, count = 1, log-likelihood = -5.71
  statistics:lab01, count = 1, log-likelihood = -5.71
  statistics:lab1, count = 1, log-likelihood = -5.71
  statistics:labelled, count = 1, log-likelihood = -5.71
  statistics:labs, count = 1, log-likelihood = -5.71
  statistics:laid, count = 1, log-likelihood = -5.71
  statistics:laptop, count = 1, log-likelihood = -5.71
  statistics:last, count = 4, log-likelihood = -4.32
  statistics:later, count = 1, log-likelihood = -5.71
  statistics:latest, count = 1, log-likelihood = -5.71
  statistics:ld, count = 2, log-likelihood = -5.02
  statistics:learn, count = 3, log-likelihood = -4.61
  statistics:learned, count = 1, log-likelihood = -5.71
  statistics:least, count = 3, log-likelihood = -4.61
  statistics:leave, count = 1, log-likelihood = -5.71
  statistics:lecture, count = 3, log-likelihood = -4.61
  statistics:lectures, count = 1, log-likelihood = -5.71
  statistics:leeway, count = 1, log-likelihood = -5.71
  statistics:left, count = 2, log-likelihood = -5.02
  statistics:len, count = 1, log-likelihood = -5.71
  statistics:let, count = 1, log-likelihood = -5.71
  statistics:lets, count = 2, log-likelihood = -5.02
  statistics:letters, count = 1, log-likelihood = -5.71
  statistics:libraries, count = 5, log-likelihood = -4.1
  statistics:library, count = 2, log-likelihood = -5.02
  statistics:life, count = 1, log-likelihood = -5.71
  statistics:like, count = 39, log-likelihood = -2.05
  statistics:likely, count = 1, log-likelihood = -5.71
  statistics:limit, count = 1, log-likelihood = -5.71
  statistics:limitations, count = 1, log-likelihood = -5.71
  statistics:line, count = 11, log-likelihood = -3.31
  statistics:lines, count = 2, log-likelihood = -5.02
  statistics:link, count = 6, log-likelihood = -3.92
  statistics:linked, count = 1, log-likelihood = -5.71
  statistics:linker, count = 5, log-likelihood = -4.1
  statistics:links, count = 1, log-likelihood = -5.71
  statistics:linux, count = 10, log-likelihood = -3.41
  statistics:list, count = 3, log-likelihood = -4.61
  statistics:listed, count = 2, log-likelihood = -5.02
  statistics:listing, count = 1, log-likelihood = -5.71
  statistics:little, count = 1, log-likelihood = -5.71
  statistics:lnk2019, count = 1, log-likelihood = -5.71
  statistics:load, count = 1, log-likelihood = -5.71
  statistics:loaded, count = 1, log-likelihood = -5.71
  statistics:loading, count = 1, log-likelihood = -5.71
  statistics:local, count = 2, log-likelihood = -5.02
  statistics:locate, count = 2, log-likelihood = -5.02
  statistics:location, count = 4, log-likelihood = -4.32
  statistics:locationbuilding, count = 1, log-likelihood = -5.71
  statistics:locations, count = 1, log-likelihood = -5.71
  statistics:log, count = 2, log-likelihood = -5.02
  statistics:login, count = 1, log-likelihood = -5.71
  statistics:long, count = 4, log-likelihood = -4.32
  statistics:longer, count = 1, log-likelihood = -5.71
  statistics:look, count = 3, log-likelihood = -4.61
  statistics:looked, count = 2, log-likelihood = -5.02
  statistics:looking, count = 3, log-likelihood = -4.61
  statistics:looks, count = 6, log-likelihood = -3.92
  statistics:loop, count = 5, log-likelihood = -4.1
  statistics:loopcontrol, count = 1, log-likelihood = -5.71
  statistics:loops, count = 3, log-likelihood = -4.61
  statistics:lose, count = 3, log-likelihood = -4.61
  statistics:lost, count = 1, log-likelihood = -5.71
  statistics:lot, count = 1, log-likelihood = -5.71
  statistics:lowest, count = 1, log-likelihood = -5.71
  statistics:ls, count = 2, log-likelihood = -5.02
  statistics:mac, count = 3, log-likelihood = -4.61
  statistics:machine, count = 1, log-likelihood = -5.71
  statistics:macro, count = 1, log-likelihood = -5.71
  statistics:made, count = 2, log-likelihood = -5.02
  statistics:magic, count = 1, log-likelihood = -5.71
  statistics:main, count = 20, log-likelihood = -2.71
  statistics:mainccp, count = 1, log-likelihood = -5.71
  statistics:maincpp, count = 25, log-likelihood = -2.49
  statistics:maindata, count = 1, log-likelihood = -5.71
  statistics:maindatadatacstr, count = 1, log-likelihood = -5.71
  statistics:maintest, count = 4, log-likelihood = -4.32
  statistics:maintestdatatsv, count = 8, log-likelihood = -3.63
  statistics:maintestin, count = 5, log-likelihood = -4.1
  statistics:maintestintxt, count = 2, log-likelihood = -5.02
  statistics:maintestout, count = 3, log-likelihood = -4.61
  statistics:maintestoutcorrect, count = 6, log-likelihood = -3.92
  statistics:maintests, count = 1, log-likelihood = -5.71
  statistics:make, count = 23, log-likelihood = -2.57
  statistics:makefile, count = 3, log-likelihood = -4.61
  statistics:makefiles, count = 1, log-likelihood = -5.71
  statistics:makes, count = 2, log-likelihood = -5.02
  statistics:making, count = 1, log-likelihood = -5.71
  statistics:manually, count = 4, log-likelihood = -4.32
  statistics:many, count = 5, log-likelihood = -4.1
  statistics:mark, count = 1, log-likelihood = -5.71
  statistics:markers, count = 1, log-likelihood = -5.71
  statistics:match, count = 2, log-likelihood = -5.02
  statistics:matching, count = 1, log-likelihood = -5.71
  statistics:math, count = 1, log-likelihood = -5.71
  statistics:matrix, count = 1, log-likelihood = -5.71
  statistics:matter, count = 1, log-likelihood = -5.71
  statistics:mattered, count = 1, log-likelihood = -5.71
  statistics:max, count = 1, log-likelihood = -5.71
  statistics:maxclass, count = 1, log-likelihood = -5.71
  statistics:maxyanvvectornvallocatornstdstdz, count = 1, log-likelihood = -5.71
  statistics:may, count = 4, log-likelihood = -4.32
  statistics:maybe, count = 1, log-likelihood = -5.71
  statistics:mdeallocate, count = 1, log-likelihood = -5.71
  statistics:mdeallocatenewstart, count = 1, log-likelihood = -5.71
  statistics:me, count = 30, log-likelihood = -2.31
  statistics:mean, count = 24, log-likelihood = -2.53
  statistics:meaning, count = 2, log-likelihood = -5.02
  statistics:means, count = 6, log-likelihood = -3.92
  statistics:meant, count = 1, log-likelihood = -5.71
  statistics:meanv, count = 1, log-likelihood = -5.71
  statistics:median, count = 2, log-likelihood = -5.02
  statistics:medianstdvectordouble, count = 1, log-likelihood = -5.71
  statistics:meeting, count = 1, log-likelihood = -5.71
  statistics:member, count = 3, log-likelihood = -4.61
  statistics:mendofstorage, count = 1, log-likelihood = -5.71
  statistics:mention, count = 1, log-likelihood = -5.71
  statistics:mentioning, count = 1, log-likelihood = -5.71
  statistics:message, count = 17, log-likelihood = -2.88
  statistics:messages, count = 4, log-likelihood = -4.32
  statistics:method, count = 5, log-likelihood = -4.1
  statistics:methods, count = 2, log-likelihood = -5.02
  statistics:mfile, count = 4, log-likelihood = -4.32
  statistics:mfiles, count = 1, log-likelihood = -5.71
  statistics:mfinish, count = 1, log-likelihood = -5.71
  statistics:mgettpallocator, count = 1, log-likelihood = -5.71
  statistics:microsoft, count = 5, log-likelihood = -4.1
  statistics:midnight, count = 1, log-likelihood = -5.71
  statistics:mifles, count = 1, log-likelihood = -5.71
  statistics:might, count = 2, log-likelihood = -5.02
  statistics:min, count = 2, log-likelihood = -5.02
  statistics:min1314, count = 1, log-likelihood = -5.71
  statistics:mine, count = 2, log-likelihood = -5.02
  statistics:minimize, count = 1, log-likelihood = -5.71
  statistics:mismatch, count = 1, log-likelihood = -5.71
  statistics:miss, count = 1, log-likelihood = -5.71
  statistics:missed, count = 1, log-likelihood = -5.71
  statistics:missing, count = 3, log-likelihood = -4.61
  statistics:mode, count = 11, log-likelihood = -3.31
  statistics:modes, count = 1, log-likelihood = -5.71
  statistics:modifies, count = 4, log-likelihood = -4.32
  statistics:modify, count = 5, log-likelihood = -4.1
  statistics:modifying, count = 1, log-likelihood = -5.71
  statistics:monday, count = 1, log-likelihood = -5.71
  statistics:more, count = 13, log-likelihood = -3.15
  statistics:most, count = 4, log-likelihood = -4.32
  statistics:move, count = 1, log-likelihood = -5.71
  statistics:mstart, count = 1, log-likelihood = -5.71
  statistics:much, count = 3, log-likelihood = -4.61
  statistics:multiple, count = 8, log-likelihood = -3.63
  statistics:must, count = 4, log-likelihood = -4.32
  statistics:my, count = 106, log-likelihood = -1.05
  statistics:myfile, count = 1, log-likelihood = -5.71
  statistics:myself, count = 1, log-likelihood = -5.71
  statistics:myvar, count = 1, log-likelihood = -5.71
  statistics:n, count = 4, log-likelihood = -4.32
  statistics:n1p, count = 1, log-likelihood = -5.71
  statistics:name, count = 10, log-likelihood = -3.41
  statistics:named, count = 6, log-likelihood = -3.92
  statistics:names, count = 3, log-likelihood = -4.61
  statistics:namespace, count = 1, log-likelihood = -5.71
  statistics:nano, count = 1, log-likelihood = -5.71
  statistics:near, count = 1, log-likelihood = -5.71
  statistics:need, count = 22, log-likelihood = -2.62
  statistics:needed, count = 3, log-likelihood = -4.61
  statistics:needs, count = 1, log-likelihood = -5.71
  statistics:negative, count = 5, log-likelihood = -4.1
  statistics:neither, count = 2, log-likelihood = -5.02
  statistics:nested, count = 3, log-likelihood = -4.61
  statistics:never, count = 2, log-likelihood = -5.02
  statistics:new, count = 6, log-likelihood = -3.92
  statistics:newfinish, count = 1, log-likelihood = -5.71
  statistics:newline, count = 2, log-likelihood = -5.02
  statistics:newlines, count = 1, log-likelihood = -5.71
  statistics:newstart, count = 1, log-likelihood = -5.71
  statistics:next, count = 3, log-likelihood = -4.61
  statistics:night, count = 1, log-likelihood = -5.71
  statistics:nist, count = 1, log-likelihood = -5.71
  statistics:no, count = 25, log-likelihood = -2.49
  statistics:non, count = 1, log-likelihood = -5.71
  statistics:none, count = 3, log-likelihood = -4.61
  statistics:nonlocal, count = 1, log-likelihood = -5.71
  statistics:nonvoid, count = 2, log-likelihood = -5.02
  statistics:normal, count = 1, log-likelihood = -5.71
  statistics:normally, count = 1, log-likelihood = -5.71
  statistics:north, count = 1, log-likelihood = -5.71
  statistics:not, count = 53, log-likelihood = -1.74
  statistics:note, count = 4, log-likelihood = -4.32
  statistics:nothing, count = 7, log-likelihood = -3.76
  statistics:noticed, count = 2, log-likelihood = -5.02
  statistics:notified, count = 1, log-likelihood = -5.71
  statistics:now, count = 6, log-likelihood = -3.92
  statistics:null, count = 1, log-likelihood = -5.71
  statistics:number, count = 8, log-likelihood = -3.63
  statistics:numbers, count = 12, log-likelihood = -3.23
  statistics:numericlimits, count = 1, log-likelihood = -5.71
  statistics:o, count = 5, log-likelihood = -4.1
  statistics:o1, count = 5, log-likelihood = -4.1
  statistics:obtain, count = 1, log-likelihood = -5.71
  statistics:occasionally, count = 1, log-likelihood = -5.71
  statistics:occurs, count = 2, log-likelihood = -5.02
  statistics:of, count = 114, log-likelihood = -0.974
  statistics:off, count = 4, log-likelihood = -4.32
  statistics:office, count = 7, log-likelihood = -3.76
  statistics:often, count = 1, log-likelihood = -5.71
  statistics:ok, count = 2, log-likelihood = -5.02
  statistics:okay, count = 8, log-likelihood = -3.63
  statistics:old, count = 2, log-likelihood = -5.02
  statistics:older, count = 1, log-likelihood = -5.71
  statistics:on, count = 75, log-likelihood = -1.39
  statistics:once, count = 2, log-likelihood = -5.02
  statistics:one, count = 18, log-likelihood = -2.82
  statistics:ones, count = 2, log-likelihood = -5.02
  statistics:online, count = 5, log-likelihood = -4.1
  statistics:only, count = 20, log-likelihood = -2.71
  statistics:onsign, count = 1, log-likelihood = -5.71
  statistics:onto, count = 1, log-likelihood = -5.71
  statistics:oops, count = 1, log-likelihood = -5.71
  statistics:open, count = 6, log-likelihood = -3.92
  statistics:opened, count = 2, log-likelihood = -5.02
  statistics:opening, count = 3, log-likelihood = -4.61
  statistics:operator, count = 2, log-likelihood = -5.02
  statistics:operators, count = 1, log-likelihood = -5.71
  statistics:opposite, count = 1, log-likelihood = -5.71
  statistics:option, count = 3, log-likelihood = -4.61
  statistics:or, count = 80, log-likelihood = -1.33
  statistics:order, count = 4, log-likelihood = -4.32
  statistics:original, count = 1, log-likelihood = -5.71
  statistics:other, count = 13, log-likelihood = -3.15
  statistics:otherwise, count = 1, log-likelihood = -5.71
  statistics:our, count = 29, log-likelihood = -2.34
  statistics:ourselves, count = 1, log-likelihood = -5.71
  statistics:out, count = 22, log-likelihood = -2.62
  statistics:outer, count = 1, log-likelihood = -5.71
  statistics:output, count = 27, log-likelihood = -2.41
  statistics:outputs, count = 4, log-likelihood = -4.32
  statistics:outputted, count = 1, log-likelihood = -5.71
  statistics:outside, count = 2, log-likelihood = -5.02
  statistics:over, count = 2, log-likelihood = -5.02
  statistics:overloaded, count = 3, log-likelihood = -4.61
  statistics:own, count = 10, log-likelihood = -3.41
  statistics:p, count = 3, log-likelihood = -4.61
  statistics:p047226352, count = 1, log-likelihood = -5.71
  statistics:p1, count = 1, log-likelihood = -5.71
  statistics:p1libararyh, count = 1, log-likelihood = -5.71
  statistics:p1librarycpp, count = 8, log-likelihood = -3.63
  statistics:p1librarycpp821, count = 1, log-likelihood = -5.71
  statistics:p1libraryh, count = 7, log-likelihood = -3.76
  statistics:p1zip, count = 1, log-likelihood = -5.71
  statistics:packages, count = 1, log-likelihood = -5.71
  statistics:page, count = 3, log-likelihood = -4.61
  statistics:pages, count = 1, log-likelihood = -5.71
  statistics:pair, count = 1, log-likelihood = -5.71
  statistics:pairs, count = 1, log-likelihood = -5.71
  statistics:parameter, count = 5, log-likelihood = -4.1
  statistics:part, count = 8, log-likelihood = -3.63
  statistics:particular, count = 1, log-likelihood = -5.71
  statistics:pass, count = 3, log-likelihood = -4.61
  statistics:passed, count = 3, log-likelihood = -4.61
  statistics:passing, count = 1, log-likelihood = -5.71
  statistics:past, count = 3, log-likelihood = -4.61
  statistics:pasted, count = 1, log-likelihood = -5.71
  statistics:path, count = 1, log-likelihood = -5.71
  statistics:pathto, count = 1, log-likelihood = -5.71
  statistics:pay, count = 1, log-likelihood = -5.71
  statistics:pedantic, count = 5, log-likelihood = -4.1
  statistics:people, count = 1, log-likelihood = -5.71
  statistics:peoples, count = 1, log-likelihood = -5.71
  statistics:percentile, count = 16, log-likelihood = -2.94
  statistics:percentiles, count = 9, log-likelihood = -3.51
  statistics:percetile, count = 1, log-likelihood = -5.71
  statistics:perfectly, count = 2, log-likelihood = -5.02
  statistics:performance, count = 1, log-likelihood = -5.71
  statistics:permission, count = 1, log-likelihood = -5.71
  statistics:personal, count = 2, log-likelihood = -5.02
  statistics:perspective, count = 1, log-likelihood = -5.71
  statistics:pg, count = 1, log-likelihood = -5.71
  statistics:physically, count = 1, log-likelihood = -5.71
  statistics:piazza, count = 4, log-likelihood = -4.32
  statistics:pic, count = 1, log-likelihood = -5.71
  statistics:picture, count = 1, log-likelihood = -5.71
  statistics:piece, count = 1, log-likelihood = -5.71
  statistics:pin, count = 1, log-likelihood = -5.71
  statistics:pinned, count = 1, log-likelihood = -5.71
  statistics:place, count = 4, log-likelihood = -4.32
  statistics:places, count = 4, log-likelihood = -4.32
  statistics:placing, count = 1, log-likelihood = -5.71
  statistics:please, count = 5, log-likelihood = -4.1
  statistics:pllibrarycpp, count = 1, log-likelihood = -5.71
  statistics:plural, count = 1, log-likelihood = -5.71
  statistics:pn1, count = 1, log-likelihood = -5.71
  statistics:point, count = 3, log-likelihood = -4.61
  statistics:pointed, count = 1, log-likelihood = -5.71
  statistics:points, count = 10, log-likelihood = -3.41
  statistics:policy, count = 1, log-likelihood = -5.71
  statistics:population, count = 1, log-likelihood = -5.71
  statistics:pose, count = 1, log-likelihood = -5.71
  statistics:possible, count = 3, log-likelihood = -4.61
  statistics:post, count = 2, log-likelihood = -5.02
  statistics:posted, count = 3, log-likelihood = -4.61
  statistics:posts, count = 1, log-likelihood = -5.71
  statistics:practice, count = 3, log-likelihood = -4.61
  statistics:precise, count = 1, log-likelihood = -5.71
  statistics:precision, count = 1, log-likelihood = -5.71
  statistics:prefer, count = 2, log-likelihood = -5.02
  statistics:preprocessor, count = 1, log-likelihood = -5.71
  statistics:present, count = 1, log-likelihood = -5.71
  statistics:pretty, count = 2, log-likelihood = -5.02
  statistics:prevents, count = 1, log-likelihood = -5.71
  statistics:previous, count = 2, log-likelihood = -5.02
  statistics:previously, count = 2, log-likelihood = -5.02
  statistics:primaryexpression, count = 1, log-likelihood = -5.71
  statistics:print, count = 7, log-likelihood = -3.76
  statistics:printed, count = 4, log-likelihood = -4.32
  statistics:printing, count = 4, log-likelihood = -4.32
  statistics:prints, count = 6, log-likelihood = -3.92
  statistics:printsummary, count = 2, log-likelihood = -5.02
  statistics:private, count = 1, log-likelihood = -5.71
  statistics:problem, count = 11, log-likelihood = -3.31
  statistics:problems, count = 3, log-likelihood = -4.61
  statistics:process, count = 2, log-likelihood = -5.02
  statistics:professors, count = 1, log-likelihood = -5.71
  statistics:program, count = 28, log-likelihood = -2.38
  statistics:programs, count = 1, log-likelihood = -5.71
  statistics:project, count = 34, log-likelihood = -2.18
  statistics:project1, count = 4, log-likelihood = -4.32
  statistics:project1spec, count = 1, log-likelihood = -5.71
  statistics:projects, count = 5, log-likelihood = -4.1
  statistics:prompt, count = 1, log-likelihood = -5.71
  statistics:proper, count = 1, log-likelihood = -5.71
  statistics:properly, count = 4, log-likelihood = -4.32
  statistics:prototypes, count = 3, log-likelihood = -4.61
  statistics:provide, count = 1, log-likelihood = -5.71
  statistics:provided, count = 11, log-likelihood = -3.31
  statistics:public, count = 1, log-likelihood = -5.71
  statistics:purpose, count = 1, log-likelihood = -5.71
  statistics:push, count = 1, log-likelihood = -5.71
  statistics:pushback, count = 5, log-likelihood = -4.1
  statistics:put, count = 9, log-likelihood = -3.51
  statistics:putty, count = 5, log-likelihood = -4.1
  statistics:q1, count = 1, log-likelihood = -5.71
  statistics:q2, count = 1, log-likelihood = -5.71
  statistics:question, count = 3, log-likelihood = -4.61
  statistics:questions, count = 3, log-likelihood = -4.61
  statistics:quirk, count = 1, log-likelihood = -5.71
  statistics:ran, count = 4, log-likelihood = -4.32
  statistics:randomly, count = 1, log-likelihood = -5.71
  statistics:range, count = 1, log-likelihood = -5.71
  statistics:ranging, count = 1, log-likelihood = -5.71
  statistics:rather, count = 4, log-likelihood = -4.32
  statistics:reach, count = 1, log-likelihood = -5.71
  statistics:reaches, count = 1, log-likelihood = -5.71
  statistics:read, count = 7, log-likelihood = -3.76
  statistics:reading, count = 5, log-likelihood = -4.1
  statistics:reads, count = 1, log-likelihood = -5.71
  statistics:ready, count = 1, log-likelihood = -5.71
  statistics:real, count = 5, log-likelihood = -4.1
  statistics:realize, count = 1, log-likelihood = -5.71
  statistics:really, count = 7, log-likelihood = -3.76
  statistics:reason, count = 7, log-likelihood = -3.76
  statistics:reasons, count = 1, log-likelihood = -5.71
  statistics:recall, count = 1, log-likelihood = -5.71
  statistics:receive, count = 5, log-likelihood = -4.1
  statistics:received, count = 3, log-likelihood = -4.61
  statistics:receiving, count = 3, log-likelihood = -4.61
  statistics:recognize, count = 1, log-likelihood = -5.71
  statistics:refer, count = 1, log-likelihood = -5.71
  statistics:reference, count = 7, log-likelihood = -3.76
  statistics:referenced, count = 2, log-likelihood = -5.02
  statistics:referring, count = 2, log-likelihood = -5.02
  statistics:regarding, count = 1, log-likelihood = -5.71
  statistics:regrade, count = 1, log-likelihood = -5.71
  statistics:regular, count = 1, log-likelihood = -5.71
  statistics:relates, count = 2, log-likelihood = -5.02
  statistics:relationship, count = 1, log-likelihood = -5.71
  statistics:rem, count = 1, log-likelihood = -5.71
  statistics:remaining, count = 1, log-likelihood = -5.71
  statistics:remember, count = 3, log-likelihood = -4.61
  statistics:remove, count = 1, log-likelihood = -5.71
  statistics:removed, count = 2, log-likelihood = -5.02
  statistics:renamed, count = 1, log-likelihood = -5.71
  statistics:repetitive, count = 2, log-likelihood = -5.02
  statistics:replace, count = 1, log-likelihood = -5.71
  statistics:replicate, count = 1, log-likelihood = -5.71
  statistics:represents, count = 1, log-likelihood = -5.71
  statistics:requied, count = 1, log-likelihood = -5.71
  statistics:required, count = 5, log-likelihood = -4.1
  statistics:requirement, count = 1, log-likelihood = -5.71
  statistics:requirements, count = 1, log-likelihood = -5.71
  statistics:requires, count = 6, log-likelihood = -3.92
  statistics:rerun, count = 1, log-likelihood = -5.71
  statistics:resaved, count = 1, log-likelihood = -5.71
  statistics:resolve, count = 1, log-likelihood = -5.71
  statistics:respectively, count = 2, log-likelihood = -5.02
  statistics:rest, count = 2, log-likelihood = -5.02
  statistics:result11, count = 1, log-likelihood = -5.71
  statistics:result30, count = 1, log-likelihood = -5.71
  statistics:resulted, count = 1, log-likelihood = -5.71
  statistics:resultij, count = 1, log-likelihood = -5.71
  statistics:results, count = 2, log-likelihood = -5.02
  statistics:return, count = 20, log-likelihood = -2.71
  statistics:returned, count = 4, log-likelihood = -4.32
  statistics:returning, count = 3, log-likelihood = -4.61
  statistics:returns, count = 3, log-likelihood = -4.61
  statistics:reverted, count = 1, log-likelihood = -5.71
  statistics:revision, count = 1, log-likelihood = -5.71
  statistics:right, count = 7, log-likelihood = -3.76
  statistics:rme, count = 9, log-likelihood = -3.51
  statistics:rmes, count = 4, log-likelihood = -4.32
  statistics:romance, count = 2, log-likelihood = -5.02
  statistics:romancestarterfiles, count = 1, log-likelihood = -5.71
  statistics:root, count = 2, log-likelihood = -5.02
  statistics:round, count = 2, log-likelihood = -5.02
  statistics:rounded, count = 2, log-likelihood = -5.02
  statistics:rounding, count = 2, log-likelihood = -5.02
  statistics:row, count = 1, log-likelihood = -5.71
  statistics:rows, count = 2, log-likelihood = -5.02
  statistics:rule, count = 1, log-likelihood = -5.71
  statistics:run, count = 29, log-likelihood = -2.34
  statistics:running, count = 7, log-likelihood = -3.76
  statistics:runs, count = 6, log-likelihood = -3.92
  statistics:runtime, count = 1, log-likelihood = -5.71
  statistics:s, count = 1, log-likelihood = -5.71
  statistics:safe, count = 1, log-likelihood = -5.71
  statistics:said, count = 4, log-likelihood = -4.32
  statistics:sake, count = 2, log-likelihood = -5.02
  statistics:salvage, count = 1, log-likelihood = -5.71
  statistics:same, count = 19, log-likelihood = -2.77
  statistics:sample, count = 4, log-likelihood = -4.32
  statistics:saturday, count = 1, log-likelihood = -5.71
  statistics:save, count = 1, log-likelihood = -5.71
  statistics:saved, count = 2, log-likelihood = -5.02
  statistics:saveupload, count = 1, log-likelihood = -5.71
  statistics:saw, count = 1, log-likelihood = -5.71
  statistics:say, count = 5, log-likelihood = -4.1
  statistics:saying, count = 7, log-likelihood = -3.76
  statistics:says, count = 13, log-likelihood = -3.15
  statistics:scope, count = 3, log-likelihood = -4.61
  statistics:score, count = 2, log-likelihood = -5.02
  statistics:screenshot, count = 1, log-likelihood = -5.71
  statistics:sdiff, count = 3, log-likelihood = -4.61
  statistics:search, count = 1, log-likelihood = -5.71
  statistics:second, count = 2, log-likelihood = -5.02
  statistics:section, count = 5, log-likelihood = -4.1
  statistics:see, count = 11, log-likelihood = -3.31
  statistics:seeing, count = 1, log-likelihood = -5.71
  statistics:seem, count = 13, log-likelihood = -3.15
  statistics:seems, count = 11, log-likelihood = -3.31
  statistics:segmentation, count = 4, log-likelihood = -4.32
  statistics:select, count = 1, log-likelihood = -5.71
  statistics:self, count = 1, log-likelihood = -5.71
  statistics:semester, count = 3, log-likelihood = -4.61
  statistics:send, count = 1, log-likelihood = -5.71
  statistics:sense, count = 4, log-likelihood = -4.32
  statistics:sent, count = 1, log-likelihood = -5.71
  statistics:separate, count = 2, log-likelihood = -5.02
  statistics:separately, count = 1, log-likelihood = -5.71
  statistics:seperate, count = 1, log-likelihood = -5.71
  statistics:serious, count = 1, log-likelihood = -5.71
  statistics:server, count = 1, log-likelihood = -5.71
  statistics:set, count = 14, log-likelihood = -3.07
  statistics:sets, count = 3, log-likelihood = -4.61
  statistics:setting, count = 3, log-likelihood = -4.61
  statistics:setup, count = 1, log-likelihood = -5.71
  statistics:sfpt, count = 1, log-likelihood = -5.71
  statistics:sftp, count = 2, log-likelihood = -5.02
  statistics:sheet, count = 1, log-likelihood = -5.71
  statistics:shell, count = 1, log-likelihood = -5.71
  statistics:short, count = 2, log-likelihood = -5.02
  statistics:should, count = 46, log-likelihood = -1.88
  statistics:shouldnt, count = 2, log-likelihood = -5.02
  statistics:show, count = 1, log-likelihood = -5.71
  statistics:showed, count = 5, log-likelihood = -4.1
  statistics:showing, count = 2, log-likelihood = -5.02
  statistics:shown, count = 1, log-likelihood = -5.71
  statistics:shows, count = 4, log-likelihood = -4.32
  statistics:side, count = 1, log-likelihood = -5.71
  statistics:sign, count = 1, log-likelihood = -5.71
  statistics:signed, count = 2, log-likelihood = -5.02
  statistics:significance, count = 1, log-likelihood = -5.71
  statistics:signs, count = 1, log-likelihood = -5.71
  statistics:similar, count = 3, log-likelihood = -4.61
  statistics:simple, count = 1, log-likelihood = -5.71
  statistics:simplify, count = 1, log-likelihood = -5.71
  statistics:simply, count = 3, log-likelihood = -4.61
  statistics:since, count = 16, log-likelihood = -2.94
  statistics:site, count = 1, log-likelihood = -5.71
  statistics:situation, count = 2, log-likelihood = -5.02
  statistics:situations, count = 1, log-likelihood = -5.71
  statistics:size, count = 1, log-likelihood = -5.71
  statistics:sizetypethismimplmfinish, count = 1, log-likelihood = -5.71
  statistics:slides, count = 1, log-likelihood = -5.71
  statistics:slightly, count = 1, log-likelihood = -5.71
  statistics:small, count = 2, log-likelihood = -5.02
  statistics:smaller, count = 1, log-likelihood = -5.71
  statistics:snapshot, count = 1, log-likelihood = -5.71
  statistics:so, count = 51, log-likelihood = -1.78
  statistics:software, count = 1, log-likelihood = -5.71
  statistics:solid, count = 1, log-likelihood = -5.71
  statistics:solution, count = 2, log-likelihood = -5.02
  statistics:solutions, count = 1, log-likelihood = -5.71
  statistics:solve, count = 4, log-likelihood = -4.32
  statistics:some, count = 15, log-likelihood = -3
  statistics:somebody, count = 1, log-likelihood = -5.71
  statistics:somehow, count = 1, log-likelihood = -5.71
  statistics:someone, count = 4, log-likelihood = -4.32
  statistics:something, count = 12, log-likelihood = -3.23
  statistics:somethings, count = 1, log-likelihood = -5.71
  statistics:sometimes, count = 2, log-likelihood = -5.02
  statistics:somewhere, count = 5, log-likelihood = -4.1
  statistics:sort, count = 15, log-likelihood = -3
  statistics:sorta, count = 1, log-likelihood = -5.71
  statistics:sortclass, count = 1, log-likelihood = -5.71
  statistics:sorted, count = 1, log-likelihood = -5.71
  statistics:sorting, count = 1, log-likelihood = -5.71
  statistics:sorts, count = 1, log-likelihood = -5.71
  statistics:sortstdvectordouble, count = 1, log-likelihood = -5.71
  statistics:sortv, count = 4, log-likelihood = -4.32
  statistics:sortvectordouble, count = 1, log-likelihood = -5.71
  statistics:sortyaxaavvectornvallocatornstdstdz, count = 1, log-likelihood = -5.71
  statistics:source, count = 2, log-likelihood = -5.02
  statistics:space, count = 4, log-likelihood = -4.32
  statistics:spaces, count = 3, log-likelihood = -4.61
  statistics:spacing, count = 1, log-likelihood = -5.71
  statistics:spam, count = 2, log-likelihood = -5.02
  statistics:spec, count = 11, log-likelihood = -3.31
  statistics:special, count = 3, log-likelihood = -4.61
  statistics:specific, count = 4, log-likelihood = -4.32
  statistics:specifically, count = 4, log-likelihood = -4.32
  statistics:specification, count = 2, log-likelihood = -5.02
  statistics:specifications, count = 3, log-likelihood = -4.61
  statistics:specified, count = 1, log-likelihood = -5.71
  statistics:specifies, count = 1, log-likelihood = -5.71
  statistics:specs, count = 6, log-likelihood = -3.92
  statistics:sqrt, count = 2, log-likelihood = -5.02
  statistics:square, count = 1, log-likelihood = -5.71
  statistics:ssh, count = 2, log-likelihood = -5.02
  statistics:stacked, count = 1, log-likelihood = -5.71
  statistics:staff, count = 1, log-likelihood = -5.71
  statistics:standard, count = 9, log-likelihood = -3.51
  statistics:start, count = 5, log-likelihood = -4.1
  statistics:started, count = 2, log-likelihood = -5.02
  statistics:starter, count = 5, log-likelihood = -4.1
  statistics:starterfiles, count = 2, log-likelihood = -5.02
  statistics:starts, count = 1, log-likelihood = -5.71
  statistics:stated, count = 1, log-likelihood = -5.71
  statistics:statement, count = 6, log-likelihood = -3.92
  statistics:statements, count = 4, log-likelihood = -4.32
  statistics:states, count = 2, log-likelihood = -5.02
  statistics:statistical, count = 1, log-likelihood = -5.71
  statistics:statistics, count = 1, log-likelihood = -5.71
  statistics:statisticscpp, count = 1, log-likelihood = -5.71
  statistics:statisticsh, count = 1, log-likelihood = -5.71
  statistics:stats, count = 6, log-likelihood = -3.92
  statistics:statscpp, count = 36, log-likelihood = -2.13
  statistics:statscpp1, count = 1, log-likelihood = -5.71
  statistics:statscpp1018error, count = 1, log-likelihood = -5.71
  statistics:statscpp1028, count = 1, log-likelihood = -5.71
  statistics:statscpp10624, count = 1, log-likelihood = -5.71
  statistics:statscpp1591, count = 1, log-likelihood = -5.71
  statistics:statscpp2223, count = 1, log-likelihood = -5.71
  statistics:statscpp2225, count = 1, log-likelihood = -5.71
  statistics:statscpp226, count = 1, log-likelihood = -5.71
  statistics:statscpp2612, count = 1, log-likelihood = -5.71
  statistics:statscpp2841, count = 1, log-likelihood = -5.71
  statistics:statscpp3336, count = 1, log-likelihood = -5.71
  statistics:statscpp3915, count = 1, log-likelihood = -5.71
  statistics:statscpp401, count = 1, log-likelihood = -5.71
  statistics:statscpptext0x0, count = 1, log-likelihood = -5.71
  statistics:statsh, count = 16, log-likelihood = -2.94
  statistics:statsh11, count = 1, log-likelihood = -5.71
  statistics:statsh3035, count = 1, log-likelihood = -5.71
  statistics:statspublictest, count = 3, log-likelihood = -4.61
  statistics:statspublictestcpp, count = 1, log-likelihood = -5.71
  statistics:statstest, count = 3, log-likelihood = -4.61
  statistics:statstestcpp, count = 7, log-likelihood = -3.76
  statistics:statstests, count = 8, log-likelihood = -3.63
  statistics:statstestscpp, count = 17, log-likelihood = -2.88
  statistics:statstestscpp195, count = 1, log-likelihood = -5.71
  statistics:statstestscpptext0xbf, count = 1, log-likelihood = -5.71
  statistics:status, count = 3, log-likelihood = -4.61
  statistics:stay, count = 1, log-likelihood = -5.71
  statistics:std, count = 2, log-likelihood = -5.02
  statistics:stdallocator, count = 1, log-likelihood = -5.71
  statistics:stdallocatordouble, count = 3, log-likelihood = -4.61
  statistics:stdc11, count = 5, log-likelihood = -4.1
  statistics:stdev, count = 3, log-likelihood = -4.61
  statistics:stdifstream, count = 2, log-likelihood = -5.02
  statistics:stdioh, count = 1, log-likelihood = -5.71
  statistics:stdvectorbasedouble, count = 1, log-likelihood = -5.71
  statistics:stdvectordouble, count = 1, log-likelihood = -5.71
  statistics:stdvectordoubleclass, count = 1, log-likelihood = -5.71
  statistics:stdvectorstdvectordouble, count = 4, log-likelihood = -4.32
  statistics:stdvectortp, count = 1, log-likelihood = -5.71
  statistics:stdvector’, count = 1, log-likelihood = -5.71
  statistics:step, count = 4, log-likelihood = -4.32
  statistics:steps, count = 1, log-likelihood = -5.71
  statistics:stfp, count = 1, log-likelihood = -5.71
  statistics:sth, count = 1, log-likelihood = -5.71
  statistics:still, count = 11, log-likelihood = -3.31
  statistics:stop, count = 3, log-likelihood = -4.61
  statistics:stopped, count = 1, log-likelihood = -5.71
  statistics:stops, count = 2, log-likelihood = -5.02
  statistics:store, count = 1, log-likelihood = -5.71
  statistics:storing, count = 1, log-likelihood = -5.71
  statistics:strange, count = 1, log-likelihood = -5.71
  statistics:strategies, count = 1, log-likelihood = -5.71
  statistics:string, count = 4, log-likelihood = -4.32
  statistics:stringand, count = 1, log-likelihood = -5.71
  statistics:struct, count = 1, log-likelihood = -5.71
  statistics:struggling, count = 3, log-likelihood = -4.61
  statistics:stubs, count = 2, log-likelihood = -5.02
  statistics:student, count = 1, log-likelihood = -5.71
  statistics:studio, count = 1, log-likelihood = -5.71
  statistics:studios, count = 1, log-likelihood = -5.71
  statistics:study, count = 2, log-likelihood = -5.02
  statistics:style, count = 14, log-likelihood = -3.07
  statistics:sublime, count = 6, log-likelihood = -3.92
  statistics:sublimecaen, count = 1, log-likelihood = -5.71
  statistics:submission, count = 1, log-likelihood = -5.71
  statistics:submit, count = 16, log-likelihood = -2.94
  statistics:submitis, count = 1, log-likelihood = -5.71
  statistics:submitted, count = 4, log-likelihood = -4.32
  statistics:submitting, count = 3, log-likelihood = -4.61
  statistics:subsequently, count = 1, log-likelihood = -5.71
  statistics:success, count = 1, log-likelihood = -5.71
  statistics:successfully, count = 3, log-likelihood = -4.61
  statistics:such, count = 11, log-likelihood = -3.31
  statistics:sufficient, count = 1, log-likelihood = -5.71
  statistics:suggestion, count = 2, log-likelihood = -5.02
  statistics:suggestions, count = 1, log-likelihood = -5.71
  statistics:suite, count = 3, log-likelihood = -4.61
  statistics:sum, count = 7, log-likelihood = -3.76
  statistics:sumdata, count = 2, log-likelihood = -5.02
  statistics:summarize, count = 32, log-likelihood = -2.24
  statistics:summarizestdvectordouble, count = 4, log-likelihood = -4.32
  statistics:summarizev, count = 1, log-likelihood = -5.71
  statistics:summarizevectordouble, count = 1, log-likelihood = -5.71
  statistics:summary, count = 5, log-likelihood = -4.1
  statistics:summarypushbackvpos1, count = 1, log-likelihood = -5.71
  statistics:sumstdvectordouble, count = 1, log-likelihood = -5.71
  statistics:sunday, count = 1, log-likelihood = -5.71
  statistics:supposed, count = 19, log-likelihood = -2.77
  statistics:supposedly, count = 1, log-likelihood = -5.71
  statistics:sure, count = 13, log-likelihood = -3.15
  statistics:switching, count = 1, log-likelihood = -5.71
  statistics:swore, count = 1, log-likelihood = -5.71
  statistics:symbol, count = 3, log-likelihood = -4.61
  statistics:symbols, count = 1, log-likelihood = -5.71
  statistics:system, count = 1, log-likelihood = -5.71
  statistics:table, count = 1, log-likelihood = -5.71
  statistics:tabs, count = 2, log-likelihood = -5.02
  statistics:take, count = 4, log-likelihood = -4.32
  statistics:taken, count = 1, log-likelihood = -5.71
  statistics:takes, count = 4, log-likelihood = -4.32
  statistics:tar, count = 2, log-likelihood = -5.02
  statistics:tell, count = 4, log-likelihood = -4.32
  statistics:telling, count = 1, log-likelihood = -5.71
  statistics:tells, count = 2, log-likelihood = -5.02
  statistics:temporary, count = 1, log-likelihood = -5.71
  statistics:terminal, count = 17, log-likelihood = -2.88
  statistics:terminalcaen, count = 1, log-likelihood = -5.71
  statistics:terminated, count = 1, log-likelihood = -5.71
  statistics:terms, count = 1, log-likelihood = -5.71
  statistics:test, count = 48, log-likelihood = -1.84
  statistics:tested, count = 4, log-likelihood = -4.32
  statistics:testing, count = 15, log-likelihood = -3
  statistics:testmode, count = 1, log-likelihood = -5.71
  statistics:tests, count = 6, log-likelihood = -3.92
  statistics:testsum, count = 1, log-likelihood = -5.71
  statistics:testsumsmalldataset, count = 2, log-likelihood = -5.02
  statistics:text, count = 2, log-likelihood = -5.02
  statistics:text0x20, count = 1, log-likelihood = -5.71
  statistics:th, count = 1, log-likelihood = -5.71
  statistics:than, count = 10, log-likelihood = -3.41
  statistics:thank, count = 7, log-likelihood = -3.76
  statistics:thanks, count = 41, log-likelihood = -2
  statistics:that, count = 99, log-likelihood = -1.12
  statistics:the, count = 255, log-likelihood = -0.169
  statistics:their, count = 3, log-likelihood = -4.61
  statistics:them, count = 15, log-likelihood = -3
  statistics:themselves, count = 2, log-likelihood = -5.02
  statistics:then, count = 21, log-likelihood = -2.67
  statistics:there, count = 51, log-likelihood = -1.78
  statistics:therefore, count = 1, log-likelihood = -5.71
  statistics:theres, count = 4, log-likelihood = -4.32
  statistics:these, count = 15, log-likelihood = -3
  statistics:they, count = 16, log-likelihood = -2.94
  statistics:theyre, count = 2, log-likelihood = -5.02
  statistics:thing, count = 2, log-likelihood = -5.02
  statistics:things, count = 6, log-likelihood = -3.92
  statistics:think, count = 9, log-likelihood = -3.51
  statistics:thinking, count = 3, log-likelihood = -4.61
  statistics:this, count = 104, log-likelihood = -1.07
  statistics:thismimplmendofstorage, count = 1, log-likelihood = -5.71
  statistics:thismimplmfinish, count = 1, log-likelihood = -5.71
  statistics:thismimplmstart, count = 1, log-likelihood = -5.71
  statistics:thorough, count = 1, log-likelihood = -5.71
  statistics:those, count = 10, log-likelihood = -3.41
  statistics:though, count = 2, log-likelihood = -5.02
  statistics:thought, count = 2, log-likelihood = -5.02
  statistics:thousands, count = 1, log-likelihood = -5.71
  statistics:three, count = 1, log-likelihood = -5.71
  statistics:threshold, count = 1, log-likelihood = -5.71
  statistics:through, count = 24, log-likelihood = -2.53
  statistics:thrown, count = 1, log-likelihood = -5.71
  statistics:throws, count = 2, log-likelihood = -5.02
  statistics:thus, count = 1, log-likelihood = -5.71
  statistics:time, count = 10, log-likelihood = -3.41
  statistics:times, count = 3, log-likelihood = -4.61
  statistics:tips, count = 3, log-likelihood = -4.61
  statistics:titles, count = 1, log-likelihood = -5.71
  statistics:tmpccb4qjdjo, count = 1, log-likelihood = -5.71
  statistics:tmpccbhb2hbo, count = 1, log-likelihood = -5.71
  statistics:tmpccigfbhuo, count = 1, log-likelihood = -5.71
  statistics:tmpccq9d1bcs, count = 1, log-likelihood = -5.71
  statistics:tmpcczseqboo, count = 1, log-likelihood = -5.71
  statistics:to, count = 216, log-likelihood = -0.335
  statistics:tochange, count = 1, log-likelihood = -5.71
  statistics:today, count = 2, log-likelihood = -5.02
  statistics:together, count = 3, log-likelihood = -4.61
  statistics:toggle, count = 1, log-likelihood = -5.71
  statistics:token, count = 1, log-likelihood = -5.71
  statistics:told, count = 3, log-likelihood = -4.61
  statistics:tomorrow, count = 1, log-likelihood = -5.71
  statistics:ton, count = 1, log-likelihood = -5.71
  statistics:tonight, count = 1, log-likelihood = -5.71
  statistics:too, count = 2, log-likelihood = -5.02
  statistics:took, count = 3, log-likelihood = -4.61
  statistics:tools, count = 2, log-likelihood = -5.02
  statistics:top, count = 4, log-likelihood = -4.32
  statistics:total, count = 3, log-likelihood = -4.61
  statistics:tp, count = 1, log-likelihood = -5.71
  statistics:trailing, count = 1, log-likelihood = -5.71
  statistics:transferred, count = 1, log-likelihood = -5.71
  statistics:treat, count = 1, log-likelihood = -5.71
  statistics:treating, count = 1, log-likelihood = -5.71
  statistics:tried, count = 17, log-likelihood = -2.88
  statistics:trouble, count = 7, log-likelihood = -3.76
  statistics:true, count = 2, log-likelihood = -5.02
  statistics:try, count = 19, log-likelihood = -2.77
  statistics:trying, count = 14, log-likelihood = -3.07
  statistics:tsv, count = 11, log-likelihood = -3.31
  statistics:turn, count = 1, log-likelihood = -5.71
  statistics:turned, count = 1, log-likelihood = -5.71
  statistics:tutoring, count = 1, log-likelihood = -5.71
  statistics:two, count = 10, log-likelihood = -3.41
  statistics:twodimensional, count = 1, log-likelihood = -5.71
  statistics:txt, count = 3, log-likelihood = -4.61
  statistics:type, count = 11, log-likelihood = -3.31
  statistics:typed, count = 1, log-likelihood = -5.71
  statistics:u, count = 3, log-likelihood = -4.61
  statistics:ugli, count = 1, log-likelihood = -5.71
  statistics:umeecs, count = 1, log-likelihood = -5.71
  statistics:umich, count = 1, log-likelihood = -5.71
  statistics:unable, count = 2, log-likelihood = -5.02
  statistics:unclear, count = 2, log-likelihood = -5.02
  statistics:undef, count = 1, log-likelihood = -5.71
  statistics:undefined, count = 6, log-likelihood = -3.92
  statistics:under, count = 3, log-likelihood = -4.61
  statistics:understand, count = 13, log-likelihood = -3.15
  statistics:understanding, count = 8, log-likelihood = -3.63
  statistics:unique, count = 3, log-likelihood = -4.61
  statistics:uniquename, count = 1, log-likelihood = -5.71
  statistics:unit, count = 1, log-likelihood = -5.71
  statistics:unless, count = 2, log-likelihood = -5.02
  statistics:unrecognized, count = 1, log-likelihood = -5.71
  statistics:unresolved, count = 1, log-likelihood = -5.71
  statistics:unsigned, count = 3, log-likelihood = -4.61
  statistics:unsorted, count = 1, log-likelihood = -5.71
  statistics:unsure, count = 3, log-likelihood = -4.61
  statistics:until, count = 1, log-likelihood = -5.71
  statistics:unusual, count = 1, log-likelihood = -5.71
  statistics:unzipped, count = 1, log-likelihood = -5.71
  statistics:up, count = 15, log-likelihood = -3
  statistics:upload, count = 4, log-likelihood = -4.32
  statistics:uploaded, count = 2, log-likelihood = -5.02
  statistics:upon, count = 1, log-likelihood = -5.71
  statistics:ur, count = 1, log-likelihood = -5.71
  statistics:url, count = 1, log-likelihood = -5.71
  statistics:us, count = 12, log-likelihood = -3.23
  statistics:use, count = 64, log-likelihood = -1.55
  statistics:used, count = 13, log-likelihood = -3.15
  statistics:user, count = 7, log-likelihood = -3.76
  statistics:userfile, count = 1, log-likelihood = -5.71
  statistics:username, count = 1, log-likelihood = -5.71
  statistics:users, count = 1, log-likelihood = -5.71
  statistics:uses, count = 3, log-likelihood = -4.61
  statistics:using, count = 40, log-likelihood = -2.02
  statistics:usrincludec482bitsstlvectorh, count = 1, log-likelihood = -5.71
  statistics:usrincludec482bitsstlvectorh122527, count = 1, log-likelihood = -5.71
  statistics:usrincludec482bitsstlvectorh122528, count = 1, log-likelihood = -5.71
  statistics:usrincludec482bitsstlvectorh122626, count = 1, log-likelihood = -5.71
  statistics:usrincludec482bitsstlvectorh27134, count = 1, log-likelihood = -5.71
  statistics:usrincludec482bitsstlvectorh64650, count = 1, log-likelihood = -5.71
  statistics:usrincludec482bitsstlvectorh66624, count = 1, log-likelihood = -5.71
  statistics:usrincludec482bitsstlvectorh66741, count = 1, log-likelihood = -5.71
  statistics:usrincludec482bitsvectortcc, count = 1, log-likelihood = -5.71
  statistics:usrincludec482bitsvectortcc5384, count = 1, log-likelihood = -5.71
  statistics:usrincludec482bitsvectortcc54138, count = 1, log-likelihood = -5.71
  statistics:usrincludec482bitsvectortcc54139, count = 1, log-likelihood = -5.71
  statistics:usrincludec482bitsvectortcc54232, count = 1, log-likelihood = -5.71
  statistics:usrincludec482bitsvectortcc55641, count = 1, log-likelihood = -5.71
  statistics:usrincludec482bitsvectortcc55642, count = 1, log-likelihood = -5.71
  statistics:usrincludec482bitsvectortcc56425, count = 1, log-likelihood = -5.71
  statistics:usrincludec482bitsvectortcc56537, count = 1, log-likelihood = -5.71
  statistics:usrincludec482bitsvectortcc56928, count = 1, log-likelihood = -5.71
  statistics:usrincludec482bitsvectortcc56929, count = 1, log-likelihood = -5.71
  statistics:usrincludec482bitsvectortcc57232, count = 1, log-likelihood = -5.71
  statistics:usrincludec482bitsvectortcc5728, count = 1, log-likelihood = -5.71
  statistics:usrincludec482bitsvectortcc57331, count = 1, log-likelihood = -5.71
  statistics:usrincludec482bitsvectortcc57432, count = 1, log-likelihood = -5.71
  statistics:usrincludec482bitsvectortcc57540, count = 1, log-likelihood = -5.71
  statistics:usrincludec482vector690, count = 1, log-likelihood = -5.71
  statistics:usrlibgccx8664redhatlinux485lib64crt1o, count = 1, log-likelihood = -5.71
  statistics:v, count = 14, log-likelihood = -3.07
  statistics:v0, count = 1, log-likelihood = -5.71
  statistics:v5, count = 1, log-likelihood = -5.71
  statistics:valuable, count = 1, log-likelihood = -5.71
  statistics:value, count = 15, log-likelihood = -3
  statistics:values, count = 14, log-likelihood = -3.07
  statistics:values0, count = 1, log-likelihood = -5.71
  statistics:variable, count = 6, log-likelihood = -3.92
  statistics:variables, count = 1, log-likelihood = -5.71
  statistics:variance, count = 1, log-likelihood = -5.71
  statistics:various, count = 1, log-likelihood = -5.71
  statistics:vecofdoubles01, count = 1, log-likelihood = -5.71
  statistics:vector, count = 47, log-likelihood = -1.86
  statistics:vectorcolumn, count = 1, log-likelihood = -5.71
  statistics:vectordouble, count = 1, log-likelihood = -5.71
  statistics:vectorpushbackvalue, count = 1, log-likelihood = -5.71
  statistics:vectors, count = 21, log-likelihood = -2.67
  statistics:version, count = 6, log-likelihood = -3.92
  statistics:very, count = 9, log-likelihood = -3.51
  statistics:via, count = 2, log-likelihood = -5.02
  statistics:viewing, count = 1, log-likelihood = -5.71
  statistics:vim, count = 1, log-likelihood = -5.71
  statistics:violation, count = 1, log-likelihood = -5.71
  statistics:virtual, count = 1, log-likelihood = -5.71
  statistics:visit, count = 1, log-likelihood = -5.71
  statistics:visual, count = 2, log-likelihood = -5.02
  statistics:visualizing, count = 1, log-likelihood = -5.71
  statistics:vix, count = 1, log-likelihood = -5.71
  statistics:vnc, count = 1, log-likelihood = -5.71
  statistics:void, count = 7, log-likelihood = -3.76
  statistics:vs, count = 1, log-likelihood = -5.71
  statistics:vsize, count = 4, log-likelihood = -4.32
  statistics:waiting, count = 1, log-likelihood = -5.71
  statistics:wall, count = 5, log-likelihood = -4.1
  statistics:wanna, count = 1, log-likelihood = -5.71
  statistics:want, count = 12, log-likelihood = -3.23
  statistics:wanted, count = 4, log-likelihood = -4.32
  statistics:wants, count = 1, log-likelihood = -5.71
  statistics:warning, count = 1, log-likelihood = -5.71
  statistics:warnings, count = 2, log-likelihood = -5.02
  statistics:was, count = 29, log-likelihood = -2.34
  statistics:wasnt, count = 2, log-likelihood = -5.02
  statistics:wast, count = 1, log-likelihood = -5.71
  statistics:way, count = 18, log-likelihood = -2.82
  statistics:ways, count = 1, log-likelihood = -5.71
  statistics:we, count = 97, log-likelihood = -1.14
  statistics:web, count = 1, log-likelihood = -5.71
  statistics:webpage, count = 2, log-likelihood = -5.02
  statistics:week, count = 2, log-likelihood = -5.02
  statistics:weekend, count = 1, log-likelihood = -5.71
  statistics:weird, count = 1, log-likelihood = -5.71
  statistics:well, count = 10, log-likelihood = -3.41
  statistics:went, count = 4, log-likelihood = -4.32
  statistics:were, count = 12, log-likelihood = -3.23
  statistics:werent, count = 1, log-likelihood = -5.71
  statistics:werror, count = 5, log-likelihood = -4.1
  statistics:werrorreturntype, count = 1, log-likelihood = -5.71
  statistics:werrorsigncompare, count = 1, log-likelihood = -5.71
  statistics:werrorwreturntype, count = 1, log-likelihood = -5.71
  statistics:wget, count = 3, log-likelihood = -4.61
  statistics:what, count = 73, log-likelihood = -1.42
  statistics:whatever, count = 1, log-likelihood = -5.71
  statistics:whats, count = 6, log-likelihood = -3.92
  statistics:when, count = 95, log-likelihood = -1.16
  statistics:whenever, count = 3, log-likelihood = -4.61
  statistics:whenwhy, count = 1, log-likelihood = -5.71
  statistics:where, count = 17, log-likelihood = -2.88
  statistics:whereas, count = 3, log-likelihood = -4.61
  statistics:whether, count = 6, log-likelihood = -3.92
  statistics:which, count = 14, log-likelihood = -3.07
  statistics:while, count = 5, log-likelihood = -4.1
  statistics:white, count = 1, log-likelihood = -5.71
  statistics:whitespace, count = 2, log-likelihood = -5.02
  statistics:whole, count = 1, log-likelihood = -5.71
  statistics:why, count = 17, log-likelihood = -2.88
  statistics:wikipedia, count = 4, log-likelihood = -4.32
  statistics:wikipediawhich, count = 1, log-likelihood = -5.71
  statistics:will, count = 26, log-likelihood = -2.45
  statistics:win10, count = 1, log-likelihood = -5.71
  statistics:with, count = 48, log-likelihood = -1.84
  statistics:within, count = 10, log-likelihood = -3.41
  statistics:without, count = 8, log-likelihood = -3.63
  statistics:wondering, count = 16, log-likelihood = -2.94
  statistics:wont, count = 3, log-likelihood = -4.61
  statistics:words, count = 1, log-likelihood = -5.71
  statistics:work, count = 14, log-likelihood = -3.07
  statistics:worked, count = 2, log-likelihood = -5.02
  statistics:working, count = 8, log-likelihood = -3.63
  statistics:works, count = 9, log-likelihood = -3.51
  statistics:worried, count = 2, log-likelihood = -5.02
  statistics:would, count = 30, log-likelihood = -2.31
  statistics:wouldnt, count = 1, log-likelihood = -5.71
  statistics:write, count = 18, log-likelihood = -2.82
  statistics:writedebug, count = 1, log-likelihood = -5.71
  statistics:writing, count = 11, log-likelihood = -3.31
  statistics:written, count = 3, log-likelihood = -4.61
  statistics:wrong, count = 23, log-likelihood = -2.57
  statistics:wrote, count = 7, log-likelihood = -3.76
  statistics:x, count = 1, log-likelihood = -5.71
  statistics:xcode, count = 12, log-likelihood = -3.23
  statistics:xzk, count = 1, log-likelihood = -5.71
  statistics:yesterday, count = 1, log-likelihood = -5.71
  statistics:yet, count = 9, log-likelihood = -3.51
  statistics:yields, count = 1, log-likelihood = -5.71
  statistics:you, count = 33, log-likelihood = -2.21
  statistics:your, count = 8, log-likelihood = -3.63
  statistics:youre, count = 1, log-likelihood = -5.71
  statistics:zip, count = 3, log-likelihood = -4.61
  statistics:­o, count = 2, log-likelihood = -5.02
  statistics:­o1, count = 2, log-likelihood = -5.02
  statistics:­pedantic, count = 2, log-likelihood = -5.02
  statistics:­wall, count = 2, log-likelihood = -5.02
  statistics:­werror, count = 2, log-likelihood = -5.02
  statistics:­­stdc11, count = 2, log-likelihood = -5.02
  statistics:‘, count = 1, log-likelihood = -5.71
  statistics:‘class, count = 1, log-likelihood = -5.71
  statistics:‘size’, count = 1, log-likelihood = -5.71
  statistics:‘sortstdvector’, count = 1, log-likelihood = -5.71
  statistics:‘sort’, count = 1, log-likelihood = -5.71
  statistics:‘’, count = 1, log-likelihood = -5.71
  statistics:’, count = 1, log-likelihood = -5.71

